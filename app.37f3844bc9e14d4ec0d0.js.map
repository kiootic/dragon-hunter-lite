{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/common/random.ts","webpack:///./src/common/logic/alchemy.ts","webpack:///./src/common/noise/simplex/constants.ts","webpack:///./src/common/noise/simplex/index.ts","webpack:///./src/common/noise/index.ts","webpack:///./assets/fonts/unscii-16.woff","webpack:///./assets/fonts/Unibody8Pro-RegularItalic.otf","webpack:///./assets/fonts/Unibody8Pro-Bold.otf","webpack:///./assets/fonts/Unibody8Pro-Regular.otf","webpack:///./src/common/data/Item.ts","webpack:///./src/common/data/DataLibrary.ts","webpack:///./src/common/base64.ts","webpack:///./src/common/data/Weapon.ts","webpack:///./src/common/zlib.ts","webpack:///./src/common/data/GameSave.ts","webpack:///./src/worker/generation/data/Biome.ts","webpack:///./src/worker/generation/data/GameData.ts","webpack:///./src/worker/generation/utils.ts","webpack:///./src/worker/generation/biomeGen.ts","webpack:///./src/worker/generation/decoration.ts","webpack:///./src/data/enemy.ts","webpack:///./src/worker/generation/featureGen.ts","webpack:///./src/data/drops.ts","webpack:///./src/data/objects.ts","webpack:///./src/data/recipes.ts","webpack:///./src/data/template.ts","webpack:///./src/data/terrains.ts","webpack:///./src/worker/generation/libraryGen.ts","webpack:///./src/data/player.ts","webpack:///./src/worker/generation/index.ts","webpack:///./src/worker/generation/propsGen.ts","webpack:///./src/worker/index.ts","webpack:///./src/app/states/GameState.ts","webpack:///./src/app/components/Button.ts","webpack:///./src/app/components/Text.ts","webpack:///./src/app/components/Panel.ts","webpack:///./src/app/components/TextButton.ts","webpack:///./src/app/components/TextureSpriteRenderer.ts","webpack:///./src/app/components/TextureSprite.ts","webpack:///./src/app/components/StyledText.ts","webpack:///./src/app/components/TextToolTip.ts","webpack:///./src/app/game/traits/Trait.ts","webpack:///./src/app/components/ItemToolTip.ts","webpack:///./src/app/game/messages/InventorySwap.ts","webpack:///./src/app/game/messages/InventoryUpdated.ts","webpack:///./src/app/game/messages/PlayFX.ts","webpack:///./src/app/game/messages/ShowParticles.ts","webpack:///./src/app/game/messages/ApplyEffects.ts","webpack:///./src/app/game/messages/UpdateHP.ts","webpack:///./src/app/game/messages/Attack.ts","webpack:///./src/app/game/messages/ObjectSpriteRequest.ts","webpack:///./src/app/game/messages/EntityCollision.ts","webpack:///./src/app/game/messages/TileCollision.ts","webpack:///./src/app/game/messages/Death.ts","webpack:///./src/app/game/messages/SpawnEnemy.ts","webpack:///./src/app/components/SlotView.ts","webpack:///./src/app/game/Camera.ts","webpack:///./src/app/game/traits/Spatial.ts","webpack:///./src/app/game/traits/Inventory.ts","webpack:///./src/app/game/traits/Float.ts","webpack:///./src/app/game/traits/Stats.ts","webpack:///./src/app/game/traits/PlayerData.ts","webpack:///./src/app/game/traits/ProjectileData.ts","webpack:///./src/app/game/traits/EnemyData.ts","webpack:///./src/app/game/traits/Behavior.ts","webpack:///./src/app/game/traits/Collidable.ts","webpack:///./src/app/game/behavior/BehaviorTree.ts","webpack:///./src/app/game/behavior/Action.ts","webpack:///./src/app/game/behavior/conditions/HP.ts","webpack:///./src/app/game/behavior/conditions/AtSpawn.ts","webpack:///./src/app/game/behavior/conditions/Distance.ts","webpack:///./src/common/logic/stats.ts","webpack:///./src/app/game/behavior/utils.ts","webpack:///./src/app/game/behavior/actions/Chase.ts","webpack:///./src/app/game/behavior/actions/Wander.ts","webpack:///./src/app/game/behavior/actions/Charge.ts","webpack:///./src/app/game/behavior/actions/Escape.ts","webpack:///./src/app/game/behavior/actions/Shoot.ts","webpack:///./src/app/game/behavior/actions/Buff.ts","webpack:///./src/app/game/behavior/actions/Spawn.ts","webpack:///./src/app/game/behavior/actions/Suicide.ts","webpack:///./src/data/animations.ts","webpack:///./src/app/game/behavior/enemies.ts","webpack:///./src/app/game/Generator.ts","webpack:///./src/app/game/entities/Entity.ts","webpack:///./src/app/game/entities/Player.ts","webpack:///./src/app/game/entities/ItemDrop.ts","webpack:///./src/app/game/entities/Enemy.ts","webpack:///./src/app/game/entities/Projectile.ts","webpack:///./src/app/game/EntityManager.ts","webpack:///./src/app/game/GameView.ts","webpack:///./src/app/game/tasks/Task.ts","webpack:///./src/app/game/menu/MenuPanel.ts","webpack:///./src/app/game/menu/Workbench.ts","webpack:///./src/app/game/menu/Alchemy.ts","webpack:///./src/common/logic/effect/armors.ts","webpack:///./src/common/logic/anvil.ts","webpack:///./src/app/game/menu/Anvil.ts","webpack:///./src/app/game/menu/EnemyInfo.ts","webpack:///./src/app/game/overlays/GameOverlay.ts","webpack:///./src/app/game/overlays/DeathOverlay.ts","webpack:///./src/app/game/overlays/MenuOverlay.ts","webpack:///./src/app/game/tasks/PlayerInputTask.ts","webpack:///./src/app/game/tasks/BehaviorTask.ts","webpack:///./src/app/game/behavior/genes.ts","webpack:///./src/common/logic/genetic.ts","webpack:///./src/app/game/tasks/DragonTask.ts","webpack:///./src/app/utils/drops.ts","webpack:///./src/app/game/tasks/ProjectileTask.ts","webpack:///./src/app/game/tasks/EffectTask.ts","webpack:///./src/app/game/tasks/TerrainEffectTask.ts","webpack:///./src/app/game/tasks/EquipmentEffectTask.ts","webpack:///./src/app/game/tasks/EntityHPTask.ts","webpack:///./src/app/utils/animations.ts","webpack:///./src/app/utils/intersect.ts","webpack:///./src/app/game/tasks/EntityMovementTask.ts","webpack:///./src/app/game/tasks/DeathTask.ts","webpack:///./src/app/game/tasks/UseItemTask.ts","webpack:///./src/app/game/tasks/AttackTask.ts","webpack:///./src/app/game/tasks/InventoryTask.ts","webpack:///./src/app/game/tasks/CameraUpdateTask.ts","webpack:///./src/app/game/tasks/TerrainDisplayTask.ts","webpack:///./src/app/game/tasks/ObjectDisplayTask.ts","webpack:///./src/app/game/tasks/EntityDisplayTask.ts","webpack:///./src/app/game/tasks/FXTask.ts","webpack:///./src/app/game/tasks/ParticleTask.ts","webpack:///./src/app/game/commands/Command.ts","webpack:///./src/app/game/commands/ClearInventory.ts","webpack:///./src/app/game/commands/Dump.ts","webpack:///./src/app/game/commands/Dupe.ts","webpack:///./src/app/game/commands/Give.ts","webpack:///./src/app/game/commands/Potion.ts","webpack:///./src/app/game/commands/Spawn.ts","webpack:///./src/app/game/hud/Console.ts","webpack:///./src/app/game/hud/MiniMap.ts","webpack:///./src/app/game/hud/Hotbar.ts","webpack:///./src/app/components/EffectToolTip.ts","webpack:///./src/app/game/hud/Status.ts","webpack:///./src/app/game/tasks/HUDTask.ts","webpack:///./src/app/game/TaskManagers.ts","webpack:///./src/app/game/TileMap.ts","webpack:///./src/app/game/Game.ts","webpack:///./src/app/states/StateMain.ts","webpack:///./src/app/states/StateTitle.ts","webpack:///./src/app/states/StateOverlay.ts","webpack:///./src/app/utils/Keyboard.ts","webpack:///./src/app/DragDrop.ts","webpack:///./src/app/ToolTip.ts","webpack:///./src/app/App.ts","webpack:///./src/app/settings.ts","webpack:///./src/app/index.ts","webpack:///./src/app/bootstrap.ts","webpack:///./src/app/states/StatePreload.ts","webpack:///./assets/sprites/ui.png","webpack:///./assets/sprites/terrains.png","webpack:///./assets/sprites/skeleton.png","webpack:///./assets/sprites/projectiles.png","webpack:///./assets/sprites/player.png","webpack:///./assets/sprites/placeholder.png","webpack:///./assets/sprites/objects.png","webpack:///./assets/sprites/items.png","webpack:///./assets/sprites/equipment.png","webpack:///./assets/sprites/effects.png","webpack:///./assets/sprites/dragons.png","webpack:///./assets sync .*","webpack:///./src/app/game/hud/console.css","webpack:///./src/app/game/hud/console.css?8d0b","webpack:///./src/data/effects.ts","webpack:///./src/common/logic/effect/solution.ts","webpack:///./src/app/styles.css","webpack:///./src/app/styles.css?95c1","webpack:///./src/data/elements.ts","webpack:///./src/common/color.ts","webpack:///./src/common/logic/effect/common.ts","webpack:///./src/common/lib/foswig.ts","webpack:///./src/common/markov.ts","webpack:///./src/data/names.ts"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","1","exports","module","l","m","c","d","name","getter","o","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","p","jsonpArray","window","oldJsonpFunction","bind","slice","randomValue","random","Math","type","min","max","rate","x","log","undefined","exponentialRandom","gaussianRandom","mean","sd","instantiate","template","obj","lodash__WEBPACK_IMPORTED_MODULE_0__","subst","substs","lodash__WEBPACK_IMPORTED_MODULE_1__","path","u","v","sqrt","cos","PI","MaxAspects","makeSolution","aspects","color","common_color__WEBPACK_IMPORTED_MODULE_0__","map","element","amount","parseInt","weight","toString","maxElem","total","id","common_data__WEBPACK_IMPORTED_MODULE_1__","Type","Consumable","texture","base","overlay","tex","tint","effects","common_logic_effect_solution__WEBPACK_IMPORTED_MODULE_2__","PurifyThreshold","PurifyRate","BoostRate","FissionLoss","FusionLoss","Epsilon","mix","reactants","lodash__WEBPACK_IMPORTED_MODULE_5__","reactant","fusionBoost","some","fissionBoost","composition","compo","data_elements__WEBPACK_IMPORTED_MODULE_4__","threshold","common_random__WEBPACK_IMPORTED_MODULE_3__","fusionThreshold","inputAmount","console","fusionRate","compoRatio","keys","fissionThreshold","fissionRate","finalAspects","filter","mixSolution","a","b","NORM_2D","NORM_3D","NORM_4D","SQUISH_2D","SQUISH_3D","SQUISH_4D","STRETCH_2D","STRETCH_3D","STRETCH_4D","base2D","base3D","base4D","gradients2D","gradients3D","gradients4D","lookupPairs2D","lookupPairs3D","lookupPairs4D","p2D","p3D","p4D","simplex_Contribution2","[object Object]","multiplier","xsb","ysb","this","dx","dy","simplex_Contribution3","zsb","dz","simplex_Contribution4","wsb","dw","shuffleSeed","seed","newSeed","Uint32Array","simplex_OpenSimplexNoise","clientSeed","hashVals","initialize","perm","Uint8Array","perm2D","perm3D","perm4D","source","width","height","output","Array","y","noise2D","depth","z","noise3D","wLength","w","noise4D","stretchOffset","xs","ys","floor","squishOffset","dx0","dy0","xins","yins","inSum","hash","lookup2D","attn","px","py","valuePart","next","zs","dz0","zins","lookup3D","pz","ws","dw0","wins","lookup4D","pw","contributions2D","baseSet","previous","current","k","contributions3D","contributions4D","noise_Noise","rand","freq","octaves","persistence","noise","amp","maxAmp","Item","populateNameId","items","sort","itemId","assign","loadDataLib","terrains","objects","recipes","elements","toBase64","buf","base64_js","fromBase64","buffer","Weapon","compress","pako","decompress","GameSave_GameSave","library","entities","custom","props","json","JSON","parse","Uint16Array","load","save","stringify","Biome","Feature","GameData_GameData","enemies","makeLookup","item","biomes","rivers","game","tileBiomes","random_seed","nextEntityId","terrainLookup","objectLookup","index","toIndex","terrainName","objectName","biomeIndex","withProgress","list","report","poissonDisk","radius","cellSize","SQRT1_2","gridScale","grid","ceil","active","samples","addSample","range","theta","floatBetween","sin","randomColors","chroma","lightness","candidates","times","h","common_random","chroma_js_chroma","dist","candidate","rgb","g","randomElementPair","state","elem1","elem2","data_elements","elem","tier","indexOf","rasterizeLine","x0","y0","x1","y1","cb","abs","sx","sign","sy","err","BiomeSize","EdgeRoughness","EdgeJitter","WaterRarity","biomeProps","FrozenBarren","Barren","Desert","SnowPlain","Savanna","Plain","Taiga","Forest","FrozenLake","Lake","Swamp","generateBiomes","biomeCenters","diagram","d3_voronoi","voronoi","None","feature","position","gl_matrix","fromValues","humidity","temperature","generateBiomePolygons","sources","level","waters","riverTheta","newP","from","to","biome","norm","pow","generateHumidity","temperatureNoise","temp","t","generateTemperature","Number","MAX_VALUE","dh","dt","populateBiomeTypes","noiseX","noiseY","roughnessX","roughnessY","realBiome","find","renderBiome","terrain","setTerrain","setBiomeIndex","rasterizeBiomes","decorationProps","makeEnemy","enemyDef","cloneDeep","age","traits","spatial","pos","enemy-data","def","behavior","behaviors","stats","FeatureSize","featureGen_EdgeJitter","BeachSize","RiverSegments","RiverRoughness","SpawnMargins","EggSparity","featureProps","LavaPond","Rocky","Cemetery","Ruins","Oasis","Pond","Floral","rasterizeBiome","offset","getBiomeIndex","generateFeatures","featurePoints","features","getTerrain","setObject","sub","create","scale","normalize","spawner","intBetween","neighbor","spawnMargins","spawnBiome","Spawn","spawn","generateBiomeFeatures","riverPoint","isFrozen","biomeA","biomeB","size","round","rasterizeRivers","locations","location","egg","generateEggs","simpleDrops","numDrops","prob","makeObjects","tree-coconut","jitter","collidable","obstacle","drops","hp","replaceWith","table","common_data","Material","tree-oak","tree-spruce","bones","material","toughness","sharpness","affinity","cross","pillar","texs","fern","Life","common","Heal","cactus","bush","stone","rocks","recipe","input","makeRecipes","accepts","description","NumFlowerTypes","makeFlower","toLowerCase","makeBush","NumBerryTypes","makeBerryBush","depleted","makeTerrains","water","time","liquid","speed","lava","damage","mud","grass","grass-deep","grass-light","soil","sand","ice","snow","NumFlowers","NumBerries","InitialPlayer","generate","randomElementState","flowerColors","markov","pop","berryColors","elemColors","fromPairs","MaxTier","generateLibrary","flowers","test","berries","decorateTile","getObject","decorations","decor","decorateMap","player","generateProps","mapData","finalizeMap","__webpack_exports__","onmessage","ev","action","gameSave","message","progress","postMessage","error","GameState_GameState","app","root","lib","Button_Button","super","content","texNormal","fromFrame","texPressed","plane","NineSlicePlane","isPressed","_contentWidth","_contentHeight","_isEnabled","addChild","UIScaleFactor","interactive","buttonMode","on","updateState","emit","Clicked","pressed","contentWidth","contentHeight","isEnabled","alpha","Text_Text","text","_text","style","fontFamily","fontSize","fill","align","Panel_Panel","panelBg","WHITE","panelMask","maskTex","panelBorder","mask","resize","renderer","render","TextButton_TextButton","layout","OutlineWidth","BatchSize","VAOBufferSize","indices","TextureSpriteRenderer_TextureSpriteRenderer","currentTex","currentBlendMode","batchSize","batch","vaoBuf","ArrayBuffer","f32","Float32Array","u32","gl","shader","TextureSpriteRenderer_SpriteShader","vb","GLBuffer","createVertexBuffer","STREAM_DRAW","ib","createIndexBuffer","STATIC_DRAW","vao","createVao","addIndex","addAttribute","attributes","aVertexPosition","FLOAT","aTextureCoord","UNSIGNED_SHORT","aColor","UNSIGNED_BYTE","aClamp","aOffset","aThickness","sprite","valid","baseTexture","blendMode","flush","bindShader","bindVao","bindTexture","setBlendMode","uvs","_uvs","uvsUint32","vd","vertexData","worldAlpha","_tint","argb","premultipliedAlpha","premultiplyTint","frame","tr","transform","worldTransform","clampX","clampY","clampZ","clampW","offsetX","offsetY","thicknessX","outline","realWidth","thicknessY","realHeight","trX","renderTranslation","trY","upload","drawElements","TRIANGLES","Name","registerPlugin","TextureSprite_TextureSprite","animBeginTime","animName","still","actionAnimName","actionAnimFPS","actionEndTime","EMPTY","elapsed","pluginName","clip","clone","_texture","removeChild","textureDef","updateTex","key","hashKey","clearTexture","setTexture","anchor","copy","duration","anims","animation","fps","numFrames","frameDuration","frameId","update","_onAnchorUpdate","_anchor","StyledText_StyledText","styles","defaultStyle","default","pixi_multistyle_text_default","TextToolTip_TextToolTip","textView","set","Trait","ItemToolTip_ItemToolTip","label","fontWeight","details","desc","fontStyle","updateView","texts","startCase","sum","percentage","toFixed","weapon","effect","strength","cooldown","join","InventorySwap","slotA","slotB","InventoryUpdated","slot","PlayFX","target","Shake","ShowParticles","particleType","coords","numParticles","splash","Splash","float","Float","ApplyEffects","entityId","UpdateHP","hpDiff","Attack","targetPosition","ObjectSpriteRequest","EntityCollision","entityIdA","entityIdB","TileCollision","Death","SpawnEnemy","enemyType","SlotView_SlotView","toolTip","bg","bgOverlay","fgOverlay","dragging","enabled","toolTipOpacity","alwaysInteractive","endDrag","dispatch","add","setItem","dragDrop","begin","then","hide","empty","visible","updateSlot","Size","types","Map","Camera_Camera","viewWidth","viewHeight","layer","Layer","Background","sortOffset","nextId","pt","scaleAndAdd","DisplayTileSize","beginFill","drawRect","endFill","sortLayers","children","ao","bo","ax","ay","bx","by","Camera","Spatial_Spatial","Spatial","make","velocity","horizontalAnim","Objects","serialize","trait","vel","deserialize","defaults","Inventory_Inventory","Float_Float","Inventory","slots","gravity","Stats_Stats","PlayerData_PlayerData","ProjectileData_ProjectileData","EnemyData_EnemyData","Behavior_Behavior","Collidable_Collidable","BehaviorTree_BehaviorTree","ActionKind","HP_HP","Stats","hasEffect","maxHp","str","spd","vit","boost","bonus","compute","canMove","data_effects","Stunned","Knockback","PlayerData","hotbarSelection","consumeCooldown","attackCooldown","lastAttackId","ProjectileData","args","sourceEntityId","start","end","lifetime","hit","Set","EnemyData","Behavior","Collidable","mass","BehaviorTree","actions","conditions","registerAction","registerCondition","condition","dump","tree","states","run","self","context","activeStateIndex","isFulfilled","actionState","moved","Kind","Movement","tick","HP","mutate","isGreater","targetId","greaterThan","lessThan","AtSpawn_AtSpawn","Distance_Distance","AtSpawn","Distance","tilePerSecond","healPerTick","computeVelocity","direction","entity","ChaseInterval","ChaseRadius","Chase_Chase","Chase","subtract","interval","WanderInterval","Wander_Wander","Wander","SpeedMultiplier","Charge_Charge","Charge","EscapeRadius","Escape_Escape","Escape","ShootRadius","Shoot_Shoot","Buff_Buff","Spawn_Spawn","Suicide_Suicide","Shoot","isRing","angle","numShoots","mutateType","newState","clamp","delay","Bolt","Orb","beginAngle","Buff","Effect","Suicide","delete","Animations","Player","left","right","up","down","fist-left","fist-right","fist-up","fist-down","sword-left","sword-right","sword-up","sword-down","spear-left","spear-right","spear-up","spear-down","arrow-left","arrow-right","arrow-up","arrow-down","Skeleton","Dragon","Enemies","skeleton","Invisible","pierce","knockback","KnockbackResist","Generator_Generator","worker","webworkify_webpack_default","Promise","resolve","terminate","Entity","_traits","arg","values","_game","init","Player_Player","inventory","Chestplate","Leggings","Boots","ItemDrop_ItemDrop","Enemy_Enemy","Projectile_Projectile","power","computeDamage","Projectiles","rotation","atan2","EntityManager_EntityManager","entityProps","traitType","TraitType","entityType","hydrate","GameView_GameView","camera","view","child","Task","runWhenPaused","_active","isActive","Error","MenuPanel_MenuPanel","exit","NumRows","Workbench_RecipeView","makeOutput","inputs","arrow","numInputs","ok","drop","Workbench_Workbench","icon","upButton","downButton","recipeViews","subscription","Subscription","scrollOffset","wheelDebounce","wheelList","event","delta","deltaX","deltaY","checkInventory","check","upIcon","pivot","downIcon","messages$","ofType","subscribe","addEventListener","scrollMax","unsubscribe","removeEventListener","dispose","Alchemy_Alchemy","processButton","input1","input2","fuel","doAlchemy","alchemy","computeEffect","strengths","Energy","Strength","Weakness","Defense","Void","DefBreak","Resistance","Recovery","VitalityUp","Injury","VitalityDown","Motion","Speed","Frost","Capture","Slowness","armors_compute","parts","materialAspects","AssemblyType","Parts","Sword","Spear","Bow","Arrow","Anvil_slot","textures","Targets","Infusion","Anvil_Anvil","activeTarget","targetButtons","inSlots","outSlot","solution","mat","itemType","blendPartColors","common_color","materialName","matColor","mainParts","materialCounts","countBy","part","maxMaterial","assemble","button","texId","trim","updateTarget","targetSlot","HPBarWidth","HPBarHeight","EnemyInfo_EnemyInfo","enemyTex","nameLabel","hpBar","hpBarIcon","hpBarBg","hpBarFill","hpBarText","enemy","getEnemy","GameOverlay_GameOverlay","popState","Width","Height","DeathOverlay_DeathOverlay","DeathOverlay_awaiter","done","exitButton","MenuWidth","MenuHeight","SlotsPerRow","MenuOverlay_MenuOverlay","tabs","saveButton","slotViews","trash","statNames","statValues","incr","decr","activeTab","tabButtons","tab","btn","keyboard","isDown","updateStats","makeBonusText","computed","diff","vex","prompt","callback","alert","focus","localStorage","export","cancel","_super","PlayerInputTask_PlayerInputTask","statList","pushState","StateOverlay_StateOverlay","BehaviorTask_BehaviorTask","pipe","msg","withTrait","genes_random","Attacks","Movements","Conditions","genetic_BatchSize","SelectionSize","randomRange","DragonDefTemplate","dragonId","maxDPS","minPlayerHP","score","DragonTask_DragonTask","thisGeneration","instancePool","nextGen","algo","parents","sortBy","instance","evaluate","parentsCopys","crossover","newParents","shuffle","nextGeneration","lastPlayerHP","dragons","generation","dragon","computeDrops","playerHP","dragonDef","numAttacks","touchShoot","makeRandomState","finalScore","instances","ageScore","meanBy","dpsScore","hpScore","baseWeight","baseToughness","baseSharpness","newDragon","candidateStates","adjustStats","stateIndex","actionIndex","generateDrops","dropTable","ObjectHPRegenInterval","ProjectileTask_ProjectileTask","regenCooldown","objectDamages","tileCollided","projectile","tileObj","tileObjDef","hitObject","objectCenter","knockbackDirection","entityCollided","entityA","entityB","projectileEntity","targetEntity","has","targetVel","knockbackSpeed","dmg","itemDrop","replacement","EffectTask_EffectTask","applyEffects","entityEffects","effectIndex","findIndex","secEdge","applyEffect","secondEdge","Regen","Poison","Damage","TerrainEffectTask_TerrainEffectTask","doDamage","terrainId","EquipmentEffectTask_EquipmentEffectTask","equipments","EntityHPTask_EntityHPTask","updateHP","fadeOut","bindCallback","Tween","easing","Quadratic","Out","onComplete","fadeIn","In","dir","animations_direction","EPSILON","intersect_clamp","Point","inverseLength","Hit","collider","normal","Sweep","AABB","half","point","paddingX","paddingY","scaleX","scaleY","signX","signY","nearTimeX","nearTimeY","farTimeX","farTimeY","nearTime","box","sweep","intersectAABB","intersectSegment","staticColliders","nearest","il","sweepAABB","Gravity","StaticThreshold","EntitySizeExtent","EntityMovementTask_pt","EntityMovementTask_TileAABB","objectDef","EntityMovementTask_EntityAABB","EntityMovementTask_EntityMovementTask","collisions","entityAABBMap","entityAABBs","collidedAABBs","aabb","hits","getAABBs","shape","updateDisplay","clear","exclude","aabbs","top","bottom","performSweep","resolveSweep","mul","collisionTime","sweepX","sweepY","aId","bId","intendedVel","actualVel","horizontal","DeathTask_DeathTask","death","ConsumeCooldown","FistRange","UseItemTask_UseItemTask","cursorPos","playerPos","playerVel","playerSprite","handler","e","originalEvent","getLocalPosition","buttons","interact","attack","consumeItem","Fist","toMapCoords","animDirection","playActionAnim","AttackTask_AttackTask","stunDuration","MinInteractAge","InventoryTask_InventoryTask","pickUp","swapInventory","swap","acceptable","tmp","playerInv","canPickUp","len","match","CameraUpdateTask_CameraUpdateTask","cameraOffset","TileSize","TerrainDisplayTask_TerrainDisplayTask","sprites","container","renderTex","NEAREST","Terrain","updateVisibility","updateSprites","origin","isVisible","removePool","terrainData","tx","ty","parent","minX","minY","setTransform","texSize","clz32","ObjectSize","MarginSize","ObjectDisplayTask_ObjectSprite","tileKey","ObjectDisplayTask_ObjectDisplayTask","spriteCoords","jitterNoiseX","jitterNoiseY","changes$","request","updateTransforms","margin","halfW","halfH","updated","objectData","setTile","toCameraPoint","EntityDisplayTask_MarginSize","EntityDisplayTask_EntityDisplayTask","halfSize","FXTask_FXTask","animTargets","tween","shake","offsets","0","chain","ParticleLife","ParticleSize","ParticleGravity","ParticleRestitution","ParticleTask_Particle","life","colorJitter","ParticleTask_ParticleTask","particles","ParticleContainer","showParticles","particle","Command","command","registry","exec","register","valueOf","padStart","startsWith","count","numItems","sel","ConsoleHTML","Opacity","ObjectAlpha","HotbarOpacity","HotbarKeys","EffectToolTip_EffectToolTip","valign","Status_HPBarWidth","Status_HPBarHeight","HUDElements","display","DOMParser","parseFromString","querySelector","logBox","lastInput","onKeyDown","classList","contains","toggleInput","setSelectionRange","preventDefault","document","activeElement","processInput","body","appendChild","remove","toggle","entry","createElement","innerText","scrollIntoView","cmd","compact","split","commandName","substr","lastChild","selection","wheelSelection","paused","numSlots","maxConsumeCooldown","maxAttackCooldown","lastConsumeCooldown","lastAttackCooldown","views","slotNum","consumeCooldownHeight","attackCooldownHeight","effectIcons","effectToolTip","showEffects","setEffect","hpBarX","effectsX","effectsY","mapSprite","isFullscreen","isMouseOver","mapDirty","indicators","entityVisible","canvas","Uint8ClampedArray","fromCanvas","renderTile","indicator","parseColor","colorNum","terrainColor","objectColor","getIndicator","ctx","getContext","img","getImageData","putImageData","HUDTask_HUDTask","HUDElement","TaskManagers_TaskManager","tasks","task","TileMap_TileMap","Subject","Game_Game","_paused","_message$","screen","StateMain_StateMain","toPromise","StateTitle_StateTitle","logo","newButton","loadBar","loadMessage","saveLabel","saveButtons","newGame","updateSaves","startGame","import","forEach","MapSize","Seed","performance","now","Keyboard","newKey","keydown","keyup","blur","tabIndex","setTimeout","repeat","DragDrop_DragDrop","pointerPos","dragOffset","endDrag$","activeObj","global","interaction","hitTest","plugins","stage","toLocal","first","ToolTipOffset","ToolTip_ToolTip","panel","show","showToolTip","panelWidth","panelHeight","App_App","autoResize","antialias","roundPixels","_states","resources","oncontextmenu","SCALE_MODE","ticker","moveWhenInside","passEvent","trigger","currentTarget","interactiveChildren","doTrigger","hitArea","pause","enter","leave","resume","elapsedMS","app_app","innerWidth","innerHeight","onresize","stats_min","dom","_update","setMatrixArrayType","Float64Array","vex_dialog","className","bootstrap","loadingText","lineHeight","loader","progressHandler","onProgress","ext","pre","res","extension","Resource","TYPE","url","meta","image","complete","fontLoad","all","fontfaceobserver_standalone","_","StatePreload_awaiter","detach","resource","topState","./fonts/Unibody8Pro-Bold.otf","./fonts/Unibody8Pro-Regular.otf","./fonts/Unibody8Pro-RegularItalic.otf","./fonts/unscii-16.woff","./sprites/dragons.json","./sprites/dragons.png","./sprites/effects.json","./sprites/effects.png","./sprites/equipment.json","./sprites/equipment.png","./sprites/items.json","./sprites/items.png","./sprites/objects.json","./sprites/objects.png","./sprites/placeholder.json","./sprites/placeholder.png","./sprites/player.json","./sprites/player.png","./sprites/projectiles.json","./sprites/projectiles.png","./sprites/skeleton.json","./sprites/skeleton.png","./sprites/terrains.json","./sprites/terrains.png","./sprites/ui.json","./sprites/ui.png","webpackContext","req","webpackContextResolve","code","options","hmr","insertInto","locals","EffectDef","Effects","data_elements__WEBPACK_IMPORTED_MODULE_2__","Time","common_logic_effect_common__WEBPACK_IMPORTED_MODULE_0__","data_effects__WEBPACK_IMPORTED_MODULE_1__","escape","ElementDef","Elements","Fire","Water","Order","Chaos","Light","Explosion","Darkness","Spirit","Sense","Absorption","Cognition","Deception","ElementLookup","blend","colors","elemColor","common_random__WEBPACK_IMPORTED_MODULE_1__","chroma_js__WEBPACK_IMPORTED_MODULE_0__","hex","scaleAspects","makeEffect","lodash__WEBPACK_IMPORTED_MODULE_2__","replace","StrengthThreshold","computeEffects","lodash__WEBPACK_IMPORTED_MODULE_3__","common_logic_alchemy__WEBPACK_IMPORTED_MODULE_0__","computeStrength","Node","character","neighbors","TrieNode","isDuplicate","word","duplicates","currentNode","childNode","nameMarkov","order","words","addWordToChain","addToDuplicatesTrie","ch","newNode","minLength","maxLength","allowDuplicates","maxAttempts","attempts","nextNodeIndex","generateName","generateWord","addWordsToChain"],"mappings":"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,KAC5CnK,GAAS,SAIJA,IAAYqK,KAAqBE,EAAWD,GAAef,EAAYC,EAAMvgD,KAAKwgD,aACzF,GAAIc,GAAYD,EACf,MAAM,IAAIzsB,MAAM,6DAA+D0sB,EAAW,aAE3F,OAAOf,ICtGqB,GAGxB,SAAAiB,EAAuBhoD,EAAaC,EAAaJ,EAASC,KAAKD,QACnE,OAAO9C,OAAA+sB,EAAA,EAAA/sB,CAAUoqD,EAAWc,aAAajoD,EAAKC,GAAK,OAAOI,EAAWR,IAHvEsnD,EAAWe,iBCDX,SACA,UACA,YACA,UACA,eACA,YACA,WACA,aACA,eACA,iBACA,UACA,cACA,eACA,mBACA,SACA,YACA,UACA,UACA,WACA,UACA,cACA,WACA,UACA,gBACA,UACA,YACA,cACA,WACA,eACA,YACA,cACA,iBACA,cACA,SACA,SACA,eACA,iBACA,eACA,eACA,cACA,aACA,YACA,SACA,aACA,eACA,aACA,cACA,WACA,aACA,WACA,eACA,oBACA,eACA,eACA,UACA,kBACA,aACA,eACA,YACA,eACA,cACA,aACA,WACA,WACA,WACA,YACA,mBACA,UACA,SACA,WACA,aACA,YACA,YACA,eACA,YACA,cACA,cACA,eACA,WACA,YACA,eACA,cACA,WACA,WACA,cACA,aACA,SACA,cACA,eACA,gBACA,eACA,SACA,cACA,aACA,SACA,WACA,gBACA,WACA,YACA,cACA,iBACA,YACA,eACA,mBACA,YACA,YACA,YACA,WACA,YACA,cACA,aACA,gBACA,kBACA,eACA,YACA,YACA,aACA,eACA,cACA,iBACA,SACA,WACA,cACA,cACA,SACA,cACA,iBACA,aACA,WACA,UACA,aACA,WACA,kBACA,cACA,iBACA,aACA,gBACA,YACA,aACA,WACA,SACA,WACA,YACA,eACA,aACA,aACA,WACA,YACA,aACA,WACA,gBACA,iBACA,eACA,UACA,iBACA,YACA,YACA,oBACA,cACA,iBACA,cACA,cACA,gBACA,iBACA,iBACA,mBACA,gBACA,kBACA,gBACA,cACA,cACA,iBACA,gBACA,YACA,mBACA,gBACA,gBACA,UACA,aACA,YACA,gBACA,cACA,SACA,aACA,gBACA,iBACA,aACA,iBACA,iBACA,gBACA,gBACA,cACA,YACA,gBACA,UACA,WACA,aACA,WACA,gBACA,YACA,qBACA,gBACA,YACA,gBACA,cACA,SACA,eACA,iBACA,YACA,WACA,YACA,UACA,YACA,eACA,aACA,iBACA,WACA,YACA,aACA,gBACA,gBACA,YACA,eACA,UACA,WACA,aACA,cACA,aACA,aACA,eACA,gBACA,cACA,cACA,iBACA,aACA,oBACA,aACA,aACA,aACA,WACA,gBACA,UACA,UACA,UACA,gBACA,WACA,UACA,eACA,WACA,cACA,aACA,WACA,aACA,gBACA,WACA,iBACA,UACA,gBACA,UACA,eACA,eACA,cACA,iBACA,YACA,aACA,cACA,iBACA,YACA,aACA,YACA,UACA,YACA,cACA,gBACA,aACA,cACA,eACA,mBACA,aACA,aACA,aACA,gBACA,eACA,gBACA,SACA,eACA,kBACA,UACA,YACA,eACA,gBACA,WACA,aACA,WACA,SACA,UACA,cACA,iBACA,gBACA,gBACA,gBACA,cACA,YACA,qBACA,kBACA,mBACA,aACA,eACA,iBACA,kBACA,iBACA,SACA,aACA,WACA,cACA,aACA,YACA,aACA,eACA,UACA,aACA,aACA,aACA,UACA,YACA,YACA,WACA,eACA,WACA,SACA,aACA,UACA,YACA,cACA,WACA,eACA,SACA,eACA,UACA,YACA,gBACA,SACA,aACA,eACA,aACA,aACA,WACA,aACA,cACA,gBACA,SACA,cACA,WACA,aACA,WACA,aACA,cACA,UACA,eACA,eACA,eACA,aACA,UACA,YACA,gBACA,SACA,WACA,eACA,UACA,SACA,UACA,YACA,SACA,cACA,WACA,aACA,cACA,eACA,gBACA,kBACA,kBACA,WACA,cACA,YACA,iBACA,UACA,eACA,aACA,SACA,YACA,YACA,cACA,UACA,aACA,YACA,cACA,aACA,cACA,aACA,WACA,WACA,cACA,WACA,WACA,kBACA,UACA,cACA,WACA,UACA,aACA,aACA,WACA,cACA,cACA,gBACA,UACA,YACA,eACA,aACA,aACA,iBACA,gBACA,UACA,iBACA,SACA,oBACA,UACA,WACA,YACA,YACA,YACA,UACA,aACA,eACA,WACA,qBACA,SACA,cACA,cACA,UACA,SACA,UACA,WACA,WACA,eACA,cACA,UACA,aACA,gBACA,UACA,WACA,YACA,iBACA,aACA,YACA,WACA,iBACA,aACA,kBACA,cACA,iBACA,mBACA,cACA,eACA,YACA,SACA,eACA,cACA,WACA,aACA,UACA,cACA,cACA,YACA,iBACA,kBACA,aACA,aACA,eACA,sBACA,YACA,aACA,kBACA,aACA,UACA,YACA,eACA,gBACA,kBACA,mBACA,cACA,WACA,cACA,eACA,UACA,gBACA,gBACA,gBACA,SACA,YACA,UACA,YACA,iBACA,YACA,aACA,UACA,aACA,cACA,cACA,cACA,gBACA,aACA,UACA,UACA,cACA,cACA,YACA,gBACA,mBACA,kBACA,aACA,WACA,gBACA,aACA,cACA,gBACA,kBACA,YACA,cACA,YACA,aACA,gBACA,iBACA,eACA,aACA,eACA,cACA,gBACA,gBACA,aACA,aACA,YACA,iBACA,WACA,iBACA,gBACA,eACA,cACA,cACA,YACA,WACA,YACA,WACA,cACA,eACA,aACA,aACA,WACA,WACA,WACA,YACA,WACA,iBACA,aACA,SACA,aACA,gBACA,aACA,aACA,UACA,UACA,cACA,WACA,cACA,aACA,aACA,UACA,YACA,eACA,cACA,eACA,UACA,aACA,SACA,YACA,SACA,SACA,eACA,eACA,gBACA,gBACA,cACA,kBACA,WACA,YACA,eACA,gBACA,aACA,eACA,eACA,WACA,SACA,aACA,cACA,aACA,gBACA,eACA,cACA,kBACA,cACA,eACA,YACA,WACA,YACA,cACA,eACA,eACA,YACA,gBACA,gBACA,aACA,YACA,eACA,aACA,iBACA,gBACA,sBACA,UACA,YACA,gBACA,cACA,iBACA,WACA,eACA,eACA,gBACA,cACA,WACA,aACA,UACA,WACA,WACA,cACA,cACA,oBACA,aACA,gBACA,eACA,UACA,cACA,eACA,WACA,iBACA,eACA,cACA,cACA,UACA,iBACA,UACA,gBACA,iBACA,SACA,aACA,YACA,oBACA,WACA,eACA,eACA,UACA,eACA,gBACA,cACA,YACA,gBACA,kBACA,cACA,aACA,aACA,cACA,gBACA,aACA,cACA,gBACA,YACA,eACA,gBACA,WACA,eACA,kBACA,YACA,eACA,kBACA,gBACA,eACA,UACA,cACA,gBACA,iBACA,YACA,YACA,eACA,cACA,gBACA,gBACA,iBACA,eACA,oBACA,WACA,gBACA,aACA,eACA,iBACA,aACA,aACA,eACA,UACA,WACA,aACA,eACA,aACA,cACA,aACA,aACA,eACA,cACA,eACA,cACA,cACA,UACA,YACA,cACA,eACA,SACA,WACA,WACA,YACA,aACA,UACA,WACA,qBACA,YACA,eACA,gBACA,YACA,UACA,cACA,mBACA,aACA,iBACA,gBACA,oBACA,aACA,YACA,aACA,eACA,aACA,gBACA,eACA,SACA,cACA,cACA,aACA,aACA,cACA,aACA,UACA,UACA,WACA,YACA,iBACA,UACA,SACA,YACA,WACA,eACA,cACA,YACA,YACA,aACA,aACA,aACA,UACA,eACA,mBACA,WACA,cACA,YACA,gBACA,iBACA,YACA,UACA,aACA,cACA,eACA,aACA,gBACA,YACA,cACA,cACA,aACA,SACA,cACA,eACA,WACA,cACA,cACA,gBACA,aACA,WACA,WACA,aACA,gBACA,cACA,YACA,aACA,eACA,eACA,aACA,aACA,mBACA,eACA,YACA,YACA,gBACA,cACA,gBACA,kBACA,cACA,eACA,UACA,WACA,aACA,eACA,UACA,aACA,YACA,eACA,YACA,kBACA,gBACA,aACA,cACA,WACA,cACA,iBACA,iBACA,gBACA,eACA,eACA,aACA,gBACA,aACA,WACA,SACA,eACA,YACA,WACA,cACA,YACA,gBACA,aACA,WACA,WACA,gBACA,cACA,aACA,eACA,oBACA,kBACA,eACA,cACA,iBACA,iBACA,mBACA,gBACA,cACA,iBACA,SACA,WACA,YACA,YACA,aACA,UACA,SACA,eACA,aACA,eACA,eACA,kBACA,iBACA,iBACA,YACA,iBACA,cACA,aACA,eACA,aACA,gBACA,YACA,WACA,aACA,aACA,iBACA,eACA,cACA,aACA,iBACA,aACA,YACA,aACA,gBACA,gBACA,WACA,qBACA,eACA,WACA,iBACA,SACA,YACA,iBACA,YACA,aACA,eACA,eACA,cACA,YACA,WACA,YACA,aACA,iBACA,YACA,eACA,YACA,cACA,YACA,WACA,WACA,YACA,WACA,cACA,cACA,eACA,sBACA,WACA,iBACA,gBACA,aACA,kBACA,gBACA,eACA,eACA,gBACA,mBACA,YACA,cACA,SACA,YACA,cACA,gBACA,aACA,kBACA,WACA,SACA,cACA,UACA,eACA,YACA,cACA,YACA,WACA,SACA,WACA,iBACA,iBACA,WACA,iBACA,eACA,mBACA,WACA,cACA,aACA,YACA,gBACA,aACA,gBACA,UACA,cACA,YACA,WACA,WACA,cACA,cACA,cACA,WACA,iBACA,YACA,aACA,YACA,cACA,YACA,eACA,eACA,aACA,UACA,SACA,gBACA,YACA,cACA,WACA,WACA,aACA,mBACA,YACA,UACA,cACA,SACA,WACA,gBACA,UACA,iBACA,qBACA,aACA,YACA,gBACA,aACA,SACA,WACA,iBACA,kBACA,iBACA,iBACA,oBACA,WACA,WACA,UACA,UACA,eACA,WACA,cACA,SACA,UACA,qBACA,aACA,YACA,SACA,eACA,cACA,eACA,YACA,iBACA,aACA,cACA,YACA,gBACA,aACA,gBACA,YACA,WACA,WACA,UACA,SACA,YACA,cACA,UACA,UACA,SACA,gBACA,iBACA,YACA,WACA,SACA,WACA,YACA,YACA,aACA,gBACA,kBACA,eACA,oBACA,eACA,YACA,gBACA,cACA,UACA,iBACA,UACA,WACA,WACA,SACA,SACA,aACA,YACA,WACA,cACA,YACA,eACA,aACA,gBACA,gBACA,UACA,kBACA,WACA,WACA,mBACA,gBACA,kBACA,kBACA,aACA,WACA,aACA,YACA,cACA,YACA,mBACA,iBACA,cACA,cACA,UACA,aACA,aACA,aACA,iBACA,UACA,aACA,YACA,aACA,YACA,YACA,YACA,WACA,YACA,UACA,gBACA,WACA,kBACA,WACA,aACA,eACA,kBACA,UACA,YACA,mBACA,cACA,UACA,WACA,iBACA,eACA,UACA,eACA,YACA,gBACA,aACA,YACA,WACA,UACA,gBACA,YACA,oBACA,YACA,cACA,WACA,WACA,eACA,gBACA,YACA,YACA,YACA,cACA,aACA,gBACA,aACA,YACA,eACA,cACA,iBACA,eACA,aACA,eACA,WACA,aACA,YACA,eACA,aACA,YACA,cACA,SACA,YACA,aACA,WACA,UACA,WACA,YACA,WACA,aACA,UACA,SACA,YACA,eACA,cACA,eACA,gBACA,YACA,oBACA,UACA,eACA,aACA,kBACA,YACA,eACA,cACA,kBACA,WACA,SACA,YACA,mBACA,SACA,WACA,gBACA,eACA,YACA,eACA,WACA,UACA,WACA,YACA,cACA,cACA,aACA,aACA,UACA,WACA,eACA,eACA,gBACA,eACA,aACA,cACA,iBACA,iBACA,iBACA,aACA,cACA,UACA,cACA,gBACA,eACA,iBACA,cACA,iBACA,cACA,UACA,YACA,cACA,aACA,UACA,eACA,eACA,gBACA,cACA,gBACA,cACA,UACA,WACA,eACA,iBACA,cACA,YACA,eACA,eACA,gBACA,WACA,cACA,gBACA,YACA,YACA,UACA,iBACA,aACA,aACA,eACA,eACA,cACA,kBACA,WACA,cACA,WACA,YACA,gBACA,YACA,YACA,cACA,cACA,gBACA,cACA,YACA,aACA,kBACA,aACA,aACA,eACA,UACA,WACA,SACA,eACA,UACA,UACA,UACA,qBACA,YACA,SACA,aACA,UACA,UACA,WACA,SACA,aACA,cACA,cACA,cACA,YACA,SACA,cACA,YACA,iBACA,aACA,gBACA,UACA,iBACA,cACA,aACA,cACA,mBACA,eACA,eACA,uBACA,WACA,UACA,iBACA,cACA,cACA,SACA,mBACA,cACA,iBACA,iBACA,gBACA,aACA,aACA,UACA,cACA,SACA,aACA,WACA,aACA,UACA,YACA,cACA,eACA,WACA,cACA,SACA,aACA,gBACA,cACA,iBACA,aACA,gBACA,YACA,UACA,WACA,gBACA,aACA,eACA,cACA,eACA,aACA,WACA,aACA,YACA,YACA,YACA,gBACA,eACA,SACA,cACA,YACA,YACA,mBACA,kBACA,eACA,aACA,YACA,YACA,iBACA,aACA,aACA,SACA,UACA,aACA,eACA,aACA,mBACA,cACA,aACA,aACA,gBACA,aACA,aACA,mBACA,UACA,cACA,eACA,eACA,sBACA,aACA,YACA,gBACA,SACA,cACA,SACA,iBACA,aACA,eACA,YACA,WACA,WACA,gBACA,cACA,aACA,YACA,aACA,aACA,eACA,WACA,WACA,iBACA,cACA,YACA,iBACA,SACA,WACA,cACA,cACA,gBACA,gBACA,cACA,cACA,aACA,UACA,YACA,cACA,aACA,cACA,eACA,cACA,SACA,gBACA,eACA,kBACA,gBACA,kBACA,gBACA,iBACA,YACA,YACA,kBACA,cACA,UACA,UACA,UACA,eACA,iBACA,eACA,iBACA,cACA,gBACA,WACA,YACA,cACA,kBACA,aACA,WACA,UACA,WACA,eACA,gBACA,YACA,eACA,gBACA,YACA,cACA,aACA,eACA,aACA,cACA,cACA,cACA,UACA,aACA,eACA,cACA,aACA,aACA,YACA,aACA,SACA,eACA,aACA,eACA,aACA,WACA,mBACA,qBACA,YACA,aACA,SACA,aACA,WACA,UACA,UACA,iBACA,cACA,eACA,aACA,aACA,mBACA,YACA,eACA,gBACA,mBACA,gBACA,gBACA,mBACA,YACA,YACA,aACA,cACA,iBACA,UACA,aACA,iBACA,cACA,WACA,gBACA,YACA,cACA,kBACA,UACA,cACA,UACA,YACA,eACA,cACA,gBACA,aACA,aACA,YACA,eACA,aACA,gBACA,YACA,YACA,iBACA,WACA,kBACA,mBACA,WACA,cACA,YACA,eACA,cACA,cACA,WACA,eACA,kBACA,aACA,WACA,gBACA,eACA,eACA,eACA,cACA,WACA,aACA,aACA,WACA,WACA,UACA,UACA,YACA,eACA,UACA,YACA,UACA,cACA,aACA,aACA,WACA,cACA,SACA,YACA,kBACA,UACA,aACA,WACA,SACA,cACA,cACA,gBACA,YACA,UACA,aACA,cACA,UACA,SACA,aACA,aACA,UACA,YACA,eACA,gBACA,cACA,kBACA,aACA,WACA,YACA,YACA,YACA,aACA,YACA,aACA,gBACA,iBACA,YACA,cACA,aACA,cACA,WACA,YACA,cACA,UACA,WACA,UACA,aACA,gBACA,kBACA,gBACA,aACA,YACA,cACA,gBACA,eACA,iBACA,aACA,UACA,cACA,gBACA,iBACA,aACA,UACA,UACA,gBACA,gBACA,YACA,WACA,UACA,YACA,YACA,oBACA,WACA,YACA,WACA,YACA,WACA,eACA,cACA,YACA,SACA,YACA,WACA,UACA,aACA,cACA,WACA,gBACA,YACA,UACA,cACA,aACA,WACA,SACA,cACA,YACA,UACA,UACA,iBACA,WACA,WACA,WACA,eACA,gBACA,aACA,UACA,iBACA,cACA,eACA,aACA,WACA,WACA,YACA,YACA,UACA,eACA,gBACA,eACA,SACA,aACA,eACA,YACA,WACA,SACA,eACA,eACA,aACA,iBACA,gBACA,eACA,WACA,aACA,WACA,cACA,cACA,WACA,aACA,gBACA,eACA,qBACA,eACA,gBACA,aACA,eACA,gBACA,UACA,cACA,WACA,aACA,eACA,cACA,cACA,cACA,eACA,aACA,YACA,UACA,UACA,cACA,aACA,aACA,iBACA,YACA,cACA,YACA,SACA,aACA,SACA,YACA,cACA,YACA,iBACA,gBACA,cACA,YACA,mBACA,cACA,aACA,gBACA,eACA,WACA,eACA,iBACA,eACA,oBACA,SACA,aACA,cACA,UACA,WACA,WACA,cACA,cACA,aACA,eACA,cACA,cACA,aACA,eACA,aACA,gBACA,SACA,YACA,WACA,YACA,eACA,cACA,iBACA,YACA,cACA,WACA,cACA,WACA,gBACA,aACA,aACA,cACA,YACA,kBACA,YACA,eACA,eACA,cACA,aACA,cACA,gBACA,YACA,YACA,mBACA,gBACA,aACA,YACA,aACA,YACA,iBACA,cACA,eACA,cACA,cACA,iBACA,iBACA,SACA,eACA,cACA,gBACA,aACA,gBACA,eACA,iBACA,iBACA,aACA,iBACA,aACA,aACA,YACA,iBACA,gBACA,eACA,YACA,UACA,aACA,cACA,YACA,cACA,SACA,YACA,YACA,UACA,gBACA,cACA,UACA,cACA,cACA,cACA,aACA,eACA,eACA,WACA,YACA,eACA,aACA,SACA,cACA,cACA,YACA,aACA,kBACA,eACA,eACA,cACA,gBACA,iBACA,gBACA,eACA,aACA,mBACA,kBACA,gBACA,kBACA,aACA,aACA,YACA,gBACA,iBACA,eACA,gBACA,eACA,aACA,YACA,cACA,YACA,UACA,cACA,oBACA,gBACA,eACA,kBACA,WACA,gBACA,WACA,aACA,UACA,YACA,cACA,aACA,eACA,SACA,WACA,UACA,WACA,aACA,YACA,UACA,aACA,gBACA,aACA,aACA,cACA,iBACA,cACA,iBACA,gBACA,cACA,aACA,eACA,cACA,gBACA,aACA,WACA,YACA,eACA,WACA,WACA,aACA,aACA,YACA,SACA,aACA,WACA,aACA,eACA,kBACA,YACA,aACA,YACA,eACA,SACA,cACA,SACA,SACA,UACA,SACA,mBACA,cACA,WACA,iBACA,eACA,gBACA,eACA,gBACA,aACA,aACA,UACA,YACA,cACA,YACA,gBACA,cACA,uBACA,cACA,gBACA,gBACA,eACA,mBACA,gBACA,YACA,aACA,aACA,UACA,WACA,iBACA,gBACA,WACA,aACA,cACA,WACA,WACA,eACA,qBACA,mBACA,YACA,iBACA,eACA,mBACA,cACA,aACA,eACA,eACA,cACA,aACA,YACA,iBACA,WACA,gBACA,cACA,cACA,aACA,gBACA,WACA,gBACA,gBACA,aACA,aACA,eACA,YACA,YACA,SACA,aACA,aACA,oBACA,aACA,gBACA,eACA,aACA,mBACA,mBACA,cACA,YACA,kBACA,gBACA,gBACA,eACA,gBACA,gBACA,iBACA,iBACA,UACA,WACA,iBACA,kBACA,UACA,WACA,cACA,gBACA,YACA,YACA,oBACA,YACA,aACA,YACA,cACA,cACA,aACA,WACA,WACA,eACA,eACA,UACA,WACA,SACA,SACA,aACA,gBACA,eACA,YACA,UACA,eACA,UACA,YACA,iBACA,aACA,WACA,eACA,aACA,SACA,kBACA,YACA,WACA,WACA,gBACA,cACA,aACA,WACA,YACA,gBACA,eACA,gBACA,eACA,UACA,WACA,aACA,UACA,YACA,SACA,cACA,WACA,aACA,cACA,YACA,mBACA,YACA,YACA,WACA,WACA,eACA,WACA,YACA,mBACA,cACA,UACA,aACA,mBACA,cACA,aACA,YACA,iBACA,UACA,gBACA,aACA,iBACA,cACA,aACA,UACA,WACA,aACA,aACA,iBACA,UACA,SACA,SACA,eACA,UACA,SACA,UACA,aACA,qBACA,cACA,YACA,aACA,YACA,UACA,aACA,aACA,eACA,cACA,WACA,eACA,iBACA,WACA,gBACA,gBACA,YACA,YACA,eACA,YACA,YACA,SACA,YACA,WACA,eACA,UACA,aACA,eACA,YACA,aACA,iBACA,eACA,oBACA,eACA,UACA,YACA,aACA,eACA,aACA,eACA,eACA,cACA,cACA,SACA,WACA,aACA,SACA,SACA,gBACA,iBACA,UACA,WACA,WACA,WACA,eACA,WACA,cACA,cACA,gBACA,cACA,aACA,cACA,iBACA,iBACA,oBACA,cACA,iBACA,eACA,UACA,YACA,iBACA,YACA,iBACA,eACA,YACA,gBACA,YACA,SACA,cACA,aACA,UACA,YACA,cACA,eACA,aACA,aACA,oBACA,YACA,SACA,cACA,YACA,cACA,YACA,gBACA,gBACA,kBACA,oBACA,WACA,YACA,YACA,eACA,cACA,mBACA,aACA,YACA,gBACA,cACA,UACA,WACA,aACA,YACA,WACA,YACA,gBACA,eACA,aACA,UACA,eACA,cACA,aACA,cACA,gBACA,WACA,oBACA,iBACA,mBACA,gBACA,gBACA,aACA,cACA,aACA,SACA,aACA,cACA,gBACA,iBACA,cACA,eACA,iBACA,aACA,cACA,aACA,WACA,aACA,cACA,WACA,UACA,eACA,UACA,cACA,iBACA,eACA,eACA,WACA,UACA,YACA,WACA,YACA,eACA,kBACA,UACA,UACA,aACA,WACA,eACA,WACA,aACA,WACA,eACA,UACA,WACA,UACA,iBACA,aACA,YACA,eACA,kBACA,aACA,UACA,WACA,gBACA,cACA,kBACA,eACA,UACA,WACA,WACA,gBACA,eACA,WACA,aACA,WACA,cACA,gBACA,YACA,SACA,eACA,YACA,cACA,YACA,WACA,eACA,cACA,gBACA,WACA,cACA,cACA,eACA,YACA,UACA,UACA,cACA,cACA,eACA,YACA,oBACA,eACA,iBACA,cACA,cACA,aACA,sBACA,eACA,iBACA,kBACA,gBACA,WACA,WACA,eACA,aACA,UACA,aACA,WACA,YACA,UACA,eACA,YACA,aACA,gBACA,aACA,aACA,gBACA,eACA,gBACA,iBACA,eACA,eACA,aACA,kBACA,eACA,gBACA,iBACA,aACA,gBACA,iBACA,kBACA,oBACA,YACA,eACA,gBACA,cACA,eACA,oBACA,mBACA,eACA,kBACA,cACA,mBACA,cACA,aACA,gBACA,eACA,aACA,eACA,mBACA,aACA,eACA,aACA,iBACA,gBACA,cACA,iBACA,aACA,mBACA,YACA,UACA,YACA,YACA,cACA,aACA,WACA,aACA,cACA,SACA,gBACA,eACA,YACA,gBACA,eACA,gBACA,YACA,UACA,aACA,gBACA,mBACA,gBACA,gBACA,cACA,eACA,WACA,mBACA,eACA,YACA,YACA,WACA,aACA,WACA,aACA,iBACA,cACA,WACA,YACA,gBACA,gBACA,WACA,aACA,gBACA,eACA,YACA,aACA,YACA,SACA,WACA,iBACA,cACA,YACA,aACA,aACA,UACA,aACA,cACA,eACA,gBACA,aACA,eACA,cACA,aACA,kBACA,gBACA,eACA,WACA,gBACA,YACA,UACA,WACA,iBACA,UACA,iBACA,aACA,aACA,YACA,cACA,UACA,cACA,cACA,iBACA,gBACA,YACA,aACA,kBACA,mBACA,YACA,iBACA,kBACA,cACA,YACA,cACA,cACA,cACA,cACA,cACA,cACA,aACA,gBACA,YACA,aACA,WACA,cACA,eACA,gBACA,YACA,iBACA,cACA,WACA,UACA,WACA,mBACA,qBACA,gBACA,eACA,gBACA,cACA,gBACA,kBACA,gBACA,aACA,YACA,WACA,YACA,kBACA,UACA,YACA,WACA,gBACA,YACA,eACA,YACA,YACA,cACA,eACA,aACA,WACA,YACA,eACA,SACA,YACA,aACA,UACA,eACA,aACA,cACA,WACA,UACA,YACA,cACA,aACA,YACA,iBACA,eACA,oBACA,gBACA,eACA,cACA,iBACA,wBACA,WACA,eACA,gBACA,kBACA,eACA,cACA,gBACA,eACA,iBACA,YACA,iBACA,cACA,eACA,iBACA,cACA,YACA,YACA,YACA,eACA,WACA,gBACA,gBACA,aACA,SACA,YACA,WACA,gBACA,kBACA,kBACA,aACA,UACA,cACA,SACA,cACA,aACA,gBACA,aACA,cACA,gBACA,oBACA,iBACA,WACA,cACA,aACA,WACA,UACA,gBACA,cACA,eACA,cACA,SACA,gBACA,gBACA,WACA,aACA,eACA,kBACA,cACA,mBACA,eACA,sBACA,gBACA,SACA,eACA,qBACA,cACA,kBACA,gBACA,cACA,WACA,aACA,eACA,iBACA,YACA,gBACA,mBACA,iBACA,gBACA,cACA,kBACA,eACA,sBACA,eACA,aACA,kBACA,eACA,gBACA,YACA,eACA,iBACA,cACA,cACA,YACA,eACA,cACA,gBACA,cACA,gBACA,iBACA,kBACA,gBACA,aACA,cACA,kBACA,mBACA,iBACA,kBACA,WACA,cACA,aACA,gBACA,mBACA,mBACA,kBACA,mBACA,gBACA,iBACA,oBACA,gBACA,gBACA,iBACA,mBACA,kBACA,oBACA,eACA,eACA,mBACA,qBACA,qBACA,eACA,gBACA,sBACA,mBACA,oBACA,mBACA,kBACA,kBACA,oBACA,gBACA,kBACA,gBACA,mBACA,mBACA,iBACA,mBACA,iBACA,gBACA,mBACA,eACA,kBACA,iBACA,iBACA,eACA,sBACA,cACA,eACA,mBACA,iBACA,mBACA,sBACA,kBACA,iBACA,gBACA,cACA,gBACA,aACA,mBACA,iBACA,cACA,cACA,SACA,aACA,kBACA,WACA,YACA,eACA,WACA,gBACA,eACA,kBACA,SACA,YACA,kBACA,WACA,kBACA,eACA,mBACA,gBACA,mBACA,YACA,UACA,UACA,mBACA,kBACA,aACA,cACA,aACA,cACA,UACA,cACA,WACA,cACA,eACA,kBACA,mBACA,cACA,mBACA,mBACA,kBACA,kBACA,oBACA,kBACA,eACA,eACA,gBACA,gBACA,iBACA,WACA,SACA,WACA,aACA,aACA,YACA,SACA,aACA,cACA,iBACA,YACA,aACA,UACA,mBACA,cACA,SACA,SACA,WACA,YACA,YACA,WACA,SACA,eACA,eACA,eACA,mBACA,SACA,YACA,WACA,WACA,eACA,aACA,WACA,aACA,gBACA,YACA,YACA,WACA,UACA,cACA,WACA,cACA,kBACA,SACA,eACA,iBACA,kBACA,YACA,kBACA,WACA,UACA,cACA,cACA,iBACA,YACA,kBACA,cACA,iBACA,gBACA,cACA,cACA,kBACA,aACA,aACA,UACA,aACA,YACA,SACA,YACA,mBACA,gBACA,WACA,SACA,iBACA,aACA,cACA,iBACA,UACA,eACA,SACA,kBACA,YACA,cACA,SACA,iBACA,cACA,SACA,cACA,cACA,cACA,WACA,cACA,iBACA,eACA,aACA,YACA,WACA,SACA,WACA,YACA,WACA,eACA,cACA,YACA,WACA,iBACA,YACA,YACA,WACA,WACA,cACA,aACA,cACA,YACA,YACA,kBACA,eACA,gBACA,eACA,cACA,eACA,iBACA,aACA,cACA,aACA,eACA,WACA,cACA,aACA,cACA,WACA,cACA,SACA,UACA,YACA,aACA,iBACA,kBACA,mBACA,cACA,aACA,iBACA,eACA,aACA,WACA,eACA,cACA,cACA,SACA,eACA,YACA,mBACA,UACA,UACA,eACA,SACA,cACA,cACA,iBACA,eACA,iBACA,YACA,UACA,eACA,eACA,YACA,aACA,cACA,cACA,UACA,YACA,YACA,YACA,kBACA,aACA,WACA,WACA,aACA,YACA,iBACA,aACA,aACA,cACA,YACA,oBACA,aACA,eACA,iBACA,UACA,YACA,eACA,eACA,aACA,YACA,mBACA,eACA,aACA,eACA,aACA,YACA,YACA,kBACA,eACA,eACA,cACA,gBACA,YACA,aACA,gBACA,gBACA,gBACA,UACA,aACA,WACA,YACA,WACA,aACA,cACA,aACA,YACA,WACA,eACA,eACA,gBACA,aACA,aACA,WACA,iBACA,cACA,WACA,aACA,eACA,eACA,aACA,gBACA,WACA,eACA,cACA,aACA,cACA,iBACA,WACA,YACA,gBACA,eACA,WACA,YACA,YACA,aACA,aACA,eACA,YACA,SACA,cACA,aACA,YACA,cACA,UACA,WACA,WACA,WACA,cACA,eACA,aACA,aACA,cACA,WACA,SACA,eACA,WACA,cACA,WACA,cACA,UACA,WACA,UACA,gBACA,cACA,YACA,cACA,WACA,iBACA,aACA,gBACA,aACA,YACA,gBACA,cACA,UACA,aACA,gBACA,kBACA,cACA,oBACA,kBACA,gBACA,SACA,cACA,cACA,WACA,WACA,aACA,UACA,UACA,gBACA,cACA,iBACA,UACA,cACA,eACA,kBACA,eACA,cACA,eACA,YACA,gBACA,cACA,WACA,iBACA,WACA,kBACA,WACA,iBACA,cACA,gBACA,SACA,eACA,UACA,gBACA,WACA,WACA,YACA,gBACA,kBACA,mBACA,kBACA,cACA,gBACA,iBACA,iBACA,eACA,eACA,cACA,aACA,cACA,cACA,cACA,WACA,eACA,aACA,gBACA,eACA,eACA,aACA,kBACA,eACA,eACA,WACA,UACA,UACA,aACA,UACA,oBACA,cACA,WACA,kBACA,iBACA,cACA,kBACA,eACA,iBACA,cACA,WACA,aACA,aACA,gBACA,cACA,cACA,eACA,iBACA,aACA,gBACA,gBACA,mBACA,eACA,cACA,eACA,eACA,iBACA,gBACA,cACA,eACA,aACA,aACA,eACA,aACA,kBACA,cACA,gBACA,WACA,eACA,iBACA,eACA,cACA,YACA,UACA,cACA,WACA,gBACA,YACA,iBACA,cACA,mBACA,aACA,SACA,gBACA,SACA,iBACA,UACA,gBACA,gBACA,cACA,gBACA,cACA,iBACA,WACA,aACA,UACA,cACA,gBACA,cACA,eACA,iBACA,iBACA,SACA,eACA,cACA,eACA,aACA,iBACA,gBACA,gBACA,kBACA,eACA,aACA,mBACA,eACA,gBACA,WACA,WACA,aACA,gBACA,YACA,YACA,YACA,cACA,aACA,aACA,cACA,WACA,aACA,kBACA,YACA,YACA,UACA,UACA,oBACA,cACA,gBACA,UACA,WACA,aACA,WACA,WACA,WACA,aACA,aACA,iBACA,eACA,eACA,WACA,SACA,eACA,gBACA,gBACA,cACA,eACA,eACA,cACA,cACA,aACA,eACA,gBACA,aACA,SACA,aACA,UACA,cACA,cACA,cACA,UACA,UACA,gBACA,cACA,WACA,eACA,WACA,UACA,aACA,eACA,eACA,gBACA,YACA,YACA,eACA,SACA,eACA,UACA,aACA,aACA,aACA,kBACA,eACA,iBACA,YACA,WACA,eACA,UACA,WACA,iBACA,kBACA,kBACA,aACA,kBACA,aACA,aACA,iBACA,cACA,kBACA,aACA,aACA,WACA,mBACA,cACA,kBACA,eACA,YACA,kBACA,iBACA,cACA,aACA,WACA,aACA,cACA,cACA,gBACA,aACA,cACA,YACA,WACA,cACA,cACA,kBACA,iBACA,eACA,cACA,eACA,aACA,cACA,UACA,aACA,iBACA,UACA,aACA,YACA,WACA,cACA,UACA,cACA,YACA,WACA,YACA,cACA,WACA,YACA,SACA,WACA,aACA,aACA,cACA,eACA,aACA,YACA,eACA,YACA,UACA,SACA,aACA,kBACA,YACA,aACA,eACA,YACA,UACA,UACA,eACA,cACA,gBACA,YACA,qBACA,iBACA,UACA,aACA,mBACA,gBACA,aACA,YACA,iBACA,aACA,gBACA,aACA,cACA,aACA,eACA,gBACA,aACA,gBACA,cACA,mBACA,oBACA,YACA,SACA,gBACA,cACA,YACA,cACA,gBACA,cACA,eACA,gBACA,cACA,aACA,eACA,YACA,kBACA,cACA,WACA,gBACA,aACA,aACA,eACA,cACA,UACA,gBACA,kBACA,eACA,aACA,UACA,iBACA,kBACA,UACA,YACA,WACA,aACA,cACA,YACA,cACA,iBACA,eACA,aACA,eACA,WACA,gBACA,cACA,WACA,WACA,cACA,WACA,cACA,gBACA,YACA,YACA,eACA,eACA,cACA,cACA,YACA,cACA,gBACA,UACA,YACA,cACA,kBACA,WACA,YACA,YACA,cACA,WACA,SACA,YACA,aACA,eACA,SACA,WACA,YACA,YACA,YACA,WACA,eACA,aACA,YACA,WACA,cACA,SACA,cACA,SACA,gBACA,WACA,cACA,aACA,eACA,eACA,YACA,eACA,YACA,aACA,YACA,gBACA,WACA,WACA,SACA,gBACA,UACA,UACA,gBACA,gBACA,eACA,YACA,iBACA,mBACA,gBACA,kBACA,YACA,qBACA,UACA,WACA,cACA,UACA,aACA,YACA,UACA,UACA,YACA,cACA,aACA,YACA,eACA,eACA,WACA,YACA,YACA,cACA,YACA,iBACA,cACA,UACA,WACA,kBACA,WACA,aACA,WACA,UACA,eACA,UACA,eACA,WACA,UACA,eACA,iBACA,YACA,eACA,YACA,mBACA,cACA,aACA,aACA,cACA,gBACA,aACA,gBACA,YACA,eACA,cACA,cACA,eACA,aACA,YACA,SACA,cACA,YACA,iBACA,YACA,aACA,eACA,aACA,mBACA,gBACA,WACA,SACA,aACA,WACA,aACA,SACA,SACA,aACA,aACA,UACA,eACA,YACA,UACA,UACA,mBACA,WACA,UACA,YACA,YACA,aACA,YACA,aACA,WACA,YACA,eACA,UACA,cACA,aACA,YACA,UACA,YACA,iBACA,cACA,eACA,gBACA,WACA,eACA,aACA,cACA,WACA,cACA,eACA,UACA,YACA,SACA,gBACA,cACA,YACA,eACA,UACA,WACA,WACA,cACA,WACA,aACA","file":"app.37f3844bc9e14d4ec0d0.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t1: 0\n \t};\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"app.\" + {}[chunkId] + \".js\"\n \t}\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([216,0]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import { cloneDeep, set } from 'lodash';\n\nexport interface Constant {\n  type: 'constant';\n  value: number;\n}\n\nexport interface UniformRandom {\n  type: 'uniform';\n  min: number;\n  max: number;\n}\n\nexport interface ExponentialRandom {\n  type: 'exponential';\n  rate: number;\n  min?: number;\n  max?: number;\n}\n\nexport interface GaussianRandom {\n  type: 'gaussian';\n  mean: number;\n  sd: number;\n  min?: number;\n  max?: number;\n}\n\nexport type RandomValue = Constant | UniformRandom | ExponentialRandom | GaussianRandom;\nexport type RandomSubst = { path: string } & RandomValue;\n\nexport interface RandomTemplate<T> {\n  template: T;\n  substs: RandomSubst[];\n}\n\nexport function randomValue(value: RandomValue, random = Math.random) {\n  switch (value.type) {\n    case 'constant': return value.value;\n    case 'uniform': return value.min + random() * (value.max - value.min);\n    case 'exponential': return exponentialRandom(value.rate, value.min, value.max, random);\n    case 'gaussian': return gaussianRandom(value.mean, value.sd, value.min, value.max, random);\n  }\n}\n\nexport function instantiate<T>(template: RandomTemplate<T>, random = Math.random) {\n  const obj = cloneDeep(template.template);\n  for (const subst of template.substs)\n    set(obj as any, subst.path, randomValue(subst));\n  return obj;\n}\n\n// https://stackoverflow.com/a/2106564\nexport function exponentialRandom(rate: number, min?: number, max?: number, random = Math.random) {\n  let x = Math.log(1 - random()) / -rate;\n  if (min !== undefined) x = Math.max(min, x);\n  if (max !== undefined) x = Math.min(max, x);\n  return x;\n}\n\n// https://stackoverflow.com/a/36481059\nexport function gaussianRandom(\n  mean: number, sd: number, min?: number, max?: number, random = Math.random\n) {\n  let u, v;\n  do { u = random(); } while (u === 0);\n  do { v = random(); } while (v === 0);\n  let x = mean + sd * (Math.sqrt(-2 * Math.log(u)) * Math.cos(2 * Math.PI * v));\n  if (min !== undefined) x = Math.max(min, x);\n  if (max !== undefined) x = Math.min(max, x);\n  return x;\n}","import { blend } from 'common/color';\nimport { Aspect, Element, Item } from 'common/data';\nimport { compute } from 'common/logic/effect/solution';\nimport { randomValue } from 'common/random';\nimport { Elements, ElementLookup } from 'data/elements';\nimport { flatten } from 'lodash';\n\nexport const MaxAspects = 1000;\n\nexport function makeSolution(aspects: Aspect[], data: Record<string, Element>): Item {\n  // color\n  const color = blend(\n    aspects.map(({ element, amount }) => ({\n      color: parseInt(data[element].color, 16),\n      weight: amount\n    }))\n  ).toString(16);\n\n  // name\n  let max = 0, maxElem = '', total = 0;\n  for (const { element, amount } of aspects) {\n    if (amount > max) {\n      max = amount;\n      maxElem = element;\n    }\n    total += amount;\n  }\n  let name: string;\n  if (max < 100) name = `Mundane Solution`;\n  else if (max / total < 0.5) name = 'Mixed solution';\n  else if (max < 300) name = `Solution of ${maxElem}`;\n  else if (max < 500) name = `Solution of Greater ${maxElem}`;\n  else if (max < 700) name = `Solution of Mythical ${maxElem}`;\n  else name = `Solution of Perfect ${maxElem}`;\n\n  return {\n    id: 'solution',\n    name,\n    type: Item.Type.Consumable,\n    texture: {\n      type: 'composite',\n      base: 'sprites/items/solution',\n      overlay: {\n        type: 'single',\n        tex: 'sprites/items/solution-overlay',\n        tint: color\n      }\n    },\n    aspects,\n    effects: compute(aspects)\n  };\n}\n\nconst PurifyThreshold = 0.25;\nconst PurifyRate = 0.4;\nconst BoostRate = 1.5;\nconst FissionLoss = 0.25;\nconst FusionLoss = 0.1;\nconst Epsilon = 1;\n\nexport interface AlchemyReactant {\n  id?: string;\n  aspects?: Aspect[];\n}\nexport function mix(reactants: AlchemyReactant[], data: Record<string, Element>): Aspect[] {\n  const aspects: Record<string, number> = {};\n  for (const { element, amount } of flatten(reactants.map(reactant => reactant.aspects || [])))\n    aspects[element] = (aspects[element] || 0) + amount;\n\n  const fusionBoost = reactants.some(({ id }) => id === 'gel-bone') ? BoostRate : 1;\n  const fissionBoost = reactants.some(({ id }) => id === 'gel-stone') ? BoostRate : 1;\n\n  // fusion\n  for (const { name: element, composition: compo } of Elements) {\n    if (!compo) continue;\n\n    const threshold = randomValue(data[element].fusionThreshold) / fusionBoost / fissionBoost;\n    const inputAmount = Math.min(aspects[compo[0]] || 0, aspects[compo[1]] || 0);\n    if (inputAmount <= threshold) continue;\n    console.log(`fusion ${element}: ${inputAmount} <= ${threshold}`);\n\n    const amount = (inputAmount - threshold) * randomValue(data[element].fusionRate);\n    const compoRatio = Math.random() * 0.5 + 0.25;\n\n    aspects[element] = (aspects[element] || 0) + amount * (1 - FusionLoss);\n    aspects[compo[0]] -= amount * compoRatio;\n    aspects[compo[1]] -= amount * (1 - compoRatio);\n  }\n\n  // fission\n  for (const element of Object.keys(aspects)) {\n    const threshold = randomValue(data[element].fissionThreshold) * fissionBoost / fusionBoost;\n    if (aspects[element] >= threshold) continue;\n    console.log(`fission ${element}: ${aspects[element]} >= ${threshold}`);\n\n    const amount = aspects[element] * randomValue(data[element].fissionRate);\n    const compo = ElementLookup[element].composition;\n    const compoRatio = Math.random() * 0.5 + 0.25;\n\n    if (compo) {\n      aspects[compo[0]] = (aspects[compo[0]] || 0) + amount * (1 - FissionLoss) * compoRatio;\n      aspects[compo[1]] = (aspects[compo[1]] || 0) + amount * (1 - FissionLoss) * (1 - compoRatio);\n    }\n    aspects[element] -= amount;\n  }\n\n  // purify\n  let total = 0;\n  if (reactants.some(({ id }) => id === 'gel-alchemy')) {\n    for (const element of Object.keys(aspects)) total += aspects[element];\n    for (const element of Object.keys(aspects)) {\n      const amount = aspects[element];\n      if (amount / total < PurifyThreshold) {\n        aspects[element] *= 1 - PurifyRate;\n      }\n    }\n  }\n\n  // decay & clamp to range\n  total = 0;\n  for (const element of Object.keys(aspects)) total += aspects[element];\n  for (const element of Object.keys(aspects)) {\n    let amount = aspects[element];\n    if (amount < Epsilon) amount = 0;\n    else if (amount > MaxAspects) amount = MaxAspects;\n    aspects[element] = amount;\n  }\n\n  const finalAspects = Object.keys(aspects)\n    .map(element => ({ element, amount: aspects[element] }))\n    .filter(({ amount }) => amount > 0);\n  console.log(finalAspects);\n\n  return finalAspects;\n}\n\nexport function mixSolution(a: Item, b: Item, data: Record<string, Element>): Item {\n  return makeSolution(mix([a, b], data), data);\n}","export const NORM_2D = 1.0 / 47.0;\nexport const NORM_3D = 1.0 / 103.0;\nexport const NORM_4D = 1.0 / 30.0;\nexport const SQUISH_2D = (Math.sqrt(2 + 1) - 1) / 2;\nexport const SQUISH_3D = (Math.sqrt(3 + 1) - 1) / 3;\nexport const SQUISH_4D = (Math.sqrt(4 + 1) - 1) / 4;\nexport const STRETCH_2D = (1 / Math.sqrt(2 + 1) - 1) / 2;\nexport const STRETCH_3D = (1 / Math.sqrt(3 + 1) - 1) / 3;\nexport const STRETCH_4D = (1 / Math.sqrt(4 + 1) - 1) / 4;\n\nexport const base2D = [\n  [1, 1, 0, 1, 0, 1, 0, 0, 0],\n  [1, 1, 0, 1, 0, 1, 2, 1, 1]\n];\n\nexport const base3D = [\n  [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1],\n  [2, 1, 1, 0, 2, 1, 0, 1, 2, 0, 1, 1, 3, 1, 1, 1],\n  [1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 2, 1, 1, 0, 2, 1, 0, 1, 2, 0, 1, 1]\n];\n\nexport const base4D = [\n  [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1],\n  [3, 1, 1, 1, 0, 3, 1, 1, 0, 1, 3, 1, 0, 1, 1, 3, 0, 1, 1, 1, 4, 1, 1, 1, 1],\n  [\n    1,\n    1,\n    0,\n    0,\n    0,\n    1,\n    0,\n    1,\n    0,\n    0,\n    1,\n    0,\n    0,\n    1,\n    0,\n    1,\n    0,\n    0,\n    0,\n    1,\n    2,\n    1,\n    1,\n    0,\n    0,\n    2,\n    1,\n    0,\n    1,\n    0,\n    2,\n    1,\n    0,\n    0,\n    1,\n    2,\n    0,\n    1,\n    1,\n    0,\n    2,\n    0,\n    1,\n    0,\n    1,\n    2,\n    0,\n    0,\n    1,\n    1\n  ],\n  [\n    3,\n    1,\n    1,\n    1,\n    0,\n    3,\n    1,\n    1,\n    0,\n    1,\n    3,\n    1,\n    0,\n    1,\n    1,\n    3,\n    0,\n    1,\n    1,\n    1,\n    2,\n    1,\n    1,\n    0,\n    0,\n    2,\n    1,\n    0,\n    1,\n    0,\n    2,\n    1,\n    0,\n    0,\n    1,\n    2,\n    0,\n    1,\n    1,\n    0,\n    2,\n    0,\n    1,\n    0,\n    1,\n    2,\n    0,\n    0,\n    1,\n    1\n  ]\n];\n\nexport const gradients2D = [\n  5,\n  2,\n  2,\n  5,\n  -5,\n  2,\n  -2,\n  5,\n  5,\n  -2,\n  2,\n  -5,\n  -5,\n  -2,\n  -2,\n  -5\n];\n\nexport const gradients3D = [\n  -11,\n  4,\n  4,\n  -4,\n  11,\n  4,\n  -4,\n  4,\n  11,\n  11,\n  4,\n  4,\n  4,\n  11,\n  4,\n  4,\n  4,\n  11,\n  -11,\n  -4,\n  4,\n  -4,\n  -11,\n  4,\n  -4,\n  -4,\n  11,\n  11,\n  -4,\n  4,\n  4,\n  -11,\n  4,\n  4,\n  -4,\n  11,\n  -11,\n  4,\n  -4,\n  -4,\n  11,\n  -4,\n  -4,\n  4,\n  -11,\n  11,\n  4,\n  -4,\n  4,\n  11,\n  -4,\n  4,\n  4,\n  -11,\n  -11,\n  -4,\n  -4,\n  -4,\n  -11,\n  -4,\n  -4,\n  -4,\n  -11,\n  11,\n  -4,\n  -4,\n  4,\n  -11,\n  -4,\n  4,\n  -4,\n  -11\n];\n\nexport const gradients4D = [\n  3,\n  1,\n  1,\n  1,\n  1,\n  3,\n  1,\n  1,\n  1,\n  1,\n  3,\n  1,\n  1,\n  1,\n  1,\n  3,\n  -3,\n  1,\n  1,\n  1,\n  -1,\n  3,\n  1,\n  1,\n  -1,\n  1,\n  3,\n  1,\n  -1,\n  1,\n  1,\n  3,\n  3,\n  -1,\n  1,\n  1,\n  1,\n  -3,\n  1,\n  1,\n  1,\n  -1,\n  3,\n  1,\n  1,\n  -1,\n  1,\n  3,\n  -3,\n  -1,\n  1,\n  1,\n  -1,\n  -3,\n  1,\n  1,\n  -1,\n  -1,\n  3,\n  1,\n  -1,\n  -1,\n  1,\n  3,\n  3,\n  1,\n  -1,\n  1,\n  1,\n  3,\n  -1,\n  1,\n  1,\n  1,\n  -3,\n  1,\n  1,\n  1,\n  -1,\n  3,\n  -3,\n  1,\n  -1,\n  1,\n  -1,\n  3,\n  -1,\n  1,\n  -1,\n  1,\n  -3,\n  1,\n  -1,\n  1,\n  -1,\n  3,\n  3,\n  -1,\n  -1,\n  1,\n  1,\n  -3,\n  -1,\n  1,\n  1,\n  -1,\n  -3,\n  1,\n  1,\n  -1,\n  -1,\n  3,\n  -3,\n  -1,\n  -1,\n  1,\n  -1,\n  -3,\n  -1,\n  1,\n  -1,\n  -1,\n  -3,\n  1,\n  -1,\n  -1,\n  -1,\n  3,\n  3,\n  1,\n  1,\n  -1,\n  1,\n  3,\n  1,\n  -1,\n  1,\n  1,\n  3,\n  -1,\n  1,\n  1,\n  1,\n  -3,\n  -3,\n  1,\n  1,\n  -1,\n  -1,\n  3,\n  1,\n  -1,\n  -1,\n  1,\n  3,\n  -1,\n  -1,\n  1,\n  1,\n  -3,\n  3,\n  -1,\n  1,\n  -1,\n  1,\n  -3,\n  1,\n  -1,\n  1,\n  -1,\n  3,\n  -1,\n  1,\n  -1,\n  1,\n  -3,\n  -3,\n  -1,\n  1,\n  -1,\n  -1,\n  -3,\n  1,\n  -1,\n  -1,\n  -1,\n  3,\n  -1,\n  -1,\n  -1,\n  1,\n  -3,\n  3,\n  1,\n  -1,\n  -1,\n  1,\n  3,\n  -1,\n  -1,\n  1,\n  1,\n  -3,\n  -1,\n  1,\n  1,\n  -1,\n  -3,\n  -3,\n  1,\n  -1,\n  -1,\n  -1,\n  3,\n  -1,\n  -1,\n  -1,\n  1,\n  -3,\n  -1,\n  -1,\n  1,\n  -1,\n  -3,\n  3,\n  -1,\n  -1,\n  -1,\n  1,\n  -3,\n  -1,\n  -1,\n  1,\n  -1,\n  -3,\n  -1,\n  1,\n  -1,\n  -1,\n  -3,\n  -3,\n  -1,\n  -1,\n  -1,\n  -1,\n  -3,\n  -1,\n  -1,\n  -1,\n  -1,\n  -3,\n  -1,\n  -1,\n  -1,\n  -1,\n  -3\n];\n\nexport const lookupPairs2D = [\n  0,\n  1,\n  1,\n  0,\n  4,\n  1,\n  17,\n  0,\n  20,\n  2,\n  21,\n  2,\n  22,\n  5,\n  23,\n  5,\n  26,\n  4,\n  39,\n  3,\n  42,\n  4,\n  43,\n  3\n];\n\nexport const lookupPairs3D = [\n  0,\n  2,\n  1,\n  1,\n  2,\n  2,\n  5,\n  1,\n  6,\n  0,\n  7,\n  0,\n  32,\n  2,\n  34,\n  2,\n  129,\n  1,\n  133,\n  1,\n  160,\n  5,\n  161,\n  5,\n  518,\n  0,\n  519,\n  0,\n  546,\n  4,\n  550,\n  4,\n  645,\n  3,\n  647,\n  3,\n  672,\n  5,\n  673,\n  5,\n  674,\n  4,\n  677,\n  3,\n  678,\n  4,\n  679,\n  3,\n  680,\n  13,\n  681,\n  13,\n  682,\n  12,\n  685,\n  14,\n  686,\n  12,\n  687,\n  14,\n  712,\n  20,\n  714,\n  18,\n  809,\n  21,\n  813,\n  23,\n  840,\n  20,\n  841,\n  21,\n  1198,\n  19,\n  1199,\n  22,\n  1226,\n  18,\n  1230,\n  19,\n  1325,\n  23,\n  1327,\n  22,\n  1352,\n  15,\n  1353,\n  17,\n  1354,\n  15,\n  1357,\n  17,\n  1358,\n  16,\n  1359,\n  16,\n  1360,\n  11,\n  1361,\n  10,\n  1362,\n  11,\n  1365,\n  10,\n  1366,\n  9,\n  1367,\n  9,\n  1392,\n  11,\n  1394,\n  11,\n  1489,\n  10,\n  1493,\n  10,\n  1520,\n  8,\n  1521,\n  8,\n  1878,\n  9,\n  1879,\n  9,\n  1906,\n  7,\n  1910,\n  7,\n  2005,\n  6,\n  2007,\n  6,\n  2032,\n  8,\n  2033,\n  8,\n  2034,\n  7,\n  2037,\n  6,\n  2038,\n  7,\n  2039,\n  6\n];\n\nexport const lookupPairs4D = [\n  0,\n  3,\n  1,\n  2,\n  2,\n  3,\n  5,\n  2,\n  6,\n  1,\n  7,\n  1,\n  8,\n  3,\n  9,\n  2,\n  10,\n  3,\n  13,\n  2,\n  16,\n  3,\n  18,\n  3,\n  22,\n  1,\n  23,\n  1,\n  24,\n  3,\n  26,\n  3,\n  33,\n  2,\n  37,\n  2,\n  38,\n  1,\n  39,\n  1,\n  41,\n  2,\n  45,\n  2,\n  54,\n  1,\n  55,\n  1,\n  56,\n  0,\n  57,\n  0,\n  58,\n  0,\n  59,\n  0,\n  60,\n  0,\n  61,\n  0,\n  62,\n  0,\n  63,\n  0,\n  256,\n  3,\n  258,\n  3,\n  264,\n  3,\n  266,\n  3,\n  272,\n  3,\n  274,\n  3,\n  280,\n  3,\n  282,\n  3,\n  2049,\n  2,\n  2053,\n  2,\n  2057,\n  2,\n  2061,\n  2,\n  2081,\n  2,\n  2085,\n  2,\n  2089,\n  2,\n  2093,\n  2,\n  2304,\n  9,\n  2305,\n  9,\n  2312,\n  9,\n  2313,\n  9,\n  16390,\n  1,\n  16391,\n  1,\n  16406,\n  1,\n  16407,\n  1,\n  16422,\n  1,\n  16423,\n  1,\n  16438,\n  1,\n  16439,\n  1,\n  16642,\n  8,\n  16646,\n  8,\n  16658,\n  8,\n  16662,\n  8,\n  18437,\n  6,\n  18439,\n  6,\n  18469,\n  6,\n  18471,\n  6,\n  18688,\n  9,\n  18689,\n  9,\n  18690,\n  8,\n  18693,\n  6,\n  18694,\n  8,\n  18695,\n  6,\n  18696,\n  9,\n  18697,\n  9,\n  18706,\n  8,\n  18710,\n  8,\n  18725,\n  6,\n  18727,\n  6,\n  131128,\n  0,\n  131129,\n  0,\n  131130,\n  0,\n  131131,\n  0,\n  131132,\n  0,\n  131133,\n  0,\n  131134,\n  0,\n  131135,\n  0,\n  131352,\n  7,\n  131354,\n  7,\n  131384,\n  7,\n  131386,\n  7,\n  133161,\n  5,\n  133165,\n  5,\n  133177,\n  5,\n  133181,\n  5,\n  133376,\n  9,\n  133377,\n  9,\n  133384,\n  9,\n  133385,\n  9,\n  133400,\n  7,\n  133402,\n  7,\n  133417,\n  5,\n  133421,\n  5,\n  133432,\n  7,\n  133433,\n  5,\n  133434,\n  7,\n  133437,\n  5,\n  147510,\n  4,\n  147511,\n  4,\n  147518,\n  4,\n  147519,\n  4,\n  147714,\n  8,\n  147718,\n  8,\n  147730,\n  8,\n  147734,\n  8,\n  147736,\n  7,\n  147738,\n  7,\n  147766,\n  4,\n  147767,\n  4,\n  147768,\n  7,\n  147770,\n  7,\n  147774,\n  4,\n  147775,\n  4,\n  149509,\n  6,\n  149511,\n  6,\n  149541,\n  6,\n  149543,\n  6,\n  149545,\n  5,\n  149549,\n  5,\n  149558,\n  4,\n  149559,\n  4,\n  149561,\n  5,\n  149565,\n  5,\n  149566,\n  4,\n  149567,\n  4,\n  149760,\n  9,\n  149761,\n  9,\n  149762,\n  8,\n  149765,\n  6,\n  149766,\n  8,\n  149767,\n  6,\n  149768,\n  9,\n  149769,\n  9,\n  149778,\n  8,\n  149782,\n  8,\n  149784,\n  7,\n  149786,\n  7,\n  149797,\n  6,\n  149799,\n  6,\n  149801,\n  5,\n  149805,\n  5,\n  149814,\n  4,\n  149815,\n  4,\n  149816,\n  7,\n  149817,\n  5,\n  149818,\n  7,\n  149821,\n  5,\n  149822,\n  4,\n  149823,\n  4,\n  149824,\n  37,\n  149825,\n  37,\n  149826,\n  36,\n  149829,\n  34,\n  149830,\n  36,\n  149831,\n  34,\n  149832,\n  37,\n  149833,\n  37,\n  149842,\n  36,\n  149846,\n  36,\n  149848,\n  35,\n  149850,\n  35,\n  149861,\n  34,\n  149863,\n  34,\n  149865,\n  33,\n  149869,\n  33,\n  149878,\n  32,\n  149879,\n  32,\n  149880,\n  35,\n  149881,\n  33,\n  149882,\n  35,\n  149885,\n  33,\n  149886,\n  32,\n  149887,\n  32,\n  150080,\n  49,\n  150082,\n  48,\n  150088,\n  49,\n  150098,\n  48,\n  150104,\n  47,\n  150106,\n  47,\n  151873,\n  46,\n  151877,\n  45,\n  151881,\n  46,\n  151909,\n  45,\n  151913,\n  44,\n  151917,\n  44,\n  152128,\n  49,\n  152129,\n  46,\n  152136,\n  49,\n  152137,\n  46,\n  166214,\n  43,\n  166215,\n  42,\n  166230,\n  43,\n  166247,\n  42,\n  166262,\n  41,\n  166263,\n  41,\n  166466,\n  48,\n  166470,\n  43,\n  166482,\n  48,\n  166486,\n  43,\n  168261,\n  45,\n  168263,\n  42,\n  168293,\n  45,\n  168295,\n  42,\n  168512,\n  31,\n  168513,\n  28,\n  168514,\n  31,\n  168517,\n  28,\n  168518,\n  25,\n  168519,\n  25,\n  280952,\n  40,\n  280953,\n  39,\n  280954,\n  40,\n  280957,\n  39,\n  280958,\n  38,\n  280959,\n  38,\n  281176,\n  47,\n  281178,\n  47,\n  281208,\n  40,\n  281210,\n  40,\n  282985,\n  44,\n  282989,\n  44,\n  283001,\n  39,\n  283005,\n  39,\n  283208,\n  30,\n  283209,\n  27,\n  283224,\n  30,\n  283241,\n  27,\n  283256,\n  22,\n  283257,\n  22,\n  297334,\n  41,\n  297335,\n  41,\n  297342,\n  38,\n  297343,\n  38,\n  297554,\n  29,\n  297558,\n  24,\n  297562,\n  29,\n  297590,\n  24,\n  297594,\n  21,\n  297598,\n  21,\n  299365,\n  26,\n  299367,\n  23,\n  299373,\n  26,\n  299383,\n  23,\n  299389,\n  20,\n  299391,\n  20,\n  299584,\n  31,\n  299585,\n  28,\n  299586,\n  31,\n  299589,\n  28,\n  299590,\n  25,\n  299591,\n  25,\n  299592,\n  30,\n  299593,\n  27,\n  299602,\n  29,\n  299606,\n  24,\n  299608,\n  30,\n  299610,\n  29,\n  299621,\n  26,\n  299623,\n  23,\n  299625,\n  27,\n  299629,\n  26,\n  299638,\n  24,\n  299639,\n  23,\n  299640,\n  22,\n  299641,\n  22,\n  299642,\n  21,\n  299645,\n  20,\n  299646,\n  21,\n  299647,\n  20,\n  299648,\n  61,\n  299649,\n  60,\n  299650,\n  61,\n  299653,\n  60,\n  299654,\n  59,\n  299655,\n  59,\n  299656,\n  58,\n  299657,\n  57,\n  299666,\n  55,\n  299670,\n  54,\n  299672,\n  58,\n  299674,\n  55,\n  299685,\n  52,\n  299687,\n  51,\n  299689,\n  57,\n  299693,\n  52,\n  299702,\n  54,\n  299703,\n  51,\n  299704,\n  56,\n  299705,\n  56,\n  299706,\n  53,\n  299709,\n  50,\n  299710,\n  53,\n  299711,\n  50,\n  299904,\n  61,\n  299906,\n  61,\n  299912,\n  58,\n  299922,\n  55,\n  299928,\n  58,\n  299930,\n  55,\n  301697,\n  60,\n  301701,\n  60,\n  301705,\n  57,\n  301733,\n  52,\n  301737,\n  57,\n  301741,\n  52,\n  301952,\n  79,\n  301953,\n  79,\n  301960,\n  76,\n  301961,\n  76,\n  316038,\n  59,\n  316039,\n  59,\n  316054,\n  54,\n  316071,\n  51,\n  316086,\n  54,\n  316087,\n  51,\n  316290,\n  78,\n  316294,\n  78,\n  316306,\n  73,\n  316310,\n  73,\n  318085,\n  77,\n  318087,\n  77,\n  318117,\n  70,\n  318119,\n  70,\n  318336,\n  79,\n  318337,\n  79,\n  318338,\n  78,\n  318341,\n  77,\n  318342,\n  78,\n  318343,\n  77,\n  430776,\n  56,\n  430777,\n  56,\n  430778,\n  53,\n  430781,\n  50,\n  430782,\n  53,\n  430783,\n  50,\n  431000,\n  75,\n  431002,\n  72,\n  431032,\n  75,\n  431034,\n  72,\n  432809,\n  74,\n  432813,\n  69,\n  432825,\n  74,\n  432829,\n  69,\n  433032,\n  76,\n  433033,\n  76,\n  433048,\n  75,\n  433065,\n  74,\n  433080,\n  75,\n  433081,\n  74,\n  447158,\n  71,\n  447159,\n  68,\n  447166,\n  71,\n  447167,\n  68,\n  447378,\n  73,\n  447382,\n  73,\n  447386,\n  72,\n  447414,\n  71,\n  447418,\n  72,\n  447422,\n  71,\n  449189,\n  70,\n  449191,\n  70,\n  449197,\n  69,\n  449207,\n  68,\n  449213,\n  69,\n  449215,\n  68,\n  449408,\n  67,\n  449409,\n  67,\n  449410,\n  66,\n  449413,\n  64,\n  449414,\n  66,\n  449415,\n  64,\n  449416,\n  67,\n  449417,\n  67,\n  449426,\n  66,\n  449430,\n  66,\n  449432,\n  65,\n  449434,\n  65,\n  449445,\n  64,\n  449447,\n  64,\n  449449,\n  63,\n  449453,\n  63,\n  449462,\n  62,\n  449463,\n  62,\n  449464,\n  65,\n  449465,\n  63,\n  449466,\n  65,\n  449469,\n  63,\n  449470,\n  62,\n  449471,\n  62,\n  449472,\n  19,\n  449473,\n  19,\n  449474,\n  18,\n  449477,\n  16,\n  449478,\n  18,\n  449479,\n  16,\n  449480,\n  19,\n  449481,\n  19,\n  449490,\n  18,\n  449494,\n  18,\n  449496,\n  17,\n  449498,\n  17,\n  449509,\n  16,\n  449511,\n  16,\n  449513,\n  15,\n  449517,\n  15,\n  449526,\n  14,\n  449527,\n  14,\n  449528,\n  17,\n  449529,\n  15,\n  449530,\n  17,\n  449533,\n  15,\n  449534,\n  14,\n  449535,\n  14,\n  449728,\n  19,\n  449729,\n  19,\n  449730,\n  18,\n  449734,\n  18,\n  449736,\n  19,\n  449737,\n  19,\n  449746,\n  18,\n  449750,\n  18,\n  449752,\n  17,\n  449754,\n  17,\n  449784,\n  17,\n  449786,\n  17,\n  451520,\n  19,\n  451521,\n  19,\n  451525,\n  16,\n  451527,\n  16,\n  451528,\n  19,\n  451529,\n  19,\n  451557,\n  16,\n  451559,\n  16,\n  451561,\n  15,\n  451565,\n  15,\n  451577,\n  15,\n  451581,\n  15,\n  451776,\n  19,\n  451777,\n  19,\n  451784,\n  19,\n  451785,\n  19,\n  465858,\n  18,\n  465861,\n  16,\n  465862,\n  18,\n  465863,\n  16,\n  465874,\n  18,\n  465878,\n  18,\n  465893,\n  16,\n  465895,\n  16,\n  465910,\n  14,\n  465911,\n  14,\n  465918,\n  14,\n  465919,\n  14,\n  466114,\n  18,\n  466118,\n  18,\n  466130,\n  18,\n  466134,\n  18,\n  467909,\n  16,\n  467911,\n  16,\n  467941,\n  16,\n  467943,\n  16,\n  468160,\n  13,\n  468161,\n  13,\n  468162,\n  13,\n  468163,\n  13,\n  468164,\n  13,\n  468165,\n  13,\n  468166,\n  13,\n  468167,\n  13,\n  580568,\n  17,\n  580570,\n  17,\n  580585,\n  15,\n  580589,\n  15,\n  580598,\n  14,\n  580599,\n  14,\n  580600,\n  17,\n  580601,\n  15,\n  580602,\n  17,\n  580605,\n  15,\n  580606,\n  14,\n  580607,\n  14,\n  580824,\n  17,\n  580826,\n  17,\n  580856,\n  17,\n  580858,\n  17,\n  582633,\n  15,\n  582637,\n  15,\n  582649,\n  15,\n  582653,\n  15,\n  582856,\n  12,\n  582857,\n  12,\n  582872,\n  12,\n  582873,\n  12,\n  582888,\n  12,\n  582889,\n  12,\n  582904,\n  12,\n  582905,\n  12,\n  596982,\n  14,\n  596983,\n  14,\n  596990,\n  14,\n  596991,\n  14,\n  597202,\n  11,\n  597206,\n  11,\n  597210,\n  11,\n  597214,\n  11,\n  597234,\n  11,\n  597238,\n  11,\n  597242,\n  11,\n  597246,\n  11,\n  599013,\n  10,\n  599015,\n  10,\n  599021,\n  10,\n  599023,\n  10,\n  599029,\n  10,\n  599031,\n  10,\n  599037,\n  10,\n  599039,\n  10,\n  599232,\n  13,\n  599233,\n  13,\n  599234,\n  13,\n  599235,\n  13,\n  599236,\n  13,\n  599237,\n  13,\n  599238,\n  13,\n  599239,\n  13,\n  599240,\n  12,\n  599241,\n  12,\n  599250,\n  11,\n  599254,\n  11,\n  599256,\n  12,\n  599257,\n  12,\n  599258,\n  11,\n  599262,\n  11,\n  599269,\n  10,\n  599271,\n  10,\n  599272,\n  12,\n  599273,\n  12,\n  599277,\n  10,\n  599279,\n  10,\n  599282,\n  11,\n  599285,\n  10,\n  599286,\n  11,\n  599287,\n  10,\n  599288,\n  12,\n  599289,\n  12,\n  599290,\n  11,\n  599293,\n  10,\n  599294,\n  11,\n  599295,\n  10\n];\n\nexport const p2D = [\n  0,\n  0,\n  1,\n  -1,\n  0,\n  0,\n  -1,\n  1,\n  0,\n  2,\n  1,\n  1,\n  1,\n  2,\n  2,\n  0,\n  1,\n  2,\n  0,\n  2,\n  1,\n  0,\n  0,\n  0\n];\n\nexport const p3D = [\n  0,\n  0,\n  1,\n  -1,\n  0,\n  0,\n  1,\n  0,\n  -1,\n  0,\n  0,\n  -1,\n  1,\n  0,\n  0,\n  0,\n  1,\n  -1,\n  0,\n  0,\n  -1,\n  0,\n  1,\n  0,\n  0,\n  -1,\n  1,\n  0,\n  2,\n  1,\n  1,\n  0,\n  1,\n  1,\n  1,\n  -1,\n  0,\n  2,\n  1,\n  0,\n  1,\n  1,\n  1,\n  -1,\n  1,\n  0,\n  2,\n  0,\n  1,\n  1,\n  1,\n  -1,\n  1,\n  1,\n  1,\n  3,\n  2,\n  1,\n  0,\n  3,\n  1,\n  2,\n  0,\n  1,\n  3,\n  2,\n  0,\n  1,\n  3,\n  1,\n  0,\n  2,\n  1,\n  3,\n  0,\n  2,\n  1,\n  3,\n  0,\n  1,\n  2,\n  1,\n  1,\n  1,\n  0,\n  0,\n  2,\n  2,\n  0,\n  0,\n  1,\n  1,\n  0,\n  1,\n  0,\n  2,\n  0,\n  2,\n  0,\n  1,\n  1,\n  0,\n  0,\n  1,\n  2,\n  0,\n  0,\n  2,\n  2,\n  0,\n  0,\n  0,\n  0,\n  1,\n  1,\n  -1,\n  1,\n  2,\n  0,\n  0,\n  0,\n  0,\n  1,\n  -1,\n  1,\n  1,\n  2,\n  0,\n  0,\n  0,\n  0,\n  1,\n  1,\n  1,\n  -1,\n  2,\n  3,\n  1,\n  1,\n  1,\n  2,\n  0,\n  0,\n  2,\n  2,\n  3,\n  1,\n  1,\n  1,\n  2,\n  2,\n  0,\n  0,\n  2,\n  3,\n  1,\n  1,\n  1,\n  2,\n  0,\n  2,\n  0,\n  2,\n  1,\n  1,\n  -1,\n  1,\n  2,\n  0,\n  0,\n  2,\n  2,\n  1,\n  1,\n  -1,\n  1,\n  2,\n  2,\n  0,\n  0,\n  2,\n  1,\n  -1,\n  1,\n  1,\n  2,\n  0,\n  0,\n  2,\n  2,\n  1,\n  -1,\n  1,\n  1,\n  2,\n  0,\n  2,\n  0,\n  2,\n  1,\n  1,\n  1,\n  -1,\n  2,\n  2,\n  0,\n  0,\n  2,\n  1,\n  1,\n  1,\n  -1,\n  2,\n  0,\n  2,\n  0\n];\n\nexport const p4D = [\n  0,\n  0,\n  1,\n  -1,\n  0,\n  0,\n  0,\n  1,\n  0,\n  -1,\n  0,\n  0,\n  1,\n  0,\n  0,\n  -1,\n  0,\n  0,\n  -1,\n  1,\n  0,\n  0,\n  0,\n  0,\n  1,\n  -1,\n  0,\n  0,\n  0,\n  1,\n  0,\n  -1,\n  0,\n  0,\n  -1,\n  0,\n  1,\n  0,\n  0,\n  0,\n  -1,\n  1,\n  0,\n  0,\n  0,\n  0,\n  1,\n  -1,\n  0,\n  0,\n  -1,\n  0,\n  0,\n  1,\n  0,\n  0,\n  -1,\n  0,\n  1,\n  0,\n  0,\n  0,\n  -1,\n  1,\n  0,\n  2,\n  1,\n  1,\n  0,\n  0,\n  1,\n  1,\n  1,\n  -1,\n  0,\n  1,\n  1,\n  1,\n  0,\n  -1,\n  0,\n  2,\n  1,\n  0,\n  1,\n  0,\n  1,\n  1,\n  -1,\n  1,\n  0,\n  1,\n  1,\n  0,\n  1,\n  -1,\n  0,\n  2,\n  0,\n  1,\n  1,\n  0,\n  1,\n  -1,\n  1,\n  1,\n  0,\n  1,\n  0,\n  1,\n  1,\n  -1,\n  0,\n  2,\n  1,\n  0,\n  0,\n  1,\n  1,\n  1,\n  -1,\n  0,\n  1,\n  1,\n  1,\n  0,\n  -1,\n  1,\n  0,\n  2,\n  0,\n  1,\n  0,\n  1,\n  1,\n  -1,\n  1,\n  0,\n  1,\n  1,\n  0,\n  1,\n  -1,\n  1,\n  0,\n  2,\n  0,\n  0,\n  1,\n  1,\n  1,\n  -1,\n  0,\n  1,\n  1,\n  1,\n  0,\n  -1,\n  1,\n  1,\n  1,\n  4,\n  2,\n  1,\n  1,\n  0,\n  4,\n  1,\n  2,\n  1,\n  0,\n  4,\n  1,\n  1,\n  2,\n  0,\n  1,\n  4,\n  2,\n  1,\n  0,\n  1,\n  4,\n  1,\n  2,\n  0,\n  1,\n  4,\n  1,\n  1,\n  0,\n  2,\n  1,\n  4,\n  2,\n  0,\n  1,\n  1,\n  4,\n  1,\n  0,\n  2,\n  1,\n  4,\n  1,\n  0,\n  1,\n  2,\n  1,\n  4,\n  0,\n  2,\n  1,\n  1,\n  4,\n  0,\n  1,\n  2,\n  1,\n  4,\n  0,\n  1,\n  1,\n  2,\n  1,\n  2,\n  1,\n  1,\n  0,\n  0,\n  3,\n  2,\n  1,\n  0,\n  0,\n  3,\n  1,\n  2,\n  0,\n  0,\n  1,\n  2,\n  1,\n  0,\n  1,\n  0,\n  3,\n  2,\n  0,\n  1,\n  0,\n  3,\n  1,\n  0,\n  2,\n  0,\n  1,\n  2,\n  0,\n  1,\n  1,\n  0,\n  3,\n  0,\n  2,\n  1,\n  0,\n  3,\n  0,\n  1,\n  2,\n  0,\n  1,\n  2,\n  1,\n  0,\n  0,\n  1,\n  3,\n  2,\n  0,\n  0,\n  1,\n  3,\n  1,\n  0,\n  0,\n  2,\n  1,\n  2,\n  0,\n  1,\n  0,\n  1,\n  3,\n  0,\n  2,\n  0,\n  1,\n  3,\n  0,\n  1,\n  0,\n  2,\n  1,\n  2,\n  0,\n  0,\n  1,\n  1,\n  3,\n  0,\n  0,\n  2,\n  1,\n  3,\n  0,\n  0,\n  1,\n  2,\n  2,\n  3,\n  1,\n  1,\n  1,\n  0,\n  2,\n  1,\n  1,\n  1,\n  -1,\n  2,\n  2,\n  0,\n  0,\n  0,\n  2,\n  3,\n  1,\n  1,\n  0,\n  1,\n  2,\n  1,\n  1,\n  -1,\n  1,\n  2,\n  2,\n  0,\n  0,\n  0,\n  2,\n  3,\n  1,\n  0,\n  1,\n  1,\n  2,\n  1,\n  -1,\n  1,\n  1,\n  2,\n  2,\n  0,\n  0,\n  0,\n  2,\n  3,\n  1,\n  1,\n  1,\n  0,\n  2,\n  1,\n  1,\n  1,\n  -1,\n  2,\n  0,\n  2,\n  0,\n  0,\n  2,\n  3,\n  1,\n  1,\n  0,\n  1,\n  2,\n  1,\n  1,\n  -1,\n  1,\n  2,\n  0,\n  2,\n  0,\n  0,\n  2,\n  3,\n  0,\n  1,\n  1,\n  1,\n  2,\n  -1,\n  1,\n  1,\n  1,\n  2,\n  0,\n  2,\n  0,\n  0,\n  2,\n  3,\n  1,\n  1,\n  1,\n  0,\n  2,\n  1,\n  1,\n  1,\n  -1,\n  2,\n  0,\n  0,\n  2,\n  0,\n  2,\n  3,\n  1,\n  0,\n  1,\n  1,\n  2,\n  1,\n  -1,\n  1,\n  1,\n  2,\n  0,\n  0,\n  2,\n  0,\n  2,\n  3,\n  0,\n  1,\n  1,\n  1,\n  2,\n  -1,\n  1,\n  1,\n  1,\n  2,\n  0,\n  0,\n  2,\n  0,\n  2,\n  3,\n  1,\n  1,\n  0,\n  1,\n  2,\n  1,\n  1,\n  -1,\n  1,\n  2,\n  0,\n  0,\n  0,\n  2,\n  2,\n  3,\n  1,\n  0,\n  1,\n  1,\n  2,\n  1,\n  -1,\n  1,\n  1,\n  2,\n  0,\n  0,\n  0,\n  2,\n  2,\n  3,\n  0,\n  1,\n  1,\n  1,\n  2,\n  -1,\n  1,\n  1,\n  1,\n  2,\n  0,\n  0,\n  0,\n  2,\n  2,\n  1,\n  1,\n  1,\n  -1,\n  0,\n  1,\n  1,\n  1,\n  0,\n  -1,\n  0,\n  0,\n  0,\n  0,\n  0,\n  2,\n  1,\n  1,\n  -1,\n  1,\n  0,\n  1,\n  1,\n  0,\n  1,\n  -1,\n  0,\n  0,\n  0,\n  0,\n  0,\n  2,\n  1,\n  -1,\n  1,\n  1,\n  0,\n  1,\n  0,\n  1,\n  1,\n  -1,\n  0,\n  0,\n  0,\n  0,\n  0,\n  2,\n  1,\n  1,\n  -1,\n  0,\n  1,\n  1,\n  1,\n  0,\n  -1,\n  1,\n  0,\n  0,\n  0,\n  0,\n  0,\n  2,\n  1,\n  -1,\n  1,\n  0,\n  1,\n  1,\n  0,\n  1,\n  -1,\n  1,\n  0,\n  0,\n  0,\n  0,\n  0,\n  2,\n  1,\n  -1,\n  0,\n  1,\n  1,\n  1,\n  0,\n  -1,\n  1,\n  1,\n  0,\n  0,\n  0,\n  0,\n  0,\n  2,\n  1,\n  1,\n  1,\n  -1,\n  0,\n  1,\n  1,\n  1,\n  0,\n  -1,\n  2,\n  2,\n  0,\n  0,\n  0,\n  2,\n  1,\n  1,\n  -1,\n  1,\n  0,\n  1,\n  1,\n  0,\n  1,\n  -1,\n  2,\n  2,\n  0,\n  0,\n  0,\n  2,\n  1,\n  1,\n  -1,\n  0,\n  1,\n  1,\n  1,\n  0,\n  -1,\n  1,\n  2,\n  2,\n  0,\n  0,\n  0,\n  2,\n  1,\n  1,\n  1,\n  -1,\n  0,\n  1,\n  1,\n  1,\n  0,\n  -1,\n  2,\n  0,\n  2,\n  0,\n  0,\n  2,\n  1,\n  -1,\n  1,\n  1,\n  0,\n  1,\n  0,\n  1,\n  1,\n  -1,\n  2,\n  0,\n  2,\n  0,\n  0,\n  2,\n  1,\n  -1,\n  1,\n  0,\n  1,\n  1,\n  0,\n  1,\n  -1,\n  1,\n  2,\n  0,\n  2,\n  0,\n  0,\n  2,\n  1,\n  1,\n  -1,\n  1,\n  0,\n  1,\n  1,\n  0,\n  1,\n  -1,\n  2,\n  0,\n  0,\n  2,\n  0,\n  2,\n  1,\n  -1,\n  1,\n  1,\n  0,\n  1,\n  0,\n  1,\n  1,\n  -1,\n  2,\n  0,\n  0,\n  2,\n  0,\n  2,\n  1,\n  -1,\n  0,\n  1,\n  1,\n  1,\n  0,\n  -1,\n  1,\n  1,\n  2,\n  0,\n  0,\n  2,\n  0,\n  2,\n  1,\n  1,\n  -1,\n  0,\n  1,\n  1,\n  1,\n  0,\n  -1,\n  1,\n  2,\n  0,\n  0,\n  0,\n  2,\n  2,\n  1,\n  -1,\n  1,\n  0,\n  1,\n  1,\n  0,\n  1,\n  -1,\n  1,\n  2,\n  0,\n  0,\n  0,\n  2,\n  2,\n  1,\n  -1,\n  0,\n  1,\n  1,\n  1,\n  0,\n  -1,\n  1,\n  1,\n  2,\n  0,\n  0,\n  0,\n  2,\n  3,\n  1,\n  1,\n  0,\n  0,\n  0,\n  2,\n  2,\n  0,\n  0,\n  0,\n  2,\n  1,\n  1,\n  1,\n  -1,\n  3,\n  1,\n  0,\n  1,\n  0,\n  0,\n  2,\n  0,\n  2,\n  0,\n  0,\n  2,\n  1,\n  1,\n  1,\n  -1,\n  3,\n  1,\n  0,\n  0,\n  1,\n  0,\n  2,\n  0,\n  0,\n  2,\n  0,\n  2,\n  1,\n  1,\n  1,\n  -1,\n  3,\n  1,\n  1,\n  0,\n  0,\n  0,\n  2,\n  2,\n  0,\n  0,\n  0,\n  2,\n  1,\n  1,\n  -1,\n  1,\n  3,\n  1,\n  0,\n  1,\n  0,\n  0,\n  2,\n  0,\n  2,\n  0,\n  0,\n  2,\n  1,\n  1,\n  -1,\n  1,\n  3,\n  1,\n  0,\n  0,\n  0,\n  1,\n  2,\n  0,\n  0,\n  0,\n  2,\n  2,\n  1,\n  1,\n  -1,\n  1,\n  3,\n  1,\n  1,\n  0,\n  0,\n  0,\n  2,\n  2,\n  0,\n  0,\n  0,\n  2,\n  1,\n  -1,\n  1,\n  1,\n  3,\n  1,\n  0,\n  0,\n  1,\n  0,\n  2,\n  0,\n  0,\n  2,\n  0,\n  2,\n  1,\n  -1,\n  1,\n  1,\n  3,\n  1,\n  0,\n  0,\n  0,\n  1,\n  2,\n  0,\n  0,\n  0,\n  2,\n  2,\n  1,\n  -1,\n  1,\n  1,\n  3,\n  1,\n  0,\n  1,\n  0,\n  0,\n  2,\n  0,\n  2,\n  0,\n  0,\n  2,\n  -1,\n  1,\n  1,\n  1,\n  3,\n  1,\n  0,\n  0,\n  1,\n  0,\n  2,\n  0,\n  0,\n  2,\n  0,\n  2,\n  -1,\n  1,\n  1,\n  1,\n  3,\n  1,\n  0,\n  0,\n  0,\n  1,\n  2,\n  0,\n  0,\n  0,\n  2,\n  2,\n  -1,\n  1,\n  1,\n  1,\n  3,\n  3,\n  2,\n  1,\n  0,\n  0,\n  3,\n  1,\n  2,\n  0,\n  0,\n  4,\n  1,\n  1,\n  1,\n  1,\n  3,\n  3,\n  2,\n  0,\n  1,\n  0,\n  3,\n  1,\n  0,\n  2,\n  0,\n  4,\n  1,\n  1,\n  1,\n  1,\n  3,\n  3,\n  0,\n  2,\n  1,\n  0,\n  3,\n  0,\n  1,\n  2,\n  0,\n  4,\n  1,\n  1,\n  1,\n  1,\n  3,\n  3,\n  2,\n  0,\n  0,\n  1,\n  3,\n  1,\n  0,\n  0,\n  2,\n  4,\n  1,\n  1,\n  1,\n  1,\n  3,\n  3,\n  0,\n  2,\n  0,\n  1,\n  3,\n  0,\n  1,\n  0,\n  2,\n  4,\n  1,\n  1,\n  1,\n  1,\n  3,\n  3,\n  0,\n  0,\n  2,\n  1,\n  3,\n  0,\n  0,\n  1,\n  2,\n  4,\n  1,\n  1,\n  1,\n  1,\n  3,\n  3,\n  2,\n  1,\n  0,\n  0,\n  3,\n  1,\n  2,\n  0,\n  0,\n  2,\n  1,\n  1,\n  1,\n  -1,\n  3,\n  3,\n  2,\n  0,\n  1,\n  0,\n  3,\n  1,\n  0,\n  2,\n  0,\n  2,\n  1,\n  1,\n  1,\n  -1,\n  3,\n  3,\n  0,\n  2,\n  1,\n  0,\n  3,\n  0,\n  1,\n  2,\n  0,\n  2,\n  1,\n  1,\n  1,\n  -1,\n  3,\n  3,\n  2,\n  1,\n  0,\n  0,\n  3,\n  1,\n  2,\n  0,\n  0,\n  2,\n  1,\n  1,\n  -1,\n  1,\n  3,\n  3,\n  2,\n  0,\n  0,\n  1,\n  3,\n  1,\n  0,\n  0,\n  2,\n  2,\n  1,\n  1,\n  -1,\n  1,\n  3,\n  3,\n  0,\n  2,\n  0,\n  1,\n  3,\n  0,\n  1,\n  0,\n  2,\n  2,\n  1,\n  1,\n  -1,\n  1,\n  3,\n  3,\n  2,\n  0,\n  1,\n  0,\n  3,\n  1,\n  0,\n  2,\n  0,\n  2,\n  1,\n  -1,\n  1,\n  1,\n  3,\n  3,\n  2,\n  0,\n  0,\n  1,\n  3,\n  1,\n  0,\n  0,\n  2,\n  2,\n  1,\n  -1,\n  1,\n  1,\n  3,\n  3,\n  0,\n  0,\n  2,\n  1,\n  3,\n  0,\n  0,\n  1,\n  2,\n  2,\n  1,\n  -1,\n  1,\n  1,\n  3,\n  3,\n  0,\n  2,\n  1,\n  0,\n  3,\n  0,\n  1,\n  2,\n  0,\n  2,\n  -1,\n  1,\n  1,\n  1,\n  3,\n  3,\n  0,\n  2,\n  0,\n  1,\n  3,\n  0,\n  1,\n  0,\n  2,\n  2,\n  -1,\n  1,\n  1,\n  1,\n  3,\n  3,\n  0,\n  0,\n  2,\n  1,\n  3,\n  0,\n  0,\n  1,\n  2,\n  2,\n  -1,\n  1,\n  1,\n  1\n];","import {\n  base2D,\n  base3D,\n  base4D,\n  gradients2D,\n  gradients3D,\n  gradients4D,\n  lookupPairs2D,\n  lookupPairs3D,\n  lookupPairs4D,\n  p2D,\n  p3D,\n  p4D,\n  NORM_2D,\n  NORM_3D,\n  NORM_4D,\n  SQUISH_2D,\n  SQUISH_3D,\n  SQUISH_4D,\n  STRETCH_2D,\n  STRETCH_3D,\n  STRETCH_4D\n} from './constants';\n\nclass Contribution2 {\n  dx: number;\n  dy: number;\n  next?: Contribution2;\n  xsb: number;\n  ysb: number;\n\n  constructor(multiplier: number, xsb: number, ysb: number) {\n    this.dx = -xsb - multiplier * SQUISH_2D;\n    this.dy = -ysb - multiplier * SQUISH_2D;\n    this.xsb = xsb;\n    this.ysb = ysb;\n  }\n}\n\nclass Contribution3 {\n  dx: number;\n  dy: number;\n  dz: number;\n  next?: Contribution3;\n  xsb: number;\n  ysb: number;\n  zsb: number;\n\n  constructor(multiplier: number, xsb: number, ysb: number, zsb: number) {\n    this.dx = -xsb - multiplier * SQUISH_3D;\n    this.dy = -ysb - multiplier * SQUISH_3D;\n    this.dz = -zsb - multiplier * SQUISH_3D;\n    this.xsb = xsb;\n    this.ysb = ysb;\n    this.zsb = zsb;\n  }\n}\n\nclass Contribution4 {\n  dw: number;\n  dx: number;\n  dy: number;\n  dz: number;\n  next?: Contribution4;\n  wsb: number;\n  xsb: number;\n  ysb: number;\n  zsb: number;\n\n  constructor(\n    multiplier: number,\n    xsb: number,\n    ysb: number,\n    zsb: number,\n    wsb: number\n  ) {\n    this.dx = -xsb - multiplier * SQUISH_4D;\n    this.dy = -ysb - multiplier * SQUISH_4D;\n    this.dz = -zsb - multiplier * SQUISH_4D;\n    this.dw = -wsb - multiplier * SQUISH_4D;\n    this.xsb = xsb;\n    this.ysb = ysb;\n    this.zsb = zsb;\n    this.wsb = wsb;\n  }\n}\n\nfunction shuffleSeed(seed: Uint32Array): Uint32Array {\n  const newSeed = new Uint32Array(1);\n  newSeed[0] = seed[0] * 1664525 + 1013904223;\n  return newSeed;\n}\n\nexport default class OpenSimplexNoise {\n  private lookup2D?: Contribution2[];\n  private lookup3D?: Contribution3[];\n  private lookup4D?: Contribution4[];\n  private perm: Uint8Array;\n  private perm2D: Uint8Array;\n  private perm3D: Uint8Array;\n  private perm4D: Uint8Array;\n\n  constructor(clientSeed: number) {\n    this.initialize();\n    this.perm = new Uint8Array(256);\n    this.perm2D = new Uint8Array(256);\n    this.perm3D = new Uint8Array(256);\n    this.perm4D = new Uint8Array(256);\n    const source = new Uint8Array(256);\n    for (let i = 0; i < 256; i++) source[i] = i;\n    let seed = new Uint32Array(1);\n    seed[0] = clientSeed;\n    seed = shuffleSeed(shuffleSeed(shuffleSeed(seed)));\n    for (let i = 255; i >= 0; i--) {\n      seed = shuffleSeed(seed);\n      const r = new Uint32Array(1);\n      r[0] = (seed[0] + 31) % (i + 1);\n      if (r[0] < 0) r[0] += i + 1;\n      this.perm[i] = source[r[0]];\n      this.perm2D[i] = this.perm[i] & 0x0e;\n      this.perm3D[i] = (this.perm[i] % 24) * 3;\n      this.perm4D[i] = this.perm[i] & 0xfc;\n      source[r[0]] = source[i];\n    }\n  }\n\n  array2D(width: number, height: number): number[][] {\n    const output = new Array(width);\n    for (let x = 0; x < width; x++) {\n      output[x] = new Array(height);\n      for (let y = 0; y < height; y++) {\n        output[x][y] = this.noise2D(x, y);\n      }\n    }\n    return output;\n  }\n\n  array3D(width: number, height: number, depth: number): number[][][] {\n    const output = new Array(width);\n    for (let x = 0; x < width; x++) {\n      output[x] = new Array(height);\n      for (let y = 0; y < height; y++) {\n        output[x][y] = new Array(depth);\n        for (let z = 0; z < depth; z++) {\n          output[x][y][z] = this.noise3D(x, y, z);\n        }\n      }\n    }\n    return output;\n  }\n\n  array4D(\n    width: number,\n    height: number,\n    depth: number,\n    wLength: number\n  ): number[][][][] {\n    const output = new Array(width);\n    for (let x = 0; x < width; x++) {\n      output[x] = new Array(height);\n      for (let y = 0; y < height; y++) {\n        output[x][y] = new Array(depth);\n        for (let z = 0; z < depth; z++) {\n          output[x][y][z] = new Array(wLength);\n          for (let w = 0; w < wLength; w++) {\n            output[x][y][z][w] = this.noise4D(x, y, z, w);\n          }\n        }\n      }\n    }\n    return output;\n  }\n\n  private hashVals = new Uint32Array(4);\n  noise2D(x: number, y: number): number {\n    const stretchOffset = (x + y) * STRETCH_2D;\n    const xs = x + stretchOffset, ys = y + stretchOffset;\n    const xsb = Math.floor(xs), ysb = Math.floor(ys);\n    const squishOffset = (xsb + ysb) * SQUISH_2D;\n    const dx0 = x - (xsb + squishOffset), dy0 = y - (ysb + squishOffset);\n    const xins = xs - xsb, yins = ys - ysb;\n    const inSum = xins + yins;\n    const hashVals = this.hashVals;\n    hashVals[0] = xins - yins + 1;\n    hashVals[1] = inSum;\n    hashVals[2] = inSum + yins;\n    hashVals[3] = inSum + xins;\n    const hash =\n      hashVals[0] |\n      (hashVals[1] << 1) |\n      (hashVals[2] << 2) |\n      (hashVals[3] << 4);\n    let c = this.lookup2D![hash];\n    let value = 0.0;\n    while (typeof c !== 'undefined') {\n      const dx = dx0 + c.dx, dy = dy0 + c.dy;\n      let attn = 2 - dx * dx - dy * dy;\n      if (attn > 0) {\n        const px = xsb + c.xsb, py = ysb + c.ysb;\n        const i = this.perm2D[(this.perm[px & 0xff] + py) & 0xff];\n        const valuePart = gradients2D[i] * dx + gradients2D[i + 1] * dy;\n        attn *= attn;\n        value += attn * attn * valuePart;\n      }\n      c = c.next!;\n    }\n    return value * NORM_2D;\n  }\n\n  noise3D(x: number, y: number, z: number): number {\n    const stretchOffset = (x + y + z) * STRETCH_3D;\n    const [xs, ys, zs] = [\n      x + stretchOffset,\n      y + stretchOffset,\n      z + stretchOffset\n    ];\n    const [xsb, ysb, zsb] = [Math.floor(xs), Math.floor(ys), Math.floor(zs)];\n    const squishOffset = (xsb + ysb + zsb) * SQUISH_3D;\n    const [dx0, dy0, dz0] = [\n      x - (xsb + squishOffset),\n      y - (ysb + squishOffset),\n      z - (zsb + squishOffset)\n    ];\n    const [xins, yins, zins] = [xs - xsb, ys - ysb, zs - zsb];\n    const inSum = xins + yins + zins;\n    const hashVals = new Uint32Array(7);\n    hashVals[0] = yins - zins + 1;\n    hashVals[1] = xins - yins + 1;\n    hashVals[2] = xins - zins + 1;\n    hashVals[3] = inSum;\n    hashVals[4] = inSum + zins;\n    hashVals[5] = inSum + yins;\n    hashVals[6] = inSum + xins;\n    const hash =\n      hashVals[0] |\n      (hashVals[1] << 1) |\n      (hashVals[2] << 2) |\n      (hashVals[3] << 3) |\n      (hashVals[4] << 5) |\n      (hashVals[5] << 7) |\n      (hashVals[6] << 9);\n    let c = this.lookup3D![hash];\n    let value = 0.0;\n    while (typeof c !== 'undefined') {\n      const [dx, dy, dz] = [dx0 + c.dx, dy0 + c.dy, dz0 + c.dz];\n      let attn = 2 - dx * dx - dy * dy - dz * dz;\n      if (attn > 0) {\n        const [px, py, pz] = [xsb + c.xsb, ysb + c.ysb, zsb + c.zsb];\n        const i = this.perm3D[\n          (this.perm[(this.perm[px & 0xff] + py) & 0xff] + pz) & 0xff\n        ];\n        const valuePart =\n          gradients3D[i] * dx +\n          gradients3D[i + 1] * dy +\n          gradients3D[i + 2] * dz;\n        attn *= attn;\n        value += attn * attn * valuePart;\n      }\n      c = c.next!;\n    }\n    return value * NORM_3D;\n  }\n\n  noise4D(x: number, y: number, z: number, w: number): number {\n    const stretchOffset = (x + y + z + w) * STRETCH_4D;\n    const [xs, ys, zs, ws] = [\n      x + stretchOffset,\n      y + stretchOffset,\n      z + stretchOffset,\n      w + stretchOffset\n    ];\n    const [xsb, ysb, zsb, wsb] = [\n      Math.floor(xs),\n      Math.floor(ys),\n      Math.floor(zs),\n      Math.floor(ws)\n    ];\n    const squishOffset = (xsb + ysb + zsb + wsb) * SQUISH_4D;\n    const dx0 = x - (xsb + squishOffset);\n    const dy0 = y - (ysb + squishOffset);\n    const dz0 = z - (zsb + squishOffset);\n    const dw0 = w - (wsb + squishOffset);\n    const [xins, yins, zins, wins] = [xs - xsb, ys - ysb, zs - zsb, ws - wsb];\n    const inSum = xins + yins + zins + wins;\n    const hashVals = new Uint32Array(11);\n    hashVals[0] = zins - wins + 1;\n    hashVals[1] = yins - zins + 1;\n    hashVals[2] = yins - wins + 1;\n    hashVals[3] = xins - yins + 1;\n    hashVals[4] = xins - zins + 1;\n    hashVals[5] = xins - wins + 1;\n    hashVals[6] = inSum;\n    hashVals[7] = inSum + wins;\n    hashVals[8] = inSum + zins;\n    hashVals[9] = inSum + yins;\n    hashVals[10] = inSum + xins;\n    const hash =\n      hashVals[0] |\n      (hashVals[1] << 1) |\n      (hashVals[2] << 2) |\n      (hashVals[3] << 3) |\n      (hashVals[4] << 4) |\n      (hashVals[5] << 5) |\n      (hashVals[6] << 6) |\n      (hashVals[7] << 8) |\n      (hashVals[8] << 11) |\n      (hashVals[9] << 14) |\n      (hashVals[10] << 17);\n    let c = this.lookup4D![hash];\n    let value = 0.0;\n    while (typeof c !== 'undefined') {\n      const [dx, dy, dz, dw] = [dx0 + c.dx, dy0 + c.dy, dz0 + c.dz, dw0 + c.dw];\n      let attn = 2 - dx * dx - dy * dy - dz * dz - dw * dw;\n      if (attn > 0) {\n        const [px, py, pz, pw] = [\n          xsb + c.xsb,\n          ysb + c.ysb,\n          zsb + c.zsb,\n          wsb + c.wsb\n        ];\n        const i = this.perm4D[\n          (this.perm[\n            (this.perm[(this.perm[px & 0xff] + py) & 0xff] + pz) & 0xff\n          ] +\n            pw) &\n          0xff\n        ];\n        const valuePart =\n          gradients4D[i] * dx +\n          gradients4D[i + 1] * dy +\n          gradients4D[i + 2] * dz +\n          gradients4D[i + 3] * dw;\n        attn *= attn;\n        value += attn * attn * valuePart;\n      }\n      c = c.next!;\n    }\n    return value * NORM_4D;\n  }\n\n  private initialize() {\n    const contributions2D: Contribution2[] = [];\n    for (let i = 0; i < p2D.length; i += 4) {\n      const baseSet = base2D[p2D[i]];\n      let previous: Contribution2 | null = null;\n      let current: Contribution2 | null = null;\n      for (let k = 0; k < baseSet.length; k += 3) {\n        current = new Contribution2(baseSet[k], baseSet[k + 1], baseSet[k + 2]);\n        if (previous === null) contributions2D[i / 4] = current;\n        else previous.next = current;\n        previous = current;\n      }\n      current!.next = new Contribution2(p2D[i + 1], p2D[i + 2], p2D[i + 3]);\n    }\n    this.lookup2D = [];\n    for (let i = 0; i < lookupPairs2D.length; i += 2) {\n      this.lookup2D[lookupPairs2D[i]] = contributions2D[lookupPairs2D[i + 1]];\n    }\n\n    const contributions3D: Contribution3[] = [];\n    for (let i = 0; i < p3D.length; i += 9) {\n      const baseSet = base3D[p3D[i]];\n      let previous: Contribution3 | null = null;\n      let current: Contribution3 | null = null;\n      for (let k = 0; k < baseSet.length; k += 4) {\n        current = new Contribution3(\n          baseSet[k],\n          baseSet[k + 1],\n          baseSet[k + 2],\n          baseSet[k + 3]\n        );\n        if (previous === null) contributions3D[i / 9] = current;\n        else previous.next = current;\n        previous = current;\n      }\n      current!.next = new Contribution3(\n        p3D[i + 1],\n        p3D[i + 2],\n        p3D[i + 3],\n        p3D[i + 4]\n      );\n      current!.next!.next = new Contribution3(\n        p3D[i + 5],\n        p3D[i + 6],\n        p3D[i + 7],\n        p3D[i + 8]\n      );\n    }\n    this.lookup3D = [];\n    for (let i = 0; i < lookupPairs3D.length; i += 2) {\n      this.lookup3D[lookupPairs3D[i]] = contributions3D[lookupPairs3D[i + 1]];\n    }\n\n    const contributions4D: Contribution4[] = [];\n    for (let i = 0; i < p4D.length; i += 16) {\n      const baseSet = base4D[p4D[i]];\n      let previous: Contribution4 | null = null;\n      let current: Contribution4 | null = null;\n      for (let k = 0; k < baseSet.length; k += 5) {\n        current = new Contribution4(\n          baseSet[k],\n          baseSet[k + 1],\n          baseSet[k + 2],\n          baseSet[k + 3],\n          baseSet[k + 4]\n        );\n        if (previous === null) contributions4D[i / 16] = current;\n        else previous.next = current;\n        previous = current;\n      }\n      current!.next = new Contribution4(\n        p4D[i + 1],\n        p4D[i + 2],\n        p4D[i + 3],\n        p4D[i + 4],\n        p4D[i + 5]\n      );\n      current!.next!.next = new Contribution4(\n        p4D[i + 6],\n        p4D[i + 7],\n        p4D[i + 8],\n        p4D[i + 9],\n        p4D[i + 10]\n      );\n      current!.next!.next!.next = new Contribution4(\n        p4D[i + 11],\n        p4D[i + 12],\n        p4D[i + 13],\n        p4D[i + 14],\n        p4D[i + 15]\n      );\n    }\n    this.lookup4D = [];\n    for (let i = 0; i < lookupPairs4D.length; i += 2) {\n      this.lookup4D[lookupPairs4D[i]] = contributions4D[lookupPairs4D[i + 1]];\n    }\n  }\n}","import OpenSimplexNoise from 'common/noise/simplex';\nimport { RandomSeed } from 'random-seed';\n\nexport class Noise {\n  private readonly noise: OpenSimplexNoise;\n  constructor(\n    rand: RandomSeed,\n    private readonly freq = 1 / 256,\n    private readonly octaves = 4,\n    private readonly persistence = 0.5\n  ) {\n    this.noise = new OpenSimplexNoise(rand.random() * 0xffffffff);\n  }\n\n  public noise2D(x: number, y: number) {\n    let amp = 1, maxAmp = 0;\n    let freq = this.freq;\n    let noise = 0;\n    for (let i = 0; i < this.octaves; i++) {\n      noise += this.noise.noise2D(x * freq, y * freq) * amp;\n      maxAmp += amp;\n      amp *= this.persistence;\n      freq *= 2;\n    }\n    noise /= maxAmp;\n    return (noise + 1) / 2;\n  }\n}\n","module.exports = __webpack_public_path__ + \"assets/712119d6b5b8404ce47d2f501258b540.woff\";","module.exports = __webpack_public_path__ + \"assets/c47bbe6b531a3063257791bfa2de6ed8.otf\";","module.exports = __webpack_public_path__ + \"assets/6d6a985a020034d856ef3579d5612c00.otf\";","module.exports = __webpack_public_path__ + \"assets/3b0ea8776746732d38c9c352e0996a82.otf\";","import { Aspect, Effect, Material, TextureDef, Weapon } from 'common/data';\n\nexport interface Item {\n  readonly id: string;\n  readonly name: string;\n  readonly description?: string;\n  readonly type: Item.Type;\n  readonly texture: TextureDef;\n  readonly aspects?: Aspect[];\n  readonly effects?: Effect[];\n  readonly material?: Material;\n  readonly weapon?: Weapon;\n}\n\nexport interface ItemSlot {\n  item: Item | null;\n  accepts: Item.Type[] | string | null;\n}\n\nexport namespace Item {\n  export enum Type {\n    Material = 'material',\n    Consumable = 'consumable',\n    Weapon = 'weapon',\n    Chestplate = 'chestplate',\n    Leggings = 'leggings',\n    Boots = 'boots',\n  }\n}","import { Element, Recipe, Terrain, TileObject } from 'common/data';\n\nexport interface DataLibrary {\n  readonly terrains: Terrain[];\n  readonly objects: TileObject[];\n  readonly recipes: Recipe[];\n  readonly elements: Record<string, Element>;\n}\n\ntype Omit<T, K> = Pick<T, Exclude<keyof T, K>>;\n\nfunction populateNameId<T extends { id: number, name: string }>(items: Record<string, Omit<T, 'id' | 'name'>>): T[] {\n  const result: T[] = [];\n  const keys = Object.keys(items).sort();\n  let id = 1;\n\n  for (const name of keys) {\n    const itemId = id++;\n    result[itemId] = Object.assign({}, items[name], { id: itemId, name }) as T;\n  }\n  return result;\n}\n\nexport function loadDataLib(\n  terrains: Record<string, Omit<Terrain, 'id' | 'name'>>,\n  objects: Record<string, Omit<TileObject, 'id' | 'name'>>,\n  recipes: Recipe[],\n  elements: Record<string, Element>\n): DataLibrary {\n  return {\n    terrains: populateNameId(terrains),\n    objects: populateNameId(objects),\n    recipes,\n    elements\n  };\n}","import { fromByteArray, toByteArray } from 'base64-js';\n\nexport function toBase64(buf: ArrayBuffer) {\n  return fromByteArray(new Uint8Array(buf));\n}\n\nexport function fromBase64(data: string) {\n  return toByteArray(data).buffer;\n}\n","export interface Weapon {\n  readonly type: Weapon.Type;\n  readonly pierce?: boolean;\n  readonly strength: number;\n  readonly cooldown: number;\n  readonly knockback: number;\n  readonly range: number;\n  readonly color: string;\n}\n\nexport namespace Weapon {\n  export enum Type {\n    Sword = 'sword',\n    Spear = 'spear',\n    Bow = 'bow',\n    Arrow = 'arrow',\n    Fist = 'fist',\n\n    Bolt = 'bolt',\n    Orb = 'orb',\n    Invisible = 'invisible'\n  }\n}","import * as pako from 'pako';\n\nexport function compress(data: ArrayBuffer) {\n return pako.deflate(new Uint8Array(data)).buffer;\n}\n\nexport function decompress(data: ArrayBuffer) {\n return pako.inflate(new Uint8Array(data)).buffer;\n}\n","import { fromBase64, toBase64 } from 'common/base64';\nimport { DataLibrary } from 'common/data';\nimport { EntityProps, GameProps } from 'common/data/props';\nimport { SerializedMap } from 'common/map/SerializedMap';\nimport { compress, decompress } from 'common/zlib';\n\nexport class GameSave {\n  constructor(\n    public id: string,\n    public library: DataLibrary,\n    public map: SerializedMap,\n    public entities: EntityProps[],\n    public custom: any,\n    public readonly props: GameProps\n  ) {\n  }\n\n  public static load(data: any) {\n    const { id, library, map, entities, custom, props } = data;\n    return new GameSave(id, library, map, entities, custom || {}, props);\n  }\n\n  public save(): any {\n    return {\n      id: this.id,\n      library: this.library,\n      map: this.map,\n      entities: this.entities,\n      custom: this.custom,\n      props: this.props,\n    };\n  }\n\n  public static import(json: string): GameSave {\n    const data = JSON.parse(json);\n    data.map = {\n      ...data.map,\n      terrains: new Uint16Array(decompress(fromBase64(data.map.terrains))),\n      objects: new Uint16Array(decompress(fromBase64(data.map.objects)))\n    };\n    return GameSave.load(data);\n  }\n\n  public export(): string {\n    const data = this.save();\n    data.map = {\n      ...data.map,\n      terrains: toBase64(compress(data.map.terrains.buffer)),\n      objects: toBase64(compress(data.map.objects.buffer))\n    };\n    return JSON.stringify(data);\n  }\n}","import { vec2 } from 'gl-matrix';\n\nexport interface Biome {\n  index: number;\n  type: Biome.Type;\n  feature: Biome.Feature;\n\n  temperature: number;\n  humidity: number;\n\n  position: vec2;\n  min: vec2;\n  max: vec2;\n}\n\nexport namespace Biome {\n  export enum Type {\n    None,\n    FrozenBarren,\n    Barren,\n    Desert,\n    SnowPlain,\n    Savanna,\n    Plain,\n    Taiga,\n    Forest,\n    FrozenLake,\n    Lake,\n    Swamp,\n  }\n  export enum Feature {\n    None,\n    Spawn,\n    Pond,\n    LavaPond,\n    Floral,\n    Rocky,\n    Oasis,\n    Cemetery,\n    Ruins,\n  }\n}","import { DataLibrary, EnemyDef } from 'common/data';\nimport { EntityProps, GameProps } from 'common/data/props';\nimport { MapProps } from 'common/map/MapProps';\nimport { SerializedMap } from 'common/map/SerializedMap';\nimport { VoronoiDiagram } from 'd3-voronoi';\nimport { create as createRand, RandomSeed } from 'random-seed';\nimport { Biome } from 'worker/generation/data/Biome';\n\nexport interface RiverSegment {\n  from: [number, number];\n  to: [number, number];\n  level: number;\n}\n\nexport class GameData {\n  public readonly random: RandomSeed;\n  private readonly terrains: Uint16Array;\n  private readonly objects: Uint16Array;\n  private readonly tileBiomes: Uint16Array;\n  public voronoi!: VoronoiDiagram<[number, number]>;\n  public biomes: Biome[] = [];\n  public rivers: RiverSegment[] = [];\n\n\n  private readonly terrainLookup: Record<string, number>;\n  private readonly objectLookup: Record<string, number>;\n\n  public readonly map: MapProps = {} as MapProps;\n  public readonly game: GameProps = {} as GameProps;\n  public readonly entities: EntityProps[] = [];\n\n  constructor(\n    public readonly width: number, public readonly height: number,\n    public readonly seed: string, public readonly enemies: Record<string, EnemyDef>,\n    public readonly library: DataLibrary\n  ) {\n    this.terrains = new Uint16Array(width * height);\n    this.objects = new Uint16Array(width * height);\n    this.tileBiomes = new Uint16Array(width * height);\n    this.random = createRand(seed);\n\n    function makeLookup(items: ({ name: string, id: number } | null)[]): Record<string, number> {\n      return Object.assign({}, ...items\n        .filter(item => item)\n        .map(item => ({ [item!.name]: item!.id }))\n      );\n    }\n\n    this.game.nextEntityId = 2;\n\n    this.terrainLookup = makeLookup(library.terrains);\n    this.objectLookup = makeLookup(library.objects);\n  }\n\n  public finalizeMap(): SerializedMap {\n    return {\n      width: this.width, height: this.height,\n      props: this.map as MapProps,\n      terrains: this.terrains,\n      objects: this.objects\n    };\n  }\n\n  private toIndex(x: number, y: number): number {\n    x = Math.floor(x);\n    y = Math.floor(y);\n    return x >= 0 && x < this.width && y >= 0 && y < this.height ?\n      (x + this.width * y) : -1;\n  }\n\n  public getTerrain(x: number, y: number) {\n    const index = this.toIndex(x, y);\n    if (index < 0)\n      return 0;\n    else {\n      const data = this.library.terrains[this.terrains[index]];\n      return data && data.name;\n    }\n  }\n\n  public getObject(x: number, y: number) {\n    const index = this.toIndex(x, y);\n    if (index < 0)\n      return 0;\n    else {\n      const data = this.library.objects[this.objects[index]];\n      return data && data.name;\n    }\n  }\n\n  public getBiomeIndex(x: number, y: number) {\n    const index = this.toIndex(x, y);\n    if (index < 0)\n      return -1;\n    else\n      return this.tileBiomes[index];\n  }\n\n  public setTerrain(x: number, y: number, terrainName: string | null) {\n    const index = this.toIndex(x, y);\n    if (index < 0)\n      return;\n\n    this.terrains[index] = terrainName ? this.terrainLookup[terrainName] : 0;\n  }\n\n  public setObject(x: number, y: number, objectName: string | null) {\n    const index = this.toIndex(x, y);\n    if (index < 0)\n      return;\n\n    this.objects[index] = objectName ? this.objectLookup[objectName] : 0;\n  }\n\n  public setBiomeIndex(x: number, y: number, biomeIndex: number) {\n    const index = this.toIndex(x, y);\n    if (index < 0)\n      return;\n\n    this.tileBiomes[index] = biomeIndex;\n  }\n}","import { distance, lch } from 'chroma-js';\nimport { randomValue, RandomValue } from 'common/random';\nimport { Elements, ElementDef } from 'data/elements';\nimport { times } from 'lodash';\nimport { RandomSeed } from 'random-seed';\nimport { ProgressReporter } from 'worker/generation/ProgressReporter';\n\nexport function* withProgress<T>(list: T[], report: ProgressReporter) {\n  for (let i = 0; i < list.length; i++) {\n    yield list[i];\n    report(null, i / list.length);\n  }\n}\n\nexport function poissonDisk(width: number, height: number, radius: number, rand: RandomSeed) {\n  // http://www.cs.ubc.ca/~rbridson/docs/bridson-siggraph07-poissondisk.pdf\n\n  const cellSize = radius * Math.SQRT1_2;\n  const gridScale = (n: number) => n / cellSize;\n  const grid = new Uint32Array(Math.ceil(gridScale(width)) * Math.ceil(gridScale(height)));\n  const index = (x: number, y: number) => Math.floor(gridScale(x)) + Math.floor(gridScale(y)) * Math.ceil(gridScale(width));\n  const active: [number, number][] = [];\n  const samples: [number, number][] = [];\n  const k = 64;\n\n  const addSample = (x: number, y: number) => {\n    x = Math.floor(x);\n    y = Math.floor(y);\n    if (x < 0 || y < 0 || x >= width || y >= height) return false;\n    if (grid[index(x, y)]) return false;\n\n    for (let dy = -1; dy <= 1; dy++)\n      for (let dx = -1; dx <= 1; dx++) {\n        const i = grid[index(x + dx * cellSize, y + dy * cellSize)];\n        if (!i) continue;\n        const px = (samples[i - 1][0] - x), py = (samples[i - 1][1] - y);\n        if (px * px + py * py <= radius * radius) return false;\n      }\n    active.push([x, y]);\n    grid[index(x, y)] = samples.push([x, y]);\n    return true;\n  };\n  addSample(rand.range(width), rand.range(height));\n\n  while (active.length > 0) {\n    const i = rand.range(active.length);\n\n    let j;\n    for (j = 0; j < k; j++) {\n      const theta = rand.floatBetween(0, Math.PI * 2);\n      const r = rand.floatBetween(radius, radius * 2);\n      if (addSample(active[i][0] + Math.cos(theta) * r, active[i][1] + Math.sin(theta) * r))\n        break;\n    }\n    if (j === k)\n      active.splice(i, 1);\n  }\n\n  return samples;\n}\n\nexport function randomColors(\n  rand: RandomSeed, n: number,\n  chroma: RandomValue = { type: 'uniform', min: 0, max: 1 },\n  lightness: RandomValue = { type: 'uniform', min: 0, max: 1 }\n) {\n  function randomColor() {\n    const h = rand.random() * 360;\n    const l = randomValue(lightness, rand.random) * 100;\n    const c = randomValue(chroma, rand.random) * 100;\n    return lch(l, c, h);\n  }\n\n  const candidates = times(n * 100, randomColor);\n  const result = candidates.splice(rand.range(candidates.length), 1);\n  for (let i = 1; i < n; i++) {\n    let dist = 0;\n    let color = result[0];\n\n    for (const candidate of candidates) {\n      let min = 1000;\n      for (const color of result) {\n        const d: number = distance(color, candidate) as any;\n        min = Math.min(min, d);\n        if (min < dist)\n          break;\n      }\n      if (min > dist) {\n        dist = min;\n        color = candidate;\n      }\n    }\n    result.push(color);\n  }\n  return result.map(color => color.rgb()).map(([r, g, b]) => (r * 0x10000 + g * 0x100 + b * 0x1));\n}\n\nexport function randomElementPair(rand: RandomSeed, state: any[]): [string, string] {\n  let elem1: ElementDef, elem2: ElementDef;\n  do {\n    const elements = Elements.filter(elem => elem.tier <= 1);\n    elem1 = elements.splice(rand.range(elements.length), 1)[0];\n    elem2 = elements.splice(rand.range(elements.length), 1)[0];\n  } while (state.indexOf(`${elem1.name}:${elem2.name}`) >= 0);\n  state.push(`${elem1.name}:${elem2.name}`);\n  return [elem1.name, elem2.name];\n}\n\nexport function rasterizeLine(x0: number, y0: number, x1: number, y1: number, cb: (x: number, y: number) => void) {\n  x0 = Math.floor(x0); y0 = Math.floor(y0);\n  x1 = Math.floor(x1); y1 = Math.floor(y1);\n\n  const dx = Math.abs(x1 - x0), dy = Math.abs(y1 - y0);\n  const sx = Math.sign(x1 - x0), sy = Math.sign(y1 - y0);\n  let err = dx - dy;\n  cb(x0, y0);\n  while (x0 !== x1 || y0 !== y1) {\n    const e2 = 2 * err;\n    if (e2 > -dy) {\n      err -= dy;\n      x0 += sx;\n    } else {\n      err += dx;\n      y0 += sy;\n    }\n    cb(x0, y0);\n  }\n}\n","import { Noise } from 'common/noise';\nimport { voronoi } from 'd3-voronoi';\nimport { vec2 } from 'gl-matrix';\nimport { Biome, GameData, RiverSegment } from 'worker/generation/data';\nimport { poissonDisk } from 'worker/generation/utils';\nimport { ProgressReporter } from 'worker/generation/ProgressReporter';\n\nconst BiomeSize = 32;\nconst EdgeRoughness = 16;\nconst EdgeJitter = 8;\nconst WaterRarity = 16;\n\nfunction generateBiomePolygons(data: GameData) {\n  const biomeCenters = poissonDisk(data.width, data.height, BiomeSize, data.random);\n  const diagram = voronoi()(biomeCenters);\n\n  data.voronoi = diagram;\n  data.biomes = biomeCenters.map<Biome>(([x, y], i) => ({\n    index: i,\n    type: Biome.Type.None,\n    feature: Biome.Feature.None,\n    position: vec2.fromValues(x, y),\n    min: vec2.fromValues(data.width - 1, data.height - 1), max: vec2.fromValues(0, 0),\n    humidity: 0, temperature: 0\n  }));\n}\n\nfunction generateHumidity(data: GameData) {\n  const sources = poissonDisk(data.width, data.height, BiomeSize * WaterRarity, data.random)\n    .map(position => ({ position, level: data.random.floatBetween(0.5, 1) }));\n\n  type WaterPosition = { position: [number, number], level: number };\n  const waters: WaterPosition[] = [];\n  const rivers: RiverSegment[] = [];\n  const riverTheta = new Noise(data.random, 1 / 128, 1);\n  for (const { position, level } of sources) {\n    let l = level, p = position;\n    let theta = data.random.floatBetween(-Math.PI, Math.PI);\n    while (p[0] >= 0 && p[0] < data.width && p[1] >= 0 && p[1] < data.height && l > 0.25) {\n      waters.push({ position: p, level: l });\n      const r = data.random.floatBetween(BiomeSize, BiomeSize * 2);\n      const newP: [number, number] = [p[0] + Math.cos(theta) * r, p[1] + Math.sin(theta) * r];\n      theta += (riverTheta.noise2D(p[0], p[1]) * 2 - 1) * Math.PI / 4;\n\n      rivers.push({ from: p, to: newP, level: l });\n      l *= data.random.floatBetween(0.9, 1);\n      p = newP;\n    }\n  }\n  for (const biome of data.biomes) {\n    const norm = Math.sqrt(BiomeSize * WaterRarity * BiomeSize * WaterRarity * 2);\n    biome.humidity = 0;\n    for (const { position, level } of waters) {\n      const d = vec2.dist(position, biome.position);\n      const h = level * ((d === 0) ? 1 : Math.pow(1 - Math.min(1, d / norm), 2));\n      if (h > biome.humidity) biome.humidity = h;\n    }\n  }\n  data.rivers = rivers;\n}\n\nfunction generateTemperature(data: GameData) {\n  const temperatureNoise = new Noise(data.random, 0.002, 1);\n  for (const biome of data.biomes) {\n    const temp = temperatureNoise.noise2D(biome.position[0], biome.position[1]) * 2 - 1;\n    const t = Math.sign(temp) * Math.pow(Math.abs(temp), 1);\n    biome.temperature = (t + 1) / 2;\n  }\n}\n\nconst biomeProps: [Biome.Type, number, number, number][] = [\n  [Biome.Type.FrozenBarren, 0.15, 0.2, 1],\n  [Biome.Type.Barren, 0, 0.5, 1],\n  [Biome.Type.Desert, 0.15, 0.8, 1],\n\n  [Biome.Type.SnowPlain, 0.25, 0.25, 1],\n  [Biome.Type.Savanna, 0.25, 0.75, 1],\n\n  [Biome.Type.Plain, 0.5, 0.5, 1],\n\n  [Biome.Type.Taiga, 0.7, 0.25, 1],\n  [Biome.Type.Forest, 0.7, 0.75, 1],\n\n  [Biome.Type.FrozenLake, 0.8, 0.25, 1],\n  [Biome.Type.Lake, 1, 0.5, 1],\n  [Biome.Type.Swamp, 0.8, 0.75, 1],\n];\nfunction populateBiomeTypes(data: GameData) {\n  for (const biome of data.biomes) {\n    let min = Number.MAX_VALUE;\n    for (const [type, h, t, w] of biomeProps) {\n      const dh = biome.humidity - h, dt = biome.temperature - t;\n      const d = 1 / (w * w) * (dh * dh + dt * dt);\n      if (d < min) {\n        min = d;\n        biome.type = type;\n      }\n    }\n  }\n}\n\nfunction rasterizeBiomes(data: GameData, report: ProgressReporter) {\n  const noiseX = new Noise(data.random, 1 / 32, 4);\n  const noiseY = new Noise(data.random, 1 / 32, 4);\n\n  for (let y = 0; y < data.height; y++) {\n    for (let x = 0; x < data.width; x++) {\n      const roughnessX = noiseX.noise2D(x, y) * 2 - 1;\n      const roughnessY = noiseY.noise2D(x, y) * 2 - 1;\n      let px = x + roughnessX * EdgeRoughness;\n      let py = y + roughnessY * EdgeRoughness;\n      const realBiome = data.biomes[data.voronoi.find(px, py)!.index];\n      px += data.random.floatBetween(-EdgeJitter, EdgeJitter);\n      py += data.random.floatBetween(-EdgeJitter, EdgeJitter);\n      const renderBiome = data.biomes[data.voronoi.find(px, py)!.index];\n\n      let biome = renderBiome;\n      if (realBiome.type === Biome.Type.Lake || realBiome.type === Biome.Type.FrozenLake ||\n        renderBiome.type === Biome.Type.Lake || renderBiome.type === Biome.Type.FrozenLake)\n        biome = realBiome;\n\n      let terrain: string | null = null;\n      switch (biome.type) {\n        case Biome.Type.FrozenBarren: terrain = 'snow'; break;\n        case Biome.Type.Barren: terrain = data.random.range(50) ? 'soil' : 'grass-light'; break;\n        case Biome.Type.Desert: terrain = 'sand'; break;\n        case Biome.Type.SnowPlain: terrain = 'snow'; break;\n        case Biome.Type.Savanna: terrain = 'grass-light'; break;\n        case Biome.Type.Plain: terrain = 'grass'; break;\n        case Biome.Type.Taiga: terrain = 'snow'; break;\n        case Biome.Type.Forest: terrain = 'grass-deep'; break;\n        case Biome.Type.FrozenLake: terrain = 'ice'; break;\n        case Biome.Type.Lake: terrain = 'water'; break;\n        case Biome.Type.Swamp: terrain = data.random.range(5) ? 'mud' : 'grass-deep'; break;\n      }\n      data.setTerrain(x, y, terrain);\n      data.setBiomeIndex(x, y, realBiome.index);\n      realBiome.min[0] = Math.min(realBiome.min[0], x);\n      realBiome.min[1] = Math.min(realBiome.min[1], y);\n      realBiome.max[0] = Math.max(realBiome.max[0], x);\n      realBiome.max[1] = Math.max(realBiome.max[1], y);\n    }\n    report(null, y / data.height);\n  }\n}\n\nexport function generateBiomes(data: GameData, report: ProgressReporter) {\n  report('generating biomes...', 0);\n  generateBiomePolygons(data);\n  generateHumidity(data);\n  generateTemperature(data);\n  populateBiomeTypes(data);\n  rasterizeBiomes(data, report);\n}","import { Biome, GameData } from 'worker/generation/data';\nimport { ProgressReporter } from 'worker/generation/ProgressReporter';\n\nconst decorationProps: { [type: number]: [string, number][] } = {\n  [Biome.Type.FrozenBarren]: [\n    ['stone', 0.02],\n    ['rocks', 0.02],\n  ],\n  [Biome.Type.Barren]: [\n    ['stone', 0.02],\n    ['rocks', 0.02],\n  ],\n  [Biome.Type.Desert]: [\n    ['tree-coconut', 0.001],\n    ['stone', 0.01],\n    ['rocks', 0.01],\n    ['cactus', 0.01],\n  ],\n  [Biome.Type.SnowPlain]: [\n    ['berries', 0.002],\n    ['flower', 0.005],\n    ['tree-spruce', 0.005],\n    ['bush', 0.008],\n    ['rocks', 0.01],\n    ['fern', 0.05],\n  ],\n  [Biome.Type.Savanna]: [\n    ['rocks', 0.004],\n    ['berries', 0.004],\n    ['flower', 0.005],\n    ['tree-oak', 0.005],\n    ['bush', 0.006],\n    ['fern', 0.1],\n  ],\n  [Biome.Type.Plain]: [\n    ['bush', 0.004],\n    ['tree-oak', 0.005],\n    ['berries', 0.006],\n    ['rocks', 0.01],\n    ['flower', 0.02],\n    ['fern', 0.4],\n  ],\n  [Biome.Type.Taiga]: [\n    ['rocks', 0.001],\n    ['berries', 0.003],\n    ['flower', 0.005],\n    ['bush', 0.007],\n    ['fern', 0.05],\n    ['tree-spruce', 0.1],\n  ],\n  [Biome.Type.Forest]: [\n    ['rocks', 0.001],\n    ['bush', 0.004],\n    ['flower', 0.005],\n    ['berries', 0.006],\n    ['fern', 0.05],\n    ['tree-oak', 0.1],\n  ],\n  [Biome.Type.Swamp]: [\n    ['rocks', 0.001],\n    ['fern', 0.05],\n  ],\n};\n\nexport function decorateMap(data: GameData, report: ProgressReporter) {\n  report('decorating map...', 0);\n  const flowers = data.library.objects\n    .filter(obj => obj && /^flower-\\d+$/.test(obj.name))\n    .map(obj => obj.name);\n  const berries = data.library.objects\n    .filter(obj => obj && /^berrybush-\\d+$/.test(obj.name))\n    .map(obj => obj.name);\n\n  function decorateTile(x: number, y: number) {\n    if (data.getObject(x, y)) return;\n    const terrain = data.getTerrain(x, y);\n    if (terrain === 'water' || terrain === 'lava' || terrain === 'ice' || terrain === 'mud') return;\n\n    const biome = data.biomes[data.getBiomeIndex(x, y)];\n    const decorations = decorationProps[biome.type];\n    if (!decorations) return;\n    if (\n      biome.feature !== Biome.Feature.None &&\n      biome.feature !== Biome.Feature.Floral &&\n      biome.feature !== Biome.Feature.Rocky\n    )\n      return;\n\n    let r = data.random.random();\n    for (const [decor, prob] of decorations) {\n      r -= prob;\n      if (biome.feature === Biome.Feature.Floral && decor === 'flower')\n        r -= 0.1;\n      else if (biome.feature === Biome.Feature.Rocky && decor === 'rocks')\n        r -= 0.1;\n\n      if (r <= 0) {\n        if (decor === 'flower')\n          data.setObject(x, y, flowers[data.random.range(flowers.length)]);\n        else if (decor === 'berries')\n          data.setObject(x, y, berries[data.random.range(berries.length)]);\n        else\n          data.setObject(x, y, decor);\n        break;\n      }\n    }\n  }\n\n  for (let y = 0; y < data.height; y++) {\n    for (let x = 0; x < data.width; x++)\n      decorateTile(x, y);\n    report(null, y / data.height);\n  }\n}","import { EnemyDef } from 'common/data';\nimport { EntityProps } from 'common/data/props';\nimport { cloneDeep } from 'lodash';\n\nexport function makeEnemy(id: number, enemyDef: EnemyDef, position: [number, number]): EntityProps {\n  return cloneDeep({\n    id,\n    type: 'enemy',\n    age: 0,\n    traits: {\n      'spatial': {\n        pos: position\n      },\n      'enemy-data': {\n        def: enemyDef\n      },\n      'behavior': {\n        behaviors: enemyDef.behaviors\n      },\n      'stats': {\n        base: enemyDef.stats\n      }\n    }\n  });\n}","import { Noise } from 'common/noise';\nimport { makeEnemy } from 'data/enemy';\nimport { vec2 } from 'gl-matrix';\nimport { Biome, GameData } from 'worker/generation/data';\nimport { poissonDisk, rasterizeLine, withProgress } from 'worker/generation/utils';\nimport { ProgressReporter } from 'worker/generation/ProgressReporter';\n\nconst FeatureSize = 128;\nconst EdgeJitter = 4;\nconst BeachSize = 16;\nconst RiverSegments = 16;\nconst RiverRoughness = 24;\nconst SpawnMargins = 0.2;\nconst EggSparity = 128;\n\nconst featureProps: { [type: number]: Biome.Feature[] } = {\n  [Biome.Type.Barren]: [\n    Biome.Feature.LavaPond,\n    Biome.Feature.LavaPond,\n    Biome.Feature.Rocky,\n    Biome.Feature.Cemetery,\n    Biome.Feature.Cemetery,\n    Biome.Feature.Ruins,\n  ],\n  [Biome.Type.FrozenBarren]: [\n    Biome.Feature.Rocky,\n    Biome.Feature.Rocky,\n    Biome.Feature.Cemetery,\n    Biome.Feature.Cemetery,\n    Biome.Feature.Cemetery,\n    Biome.Feature.Ruins,\n  ],\n  [Biome.Type.Desert]: [\n    Biome.Feature.LavaPond,\n    Biome.Feature.LavaPond,\n    Biome.Feature.LavaPond,\n    Biome.Feature.Rocky,\n    Biome.Feature.Rocky,\n    Biome.Feature.Oasis,\n    Biome.Feature.Oasis,\n    Biome.Feature.Oasis,\n    Biome.Feature.Cemetery,\n  ],\n  [Biome.Type.SnowPlain]: [\n    Biome.Feature.Pond,\n    Biome.Feature.Floral,\n    Biome.Feature.Floral,\n    Biome.Feature.Rocky,\n    Biome.Feature.Cemetery,\n    Biome.Feature.Ruins,\n  ],\n  [Biome.Type.Savanna]: [\n    Biome.Feature.Pond,\n    Biome.Feature.Pond,\n    Biome.Feature.Floral,\n    Biome.Feature.Floral,\n    Biome.Feature.Rocky,\n    Biome.Feature.Ruins,\n  ],\n  [Biome.Type.Plain]: [\n    Biome.Feature.Pond,\n    Biome.Feature.Pond,\n    Biome.Feature.Pond,\n    Biome.Feature.Floral,\n    Biome.Feature.Floral,\n    Biome.Feature.Rocky,\n    Biome.Feature.Ruins,\n  ],\n  [Biome.Type.Taiga]: [\n    Biome.Feature.Pond,\n    Biome.Feature.Pond,\n    Biome.Feature.Pond,\n    Biome.Feature.Floral,\n    Biome.Feature.Floral,\n    Biome.Feature.Floral,\n    Biome.Feature.Ruins,\n  ],\n  [Biome.Type.Forest]: [\n    Biome.Feature.Pond,\n    Biome.Feature.Pond,\n    Biome.Feature.Pond,\n    Biome.Feature.Floral,\n    Biome.Feature.Floral,\n    Biome.Feature.Floral,\n    Biome.Feature.Ruins,\n  ],\n  [Biome.Type.Swamp]: [\n    Biome.Feature.Pond,\n    Biome.Feature.Rocky,\n    Biome.Feature.Rocky,\n    Biome.Feature.Cemetery,\n    Biome.Feature.Cemetery,\n  ],\n};\n\nfunction rasterizeBiome(data: GameData, biome: Biome,\n  cb: (x: number, y: number) => void,\n  offset?: (x: number, y: number) => [number, number]\n) {\n  for (let y = biome.min[1] - EdgeJitter; y <= biome.max[1] + EdgeJitter; y++)\n    for (let x = biome.min[0] - EdgeJitter; x <= biome.max[0] + EdgeJitter; x++) {\n      let px = x, py = y;\n      if (offset) {\n        const [dx, dy] = offset(x, y);\n        px += dx;\n        py += dy;\n      }\n      if (data.getBiomeIndex(px, py) === biome.index)\n        cb(x, y);\n    }\n}\n\nfunction generateBiomeFeatures(data: GameData, report: ProgressReporter) {\n  const featurePoints = poissonDisk(data.width, data.height, FeatureSize, data.random);\n  const noiseX = new Noise(data.random, 1 / 32, 4);\n  const noiseY = new Noise(data.random, 1 / 32, 4);\n\n  for (const [x, y] of withProgress(featurePoints, report)) {\n    const biome = data.biomes[data.getBiomeIndex(x, y)];\n    const features = featureProps[biome.type];\n    if (!features) continue;\n    const feature = features[data.random.range(10)];\n    if (!feature) continue;\n\n    switch (feature) {\n      case Biome.Feature.Pond:\n      case Biome.Feature.LavaPond: {\n        let terrain: string;\n        if (feature === Biome.Feature.LavaPond) terrain = 'lava';\n        else terrain = 'water';\n\n        if (terrain === 'water') {\n          rasterizeBiome(data, biome,\n            (x, y) => data.setTerrain(x, y, 'sand'),\n            (x, y) => [\n              (noiseX.noise2D(x, y) * 2 - 1) * BeachSize,\n              (noiseY.noise2D(x, y) * 2 - 1) * BeachSize\n            ]);\n        }\n        rasterizeBiome(data, biome, (x, y) => data.setTerrain(x, y, terrain));\n      } break;\n      case Biome.Feature.Oasis: {\n        rasterizeBiome(data, biome, (x, y) => data.setTerrain(x, y, 'water'));\n        rasterizeBiome(data, biome,\n          (x, y) => {\n            if (data.getTerrain(x, y) === 'sand' && data.random.range(5) === 0)\n              data.setObject(x, y, 'tree-coconut');\n          },\n          (x, y) => {\n            const d = vec2.sub(vec2.create(), [x, y], biome.position);\n            vec2.scale(d, vec2.normalize(d, d), EdgeJitter);\n            return [-d[0], -d[1]];\n          }\n        );\n      } break;\n      case Biome.Feature.Cemetery: {\n        rasterizeBiome(data, biome,\n          (x, y) => {\n            if (data.random.range(3) === 0) {\n              data.setTerrain(x, y, 'mud');\n              if (data.random.range(10) === 0) data.setObject(x, y, 'cross');\n              else if (data.random.range(10) === 0) data.setObject(x, y, 'bones');\n            }\n          }\n        );\n        data.entities.push(makeEnemy(data.game.nextEntityId++, data.enemies.spawner, [x, y]));\n        data.setObject(x, y, null);\n      } break;\n      case Biome.Feature.Ruins: {\n        rasterizeBiome(data, biome,\n          (x, y) => {\n            data.setTerrain(x, y, 'stone');\n            if (data.random.range(50) === 0)\n              data.setObject(x, y, 'pillar');\n            else if (data.random.range(50) === 0)\n              data.setObject(x, y, 'bones');\n          },\n          (x, y) => [\n            data.random.intBetween(-EdgeJitter, EdgeJitter),\n            data.random.intBetween(-EdgeJitter, EdgeJitter)\n          ]\n        );\n        data.entities.push(makeEnemy(data.game.nextEntityId++, data.enemies.spawner, [x, y]));\n        data.setObject(x, y, null);\n      } break;\n    }\n    biome.feature = feature;\n    if (feature === Biome.Feature.Floral || feature === Biome.Feature.Rocky) {\n      let neighbor: Biome;\n      if (neighbor = data.biomes[data.getBiomeIndex(x - FeatureSize, y)])\n        neighbor.feature = feature;\n      if (neighbor = data.biomes[data.getBiomeIndex(x + FeatureSize, y)])\n        neighbor.feature = feature;\n      if (neighbor = data.biomes[data.getBiomeIndex(x, y - FeatureSize)])\n        neighbor.feature = feature;\n      if (neighbor = data.biomes[data.getBiomeIndex(x, y + FeatureSize)])\n        neighbor.feature = feature;\n    }\n  }\n\n  const spawnMargins = [data.width * SpawnMargins, data.height * SpawnMargins];\n  let spawnBiome: Biome;\n  do {\n    spawnBiome = data.biomes[data.getBiomeIndex(\n      data.random.intBetween(spawnMargins[0], data.width - spawnMargins[0]),\n      data.random.intBetween(spawnMargins[1], data.width - spawnMargins[1])\n    )];\n  } while (\n    spawnBiome.feature !== Biome.Feature.None &&\n    spawnBiome.type !== Biome.Type.Lake &&\n    spawnBiome.type !== Biome.Type.FrozenLake);\n\n  spawnBiome.feature = Biome.Feature.Spawn;\n  data.map.spawn = [spawnBiome.position[0], spawnBiome.position[1]];\n}\n\nfunction rasterizeRivers(data: GameData, report: ProgressReporter) {\n  const noiseX = new Noise(data.random, 1 / 32, 4);\n  const noiseY = new Noise(data.random, 1 / 32, 4);\n\n  for (const { from, to, level } of withProgress(data.rivers, report)) {\n    function riverPoint(i: number) {\n      let x = from[0] + (to[0] - from[0]) * (i / RiverSegments);\n      let y = from[1] + (to[1] - from[1]) * (i / RiverSegments);\n      x += Math.floor((noiseX.noise2D(x, y) * 2 - 1) * RiverRoughness);\n      y += Math.floor((noiseY.noise2D(x, y) * 2 - 1) * RiverRoughness);\n      return [x, y];\n    }\n    function isFrozen(biome: Biome) {\n      if (!biome) return false;\n      switch (biome.type) {\n        case Biome.Type.FrozenLake:\n        case Biome.Type.FrozenBarren:\n        case Biome.Type.SnowPlain:\n        case Biome.Type.Taiga:\n          return true;\n      }\n      return false;\n    }\n    for (let i = 0; i < RiverSegments; i++) {\n      const from = riverPoint(i), to = riverPoint(i + 1);\n      const biomeA = data.biomes[data.getBiomeIndex(from[0], from[1])];\n      const biomeB = data.biomes[data.getBiomeIndex(to[0], to[1])];\n      const terrain = isFrozen(biomeA) && isFrozen(biomeB) ? 'ice' : 'water';\n      rasterizeLine(from[0], from[1], to[0], to[1], (x, y) => {\n        const size = Math.round(level * 4);\n        for (let dy = 0; dy < size; dy++)\n          for (let dx = 0; dx < size; dx++) {\n            if (data.getTerrain(x + dx, y + dy) !== 'water')\n              data.setTerrain(x + dx, y + dy, terrain);\n            data.setObject(x + dx, y + dy, null);\n          }\n      });\n    }\n  }\n}\n\nfunction generateEggs(data: GameData, report: ProgressReporter) {\n  const locations = poissonDisk(data.width, data.height, EggSparity, data.random);\n  const spawn = data.map.spawn;\n  for (const location of locations) {\n    const dx = location[0] - spawn[0], dy = location[1] - spawn[1];\n    // should not be too close to spawn\n    if (dx * dx + dy * dy < 64 * 64)\n      continue;\n    data.entities.push(makeEnemy(data.game.nextEntityId++, data.enemies.egg, location));\n    data.setObject(location[0], location[1], null);\n  }\n}\n\nexport function generateFeatures(data: GameData, report: ProgressReporter) {\n  report('generating features...', 0);\n  generateBiomeFeatures(data, report);\n  rasterizeRivers(data, report);\n  generateEggs(data, report);\n}","import { DropTable, Item } from 'common/data';\nimport { RandomTemplate } from 'common/random';\n\nexport function simpleDrops(min: number, max: number, rate: number, template: RandomTemplate<Item>): DropTable {\n  return {\n    numDrops: { type: 'exponential', min, max, rate },\n    items: [{ prob: 1, item: template }]\n  };\n}","import { Item, TileObject } from 'common/data';\nimport { makeEffect } from 'common/logic/effect/common';\nimport { simpleDrops } from 'data/drops';\nimport { EffectDef } from 'data/effects';\nimport { ElementDef } from 'data/elements';\n\nexport type ObjectDef = Pick<TileObject, Exclude<keyof TileObject, 'id' | 'name'>>;\n\nexport const makeObjects = (): Record<string, ObjectDef> => ({\n  // trees\n  'tree-coconut': {\n    texture: 'sprites/objects/tree-coco',\n    color: '4d6211',\n    scale: 3,\n    jitter: true,\n    collidable: true,\n    obstacle: true,\n    drops: {\n      hp: 5,\n      replaceWith: null,\n      table: simpleDrops(2, 4, 0.5, {\n        template: {\n          id: 'wood-palm',\n          name: 'Palm Wood',\n          type: Item.Type.Material,\n          texture: 'sprites/items/wood'\n        },\n        substs: []\n      })\n    }\n  },\n  'tree-oak': {\n    texture: 'sprites/objects/tree-oak',\n    color: '01ac1d',\n    scale: 3,\n    jitter: true,\n    collidable: true,\n    obstacle: true,\n    drops: {\n      hp: 5,\n      replaceWith: null,\n      table: simpleDrops(2, 4, 0.5, {\n        template: {\n          id: 'wood-oak',\n          name: 'Oak Wood',\n          type: Item.Type.Material,\n          texture: {\n            type: 'single',\n            tex: 'sprites/items/wood',\n            tint: 'a0a0a0'\n          }\n        },\n        substs: []\n      })\n    }\n  },\n  'tree-spruce': {\n    texture: 'sprites/objects/tree-spruce',\n    color: '004b01',\n    scale: 3,\n    jitter: true,\n    collidable: true,\n    obstacle: true,\n    drops: {\n      hp: 5,\n      replaceWith: null,\n      table: simpleDrops(2, 4, 0.5, {\n        template: {\n          id: 'wood-spruce',\n          name: 'Spruce Wood',\n          type: Item.Type.Material,\n          texture: {\n            type: 'single',\n            tex: 'sprites/items/wood',\n            tint: '808080'\n          }\n        },\n        substs: []\n      })\n    }\n  },\n\n  // structures\n  'bones': {\n    texture: 'sprites/objects/bones',\n    color: 'cccccc',\n    jitter: true,\n    terrain: true,\n    collidable: true,\n    obstacle: true,\n    drops: {\n      hp: 3,\n      replaceWith: null,\n      table: simpleDrops(2, 5, 0.7, {\n        template: {\n          id: 'bone',\n          name: 'Bone',\n          type: Item.Type.Material,\n          texture: { type: 'single', tex: 'sprites/items/bone', tint: 'ccb396' },\n          material: {\n            name: 'Bone',\n            color: 'ccb396',\n            weight: 0.1,\n            toughness: 0.1,\n            sharpness: 0.15,\n            affinity: 0.15,\n          },\n        },\n        substs: []\n      })\n    }\n  },\n  'cross': {\n    texture: 'sprites/objects/cross',\n    color: 'cccccc',\n    scale: 2,\n    jitter: true,\n    collidable: true,\n    obstacle: true,\n  },\n  'pillar': {\n    texture: {\n      type: 'random',\n      texs: ['sprites/objects/pillar-1', 'sprites/objects/pillar-2', 'sprites/objects/pillar-3']\n    },\n    color: '606060',\n    scale: 2,\n    collidable: true,\n    obstacle: true,\n  },\n\n  // vegetation & decorations\n  'fern': {\n    texture: {\n      type: 'random',\n      texs: ['sprites/objects/fern-1', 'sprites/objects/fern-2', 'sprites/objects/fern-3']\n    },\n    color: '416652',\n    jitter: true,\n    collidable: true,\n    drops: {\n      hp: 0,\n      replaceWith: null,\n      table: simpleDrops(0, 1, 4, {\n        template: {\n          id: 'leaf',\n          name: 'Leaf',\n          type: Item.Type.Consumable,\n          texture: 'sprites/items/leaf',\n          material: {\n            name: 'Leaf',\n            color: '00d000',\n            weight: 0.05,\n            toughness: 0.05,\n            sharpness: 0.05,\n            affinity: 0.1,\n          },\n          aspects: [\n            { element: ElementDef.Type.Life, amount: 50 }\n          ],\n          effects: [\n            makeEffect(EffectDef.Type.Heal, 5, 0)\n          ],\n        },\n        substs: []\n      })\n    }\n  },\n  'cactus': {\n    texture: 'sprites/objects/cactus',\n    color: '416652',\n    scale: 1.5,\n    jitter: true,\n    collidable: true,\n    obstacle: true,\n  },\n  'bush': {\n    texture: 'sprites/objects/bush',\n    color: '416652',\n    scale: 1.5,\n    jitter: true,\n    collidable: true,\n    obstacle: true,\n  },\n  'stone': {\n    texture: 'sprites/objects/stone',\n    color: '505050',\n    jitter: true,\n    collidable: true,\n    obstacle: true,\n    drops: {\n      hp: 8,\n      replaceWith: null,\n      table: simpleDrops(2, 5, 0.5, {\n        template: {\n          id: 'stone',\n          name: 'Stone',\n          type: Item.Type.Material,\n          texture: 'sprites/items/stone'\n        },\n        substs: []\n      })\n    }\n  },\n  'rocks': {\n    texture: {\n      type: 'random',\n      texs: ['sprites/objects/rocks-1', 'sprites/objects/rocks-2', 'sprites/objects/rocks-3']\n    },\n    color: '505050',\n    jitter: true,\n    terrain: true,\n    collidable: true,\n    drops: {\n      hp: 1,\n      replaceWith: null,\n      table: simpleDrops(1, 3, 1, {\n        template: {\n          id: 'stone',\n          name: 'Stone',\n          type: Item.Type.Material,\n          texture: 'sprites/items/stone'\n        },\n        substs: []\n      })\n    }\n  },\n});","import { Item, Recipe, TextureDef } from 'common/data';\n\nfunction recipe(input: { accepts: string, texture: TextureDef }[], output: Item): Recipe {\n  return { input, output };\n}\n\nexport const makeRecipes = (): Recipe[] => [\n  recipe([\n    { accepts: '^bone$', texture: { type: 'single', tex: 'sprites/items/bone', tint: 'ccb396' } },\n    { accepts: '^leaf$', texture: 'sprites/items/leaf' },\n  ], {\n      id: 'gel-bone',\n      name: 'Bone Gel',\n      description: 'alchemical reagent: boost elemental fusion',\n      type: Item.Type.Consumable,\n      texture: { type: 'single', tex: 'sprites/items/gel', tint: 'ccb396' }\n    }),\n  recipe([\n    { accepts: '^stone$', texture: 'sprites/items/stone' },\n    { accepts: '^leaf$', texture: 'sprites/items/leaf' },\n  ], {\n      id: 'gel-stone',\n      name: 'Stone Gel',\n      description: 'alchemical reagent: boost elemental fission',\n      type: Item.Type.Consumable,\n      texture: { type: 'single', tex: 'sprites/items/gel', tint: '808080' }\n    }),\n  recipe([\n    { accepts: '^solution$', texture: 'sprites/items/solution' },\n    { accepts: '^leaf$', texture: 'sprites/items/leaf' },\n    { accepts: '^stone$', texture: 'sprites/items/stone' },\n  ], {\n      id: 'gel-alchemy',\n      name: 'Alchemical Gel',\n      description: 'alchemical reagent: purify solution',\n      type: Item.Type.Consumable,\n      texture: { type: 'single', tex: 'sprites/items/gel', tint: 'e06060' }\n    }),\n  recipe([\n    { accepts: '^stone$', texture: 'sprites/items/stone' },\n  ], {\n      id: 'scale',\n      name: 'Stone Shard',\n      type: Item.Type.Material,\n      texture: { type: 'single', tex: 'sprites/items/scale', tint: '808080' },\n      material: {\n        name: 'Stone',\n        color: '808080',\n        weight: 0.1,\n        toughness: 0.1,\n        sharpness: 0.15,\n        affinity: 0.1,\n      },\n    }),\n  recipe([\n    { accepts: '^bone$', texture: { type: 'single', tex: 'sprites/items/bone', tint: 'ccb396' } },\n  ], {\n      id: 'scale',\n      name: 'Bone Shard',\n      type: Item.Type.Material,\n      texture: { type: 'single', tex: 'sprites/items/scale', tint: 'ccb396' },\n      material: {\n        name: 'Bone',\n        color: 'ccb396',\n        weight: 0.05,\n        toughness: 0.05,\n        sharpness: 0.2,\n        affinity: 0.15,\n      },\n    }),\n  recipe([\n    { accepts: '^wood-', texture: 'sprites/items/wood' },\n    { accepts: '^wood-', texture: 'sprites/items/wood' },\n  ], {\n      id: 'rod',\n      name: 'Wooden Rod',\n      type: Item.Type.Material,\n      texture: { type: 'single', tex: 'sprites/items/rod', tint: 'b3927b' },\n      material: {\n        name: 'Wood',\n        color: 'b3927b',\n        weight: 0.15,\n        toughness: 0.15,\n        sharpness: 0.05,\n        affinity: 0.25,\n      },\n    }),\n  recipe([\n    { accepts: '^stone$', texture: 'sprites/items/stone' },\n    { accepts: '^stone$', texture: 'sprites/items/stone' },\n  ], {\n      id: 'rod',\n      name: 'Stone Rod',\n      type: Item.Type.Material,\n      texture: { type: 'single', tex: 'sprites/items/rod', tint: '808080' },\n      material: {\n        name: 'Stone',\n        color: '808080',\n        weight: 0.25,\n        toughness: 0.2,\n        sharpness: 0.1,\n        affinity: 0.1,\n      },\n    }),\n  recipe([\n    { accepts: '^wood-', texture: 'sprites/items/wood' },\n    { accepts: '^wood-', texture: 'sprites/items/wood' },\n  ], {\n      id: 'skin',\n      name: 'Wood Plate',\n      type: Item.Type.Material,\n      texture: { type: 'single', tex: 'sprites/items/skin', tint: 'b3927b' },\n      material: {\n        name: 'Wood',\n        color: 'b3927b',\n        weight: 0.2,\n        toughness: 0.2,\n        sharpness: 0.05,\n        affinity: 0.25,\n      },\n    }),\n  recipe([\n    { accepts: '^leaf$', texture: 'sprites/items/leaf' },\n    { accepts: '^leaf$', texture: 'sprites/items/leaf' },\n  ], {\n      id: 'skin',\n      name: 'Leaf Pelt',\n      type: Item.Type.Material,\n      texture: { type: 'single', tex: 'sprites/items/skin', tint: '00d000' },\n      material: {\n        name: 'Leaf',\n        color: '00d000',\n        weight: 0.1,\n        toughness: 0.15,\n        sharpness: 0.05,\n        affinity: 0.15,\n      },\n    }),\n];","import { Item } from 'common/data';\nimport { makeEffect } from 'common/logic/effect/common';\nimport { simpleDrops } from 'data/drops';\nimport { EffectDef } from 'data/effects';\nimport { ObjectDef } from 'data/objects';\n\nexport const NumFlowerTypes = 4;\nexport function makeFlower(name: string, type: number, color: string, elements: [string, string]): ObjectDef {\n  return {\n    texture: {\n      type: 'composite',\n      overlay: { type: 'single', tex: `sprites/objects/flower-petal-${type}`, tint: color },\n      base: { type: 'single', tex: `sprites/objects/flower-stem-${type}` }\n    },\n    color,\n    jitter: true,\n    collidable: true,\n    drops: {\n      hp: 0,\n      replaceWith: null,\n      table: simpleDrops(1, 2, 1, {\n        template: {\n          id: `flower-${name.toLowerCase()}`,\n          name,\n          type: Item.Type.Consumable,\n          texture: {\n            type: 'composite',\n            overlay: { type: 'single', tex: `sprites/items/flower-petal-${type}`, tint: color },\n            base: { type: 'single', tex: `sprites/items/flower-stem-${type}` }\n          },\n          aspects: [\n            { element: elements[0], amount: 0 },\n            { element: elements[1], amount: 0 }\n          ],\n          effects: [\n            makeEffect(EffectDef.Type.Heal, 10, 0)\n          ]\n        },\n        substs: [\n          { path: 'aspects[0].amount', type: 'gaussian', mean: 15, sd: 2, min: 0, max: 20 },\n          { path: 'aspects[1].amount', type: 'gaussian', mean: 8, sd: 2, min: 0, max: 12 },\n        ]\n      })\n    }\n  };\n}\n\nexport function makeBush(): ObjectDef {\n  return {\n    texture: 'sprites/objects/bush',\n    color: '416652',\n    scale: 1.5,\n    jitter: true,\n    collidable: true,\n    obstacle: true,\n  };\n}\n\nexport const NumBerryTypes = 4;\nexport function makeBerryBush(name: string, depleted: string, type: number, color: string, elements: [string, string]): ObjectDef {\n  return {\n    texture: {\n      type: 'composite',\n      overlay: { type: 'single', tex: 'sprites/objects/berrybush-berries', tint: color },\n      base: { type: 'single', tex: 'sprites/objects/berrybush-bush' }\n    },\n    color: '416652',\n    scale: 1.5,\n    jitter: true,\n    collidable: true,\n    obstacle: true,\n    drops: {\n      hp: 1,\n      replaceWith: depleted,\n      table: simpleDrops(2, 4, 1, {\n        template: {\n          id: `berries-${name.toLowerCase()}`,\n          name: `${name} Berries`,\n          type: Item.Type.Consumable,\n          texture: { type: 'single', tex: `sprites/items/berries-${type}`, tint: color },\n          aspects: [\n            { element: elements[0], amount: 0 },\n            { element: elements[1], amount: 0 }\n          ],\n          effects: [\n            makeEffect(EffectDef.Type.Heal, 10, 0)\n          ]\n        },\n        substs: [\n          { path: 'aspects[0].amount', type: 'gaussian', mean: 20, sd: 2, min: 0, max: 25 },\n          { path: 'aspects[1].amount', type: 'gaussian', mean: 12, sd: 2, min: 0, max: 15 },\n        ]\n      })\n    }\n  };\n}\n","import { Terrain } from 'common/data';\n\nexport type TerrainDef = Pick<Terrain, Exclude<keyof Terrain, 'id' | 'name'>>;\n\nexport const makeTerrains = (): Record<string, TerrainDef> => ({\n  'water': {\n    texture: { type: 'liquid', tex: 'sprites/terrains/water', offset: 16, time: 5000 },\n    color: '235c7c',\n    liquid: true,\n    speed: -5,\n  },\n  'lava': {\n    texture: { type: 'liquid', tex: 'sprites/terrains/lava', offset: 16, time: 15000 },\n    color: '8b1408',\n    liquid: true,\n    speed: -20,\n    damage: 10,\n  },\n  'mud': {\n    texture: { type: 'liquid', tex: 'sprites/terrains/mud', offset: 8, time: 5000 },\n    color: '6d584b',\n    speed: -10,\n    liquid: true,\n  },\n\n  'grass': {\n    texture: {\n      type: 'random',\n      texs: ['sprites/terrains/grass-1', 'sprites/terrains/grass-2', 'sprites/terrains/grass-3'],\n      tint: '00ff00'\n    },\n    color: '51a01e',\n  },\n  'grass-deep': {\n    texture: {\n      type: 'random',\n      texs: ['sprites/terrains/grass-1', 'sprites/terrains/grass-2', 'sprites/terrains/grass-3'],\n      tint: '00cc00'\n    },\n    color: '316112',\n  },\n  'grass-light': {\n    texture: {\n      type: 'random',\n      texs: ['sprites/terrains/grass-1', 'sprites/terrains/grass-2', 'sprites/terrains/grass-3'],\n      tint: 'aaffaa'\n    },\n    color: '487f61',\n  },\n\n  'soil': {\n    texture: {\n      type: 'random',\n      texs: ['sprites/terrains/soil-1', 'sprites/terrains/soil-2', 'sprites/terrains/soil-3'],\n    },\n    color: '846b5c',\n  },\n  'stone': {\n    texture: {\n      type: 'random',\n      texs: ['sprites/terrains/stone-1', 'sprites/terrains/stone-2', 'sprites/terrains/stone-3'],\n      tint: '404040'\n    },\n    color: '514845',\n  },\n  'sand': {\n    texture: {\n      type: 'random',\n      texs: ['sprites/terrains/sand-1', 'sprites/terrains/sand-2', 'sprites/terrains/sand-3'],\n    },\n    color: 'e2bf90',\n  },\n  'ice': {\n    texture: 'sprites/terrains/ice',\n    color: 'aad0e7',\n  },\n  'snow': {\n    texture: 'sprites/terrains/snow',\n    color: 'e0e9ee',\n  },\n});","import { loadDataLib, Element } from 'common/data';\nimport { generateName } from 'common/markov';\nimport { Elements, ElementDef } from 'data/elements';\nimport { makeObjects } from 'data/objects';\nimport { makeRecipes } from 'data/recipes';\nimport { makeBerryBush, makeBush, makeFlower, NumBerryTypes, NumFlowerTypes } from 'data/template';\nimport { makeTerrains } from 'data/terrains';\nimport { fromPairs } from 'lodash';\nimport { create as createRand } from 'random-seed';\nimport { randomColors, randomElementPair } from 'worker/generation/utils';\nimport { ProgressReporter } from 'worker/generation/ProgressReporter';\n\nconst NumFlowers = 16 / NumFlowerTypes;\nconst NumBerries = 16 / NumBerryTypes;\n\nexport function generateLibrary(seed: string, report: ProgressReporter) {\n  const random = createRand(seed);\n  report('generating game data...', 0);\n\n  const terrains = makeTerrains();\n  const objects = makeObjects();\n  const recipes = makeRecipes();\n\n  const randomElementState: any[] = [];\n  const flowerColors = randomColors(random, NumFlowers * NumFlowerTypes,\n    { type: 'uniform', min: 0.5, max: 1 },\n    { type: 'uniform', min: 0.8, max: 1 }\n  );\n  for (let type = 1; type <= NumFlowerTypes; type++) {\n    for (let i = 0; i < NumFlowers; i++) {\n      objects[`flower-${type}${i}`] = makeFlower(\n        generateName(5, 10, random.random),\n        type, flowerColors.pop()!.toString(16),\n        randomElementPair(random, randomElementState)\n      );\n    }\n  }\n\n  const berryColors = randomColors(random, NumBerries * NumBerryTypes,\n    { type: 'uniform', min: 0.3, max: 1 },\n    { type: 'uniform', min: 0.7, max: 1 }\n  );\n  for (let type = 1; type <= NumBerryTypes; type++) {\n    for (let i = 0; i < NumBerries; i++) {\n      objects[`berrybush-${type}${i}-depleted`] = makeBush();\n      objects[`berrybush-${type}${i}`] = makeBerryBush(\n        generateName(5, 10, random.random),\n        `berrybush-${type}${i}-depleted`,\n        type, berryColors.pop()!.toString(16),\n        randomElementPair(random, randomElementState)\n      );\n    }\n  }\n\n  const elemColors = randomColors(random, Elements.length);\n  const elements: Record<ElementDef.Type, Element> = fromPairs(\n    Elements.map(({ tier, name }): [string, Element] => {\n      const fissionThreshold = random.random() * 6 + tier * 8;\n      const fissionRate = 0.1 + 0.1 * (tier + 1) * random.random();\n      const fusionThreshold = 10 + random.random() * 8 + tier * 10;\n      const fusionRate = 0.2 + 0.1 * (ElementDef.MaxTier - tier + 1) * (random.random() + 1);\n      const color = elemColors.pop()!.toString(16);\n\n      return [name, {\n        fissionThreshold: { type: 'gaussian', mean: fissionThreshold, sd: tier + 1, max: 8 * (tier + 1) },\n        fusionThreshold: { type: 'gaussian', mean: fusionThreshold, sd: 2 * (tier + 1), min: 10 * tier },\n        fissionRate: { type: 'gaussian', mean: fissionRate, sd: 0.05, min: 0, max: 0.8 },\n        fusionRate: { type: 'gaussian', mean: fusionRate, sd: 0.05, min: 0, max: 0.8 },\n        color\n      }];\n    }\n    )) as any;\n\n  return loadDataLib(terrains, objects, recipes, elements);\n}","import { EntityProps } from 'common/data/props';\n\nexport const InitialPlayer = (): EntityProps => ({\n  id: 1,\n  type: 'player',\n  age: 0,\n  traits: {\n    'spatial': {\n      pos: [0, 0]\n    }\n  }\n});","import { EnemyDef, GameSave } from 'common/data';\nimport { generateBiomes } from 'worker/generation/biomeGen';\nimport { GameData } from 'worker/generation/data';\nimport { decorateMap } from 'worker/generation/decoration';\nimport { generateFeatures } from 'worker/generation/featureGen';\nimport { generateLibrary } from 'worker/generation/libraryGen';\nimport { generateProps } from 'worker/generation/propsGen';\nimport { ProgressReporter } from 'worker/generation/ProgressReporter';\n\nexport function generate(\n  width: number, height: number, seed: string, enemies: Record<string, EnemyDef>,\n  report: ProgressReporter = () => { }\n) {\n  const library = generateLibrary(seed, report);\n\n  const data = new GameData(width, height, seed, enemies, library);\n  generateBiomes(data, report);\n  generateFeatures(data, report);\n  decorateMap(data, report);\n  generateProps(data, report);\n  report('done!', 1);\n  const mapData = data.finalizeMap();\n\n  return new GameSave('', library, mapData, data.entities, {}, data.game);\n}\n","import { InitialPlayer } from 'data/player';\nimport { GameData } from 'worker/generation/data';\nimport { ProgressReporter } from 'worker/generation/ProgressReporter';\n\nexport function generateProps(data: GameData, report: ProgressReporter) {\n  report('generating game data...', 0);\n  data.map.seed = data.seed;\n\n  const player = InitialPlayer();\n  player.traits.spatial.pos = data.map.spawn;\n  data.entities.push(player);\n}","import { generate } from 'worker/generation';\n\nexport default function () {\n  onmessage = ev => {\n    switch (ev.data.action) {\n      case 'generate': {\n        const { width, height, seed, enemies } = ev.data;\n        const gameSave = generate(width, height, seed, enemies, (message, progress) => {\n          postMessage({ action: 'progress', message, progress });\n        });\n        postMessage({ action: 'completed', save: gameSave.save() });\n      } break;\n\n      default:\n        console.error('unknown message', ev.data);\n    }\n  };\n}","import { App } from 'app';\nimport { Container } from 'pixi.js';\n\nexport abstract class GameState {\n  constructor(public readonly app: App) {\n  }\n\n  public abstract get name(): string;\n\n  public readonly root = new Container();\n\n  public async enter() { }\n  public async pause() { }\n  public async resume() { }\n  public async leave() { }\n\n  public update(dt: number) { }\n  public layout() { }\n}","import { UIScaleFactor } from 'app';\nimport { LayoutView } from 'app/components';\nimport { mesh, Container, Point, Texture } from 'pixi.js';\n\nexport class Button extends Container implements LayoutView {\n  public static readonly Clicked = 'button.clicked';\n\n  public readonly content = new Container();\n  private texNormal = Texture.fromFrame('sprites/ui/button-normal');\n  private texPressed = Texture.fromFrame('sprites/ui/button-pressed');\n\n  private plane = new mesh.NineSlicePlane(this.texNormal, 6, 6, 6, 6);\n  private isPressed = false;\n  private updateState(pressed: boolean) {\n    if (!this._isEnabled) pressed = false;\n    this.isPressed = pressed;\n    this.plane.texture = pressed ? this.texPressed : this.texNormal;\n  }\n\n  private _contentWidth = 0;\n  private _contentHeight = 0;\n  public get contentWidth() { return this._contentWidth; }\n  public get contentHeight() { return this._contentHeight; }\n\n  private _isEnabled = true;\n  public get isEnabled() { return this._isEnabled; }\n  public set isEnabled(value: boolean) {\n    this._isEnabled = value;\n    this.updateState(this.isPressed);\n    if (!value) {\n      this.alpha = 0.5;\n    } else {\n      this.alpha = 1;\n    }\n  }\n\n  constructor() {\n    super();\n    this.addChild(this.plane);\n    this.addChild(this.content);\n    this.plane.scale = new Point(UIScaleFactor, UIScaleFactor);\n    this.interactive = true;\n    this.buttonMode = true;\n\n    this.on('pointerdown', () => this.updateState(true));\n    this.on('pointerupoutside', () => this.updateState(false));\n    this.on('pointerup', () => {\n      if (this._isEnabled && this.isPressed)\n        this.emit(Button.Clicked);\n      this.updateState(false);\n    });\n  }\n\n  public layout(width: number, height: number) {\n    this.plane.x = 0;\n    this.plane.y = 0;\n    this.plane.width = width / UIScaleFactor;\n    this.plane.height = height / UIScaleFactor;\n\n    if (this.isPressed) {\n      this.content.x = UIScaleFactor;\n      this.content.y = UIScaleFactor;\n      this._contentWidth = width - UIScaleFactor;\n      this._contentHeight = height - UIScaleFactor;\n    } else {\n      this.content.x = 0;\n      this.content.y = 0;\n      this._contentWidth = width - UIScaleFactor;\n      this._contentHeight = height - UIScaleFactor;\n    }\n  }\n}","import { UIScaleFactor } from 'app';\nimport { LayoutView } from 'app/components';\nimport { Container, Point, Text as PixiText, TextStyleOptions } from 'pixi.js';\n\nexport class Text extends Container implements LayoutView {\n  private _text: PixiText;\n\n  public set text(value: string) { this._text.text = value; }\n  public get style() { return this._text.style; }\n  public get contentWidth() { return this._text.width; }\n  public get contentHeight() { return this._text.height; }\n\n  constructor(text?: string, style?: TextStyleOptions & { scale?: number }) {\n    super();\n    this._text = new PixiText(text, {\n      fontFamily: 'Unibody8Pro',\n      fontSize: 8,\n      fill: 'white',\n      align: 'center',\n      ...style\n    } as TextStyleOptions);\n    this.addChild(this._text);\n\n    const scale = (style && style.scale || 1) * UIScaleFactor;\n    this._text.scale = new Point(scale, scale);\n  }\n\n  public layout(width: number, height: number) {\n    switch (this._text.style.align) {\n      case 'left':\n        this._text.x = 0;\n        break;\n      case 'center':\n        this._text.x = (width - this._text.width) / 2;\n        break;\n      case 'right':\n        this._text.x = width - this._text.width;\n        break;\n    }\n    this._text.y = (height - this._text.height) / 2;\n  }\n}\n","import { App, UIScaleFactor } from 'app';\nimport { LayoutView } from 'app/components';\nimport { mesh, Container, Point, RenderTexture, Sprite, Texture } from 'pixi.js';\n\nexport class Panel extends Container implements LayoutView {\n  public readonly content = new Container();\n\n  private panelBg = new Sprite(Texture.WHITE);\n  private panelMask = new mesh.NineSlicePlane(Texture.fromFrame('sprites/ui/panel-mask'), 6, 6, 6, 6);\n  private maskTex = RenderTexture.create(0, 0);\n  private panelBorder = new mesh.NineSlicePlane(Texture.fromFrame('sprites/ui/panel'), 6, 6, 6, 6);\n\n  private _contentWidth = 0;\n  private _contentHeight = 0;\n  public get contentWidth() { return this._contentWidth; }\n  public get contentHeight() { return this._contentHeight; }\n\n  constructor(private readonly app: App) {\n    super();\n    this.panelMask.scale = new Point(UIScaleFactor, UIScaleFactor);\n    this.panelBorder.scale = new Point(UIScaleFactor, UIScaleFactor);\n    this.panelBg.tint = 0x404040;\n    const mask = new Sprite(this.maskTex);\n\n    this.content.addChild(this.panelBg);\n    this.addChild(this.content);\n    this.content.mask = mask;\n    this.addChild(this.panelBorder);\n    this.addChild(mask);\n  }\n\n  public layout(width: number, height: number) {\n    this.panelBorder.width = width / UIScaleFactor;\n    this.panelBorder.height = height / UIScaleFactor;\n    this.panelBg.width = width;\n    this.panelBg.height = height;\n    this.panelMask.width = this.panelBorder.width;\n    this.panelMask.height = this.panelBorder.height;\n\n    if (this._contentWidth !== width || this._contentHeight !== height || !this.maskTex) {\n      this.content.x = 0;\n      this.content.y = 0;\n      this._contentWidth = width;\n      this._contentHeight = height;\n\n      this.maskTex.resize(width, height);\n      this.app.renderer.render(this.panelMask, this.maskTex);\n    }\n  }\n}","import { Button } from 'app/components/Button';\nimport { Text } from 'app/components/Text';\nimport { TextStyleOptions } from 'pixi.js';\n\nexport class TextButton extends Button {\n  private readonly text: Text;\n\n  constructor(text?: string, style?: TextStyleOptions & { scale?: number }) {\n    super();\n    this.text = new Text(text, style);\n    this.content.addChild(this.text);\n  }\n\n  public layout(width: number, height: number) {\n    super.layout(width, height);\n    this.text.x = 0;\n    this.text.y = 0;\n    this.text.layout(this.contentWidth, this.contentHeight);\n  }\n}","import {\n  glCore, utils, BaseTexture, CanvasRenderer, CanvasSpriteRenderer, ObjectRenderer,\n  Shader, Sprite, TextureUvs, WebGLRenderer\n} from 'pixi.js';\n\nexport interface TextureSprite extends Sprite {\n  outline: boolean;\n  offset?: [number, number];\n  renderTranslation?: [number, number];\n}\n\nconst OutlineWidth = 2;\nconst BatchSize = 2000;\nconst VAOBufferSize = 0x80000;\n\nconst indices = new Uint16Array(BatchSize * 6);\nfor (let i = 0; i < BatchSize; i++) {\n  indices[i * 6 + 0] = i * 4 + 0;\n  indices[i * 6 + 1] = i * 4 + 1;\n  indices[i * 6 + 2] = i * 4 + 2;\n  indices[i * 6 + 3] = i * 4 + 0;\n  indices[i * 6 + 4] = i * 4 + 2;\n  indices[i * 6 + 5] = i * 4 + 3;\n}\n\nexport class TextureSpriteRenderer extends ObjectRenderer {\n  public static readonly Name = 'tex-sprite';\n\n  private shader!: Shader;\n\n  private currentTex: BaseTexture | null = null;\n  private currentBlendMode: number = -1;\n  private batchSize = 0;\n  private batch: TextureSprite[] = [];\n  private vao!: glCore.VertexArrayObject;\n  private vb!: glCore.GLBuffer;\n  private ib!: glCore.GLBuffer;\n  private vaoBuf = new ArrayBuffer(VAOBufferSize);\n  private f32 = new Float32Array(this.vaoBuf);\n  private u32 = new Uint32Array(this.vaoBuf);\n\n  onContextChange() {\n    const gl = this.renderer.gl;\n    this.shader = new SpriteShader(gl);\n\n    this.vb = glCore.GLBuffer.createVertexBuffer(gl, null, gl.STREAM_DRAW);\n    this.ib = glCore.GLBuffer.createIndexBuffer(gl, indices, gl.STATIC_DRAW);\n\n    const vaoSize = 12 * 4;\n    this.vao = this.renderer.createVao()\n      .addIndex(this.ib)\n      .addAttribute(this.vb, this.shader.attributes.aVertexPosition, gl.FLOAT, false, vaoSize, 0)\n      .addAttribute(this.vb, this.shader.attributes.aTextureCoord, gl.UNSIGNED_SHORT, true, vaoSize, 2 * 4)\n      .addAttribute(this.vb, this.shader.attributes.aColor, gl.UNSIGNED_BYTE, true, vaoSize, 3 * 4)\n      .addAttribute(this.vb, this.shader.attributes.aClamp, gl.FLOAT, true, vaoSize, 4 * 4)\n      .addAttribute(this.vb, this.shader.attributes.aOffset, gl.FLOAT, true, vaoSize, 8 * 4)\n      .addAttribute(this.vb, this.shader.attributes.aThickness, gl.FLOAT, true, vaoSize, 10 * 4);\n  }\n\n  render(sprite: TextureSprite) {\n    if (!sprite.texture.valid) return;\n\n    if (this.batchSize >= BatchSize ||\n      sprite.texture.baseTexture !== this.currentTex ||\n      sprite.blendMode !== this.currentBlendMode\n    )\n      this.flush();\n\n    this.batch[this.batchSize++] = sprite;\n    this.currentTex = sprite.texture.baseTexture;\n    this.currentBlendMode = sprite.blendMode;\n  }\n\n  start() {\n    this.renderer.bindShader(this.shader);\n    this.renderer.bindVao(this.vao);\n    this.vb.bind();\n  }\n\n  stop() {\n    this.flush();\n  }\n\n  flush() {\n    if (this.batchSize === 0) return;\n    const renderer = this.renderer;\n    renderer.bindTexture(this.currentTex!, 0, true);\n\n    renderer.state && renderer.state.setBlendMode(this.currentBlendMode!);\n\n    const f32 = this.f32, u32 = this.u32;\n    let p = 0;\n    for (let i = 0; i < this.batchSize; i++) {\n      const sprite = this.batch[i];\n      const uvs = ((sprite.texture as any)._uvs as TextureUvs).uvsUint32;\n      const vd = sprite.vertexData;\n\n      const alpha = Math.min(sprite.worldAlpha, 1.0);\n      let tint = (sprite as any)._tint;\n      tint = (tint >> 16) + (tint & 0xff00) + ((tint & 0xff) << 16);\n      const argb = alpha < 1.0 && this.currentTex!.premultipliedAlpha\n        ? utils.premultiplyTint(tint, alpha) : tint + (alpha * 255 << 24);\n      const offset = sprite.offset || [0, 0];\n\n      const frame = sprite.texture.frame;\n      const tr = sprite.transform.worldTransform;\n      const clampX = frame.x / this.currentTex!.width;\n      const clampY = frame.y / this.currentTex!.height;\n      const clampZ = (frame.x + frame.width) / this.currentTex!.width;\n      const clampW = (frame.y + frame.height) / this.currentTex!.height;\n      const offsetX = offset[0] / this.currentTex!.width;\n      const offsetY = offset[1] / this.currentTex!.height;\n      const thicknessX = sprite.outline ? OutlineWidth / Math.sqrt(tr.a * tr.a + tr.c * tr.c) / this.currentTex!.realWidth : 0;\n      const thicknessY = sprite.outline ? OutlineWidth / Math.sqrt(tr.b * tr.b + tr.d * tr.d) / this.currentTex!.realHeight : 0;\n      const trX = sprite.renderTranslation ? Math.round(sprite.renderTranslation[0]) : 0;\n      const trY = sprite.renderTranslation ? Math.round(sprite.renderTranslation[1]) : 0;\n\n      f32[p++] = vd[0] + trX; f32[p++] = vd[1] + trY;\n      u32[p++] = uvs[0];\n      u32[p++] = argb;\n      f32[p++] = clampX; f32[p++] = clampY; f32[p++] = clampZ; f32[p++] = clampW;\n      f32[p++] = offsetX; f32[p++] = offsetY;\n      f32[p++] = thicknessX; f32[p++] = thicknessY;\n\n      f32[p++] = vd[2] + trX; f32[p++] = vd[3] + trY;\n      u32[p++] = uvs[1];\n      u32[p++] = argb;\n      f32[p++] = clampX; f32[p++] = clampY; f32[p++] = clampZ; f32[p++] = clampW;\n      f32[p++] = offsetX; f32[p++] = offsetY;\n      f32[p++] = thicknessX; f32[p++] = thicknessY;\n\n      f32[p++] = vd[4] + trX; f32[p++] = vd[5] + trY;\n      u32[p++] = uvs[2];\n      u32[p++] = argb;\n      f32[p++] = clampX; f32[p++] = clampY; f32[p++] = clampZ; f32[p++] = clampW;\n      f32[p++] = offsetX; f32[p++] = offsetY;\n      f32[p++] = thicknessX; f32[p++] = thicknessY;\n\n      f32[p++] = vd[6] + trX; f32[p++] = vd[7] + trY;\n      u32[p++] = uvs[3];\n      u32[p++] = argb;\n      f32[p++] = clampX; f32[p++] = clampY; f32[p++] = clampZ; f32[p++] = clampW;\n      f32[p++] = offsetX; f32[p++] = offsetY;\n      f32[p++] = thicknessX; f32[p++] = thicknessY;\n    }\n    this.vb.upload(this.vaoBuf.slice(0, p * 4 * 2), 0, true);\n    const gl = this.renderer.gl;\n    gl.drawElements(gl.TRIANGLES, this.batchSize * 6, gl.UNSIGNED_SHORT, 0);\n\n    this.batchSize = 0;\n    this.currentTex = null;\n    this.currentBlendMode = -1;\n  }\n}\n\nclass SpriteShader extends Shader {\n  constructor(gl: WebGLRenderingContext) {\n    super(gl, `\nattribute vec2 aVertexPosition;\nattribute vec2 aTextureCoord;\nattribute vec4 aColor;\nattribute vec4 aClamp;\nattribute vec4 aOffset;\nattribute vec4 aThickness;\n\nuniform mat3 projectionMatrix;\n\nvarying vec2 vTextureCoord;\nvarying vec4 vColor;\nvarying vec4 vClamp;\nvarying vec4 vOffset;\nvarying vec4 vThickness;\n\nvoid main(void)\n{\n    vec4 v = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\n    gl_Position = v;\n    vTextureCoord = aTextureCoord;\n    vColor = aColor;\n    vClamp = aClamp;\n    vOffset = aOffset;\n    vThickness = aThickness;\n}`, `\nvarying vec2 vTextureCoord;\nvarying vec4 vColor;\nvarying vec4 vClamp;\nvarying vec4 vOffset;\nvarying vec4 vThickness;\n\nuniform sampler2D uSampler;\n\nfloat sampleAlpha(vec2 coords, float x, float y) {\n  return texture2D(uSampler, clamp(coords + vec2(x, y), vClamp.xy, vClamp.zw)).a;\n}\n\nvoid main(void)\n{\n    vec2 coords = mod(vTextureCoord - vClamp.xy + vOffset.xy, vClamp.zw - vClamp.xy) + vClamp.xy;\n    vec4 sample = texture2D(uSampler, coords);\n    float a = sample.a;\n    a = max(a, sampleAlpha(coords, -vThickness.x, 0.0));\n    a = max(a, sampleAlpha(coords, vThickness.x, 0.0));\n    a = max(a, sampleAlpha(coords, 0.0, -vThickness.y));\n    a = max(a, sampleAlpha(coords, 0.0, vThickness.y));\n    a = max(a, sampleAlpha(coords, -vThickness.x, -vThickness.y));\n    a = max(a, sampleAlpha(coords, vThickness.x, -vThickness.y));\n    a = max(a, sampleAlpha(coords, -vThickness.x, vThickness.y));\n    a = max(a, sampleAlpha(coords, vThickness.x, vThickness.y));\n    gl_FragColor = vec4((sample.rgb + vec3(0.2) * (1.0 - sample.a)) * a, a) * vColor;\n}\n`);\n  }\n}\n\nWebGLRenderer.registerPlugin(TextureSpriteRenderer.Name, TextureSpriteRenderer);\nCanvasRenderer.registerPlugin(TextureSpriteRenderer.Name, CanvasSpriteRenderer as any);","import { TextureSprite as TexSprite, TextureSpriteRenderer } from 'app/components/TextureSpriteRenderer';\nimport { TextureDef } from 'common/data';\nimport { Sprite, Texture } from 'pixi.js';\n\nfunction hashKey(key: number) {\n  // https://stackoverflow.com/a/12996028\n  key = ((key >> 16) ^ key) * 0x45d9f3b;\n  key = ((key >> 16) ^ key) * 0x45d9f3b;\n  key = (key >> 16) ^ key;\n  return key;\n}\n\nexport class TextureSprite extends Sprite implements TexSprite {\n  public outline: boolean = false;\n  public offset?: [number, number];\n  public renderTranslation?: [number, number];\n  public clip?: [number, number];\n\n  private animBeginTime = 0;\n  public animName: string = '';\n  public still: boolean = true;\n\n  private actionAnimName: string = '';\n  private actionAnimFPS = 0;\n  private actionEndTime = -1;\n\n  private overlay?: TextureSprite;\n  private textureDef?: Exclude<TextureDef, string>;\n  private currentTex = Texture.EMPTY;\n\n  constructor(texture?: Texture) {\n    super(texture);\n    this.pluginName = TextureSpriteRenderer.Name;\n\n    if (texture)\n      this.currentTex = texture;\n  }\n\n  private updateTex() {\n    let tex = this.currentTex;\n    if (this.clip) {\n      tex = tex.clone();\n      const frame = tex.frame.clone();\n      frame.width -= Math.round(this.clip[0] * frame.width);\n      frame.height -= Math.round(this.clip[1] * frame.height);\n      tex.frame = frame;\n    }\n    if (this._texture !== tex) {\n      this.texture = tex;\n    }\n  }\n\n  public clearTexture() {\n    this.tint = 0xffffff;\n    this.overlay && this.removeChild(this.overlay);\n    this.overlay = undefined;\n    this.currentTex = Texture.EMPTY;\n    this.textureDef = undefined;\n    this.offset = undefined;\n    this.updateTex();\n  }\n\n  public setTexture(textureDef: TextureDef, key: number = 0) {\n    key = hashKey(key);\n    this.clearTexture();\n\n    if (typeof textureDef === 'string') {\n      this.textureDef = undefined;\n      this.currentTex = Texture.fromFrame(textureDef);\n    } else {\n      this.textureDef = textureDef;\n      switch (textureDef.type) {\n        case 'single':\n          this.currentTex = Texture.fromFrame(textureDef.tex);\n          if (textureDef.tint) this.tint = parseInt(textureDef.tint, 16);\n          break;\n        case 'random':\n          this.currentTex = Texture.fromFrame(textureDef.texs[key % textureDef.texs.length]);\n          if (textureDef.tint) this.tint = parseInt(textureDef.tint, 16);\n          break;\n        case 'composite': {\n          this.setTexture(textureDef.base, key);\n          const overlay = new TextureSprite();\n          overlay.anchor.copy(this.anchor);\n          overlay.setTexture(textureDef.overlay, key);\n          this.overlay = overlay;\n          this.addChild(overlay);\n        } break;\n        case 'animation':\n          this.frame = -1;\n          this.currentTex = Texture.EMPTY;\n          this.animBeginTime = this.elapsed;\n          if (textureDef.tint) this.tint = parseInt(textureDef.tint, 16);\n          break;\n        case 'liquid':\n          this.currentTex = Texture.fromFrame(textureDef.tex);\n          if (textureDef.tint) this.tint = parseInt(textureDef.tint, 16);\n      }\n    }\n    this.updateTex();\n  }\n\n  public playActionAnim(name: string, duration?: number) {\n    if (!this.textureDef || this.textureDef.type !== 'animation' || !(name in this.textureDef.anims)) {\n      console.log('animation: no such name: ' + name);\n      return;\n    }\n    if (this.actionAnimName !== name) {\n      const animation = this.textureDef.anims[name];\n      this.frame = 0;\n      this.actionAnimName = name;\n      this.animBeginTime = this.elapsed;\n      this.actionAnimFPS = duration === undefined ? animation.fps : animation.numFrames / (duration / 1000);\n      this.actionEndTime = this.elapsed + 1000 / this.actionAnimFPS * animation.numFrames;\n    }\n  }\n\n  public stopActionAnim(name: string) {\n    if (this.actionAnimName === name) {\n      this.frame = 0;\n      this.actionAnimName = '';\n      this.actionEndTime = -1;\n      this.actionAnimFPS = 0;\n      this.animBeginTime = this.elapsed;\n    }\n  }\n\n  private frame = -1;\n  private elapsed = 0;\n  public update(elapsed: number) {\n    this.elapsed = elapsed;\n    if (this.textureDef) {\n      if (this.actionEndTime > 0 && this.actionEndTime < elapsed) {\n        this.actionAnimName = '';\n        this.actionEndTime = -1;\n        this.actionAnimFPS = 0;\n        this.animBeginTime = elapsed;\n      }\n      if (this.textureDef.type === 'animation' && (this.animName || this.actionAnimName)) {\n        const animation = this.textureDef.anims[this.actionAnimName || this.animName];\n        if (animation) {\n          if (this.still && !this.actionAnimName) {\n            this.frame = -1;\n          } else {\n            const frameDuration = 1000 / (this.actionAnimFPS || animation.fps);\n            this.frame = Math.floor((elapsed - this.animBeginTime) / frameDuration) % animation.numFrames;\n          }\n          this.currentTex = Texture.fromFrame(`${animation.frameId}-${this.frame + 1}`);\n        } else {\n          console.log('animation: no such name: ' + (this.actionAnimName || this.animName));\n        }\n      } else if (this.textureDef.type === 'liquid') {\n        let d = (elapsed % this.textureDef.time) / this.textureDef.time;\n        d = Math.sin(d * Math.PI * 2);\n        const offset = this.textureDef.offset * d;\n        this.offset = [offset, offset];\n      }\n    }\n\n    this.updateTex();\n\n    if (this.overlay) {\n      this.overlay.clip = this.clip;\n      this.overlay.update(elapsed);\n    }\n  }\n\n  _onAnchorUpdate() {\n    (Sprite.prototype as any)._onAnchorUpdate.call(this);\n    this.overlay && this.overlay.anchor.copy(this._anchor);\n  }\n}","import { UIScaleFactor } from 'app';\nimport { LayoutView } from 'app/components';\nimport MultiStyleText, { ExtendedTextStyle, TextStyleSet } from 'pixi-multistyle-text';\nimport { Container, Point } from 'pixi.js';\n\nexport class StyledText extends Container implements LayoutView {\n  private _text: MultiStyleText;\n\n  public set text(value: string) { this._text.text = value; }\n  public get style() { return this._text.style; }\n  public get contentWidth() { return this._text.width; }\n  public get contentHeight() { return this._text.height; }\n\n  constructor(text: string, styles: TextStyleSet, scale: number = 1) {\n    super();\n    const defaultStyle = {\n      fontFamily: 'Unibody8Pro',\n      fontSize: 8,\n      fill: 'white',\n      align: 'center',\n      ...(styles.default || {})\n    } as ExtendedTextStyle;\n\n    this._text = new MultiStyleText(text, { ...styles, default: defaultStyle });\n    this.addChild(this._text);\n\n    this._text.scale = new Point(scale * UIScaleFactor, scale * UIScaleFactor);\n  }\n\n  public layout(width: number, height: number) {\n    switch (this._text.style.align) {\n      case 'left':\n        this._text.x = 0;\n        break;\n      case 'center':\n        this._text.x = (width - this._text.width) / 2;\n        break;\n      case 'right':\n        this._text.x = width - this._text.width;\n        break;\n    }\n    this._text.y = (height - this._text.height) / 2;\n  }\n}\n","import { App } from 'app';\nimport { Panel } from 'app/components';\nimport { StyledText } from 'app/components/StyledText';\nimport { TextStyleSet } from 'pixi-multistyle-text';\n\nexport class TextToolTip extends Panel {\n  private readonly textView: StyledText;\n\n  constructor(app: App, text: string, styles: TextStyleSet, scale: number = 1) {\n    super(app);\n    this.textView = new StyledText(text, styles, scale);\n    this.addChild(this.textView);\n  }\n\n  public set text(value: string) {\n    this.textView.text = value;\n  }\n\n  layout() {\n    const width = this.textView.contentWidth;\n    const height = this.textView.contentHeight;\n    this.textView.position.set(16, 16);\n    this.textView.layout(width, height);\n    super.layout(width + 32, height + 32);\n  }\n}","export interface Trait {\n  readonly type: string;\n}\n\nexport interface TraitType<T extends Trait = Trait, Arg = any> {\n  readonly _mark: T;\n  readonly Type: string;\n  make(arg?: Arg): T;\n  deserialize(data: any, trait: T): T;\n  serialize(trait: T): any;\n}\n\nexport namespace Trait {\n  export const types = new Map<string, TraitType>();\n}","import { App } from 'app';\nimport { TextToolTip } from 'app/components/TextToolTip';\nimport { Item } from 'common/data';\nimport { ceil, startCase } from 'lodash';\n\nexport class ItemToolTip extends TextToolTip {\n  private item: Item;\n\n  constructor(app: App, item: Item) {\n    super(app, '', {\n      default: { align: 'left' },\n      label: { fontWeight: 'bold' },\n      details: { fill: '#d0d0d0' },\n      desc: { fontStyle: 'italic' },\n    });\n    this.item = item;\n    this.updateView();\n  }\n\n  public setItem(item: Item) {\n    if (this.item !== item) {\n      this.item = item;\n      this.updateView();\n    }\n  }\n\n  private updateView() {\n    const texts: string[] = [\n      `<label>${this.item.name}</label>`,\n      `<details>${startCase(this.item.type)}</details>`\n    ];\n\n    if (this.item.description)\n      texts.push(`<desc>${this.item.description}</desc>`);\n\n    if (this.item.aspects && this.item.aspects.length > 0) {\n      texts.push('');\n      let sum = 0;\n      for (const { amount } of this.item.aspects)\n        sum += amount;\n      for (const { element, amount } of this.item.aspects.slice().sort((a, b) => b.amount - a.amount)) {\n        const percentage = amount / sum * 100;\n        if (percentage < 10) continue;\n        texts.push(`<details>${percentage.toFixed(0)}% <label>${element}</label></details>`);\n      }\n    }\n    if (this.item.effects && this.item.effects.length > 0) {\n      texts.push('');\n      if (this.item.material && this.item.weapon) {\n        const affinity = this.item.material.affinity;\n        if (affinity < 0.2) texts.push('<details>rarely inflicts effects:</details>');\n        else if (affinity < 0.5) texts.push('<details>sometimes inflicts effects:</details>');\n        else if (affinity < 0.7) texts.push('<details>often inflicts effects:</details>');\n        else texts.push('<details>inflicts effects:</details>');\n      }\n      for (const effect of this.item.effects) {\n        texts.push(`<details>\\u2022 ${effect.description}</details>`);\n      }\n    }\n    if (this.item.weapon) {\n      texts.push('');\n      texts.push(`<details>strength  <label>${ceil(this.item.weapon.strength, 1)}</label> </details>`);\n      if (this.item.weapon.cooldown)\n        texts.push(`<details>cooldown  <label>${ceil(this.item.weapon.cooldown / 1000, 1)}s</label></details>`);\n      if (this.item.weapon.range)\n        texts.push(`<details>range  <label>${ceil(this.item.weapon.range, 1)} tiles</label></details>`);\n    }\n\n    this.text = texts.join('\\n');\n  }\n}","import { Message } from 'app/game/messages';\nimport { ItemSlot } from 'common/data';\n\nexport class InventorySwap implements Message {\n  public readonly type = 'inventory-swap';\n\n  constructor(\n    public readonly slotA: ItemSlot,\n    public readonly slotB: ItemSlot\n  ) { }\n}","import { Message } from 'app/game/messages';\nimport { ItemSlot } from 'common/data';\n\nexport class InventoryUpdated implements Message {\n  public readonly type = 'inventory-updated';\n\n  constructor(\n    public readonly slot: ItemSlot\n  ) { }\n}","import { TileObjectSprite } from 'app/game/interfaces';\nimport { Message } from 'app/game/messages';\n\nexport abstract class PlayFX<Effect extends PlayFX.Type, Target> implements Message {\n  public readonly type = 'play-fx';\n\n  constructor(\n    public readonly effect: PlayFX.Type,\n    public readonly target: Target\n  ) { }\n}\n\nexport namespace PlayFX {\n  export enum Type {\n    Shake = 'shake',\n  }\n\n  export class Shake extends PlayFX<Type.Shake, TileObjectSprite | undefined>{ }\n}","import { Message } from 'app/game/messages';\nimport { vec2 } from 'gl-matrix';\n\nexport class ShowParticles implements Message {\n  public readonly type = 'show-particles';\n\n  constructor(\n    public readonly particleType: ShowParticles.Type,\n    public readonly coords: vec2,\n    public readonly numParticles: number,\n    public readonly color: number,\n    public readonly z = 0\n  ) { }\n}\n\nexport namespace ShowParticles {\n  export enum Type {\n    Splash = 'splash',\n    Float = 'float'\n  }\n\n  export function splash(coords: vec2, numParticles: number, color: number, z = 0) {\n    return new ShowParticles(Type.Splash, coords, numParticles, color, z);\n  }\n  export function float(coords: vec2, numParticles: number, color: number, z = 0) {\n    return new ShowParticles(Type.Float, coords, numParticles, color, z);\n  }\n}","import { Message } from 'app/game/messages';\nimport { Effect } from 'common/data';\n\nexport class ApplyEffects implements Message {\n  public readonly type = 'apply-effects';\n\n  constructor(\n    public readonly entityId: number,\n    public readonly effects: Effect[]\n  ) { }\n}","import { Message } from 'app/game/messages';\n\nexport class UpdateHP implements Message {\n  public readonly type = 'update-hp';\n\n  constructor(\n    public readonly entityId: number,\n    public readonly hpDiff: number\n  ) { }\n}","import { Message } from 'app/game/messages';\nimport { Effect, Weapon } from 'common/data';\nimport { vec2 } from 'gl-matrix';\n\nexport class Attack implements Message {\n  public readonly type = 'attack';\n\n  constructor(\n    public readonly entityId: number,\n    public readonly weapon: Weapon,\n    public readonly targetPosition: vec2,\n    public readonly effects: Effect[],\n    public readonly duration?: number,\n  ) { }\n}","import { TileObjectSprite } from 'app/game/interfaces';\nimport { Message } from 'app/game/messages';\n\nexport class ObjectSpriteRequest implements Message {\n  public readonly type = 'object-sprite-request';\n\n  public sprite?: TileObjectSprite;\n\n  constructor(\n    public readonly x: number,\n    public readonly y: number,\n  ) { }\n}","import { Message } from 'app/game/messages';\n\nexport class EntityCollision implements Message {\n  public readonly type = 'entity-collision';\n\n  constructor(\n    public readonly entityIdA: number,\n    public readonly entityIdB: number,\n  ) { }\n}","import { Message } from 'app/game/messages';\n\nexport class TileCollision implements Message {\n  public readonly type = 'tile-collision';\n\n  constructor(\n    public readonly entityId: number,\n    public readonly x: number,\n    public readonly y: number\n  ) { }\n}","import { Message } from 'app/game/messages';\n\nexport class Death implements Message {\n  public readonly type = 'death';\n\n  constructor(\n    public readonly entityId: number\n  ) { }\n}","import { Message } from 'app/game/messages';\nimport { vec2 } from 'gl-matrix';\n\nexport class SpawnEnemy implements Message {\n  public readonly type = 'spawn-enemy';\n\n  constructor(\n    public readonly enemyType: string,\n    public readonly position: vec2\n  ) { }\n}","import { TextureSprite } from 'app/components';\nimport { ItemToolTip } from 'app/components/ItemToolTip';\nimport { Game } from 'app/game';\nimport { InventorySwap } from 'app/game/messages';\nimport { ItemSlot } from 'common/data';\nimport { Container, DisplayObject } from 'pixi.js';\n\nexport class SlotView extends Container {\n  public static Size = 56;\n\n  private readonly bg = new TextureSprite();\n  public readonly bgOverlay = new TextureSprite();\n  public readonly fgOverlay = new TextureSprite();\n\n  private readonly obj: TextureSprite;\n  private dragging = false;\n\n  public enabled = true;\n  public toolTipOpacity = 1;\n  public alwaysInteractive = false;\n  public get empty() { return !this.slot.item; }\n\n  constructor(private readonly game: Game, public readonly slot: ItemSlot) {\n    super();\n\n    this.bg.setTexture('sprites/ui/inv-slot');\n    this.bgOverlay.scale.set(2, 2);\n    this.bgOverlay.position.set(4, 4);\n    this.bgOverlay.alpha = 0.5;\n    this.addChild(this.bg);\n    this.addChild(this.bgOverlay);\n\n    this.obj = new TextureSprite();\n    this.obj.scale.set(2, 2);\n    this.obj.anchor.set(0.5, 0.5);\n    this.obj.outline = true;\n    this.addChild(this.obj);\n    this.addChild(this.fgOverlay);\n\n    let toolTip: ItemToolTip;\n    this.interactive = true;\n\n    this.game.app.toolTip.add(this, () => {\n      if (this.slot.item && this.toolTipOpacity > 0) {\n        if (!toolTip) toolTip = new ItemToolTip(this.game.app, this.slot.item);\n        else toolTip.setItem(this.slot.item);\n        toolTip.alpha = this.toolTipOpacity;\n        return toolTip;\n      } else\n        return null;\n    });\n\n    this.on('pointerdown', () => {\n      if (this.enabled && this.slot.item && !this.game.app.dragDrop.active) {\n        this.dragging = true;\n        this.game.app.dragDrop.begin(this.obj).then(this.endDrag);\n        if (toolTip)\n          this.game.app.toolTip.hide(toolTip);\n      }\n    });\n  }\n\n  public updateSlot() {\n    if (this.slot.item) {\n      this.obj.setTexture(this.slot.item.texture);\n      this.obj.visible = true;\n      this.buttonMode = true || this.alwaysInteractive;\n    } else {\n      this.obj.clearTexture();\n      this.obj.visible = false;\n      this.buttonMode = false || this.alwaysInteractive;\n    }\n  }\n\n  public layout() {\n    this.updateSlot();\n    if (!this.dragging) {\n      this.obj.position.set(SlotView.Size / 2, SlotView.Size / 2);\n    }\n  }\n\n  public update(dt: number) {\n    this.obj.update(dt);\n  }\n\n  private endDrag = (target: DisplayObject | null) => {\n    this.dragging = false;\n    this.addChild(this.obj);\n    if (target instanceof SlotView && target !== this && this.enabled && target.enabled) {\n      this.game.dispatch(new InventorySwap(this.slot, target.slot));\n    }\n  }\n}","import { DisplayTileSize } from 'app';\nimport { vec2 } from 'gl-matrix';\nimport { Container, Graphics, PointLike, Sprite as PIXISprite, Texture, TransformStatic } from 'pixi.js';\n\nexport class Camera extends Container {\n  public offset = vec2.create();\n  public viewWidth = 0;\n  public viewHeight = 0;\n\n  public toMapCoords(pt: PointLike, coords: vec2) {\n    vec2.scaleAndAdd(coords, [\n      (pt.x - Math.floor(this.viewWidth / 2)) / DisplayTileSize,\n      (pt.y - Math.floor(this.viewHeight / 2)) / DisplayTileSize\n    ], this.offset, 1 / DisplayTileSize);\n    return coords;\n  }\n\n  public toCameraPoint(coords: vec2, pt: PointLike, z = 0) {\n    pt.x = Math.floor(coords[0] * DisplayTileSize - this.offset[0]) + Math.floor(this.viewWidth / 2);\n    pt.y = Math.floor((coords[1] - z) * DisplayTileSize - this.offset[1]) + Math.floor(this.viewHeight / 2);\n    return pt;\n  }\n\n  private bg = Object.assign(new PIXISprite(Texture.WHITE), {\n    layer: Camera.Layer.Background,\n    sortOffset: vec2.fromValues(0, 0)\n  });\n\n  constructor() {\n    super();\n    this.bg.tint = 0x202020;\n    this.add(this.bg);\n    this.interactive = true;\n  }\n\n  private nextId = 0;\n  public add(sprite: Camera.Sprite) {\n    sprite.id = this.nextId++;\n    this.addChild(sprite);\n  }\n\n  public layout(width: number, height: number) {\n    this.bg.width = width;\n    this.bg.height = height;\n\n    if (this.viewWidth !== width || this.viewHeight !== height) {\n      this.viewWidth = width;\n      this.viewHeight = height;\n\n      const mask = new Graphics();\n      mask.beginFill(0xffffff);\n      mask.drawRect(this.x, this.y, width, height);\n      mask.endFill();\n      this.mask = mask;\n    }\n    this.sortLayers();\n  }\n\n  private sortLayers() {\n    const children = this.children as Camera.Sprite[];\n    children.sort((a, b) => {\n      const ao = a.sortOffset, bo = b.sortOffset;\n      const { x: ax, y: ay } = (a.transform as TransformStatic).position;\n      const { x: bx, y: by } = (b.transform as TransformStatic).position;\n      let d = 0;\n      if (d === 0) d = a.layer - b.layer;\n      if (d === 0) d = (ay + ao[1] * DisplayTileSize) - (by + bo[1] * DisplayTileSize);\n      if (d === 0) d = (ax + ao[0] * DisplayTileSize) - (bx + bo[0] * DisplayTileSize);\n      if (d === 0) d = a.id! - b.id!;\n      return d;\n    });\n  }\n}\n\nexport namespace Camera {\n  export enum Layer {\n    Background = -1,\n    Terrain = 0,\n    Objects = 1,\n    Projectiles = 2,\n  }\n  export interface Sprite extends PIXISprite {\n    id?: number\n    layer: Camera.Layer;\n    sortOffset: vec2;\n  }\n}\n","import { TextureSprite } from 'app/components';\nimport { Trait } from 'app/game/traits';\nimport { Camera } from 'app/game/Camera';\nimport { vec2 } from 'gl-matrix';\nimport { defaults } from 'lodash';\n\nexport interface Spatial extends Trait {\n  readonly type: typeof Spatial.Type;\n  readonly position: vec2;\n  readonly velocity: vec2;\n  readonly scale: vec2;\n  readonly offset: vec2;\n  horizontalAnim: boolean;\n  readonly sprite: Camera.Sprite & TextureSprite;\n}\n\nexport namespace Spatial {\n  export declare const _mark: Spatial;\n  export const Type = 'spatial';\n\n  export function make(): Spatial {\n    return {\n      type: Spatial.Type,\n      position: vec2.fromValues(0, 0),\n      velocity: vec2.fromValues(0, 0),\n      scale: vec2.fromValues(1, 1),\n      offset: vec2.fromValues(0, 0),\n      horizontalAnim: false,\n      sprite: Object.assign(new TextureSprite(), {\n        layer: Camera.Layer.Objects,\n        sortOffset: vec2.fromValues(0, 0),\n      })\n    };\n  }\n\n  export function serialize(trait: Spatial) {\n    return {\n      pos: [trait.position[0], trait.position[1]],\n      vel: [trait.velocity[0], trait.velocity[1]],\n    };\n  }\n\n  export function deserialize(data: any, trait: Spatial): Spatial {\n    return defaults({\n      position: data.pos && vec2.fromValues(data.pos[0], data.pos[1]),\n      velocity: data.vel && vec2.fromValues(data.vel[0], data.vel[1])\n    }, trait);\n  }\n}\nTrait.types.set(Spatial.Type, Spatial);","import { Trait } from 'app/game/traits';\nimport { ItemSlot } from 'common/data';\nimport { defaults, times } from 'lodash';\n\nexport interface Inventory extends Trait {\n  readonly type: typeof Inventory.Type;\n  readonly slots: ItemSlot[];\n}\n\nexport namespace Inventory {\n  export declare const _mark: Inventory;\n  export const Type = 'inventory';\n\n  export function make(size = 1): Inventory {\n    return {\n      type: Inventory.Type,\n      slots: times(size, (): ItemSlot => ({ item: null, accepts: null }))\n    };\n  }\n\n  export function serialize(trait: Inventory) {\n    return {\n      slots: trait.slots\n    };\n  }\n\n  export function deserialize(data: any, trait: Inventory): Inventory {\n    return defaults({\n      slots: data.slots.slice()\n    }, trait);\n  }\n}\nTrait.types.set(Inventory.Type, Inventory);","import { Trait } from 'app/game/traits';\nimport { vec2 } from 'gl-matrix';\nimport { defaults } from 'lodash';\n\nexport interface Float extends Trait {\n  readonly type: typeof Float.Type;\n  readonly z: vec2;\n  gravity: boolean;\n}\n\nexport namespace Float {\n  export declare const _mark: Float;\n  export const Type = 'float';\n\n  export function make(): Float {\n    return {\n      type: Float.Type,\n      z: vec2.fromValues(0, 0),\n      gravity: true\n    };\n  }\n\n  export function serialize(trait: Float) {\n    return {\n      z: [trait.z[0], trait.z[1]],\n      gravity: trait.gravity,\n    };\n  }\n\n  export function deserialize(data: any, trait: Float): Float {\n    return defaults({\n      z: data.z && vec2.fromValues(data.z[0], data.z[1]),\n      gravity: data.gravity === undefined ? true : data.gravity\n    }, trait);\n  }\n}\nTrait.types.set(Float.Type, Float);","import { Trait } from 'app/game/traits';\nimport { Effect , StatList} from 'common/data';\nimport { EffectDef } from 'data/effects';\nimport { defaults } from 'lodash';\n\nexport { StatList } from 'common/data';\n\nexport interface Stats extends Trait {\n  readonly type: typeof Stats.Type;\n  readonly base: StatList;\n  readonly boost: StatList; // effects\n  readonly bonus: StatList; // equipments\n\n  readonly effects: Effect[];\n}\n\nexport namespace Stats {\n  export declare const _mark: Stats;\n  export const Type = 'stats';\n\n  export function make(): Stats {\n    return {\n      type: Stats.Type,\n      base: { hp: 100, maxHp: 100, str: 10, def: 0, spd: 10, vit: 10 },\n      boost: { hp: 0, maxHp: 0, str: 0, def: 0, spd: 0, vit: 0 },\n      bonus: { hp: 0, maxHp: 0, str: 0, def: 0, spd: 0, vit: 0 },\n      effects: []\n    };\n  }\n\n  export function serialize(trait: Stats) {\n    return {\n      base: trait.base,\n      effects: trait.effects,\n    };\n  }\n\n  export function deserialize(data: any, trait: Stats): Stats {\n    return defaults({\n      base: data.base || { hp: 100, maxHp: 100, str: 10, def: 0, spd: 10, vit: 10 },\n      effects: data.effects || [],\n    }, trait);\n  }\n\n  export function compute(stats: Stats): StatList {\n    return {\n      get hp() { return stats.base.hp + stats.boost.hp + stats.bonus.hp; },\n      get maxHp() { return stats.base.maxHp + stats.boost.maxHp + stats.bonus.maxHp; },\n      get str() { return stats.base.str + stats.boost.str + stats.bonus.str; },\n      get def() { return stats.base.def + stats.boost.def + stats.bonus.def; },\n      get spd() { return stats.base.spd + stats.boost.spd + stats.bonus.spd; },\n      get vit() { return stats.base.vit + stats.boost.vit + stats.bonus.vit; },\n    };\n  }\n\n  export function hasEffect(stats: Stats, ...effects: string[]) {\n    return stats.effects.some(({ type }) => effects.indexOf(type) >= 0);\n  }\n\n  export function canMove(stats: Stats) {\n    return !hasEffect(stats, EffectDef.Type.Stunned, EffectDef.Type.Knockback);\n  }\n}\nTrait.types.set(Stats.Type, Stats);","import { Trait } from 'app/game/traits';\nimport { defaults } from 'lodash';\n\nexport interface PlayerData extends Trait {\n  readonly type: typeof PlayerData.Type;\n  hotbarSelection: number;\n  consumeCooldown: number;\n  attackCooldown: number;\n  lastAttackId: number;\n}\n\nexport namespace PlayerData {\n  export declare const _mark: PlayerData;\n  export const Type = 'player-data';\n\n  export function make(): PlayerData {\n    return {\n      type: PlayerData.Type,\n      hotbarSelection: 0,\n      consumeCooldown: 0,\n      attackCooldown: 0,\n      lastAttackId: 0\n    };\n  }\n\n  export function serialize(trait: PlayerData) {\n    return {\n      hotbarSelection: trait.hotbarSelection,\n      consumeCooldown: trait.consumeCooldown,\n      attackCooldown: trait.attackCooldown,\n      lastAttackId: trait.lastAttackId,\n    };\n  }\n\n  export function deserialize(data: any, trait: PlayerData): PlayerData {\n    return defaults({\n      hotbarSelection: data.hotbarSelection || 0,\n      consumeCooldown: data.consumeCooldown || 0,\n      attackCooldown: data.attackCooldown || 0,\n      lastAttackId: data.lastAttackId || 0,\n    }, trait);\n  }\n}\nTrait.types.set(PlayerData.Type, PlayerData);","import { Trait } from 'app/game/traits';\nimport { Effect, TextureDef, Weapon } from 'common/data';\nimport { vec2 } from 'gl-matrix';\nimport { defaults } from 'lodash';\n\nexport interface ProjectileData extends Trait {\n  readonly type: typeof ProjectileData.Type;\n\n  readonly sourceEntityId: number;\n  readonly damage: number;\n  readonly weapon: Weapon;\n  readonly effects: Effect[];\n\n  readonly start: vec2;\n  readonly end: vec2;\n  readonly lifetime: number;\n  readonly texture: TextureDef;\n\n  readonly hit: Set<string>;\n}\n\nexport namespace ProjectileData {\n  export declare const _mark: ProjectileData;\n  export const Type = 'projectile-data';\n\n  export function make(args?: Pick<ProjectileData, Exclude<keyof ProjectileData, 'type' | 'hit'>>): ProjectileData {\n    return {\n      type: ProjectileData.Type,\n      sourceEntityId: args ? args.sourceEntityId : 0,\n      weapon: args ? args.weapon : undefined as any,\n      damage: args ? args.damage : 0,\n      effects: args ? args.effects : [],\n      start: args ? vec2.clone(args.start) : vec2.fromValues(0, 0),\n      end: args ? vec2.clone(args.end) : vec2.fromValues(0, 0),\n      lifetime: args ? args.lifetime : 0,\n      texture: args ? args.texture : '',\n      hit: new Set<string>()\n    };\n  }\n\n  export function serialize(trait: ProjectileData) {\n    return {\n      sourceEntityId: trait.sourceEntityId,\n      weapon: trait.weapon,\n      damage: trait.damage,\n      effects: trait.effects,\n      lifetime: trait.lifetime,\n      start: [trait.start[0], trait.start[1]],\n      end: [trait.end[0], trait.end[1]],\n      texture: trait.texture,\n      hit: Array.from(trait.hit)\n    };\n  }\n\n  export function deserialize(data: any, trait: ProjectileData): ProjectileData {\n    return defaults({\n      sourceEntityId: data.sourceEntityId,\n      weapon: data.weapon,\n      damage: data.damage,\n      effects: data.effects,\n      lifetime: data.lifetime,\n      start: data.start && vec2.fromValues(data.start[0], data.start[1]),\n      end: data.end && vec2.fromValues(data.end[0], data.end[1]),\n      texture: data.texture,\n      hit: data.hit && new Set(data.hit)\n    }, trait);\n  }\n}\nTrait.types.set(ProjectileData.Type, ProjectileData);","import { Trait } from 'app/game/traits';\nimport { EnemyDef } from 'common/data';\nimport { defaults } from 'lodash';\n\nexport interface EnemyData extends Trait {\n  readonly type: typeof EnemyData.Type;\n  def: EnemyDef;\n}\n\nexport namespace EnemyData {\n  export declare const _mark: EnemyData;\n  export const Type = 'enemy-data';\n\n  export function make(def: EnemyDef): EnemyData {\n    return {\n      type: EnemyData.Type,\n      def\n    };\n  }\n\n  export function serialize(trait: EnemyData) {\n    return {\n      def: trait.def,\n    };\n  }\n\n  export function deserialize(data: any, trait: EnemyData): EnemyData {\n    return defaults({\n      def: data.def,\n    }, trait);\n  }\n}\nTrait.types.set(EnemyData.Type, EnemyData);","import { BehaviorTree } from 'app/game/behavior';\nimport { Trait } from 'app/game/traits';\nimport { defaults } from 'lodash';\n\nexport interface Behavior extends Trait {\n  readonly type: typeof Behavior.Type;\n  behaviors: BehaviorTree;\n}\n\nexport namespace Behavior {\n  export declare const _mark: Behavior;\n  export const Type = 'behavior';\n\n  export function make(behaviors: BehaviorTree): Behavior {\n    return {\n      type: Behavior.Type,\n      behaviors\n    };\n  }\n\n  export function serialize(trait: Behavior) {\n    return {\n      behaviors: trait.behaviors,\n    };\n  }\n\n  export function deserialize(data: any, trait: Behavior): Behavior {\n    return defaults({\n      behaviors: data.behaviors,\n    }, trait);\n  }\n}\nTrait.types.set(Behavior.Type, Behavior);","import { Trait } from 'app/game/traits';\nimport { vec2 } from 'gl-matrix';\nimport { defaults } from 'lodash';\n\nexport interface Collidable extends Trait {\n  readonly size: vec2;\n  mass: number;\n}\n\nexport namespace Collidable {\n  export declare const _mark: Collidable;\n  export const Type = 'collidable';\n\n  export function make(): Collidable {\n    return {\n      type: Collidable.Type,\n      mass: 1,\n      size: vec2.fromValues(0.5, 0.5)\n    };\n  }\n\n  export function serialize(trait: Collidable) {\n    return {\n      size: [trait.size[0], trait.size[1]],\n      mass: trait.mass,\n    };\n  }\n\n  export function deserialize(data: any, trait: Collidable): Collidable {\n    return defaults({\n      size: data.size && vec2.fromValues(data.size[0], data.size[1]),\n      mass: trait.mass,\n    }, trait);\n  }\n}\nTrait.types.set(Collidable.Type, Collidable);","import { Action, ActionKind, ActionState, Condition, ConditionState } from 'app/game/behavior';\nimport { Entity } from 'app/game/entities';\nimport { Stats } from 'app/game/traits';\n\ninterface BehaviorState {\n  readonly condition: ConditionState;\n  readonly actions: ActionState[];\n}\n\nexport interface BehaviorTree {\n  readonly states: BehaviorState[];\n  activeStateIndex: number;\n}\n\nexport namespace BehaviorTree {\n  export const actions = new Map<string, Action<any>>();\n  export const conditions = new Map<string, Condition<any>>();\n\n  export function registerAction(action: Action<any>) {\n    actions.set(action.Type, action);\n  }\n  export function registerCondition(condition: Condition<any>) {\n    conditions.set(condition.Type, condition);\n  }\n\n  export function dump(tree: BehaviorTree) {\n    return tree.states.map(state => {\n      const texts :string[] = [];\n      texts.push(`When ${conditions.get(state.condition.type)!.dump(state.condition)}:`);\n      for (const action of state.actions) {\n        texts.push('  ' + actions.get(action.type)!.dump(action));\n      }\n      return texts.join('\\n');\n    }).join('\\n\\n');\n  }\n\n  export function run(self: Entity, dt: number, tree: BehaviorTree) {\n    const context = {\n      game: self.game,\n      self,\n      state: undefined as any\n    };\n\n    // state transitions\n    let active = tree.activeStateIndex;\n    for (let i = 0; i < tree.states.length; i++) {\n      const condition = conditions.get(tree.states[i].condition.type)!;\n      context.state = tree.states[i].condition;\n      const fulfilled = condition.isFulfilled.call(context);\n      if (fulfilled)\n        active = i;\n    }\n    if (active < 0) active = 0;\n\n    // activate/deactivate state\n    if (active !== tree.activeStateIndex) {\n      if (tree.activeStateIndex >= 0)\n        for (const actionState of tree.states[tree.activeStateIndex].actions) {\n          const action = actions.get(actionState.type)!;\n          context.state = actionState;\n          action.end && action.end.call(context);\n        }\n\n      for (const actionState of tree.states[active].actions) {\n        const action = actions.get(actionState.type)!;\n        context.state = actionState;\n        action.begin && action.begin.call(context);\n      }\n      tree.activeStateIndex = active;\n    }\n\n    // perform state actions\n    let moved = false;\n    for (const actionState of tree.states[active].actions) {\n      const action = actions.get(actionState.type)!;\n      context.state = actionState;\n\n      if (action.Kind === ActionKind.Movement && (moved || !Stats.canMove(self.traits.get(Stats))))\n        continue;\n\n      const ok = action.tick.call(context, dt);\n      if (ok && action.Kind === ActionKind.Movement)\n        moved = true;\n    }\n  }\n}","import { BehaviorContext } from 'app/game/behavior';\n\nexport enum ActionKind {\n  Movement = 'movement',\n  Attack = 'attack',\n  Effect = 'effect',\n}\n\nexport interface ActionState {\n  readonly type: string;\n}\n\nexport interface Action<State extends ActionState> {\n  readonly _state: State;\n  readonly Type: string;\n  readonly Kind: ActionKind;\n\n  mutate(state: State): State;\n  dump(state: State): string;\n\n  begin?(this: BehaviorContext<State>): void;\n  tick(this: BehaviorContext<State>, dt: number): boolean;\n  end?(this: BehaviorContext<State>): void;\n}","import { BehaviorContext, BehaviorTree, ConditionState } from 'app/game/behavior';\nimport { Stats } from 'app/game/traits';\n\nexport interface HP extends ConditionState {\n  readonly type: typeof HP.Type;\n\n  readonly targetId: number;\n  readonly threshold: number;\n  readonly isGreater: boolean;\n}\n\nexport namespace HP {\n  export declare const _state: HP;\n  export const Type = 'hp';\n\n  export function mutate(state: HP) {\n    return {\n      ...state,\n      threshold: state.threshold + (Math.random() * 0.2 - 0.1)\n    };\n  }\n\n  export function dump(state: HP) {\n    return `HP of target is ${state.isGreater ? 'greater' : 'less'} than ${(state.threshold * 100).toFixed(1)}%`;\n  }\n\n  export function isFulfilled(this: BehaviorContext<HP>) {\n    const target = this.state.targetId ? this.game.entities.get(this.state.targetId) : this.self;\n    if (!target) return false;\n\n    const { hp, maxHp } = Stats.compute(target.traits.get(Stats));\n    if (this.state.isGreater)\n      return (hp / maxHp) > this.state.threshold;\n    else\n      return (hp / maxHp) <= this.state.threshold;\n  }\n\n  export function greaterThan(threshold: number, targetId = 0): HP {\n    return {\n      type: Type,\n      threshold: threshold,\n      isGreater: true,\n      targetId\n    };\n  }\n\n  export function lessThan(threshold: number, targetId = 0): HP {\n    return {\n      type: Type,\n      threshold: threshold,\n      isGreater: false,\n      targetId\n    };\n  }\n}\nBehaviorTree.registerCondition(HP);","import { BehaviorContext, BehaviorTree, ConditionState } from 'app/game/behavior';\nimport { cloneDeep } from 'lodash';\n\nexport interface AtSpawn extends ConditionState {\n  readonly type: typeof AtSpawn.Type;\n}\n\nexport namespace AtSpawn {\n  export declare const _state: AtSpawn;\n  export const Type = 'at-spawn';\n\n  export function mutate(state: AtSpawn) {\n    return cloneDeep(state);\n  }\n\n  export function dump(state: AtSpawn) {\n    return 'at spawn';\n  }\n\n  export function isFulfilled(this: BehaviorContext<AtSpawn>) {\n    return this.self.age === 0;\n  }\n\n  export function make(): AtSpawn {\n    return {\n      type: Type\n    };\n  }\n}\nBehaviorTree.registerCondition(AtSpawn);","import { BehaviorContext, BehaviorTree, ConditionState } from 'app/game/behavior';\nimport { Spatial } from 'app/game/traits';\nimport { vec2 } from 'gl-matrix';\n\nexport interface Distance extends ConditionState {\n  readonly type: typeof Distance.Type;\n\n  readonly targetId: number;\n  readonly threshold: number;\n  readonly isGreater: boolean;\n}\n\nexport namespace Distance {\n  export declare const _state: Distance;\n  export const Type = 'distance';\n\n  export function mutate(state: Distance) {\n    return {\n      ...state,\n      threshold: state.threshold + (Math.random() * 4 - 2)\n    };\n  }\n\n  export function dump(state: Distance) {\n    return `distance with target is ${state.isGreater ? 'greater' : 'less'} than ${state.threshold.toFixed(1)}`;\n  }\n\n  const dist = vec2.create();\n  export function isFulfilled(this: BehaviorContext<Distance>) {\n    const target = this.state.targetId ? this.game.entities.get(this.state.targetId) : this.game.player;\n    if (!target) return false;\n\n    const { position: a } = target.traits.get(Spatial);\n    const { position: b } = this.self.traits.get(Spatial);\n    vec2.sub(dist, a, b);\n    const d = vec2.length(dist);\n\n    if (this.state.isGreater)\n      return d > this.state.threshold;\n    else\n      return d <= this.state.threshold;\n  }\n\n  export function greaterThan(threshold: number, targetId = 0): Distance {\n    return {\n      type: Type,\n      threshold: threshold,\n      isGreater: true,\n      targetId\n    };\n  }\n\n  export function lessThan(threshold: number, targetId = 0): Distance {\n    return {\n      type: Type,\n      threshold: threshold,\n      isGreater: false,\n      targetId\n    };\n  }\n}\nBehaviorTree.registerCondition(Distance);","import { gaussianRandom } from 'common/random';\n\nexport function tilePerSecond(spd: number) {\n  return 1 + Math.max(0, spd * 4 / 10);\n}\n\nexport function healPerTick(vit: number) {\n  return Math.max(0, vit / 500);\n}\n\nexport function computeDamage(power: number, str: number) {\n  const strMul = (1 + (str - 10) / 50) * gaussianRandom(1, 0.25, 0.5, 1.5);\n  return power * strMul;\n}\n\nexport function knockbackSpeed(knockback: number) {\n  return 5 + knockback * 1.5;\n}","import { Entity } from 'app/game/entities';\nimport { Stats } from 'app/game/traits';\nimport { tilePerSecond } from 'common/logic/stats';\nimport { vec2 } from 'gl-matrix';\n\nexport function computeVelocity(velocity: vec2, direction: vec2 | [number, number], entity: Entity) {\n  const { spd } = Stats.compute(entity.traits.get(Stats));\n  const speed = tilePerSecond(spd);\n  vec2.scale(velocity, direction, speed);\n}","import { ActionKind, ActionState, BehaviorContext, BehaviorTree } from 'app/game/behavior';\nimport { computeVelocity } from 'app/game/behavior/utils';\nimport { Spatial } from 'app/game/traits';\nimport { vec2 } from 'gl-matrix';\nimport { cloneDeep } from 'lodash';\n\nconst ChaseInterval = 250;\nconst ChaseRadius = 8;\n\nexport interface Chase extends ActionState {\n  readonly type: typeof Chase.Type;\n\n  readonly targetId: number;\n\n  interval: number;\n  readonly direction: [number, number];\n}\n\nexport namespace Chase {\n  export declare const _state: Chase;\n  export const Type = 'chase';\n  export const Kind = ActionKind.Movement;\n\n  export function mutate(state: Chase) {\n    return cloneDeep(state);\n  }\n\n  export function dump(state: Chase) {\n    return 'Chase target';\n  }\n\n  const direction = vec2.create();\n  export function tick(this: BehaviorContext<Chase>, dt: number) {\n    const { position, velocity } = this.self.traits.get(Spatial);\n\n    const target = this.state.targetId ? this.game.entities.get(this.state.targetId) : this.game.player;\n    if (!target) return false;\n\n    const { position: targetPosition } = target.traits.get(Spatial);\n\n    vec2.subtract(direction, targetPosition, position);\n    const distance = vec2.length(direction);\n    if (distance > ChaseRadius) return false;\n\n    if (this.state.interval > 0) {\n      this.state.interval -= dt;\n      computeVelocity(velocity, this.state.direction, this.self);\n      return true;\n    }\n    this.state.interval = ChaseInterval;\n\n    vec2.normalize(direction, direction);\n    computeVelocity(velocity, this.state.direction, this.self);\n    this.state.direction[0] = direction[0];\n    this.state.direction[1] = direction[1];\n    return true;\n  }\n\n  export function make(targetId = 0): Chase {\n    return {\n      type: Type,\n      targetId,\n      interval: 0,\n      direction: [0, 0]\n    };\n  }\n}\nBehaviorTree.registerAction(Chase);","import { ActionKind, ActionState, BehaviorContext, BehaviorTree } from 'app/game/behavior';\nimport { Spatial, Stats } from 'app/game/traits';\nimport { tilePerSecond } from 'common/logic/stats';\nimport { vec2 } from 'gl-matrix';\nimport { cloneDeep } from 'lodash';\n\nconst WanderInterval = 200;\n\nexport interface Wander extends ActionState {\n  readonly type: typeof Wander.Type;\n\n  interval: number;\n  readonly velocity: [number, number];\n}\n\nexport namespace Wander {\n  export declare const _state: Wander;\n  export const Type = 'wander';\n  export const Kind = ActionKind.Movement;\n\n  export function mutate(state: Wander) {\n    return cloneDeep(state);\n  }\n\n  export function dump(state: Wander) {\n    return 'Wander around';\n  }\n\n  export function tick(this: BehaviorContext<Wander>, dt: number) {\n    const { velocity } = this.self.traits.get(Spatial);\n\n    if (this.state.interval > 0) {\n      this.state.interval -= dt;\n      vec2.copy(velocity, this.state.velocity);\n      return true;\n    }\n    this.state.interval = WanderInterval;\n\n    const { spd } = Stats.compute(this.self.traits.get(Stats));\n    vec2.random(velocity);\n    vec2.scale(velocity, velocity, tilePerSecond(spd * 0.5));\n    this.state.velocity[0] = velocity[0];\n    this.state.velocity[1] = velocity[1];\n    return true;\n  }\n\n  export function make(): Wander {\n    return {\n      type: Type,\n      interval: 0,\n      velocity: [0, 0]\n    };\n  }\n}\nBehaviorTree.registerAction(Wander);","import { ActionKind, ActionState, BehaviorContext, BehaviorTree } from 'app/game/behavior';\nimport { computeVelocity } from 'app/game/behavior/utils';\nimport { Spatial, Stats } from 'app/game/traits';\nimport { tilePerSecond } from 'common/logic/stats';\nimport { vec2 } from 'gl-matrix';\nimport { cloneDeep } from 'lodash';\n\nconst SpeedMultiplier = 5;\n\nexport interface Charge extends ActionState {\n  readonly type: typeof Charge.Type;\n\n  readonly targetId: number;\n\n  interval: number;\n  cooldown: number;\n  readonly direction: [number, number];\n}\n\nexport namespace Charge {\n  export declare const _state: Charge;\n  export const Type = 'charge';\n  export const Kind = ActionKind.Movement;\n\n  export function mutate(state: Charge) {\n    return cloneDeep(state);\n  }\n\n  export function dump(state: Charge) {\n    return 'Charge towards target';\n  }\n\n  const direction = vec2.create();\n  export function tick(this: BehaviorContext<Charge>, dt: number) {\n    const { position, velocity } = this.self.traits.get(Spatial);\n\n    const target = this.state.targetId ? this.game.entities.get(this.state.targetId) : this.game.player;\n    if (!target) return false;\n\n    if (this.state.interval > 0) {\n      this.state.interval -= dt;\n      computeVelocity(velocity, this.state.direction, this.self);\n      return true;\n    } else if (this.state.cooldown > 0) {\n      this.state.cooldown -= dt;\n      return false;\n    }\n\n    const { position: targetPosition } = target.traits.get(Spatial);\n    vec2.subtract(direction, targetPosition, position);\n    const { spd } = Stats.compute(this.self.traits.get(Stats));\n    this.state.interval = Math.min(3000, (vec2.length(direction) + 5) / (tilePerSecond(spd) * SpeedMultiplier) * 1000);\n    this.state.cooldown = Math.max(2500, this.state.interval);\n\n    vec2.normalize(direction, direction);\n    vec2.scale(direction, direction, SpeedMultiplier);\n    computeVelocity(velocity, direction, this.self);\n    this.state.direction[0] = direction[0];\n    this.state.direction[1] = direction[1];\n    return true;\n  }\n\n  export function make(targetId = 0): Charge {\n    return {\n      type: Type,\n      targetId,\n      interval: 0,\n      cooldown: 0,\n      direction: [0, 0]\n    };\n  }\n}\nBehaviorTree.registerAction(Charge);","import { ActionKind, ActionState, BehaviorContext, BehaviorTree } from 'app/game/behavior';\nimport { computeVelocity } from 'app/game/behavior/utils';\nimport { Spatial } from 'app/game/traits';\nimport { vec2 } from 'gl-matrix';\nimport { cloneDeep } from 'lodash';\n\nconst EscapeRadius = 5;\n\nexport interface Escape extends ActionState {\n  readonly type: typeof Escape.Type;\n\n  readonly targetId: number;\n}\n\nexport namespace Escape {\n  export declare const _state: Escape;\n  export const Type = 'escape';\n  export const Kind = ActionKind.Movement;\n\n  export function mutate(state: Escape) {\n    return cloneDeep(state);\n  }\n\n  export function dump(state: Escape) {\n    return 'Escape from target';\n  }\n\n  export function tick(this: BehaviorContext<Escape>, dt: number) {\n    const { position, velocity } = this.self.traits.get(Spatial);\n\n    const target = this.state.targetId ? this.game.entities.get(this.state.targetId) : this.game.player;\n    if (!target) return false;\n\n    const { position: targetPosition } = target.traits.get(Spatial);\n\n    vec2.subtract(velocity, targetPosition, position);\n    const distance = vec2.length(velocity);\n    if (distance > EscapeRadius) return false;\n\n    vec2.normalize(velocity, velocity);\n    vec2.scale(velocity,velocity, -0.5);\n    computeVelocity(velocity, velocity, this.self);\n    return true;\n  }\n\n  export function make(targetId = 0): Escape {\n    return {\n      type: Type,\n      targetId\n    };\n  }\n}\nBehaviorTree.registerAction(Escape);","import { ActionKind, ActionState, BehaviorContext, BehaviorTree } from 'app/game/behavior';\nimport { Attack } from 'app/game/messages';\nimport { Spatial } from 'app/game/traits';\nimport { Effect, Weapon } from 'common/data';\nimport { vec2 } from 'gl-matrix';\nimport { clamp, cloneDeep } from 'lodash';\n\nconst ShootRadius = 12;\n\nexport interface Shoot extends ActionState {\n  readonly type: typeof Shoot.Type;\n\n  readonly numShoots: number;\n  readonly angle: number;\n  readonly offset: number;\n  readonly weapon: Weapon;\n  readonly effects: Effect[];\n  readonly duration: number;\n  readonly delay: number;\n\n  cooldown: number;\n}\n\nexport namespace Shoot {\n  export declare const _state: Shoot;\n  export const Type = 'shoot';\n  export const Kind = ActionKind.Attack;\n\n  export function mutate(state: Shoot) {\n    const isRing = Math.abs((state.angle * state.numShoots) - Math.PI * 2) < 0.0001;\n    const mutateType = Math.floor(Math.random() * 3);\n    const newState = cloneDeep(state);\n\n    switch (mutateType) {\n      case 0: // cooldown\n        Object.assign(newState, {\n          duration: clamp(newState.duration * (1 + (Math.random() * 2 - 1) * 0.25), 500, 5000),\n          delay: clamp(newState.delay * (1 + (Math.random() * 2 - 1) * 0.25), 0, 5000),\n        });\n        break;\n      case 1: // shoots\n        const numShoots = clamp(newState.numShoots + Math.floor(Math.random() * 6 - 3), 0, 10);\n        Object.assign(newState, {\n          numShoots,\n          angle: isRing ? Math.PI * 2 / numShoots : newState.angle\n        });\n        break;\n      case 2: // angle\n        Object.assign(newState, {\n          angle: clamp(newState.angle + (Math.random() - 0.5), 0, Math.PI * 2 / newState.numShoots)\n        });\n        break;\n      case 3: // range\n        Object.assign(newState.weapon, {\n          range: clamp(newState.weapon.range + (Math.random() * 4 - 2), 2, 15)\n        });\n        break;\n      case 4: // strength\n        Object.assign(newState.weapon, {\n          strength: clamp(newState.weapon.strength + (Math.random() * 6 - 3), 1, 50)\n        });\n        break;\n    }\n    Object.assign(newState.weapon, { type: Math.random() < 0.5 ? Weapon.Type.Bolt : Weapon.Type.Orb });\n    newState.cooldown = newState.delay;\n    return newState;\n  }\n\n  export function dump(state: Shoot) {\n    const texts: any[] = [];\n    texts.push(`Shoot ${state.numShoots} projectiles of damage ${state.weapon.strength.toFixed(1)}`);\n    if (state.numShoots > 1) {\n      texts.push(`with angle ${(state.angle * 180 / Math.PI).toFixed(1)}`);\n    }\n    texts.push(`, reaches ${state.weapon.range.toFixed(1)} in ${(state.duration / 1000).toFixed(2)} seconds`);\n    return texts.join(' ');\n  }\n\n  const direction = vec2.create();\n  const target = vec2.create();\n  export function tick(this: BehaviorContext<Shoot>, dt: number) {\n    if (this.state.cooldown > 0) {\n      this.state.cooldown -= dt;\n      return false;\n    }\n    this.state.cooldown = this.state.weapon.cooldown;\n\n    const { position } = this.self.traits.get(Spatial);\n    const { position: targetPosition } = this.game.player.traits.get(Spatial);\n    vec2.subtract(direction, targetPosition, position);\n    const distance = vec2.length(direction);\n    if (distance > ShootRadius) return false;\n\n    vec2.normalize(direction, direction);\n    const beginAngle = -((this.state.numShoots - 1) * this.state.angle) / 2 +\n      ((this.state.numShoots + 1) % 2) * this.state.angle / 2;\n    for (let i = 0; i < this.state.numShoots; i++) {\n      const angle = beginAngle + this.state.angle * i;\n      target[0] = direction[0] * Math.cos(angle) - direction[1] * Math.sin(angle);\n      target[1] = direction[0] * Math.sin(angle) + direction[1] * Math.cos(angle);\n      vec2.add(target, target, position);\n      this.game.dispatch(new Attack(\n        this.self.id, this.state.weapon, target,\n        this.state.effects, this.state.duration\n      ));\n    }\n    return true;\n  }\n\n  export function make(\n    weapon: Weapon, effects: Effect[], duration: number,\n    numShoots = 1, angle = 15, offset = 0, delay = 0\n  ): Shoot {\n    return {\n      type: Type,\n      weapon,\n      effects,\n      duration,\n      numShoots,\n      angle: angle * Math.PI / 180,\n      offset,\n      delay,\n      cooldown: delay\n    };\n  }\n}\nBehaviorTree.registerAction(Shoot);","import { ActionKind, ActionState, BehaviorContext, BehaviorTree } from 'app/game/behavior';\nimport { ApplyEffects } from 'app/game/messages';\nimport { Effect } from 'common/data';\nimport { cloneDeep } from 'lodash';\n\nexport interface Buff extends ActionState {\n  readonly type: typeof Buff.Type;\n\n  readonly targetId: number;\n  readonly interval: number;\n  readonly effects: Effect[];\n\n  cooldown: number;\n}\n\nexport namespace Buff {\n  export declare const _state: Buff;\n  export const Type = 'buff';\n  export const Kind = ActionKind.Effect;\n\n  export function mutate(state: Buff) {\n    return cloneDeep(state);\n  }\n\n  export function dump(state: Buff) {\n    return 'Buff target with effects';\n  }\n\n  export function tick(this: BehaviorContext<Buff>, dt: number) {\n    if (this.state.cooldown > 0) {\n      this.state.cooldown -= dt;\n      return false;\n    }\n    this.state.cooldown = this.state.cooldown;\n\n    this.game.dispatch(new ApplyEffects(this.state.targetId || this.self.id, this.state.effects.slice()));\n    return true;\n  }\n\n  export function make(effects: Effect[], cooldown: number, targetId = 0): Buff {\n    return {\n      type: Type,\n      targetId,\n      interval: cooldown,\n      effects,\n      cooldown: 0\n    };\n  }\n}\nBehaviorTree.registerAction(Buff);","import { ActionKind, ActionState, BehaviorContext, BehaviorTree } from 'app/game/behavior';\nimport { SpawnEnemy } from 'app/game/messages';\nimport { Spatial } from 'app/game/traits';\nimport { vec2 } from 'gl-matrix';\nimport { cloneDeep } from 'lodash';\n\nexport interface Spawn extends ActionState {\n  readonly type: typeof Spawn.Type;\n\n  readonly enemyType: string;\n  readonly interval: number;\n\n  cooldown: number;\n}\n\nexport namespace Spawn {\n  export declare const _state: Spawn;\n  export const Type = 'spawn';\n  export const Kind = ActionKind.Effect;\n\n  export function mutate(state: Spawn) {\n    return cloneDeep(state);\n  }\n\n  export function dump(state: Spawn) {\n    return `Spawn ${state.enemyType}`;\n  }\n\n  const position = vec2.create();\n  export function tick(this: BehaviorContext<Spawn>, dt: number) {\n    if (this.state.cooldown > 0) {\n      this.state.cooldown -= dt;\n      return false;\n    }\n    this.state.cooldown = this.state.interval;\n\n    vec2.random(position);\n    vec2.add(position, this.self.traits.get(Spatial).position, position);\n    this.game.dispatch(new SpawnEnemy(this.state.enemyType, position));\n    return true;\n  }\n\n  export function make(enemyType: string, cooldown: number): Spawn {\n    return {\n      type: Type,\n      enemyType: enemyType.toLowerCase(),\n      interval: cooldown,\n      cooldown: 0\n    };\n  }\n}\nBehaviorTree.registerAction(Spawn);","import { ActionKind, ActionState, BehaviorContext, BehaviorTree } from 'app/game/behavior';\nimport { cloneDeep } from 'lodash';\n\nexport interface Suicide extends ActionState {\n  readonly type: typeof Suicide.Type;\n}\n\nexport namespace Suicide {\n  export declare const _state: Suicide;\n  export const Type = 'suicide';\n  export const Kind = ActionKind.Effect;\n\n  export function mutate(state: Suicide) {\n    return cloneDeep(state);\n  }\n\n  export function dump(state: Suicide) {\n    return 'Destroy self';\n  }\n\n  export function tick(this: BehaviorContext<Suicide>, dt: number) {\n    this.self.delete();\n    return true;\n  }\n\n  export function make(targetId = 0): Suicide {\n    return {\n      type: Type\n    };\n  }\n}\nBehaviorTree.registerAction(Suicide);","import { TextureDef } from 'common/data';\n\nexport const Animations: Record<string, TextureDef> = {\n  Player: {\n    type: 'animation',\n    anims: {\n      'left': { frameId: 'sprites/player/left', numFrames: 8, fps: 15 },\n      'right': { frameId: 'sprites/player/right', numFrames: 8, fps: 15 },\n      'up': { frameId: 'sprites/player/up', numFrames: 8, fps: 15 },\n      'down': { frameId: 'sprites/player/down', numFrames: 8, fps: 15 },\n\n      'fist-left': { frameId: 'sprites/player/fist-left', numFrames: 5, fps: 15 },\n      'fist-right': { frameId: 'sprites/player/fist-right', numFrames: 5, fps: 15 },\n      'fist-up': { frameId: 'sprites/player/fist-up', numFrames: 5, fps: 15 },\n      'fist-down': { frameId: 'sprites/player/fist-down', numFrames: 5, fps: 15 },\n\n      'sword-left': { frameId: 'sprites/player/sword-left', numFrames: 5, fps: 15 },\n      'sword-right': { frameId: 'sprites/player/sword-right', numFrames: 5, fps: 15 },\n      'sword-up': { frameId: 'sprites/player/sword-up', numFrames: 5, fps: 15 },\n      'sword-down': { frameId: 'sprites/player/sword-down', numFrames: 5, fps: 15 },\n\n      'spear-left': { frameId: 'sprites/player/spear-left', numFrames: 7, fps: 10 },\n      'spear-right': { frameId: 'sprites/player/spear-right', numFrames: 7, fps: 10 },\n      'spear-up': { frameId: 'sprites/player/spear-up', numFrames: 7, fps: 10 },\n      'spear-down': { frameId: 'sprites/player/spear-down', numFrames: 7, fps: 10 },\n\n      'arrow-left': { frameId: 'sprites/player/arrow-left', numFrames: 11, fps: 48 },\n      'arrow-right': { frameId: 'sprites/player/arrow-right', numFrames: 11, fps: 48 },\n      'arrow-up': { frameId: 'sprites/player/arrow-up', numFrames: 11, fps: 48 },\n      'arrow-down': { frameId: 'sprites/player/arrow-down', numFrames: 11, fps: 48 },\n    }\n  },\n  Skeleton: {\n    type: 'animation',\n    anims: {\n      'left': { frameId: 'sprites/skeleton/left', numFrames: 8, fps: 15 },\n      'right': { frameId: 'sprites/skeleton/right', numFrames: 8, fps: 15 },\n      'up': { frameId: 'sprites/skeleton/up', numFrames: 8, fps: 15 },\n      'down': { frameId: 'sprites/skeleton/down', numFrames: 8, fps: 15 },\n    }\n  },\n  Dragon: {\n    type: 'animation',\n    anims: {\n      'left': { frameId: 'sprites/dragons/left', numFrames: 1, fps: 1 },\n      'right': { frameId: 'sprites/dragons/right', numFrames: 1, fps: 1 },\n    }\n  }\n};","import * as a from 'app/game/behavior/actions';\nimport * as c from 'app/game/behavior/conditions';\nimport { EnemyDef, Item, Weapon } from 'common/data';\nimport { makeEffect } from 'common/logic/effect/common';\nimport { Animations } from 'data/animations';\nimport { EffectDef } from 'data/effects';\n\nexport const Enemies: Record<string, EnemyDef> = {\n  skeleton: {\n    name: 'Skeleton',\n    texture: Animations.Skeleton,\n    scale: 1,\n    horizontalAnim: false,\n    offset: [0, -0.25],\n    behaviors: {\n      activeStateIndex: -1,\n      states: [{\n        condition: c.HP.greaterThan(0.7),\n        actions: [\n          a.Chase.make(),\n          a.Wander.make(),\n          a.Shoot.make({\n            type: Weapon.Type.Invisible,\n            pierce: true,\n            strength: 5,\n            cooldown: 100,\n            knockback: 10,\n            range: 1,\n            color: '000000'\n          }, [], 100)\n        ]\n      }, {\n        condition: c.HP.lessThan(0.5),\n        actions: [\n          a.Escape.make(),\n          a.Wander.make(),\n          a.Shoot.make({\n            type: Weapon.Type.Invisible,\n            pierce: true,\n            strength: 5,\n            cooldown: 100,\n            knockback: 10,\n            range: 1,\n            color: '000000'\n          }, [], 100)\n        ]\n      }]\n    },\n    drops: {\n      numDrops: { type: 'exponential', min: 2, max: 5, rate: 0.7 },\n      items: [{\n        prob: 1, item: {\n          template: {\n            id: 'bone',\n            name: 'Bone',\n            type: Item.Type.Material,\n            texture: { type: 'single', tex: 'sprites/items/bone', tint: 'ccb396' },\n            material: {\n              name: 'Bone',\n              color: 'ccb396',\n              weight: 0.1,\n              toughness: 0.1,\n              sharpness: 0.15,\n              affinity: 0.15,\n            },\n          },\n          substs: []\n        }\n      }]\n    },\n    stats: {\n      hp: 50,\n      maxHp: 50,\n      str: 10,\n      def: 0,\n      spd: 5,\n      vit: 0\n    }\n  },\n  egg: {\n    name: 'Egg',\n    texture: 'sprites/dragons/egg',\n    scale: 1,\n    horizontalAnim: false,\n    offset: [0, -0.25],\n    behaviors: {\n      activeStateIndex: -1,\n      states: [{\n        condition: c.HP.greaterThan(0.99),\n        actions: [\n          a.Buff.make([makeEffect(EffectDef.Type.KnockbackResist, 0, 1000000)], 500000)\n        ]\n      }, {\n        condition: c.HP.lessThan(0.99),\n        actions: [\n          a.Spawn.make('dragon', 0),\n          a.Suicide.make()\n        ]\n      }]\n    },\n    drops: {\n      numDrops: { type: 'constant', value: 0 },\n      items: []\n    },\n    stats: {\n      hp: 10000,\n      maxHp: 10000,\n      str: 0,\n      def: 0,\n      spd: 0,\n      vit: 10\n    }\n  },\n  spawner: {\n    name: 'Skeleton Spawner',\n    texture: 'sprites/skeleton/spawner',\n    scale: 1,\n    horizontalAnim: false,\n    offset: [0, -0.25],\n    behaviors: {\n      activeStateIndex: -1,\n      states: [{\n        condition: c.HP.greaterThan(0),\n        actions: [\n          a.Buff.make([makeEffect(EffectDef.Type.KnockbackResist, 0, 1000000)], 500000),\n        ]\n      }, {\n        condition: c.Distance.lessThan(8),\n        actions: [\n          a.Buff.make([makeEffect(EffectDef.Type.KnockbackResist, 0, 1000000)], 500000),\n          a.Spawn.make('skeleton', 10000),\n          a.Shoot.make({\n            type: Weapon.Type.Bolt,\n            pierce: true,\n            strength: 10,\n            cooldown: 5000,\n            knockback: 10,\n            range: 10,\n            color: '404040'\n          }, [], 1000, 10, 36)\n        ]\n      }]\n    },\n    drops: {\n      numDrops: { type: 'constant', value: 0 },\n      items: []\n    },\n    stats: {\n      hp: 100,\n      maxHp: 150,\n      str: 10,\n      def: 0,\n      spd: 0,\n      vit: 5\n    }\n  }\n};","import { Enemies } from 'app/game/behavior/enemies';\nimport { GameSave } from 'common/data';\nimport work from 'webworkify-webpack';\n\nexport interface ProgressReporter {\n  (message: string | null, progress: number): void;\n}\n\nexport class Generator {\n  private readonly worker: Worker = work(require.resolve('worker'));\n\n  constructor(\n    public readonly width: number,\n    public readonly height: number,\n    public readonly seed = ''\n  ) {\n\n  }\n\n  public async generate(report: ProgressReporter = () => { }) {\n    const save = await new Promise<GameSave>(resolve => {\n      this.worker.onmessage = ev => {\n        if (ev.data.action === 'completed')\n          resolve(GameSave.load(ev.data.save));\n        else if (ev.data.action === 'progress')\n          report(ev.data.message, ev.data.progress);\n      };\n\n      this.worker.postMessage({\n        action: 'generate',\n        width: this.width,\n        height: this.height,\n        seed: this.seed,\n        enemies: Enemies\n      });\n    });\n    this.worker.terminate();\n    return save;\n  }\n}","import { Game } from 'app/game';\nimport { Trait, TraitType } from 'app/game/traits';\n\nexport abstract class Entity {\n  private _game: Game | null;\n  public get game() { return this._game; }\n\n  public readonly id: number;\n  public abstract get type(): string;\n\n  public static types = new Map<string, EntityType>();\n\n  constructor(game: Game, id?: number) {\n    this._game = game;\n    this.id = id || (game.data.props.nextEntityId++);\n    this.init();\n  }\n\n  public init() {\n  }\n\n  public hydrate() {\n  }\n\n  public delete() {\n    if (!this._game) return;\n    this._game.entities.delete(this);\n    this._game = null;\n  }\n\n  public age: number = 0;\n\n  private _traits = new Map<string, Trait>();\n  public traits = Object.assign(<T extends Trait, Arg>(trait: TraitType<T, Arg>, arg?: Arg) => {\n    let t: T = this._traits.get(trait.Type) as T;\n    if (!t) {\n      t = trait.make(arg);\n      this._traits.set(t.type, t);\n    }\n    return t;\n  }, {\n      get: <T extends Trait>(trait: TraitType<T>) => {\n        return this._traits.get(trait.Type) as T;\n      },\n      set: <T extends Trait>(trait: T) => {\n        this._traits.set(trait.type, trait);\n      },\n      list: () => this._traits.values()\n    });\n}\n\nexport interface EntityType<T extends Entity = Entity> {\n  new(game: Game, id?: number): T;\n  readonly _mark: T;\n  readonly Type: string;\n}\n","import { Entity } from 'app/game/entities';\nimport { Collidable, Inventory, PlayerData, Spatial, Stats } from 'app/game/traits';\nimport { Item } from 'common/data';\nimport { Animations } from 'data/animations';\nimport { vec2 } from 'gl-matrix';\n\nexport class Player extends Entity {\n  public static _mark: Player;\n  public static readonly Type = 'player';\n  public get type() { return Player.Type; }\n\n  init() {\n    const spatial = this.traits(Spatial);\n    vec2.set(spatial.scale, 2, 2);\n    vec2.set(spatial.offset, 0, -0.25);\n\n    const collidable = this.traits(Collidable);\n    vec2.set(collidable.size, 0.25, 0.25);\n\n    const inventory = this.traits(Inventory, 43);\n    inventory.slots[40].accepts = [Item.Type.Chestplate];\n    inventory.slots[41].accepts = [Item.Type.Leggings];\n    inventory.slots[42].accepts = [Item.Type.Boots];\n\n    this.traits(Stats);\n    this.traits(PlayerData);\n  }\n\n  hydrate() {\n    this.traits.get(Spatial).sprite.setTexture(Animations.Player, this.id);\n  }\n}\nEntity.types.set(Player.Type, Player);\n","import { Game } from 'app/game';\nimport { Entity } from 'app/game/entities';\nimport { Collidable, Float, Inventory, Spatial } from 'app/game/traits';\nimport { Item } from 'common/data';\nimport { vec2 } from 'gl-matrix';\n\nexport class ItemDrop extends Entity {\n  public static _mark: ItemDrop;\n  public static readonly Type = 'item-drop';\n  public get type() { return ItemDrop.Type; }\n\n  public static make(game: Game, item: Item, position: vec2 = game.player.traits(Spatial).position) {\n    const entity = new ItemDrop(game);\n    const inventory = entity.traits.get(Inventory);\n    inventory.slots[0].item = item;\n\n    const spatial = entity.traits.get(Spatial);\n    vec2.copy(spatial.position, position);\n    vec2.random(spatial.velocity);\n\n    const float = entity.traits.get(Float);\n    float.z[0] = Math.random() * 0.5 + 0.5;\n    return entity;\n  }\n\n  init() {\n    const spatial = this.traits(Spatial);\n    vec2.set(spatial.scale, 2, 2);\n\n    const collidable = this.traits(Collidable);\n    vec2.set(collidable.size, 0.25, 0.25);\n    collidable.mass = 0;\n\n    this.traits(Float);\n    this.traits(Inventory, 1);\n  }\n\n  hydrate() {\n    const spatial = this.traits.get(Spatial);\n    spatial.sprite.outline = true;\n    spatial.sprite.setTexture(this.traits.get(Inventory).slots[0].item!.texture, this.id);\n  }\n}\nEntity.types.set(ItemDrop.Type, ItemDrop);\n","import { Game } from 'app/game';\nimport { Entity } from 'app/game/entities';\nimport { Behavior, Collidable, EnemyData, Spatial, Stats } from 'app/game/traits';\nimport { EnemyDef } from 'common/data';\nimport { vec2 } from 'gl-matrix';\n\nexport class Enemy extends Entity {\n  public static _mark: Enemy;\n  public static readonly Type = 'enemy';\n  public get type() { return Enemy.Type; }\n\n  public static make(game: Game, def: EnemyDef, position: vec2) {\n    const entity = new Enemy(game);\n    entity.traits.get(EnemyData).def = def;\n    entity.traits.get(Behavior).behaviors = def.behaviors;\n    Object.assign(entity.traits.get(Stats).base, def.stats);\n    vec2.copy(entity.traits.get(Spatial).position, position);\n    return entity;\n  }\n\n  init() {\n    this.traits(Spatial);\n\n    this.traits(Collidable);\n\n    this.traits(Stats);\n    this.traits(EnemyData);\n    this.traits(Behavior);\n  }\n\n  hydrate() {\n    const data = this.traits.get(EnemyData);\n\n    const spatial = this.traits.get(Spatial);\n    spatial.sprite.setTexture(data.def.texture, this.id);\n    spatial.horizontalAnim = data.def.horizontalAnim;\n    vec2.set(spatial.scale, data.def.scale * 2, data.def.scale * 2);\n    vec2.set(spatial.offset, data.def.offset[0], data.def.offset[1]);\n\n    const collidable = this.traits.get(Collidable);\n    vec2.set(collidable.size, 0.4 * data.def.scale, 0.4 * data.def.scale);\n  }\n}\nEntity.types.set(Enemy.Type, Enemy);\n","import { Game } from 'app/game';\nimport { Entity } from 'app/game/entities';\nimport { Collidable, Float, ProjectileData, Spatial, Stats } from 'app/game/traits';\nimport { Camera } from 'app/game/Camera';\nimport { Effect, Weapon } from 'common/data';\nimport { computeDamage } from 'common/logic/stats';\nimport { vec2 } from 'gl-matrix';\n\nexport class Projectile extends Entity {\n  public static _mark: Projectile;\n  public static readonly Type = 'projectile';\n  public get type() { return Projectile.Type; }\n\n  public static make(game: Game,\n    sourceEntityId: number, weapon: Weapon, effects: Effect[],\n    start: vec2, end: vec2, lifetime: number, texture: string\n  ) {\n    const entity = new Projectile(game);\n\n    const spatial = entity.traits.get(Spatial);\n    vec2.copy(spatial.position, start);\n\n    const float = entity.traits.get(Float);\n    float.z[0] = 0.001;\n    float.gravity = false;\n\n    const { str } = Stats.compute(game.entities.get(sourceEntityId)!.traits.get(Stats));\n    const damage = computeDamage(weapon.strength, str);\n\n    entity.traits.set(ProjectileData.make({\n      sourceEntityId, weapon, damage, effects,\n      start, end, lifetime,\n      texture: {\n        type: 'single',\n        tex: texture,\n        tint: weapon.color\n      }\n    }));\n    return entity;\n  }\n\n  init() {\n    const spatial = this.traits(Spatial);\n    vec2.set(spatial.scale, 4, 4);\n\n    const collidable = this.traits(Collidable);\n    vec2.set(collidable.size, 0.25, 0.25);\n    collidable.mass = 0;\n\n    this.traits(Float);\n  }\n\n  hydrate() {\n    const spatial = this.traits.get(Spatial);\n    const data = this.traits.get(ProjectileData);\n    spatial.sprite.layer = Camera.Layer.Projectiles;\n    spatial.sprite.setTexture(data.texture);\n    spatial.sprite.anchor.set(0, 0);\n    spatial.sprite.visible = false;\n\n    spatial.sprite.rotation = -3 * Math.PI / 4 +\n      Math.atan2(data.start[1] - data.end[1], data.start[0] - data.end[0]);\n  }\n}\nEntity.types.set(Projectile.Type, Projectile);\n","import { Game } from 'app/game';\nimport { Entity, EntityType } from 'app/game/entities';\nimport { Trait, TraitType } from 'app/game/traits';\nimport { EntityProps } from 'common/data/props';\n\nexport class EntityManager {\n  private readonly entities = new Map<number, Entity>();\n\n  constructor(private readonly game: Game) {\n  }\n\n  public init() {\n    for (const entityProps of this.game.data.entities) {\n      const EntityType = Entity.types.get(entityProps.type)!;\n      const entity = new EntityType(this.game, entityProps.id);\n      entity.age = entityProps.age;\n      for (const traitType of Object.keys(entityProps.traits)) {\n        const TraitType = Trait.types.get(traitType)!;\n        const trait = TraitType.deserialize(entityProps.traits[traitType], entity.traits(TraitType));\n        entity.traits.set(trait);\n      }\n      this.add(entity);\n    }\n  }\n\n  public dispose() {\n  }\n\n  public save() {\n    this.game.data.entities = Array.from(this.entities.values()).map(entity => {\n      const props: EntityProps = {\n        id: entity.id,\n        type: entity.type,\n        age: entity.age,\n        traits: {}\n      };\n      for (const trait of entity.traits.list())\n        props.traits[trait.type] = Trait.types.get(trait.type)!.serialize(trait);\n      return props;\n    });\n  }\n\n  public *ofType<T extends Entity>(entityType: EntityType<T>) {\n    for (const entity of this.entities.values()) {\n      if (entity.type === entityType.Type)\n        yield entity;\n    }\n  }\n\n  public *withTrait<T extends Trait>(traitType: TraitType<T>) {\n    for (const entity of this.entities.values()) {\n      if (entity.traits.get(traitType))\n        yield entity;\n    }\n  }\n\n  public get(id: number) {\n    return this.entities.get(id);\n  }\n\n  public add(entity: Entity) {\n    entity.hydrate();\n    this.entities.set(entity.id, entity);\n  }\n\n  public delete(entity: Entity) {\n    this.entities.delete(entity.id);\n  }\n\n  public update(dt: number) {\n    for (const entity of this.entities.values())\n      entity.age += dt;\n  }\n}","import { LayoutView } from 'app/components';\nimport { Camera } from 'app/game/Camera';\nimport { Container } from 'pixi.js';\n\nexport class GameView extends Container {\n  public readonly camera = new Camera();\n\n  constructor() {\n    super();\n    this.add(this.camera);\n    this.interactive = true;\n  }\n\n  public add(view: LayoutView) {\n    this.addChild(view);\n  }\n\n  public layout(width: number, height: number) {\n    for (const child of this.children) {\n      (child as LayoutView).layout(width, height);\n    }\n  }\n}","import { Game } from 'app/game';\n\nexport class Task {\n  public readonly runWhenPaused: boolean = false;\n\n  private _active = true;\n  public get isActive() { return this._active; }\n  constructor(protected readonly game: Game) {\n  }\n\n  public deactivate() {\n    if (!this._active)\n      throw new Error('not active');\n\n    this._active = false;\n  }\n\n  public update(dt: number) { }\n  public dispose() { }\n}\n","import { LayoutView } from 'app/components';\nimport { Container, Texture } from 'pixi.js';\n\nexport abstract class MenuPanel extends Container implements LayoutView {\n  active = false;\n\n  abstract get icon(): Texture;\n  abstract get name(): string;\n\n  abstract layout(width: number, height: number): void;\n  dispose(exit: boolean) { }\n  update(dt: number) { }\n}","import { Button, SlotView, TextureSprite } from 'app/components';\nimport { Game } from 'app/game';\nimport { ItemDrop } from 'app/game/entities';\nimport { MenuPanel } from 'app/game/menu';\nimport { InventoryUpdated } from 'app/game/messages';\nimport { ItemSlot, Recipe } from 'common/data';\nimport { clamp, cloneDeep } from 'lodash';\nimport { Container, Texture } from 'pixi.js';\nimport { Subscription } from 'rxjs/Subscription';\n\nconst NumRows = 3;\n\nclass RecipeView extends Container {\n  readonly arrow: TextureSprite;\n  readonly output: SlotView;\n  readonly inputs: SlotView[];\n\n  private makeOutput() {\n    return cloneDeep(this.recipe.output);\n  }\n\n  constructor(private readonly game: Game, private readonly recipe: Recipe) {\n    super();\n\n    this.output = new SlotView(game, { accepts: [], item: this.makeOutput() });\n    this.output.position.set(0, (64 - SlotView.Size) / 2);\n    this.addChild(this.output);\n\n    this.inputs = recipe.input.map(({ accepts, texture }) => {\n      const slot = new SlotView(game, { accepts, item: null });\n      slot.bgOverlay.setTexture(texture);\n      slot.bgOverlay.outline = true;\n      return slot;\n    });\n\n    this.arrow = new TextureSprite(Texture.fromFrame('sprites/ui/arrow'));\n    this.arrow.position.set(SlotView.Size + 16, 0);\n    this.arrow.scale.set(2, 2);\n    this.addChild(this.arrow);\n\n    let x = SlotView.Size + 16 + 64 + 16;\n    for (const input of this.inputs) {\n      this.addChild(input);\n      input.position.set(x + 8, 8);\n      x += 64;\n    }\n  }\n\n  check(slot?: ItemSlot) {\n    let numInputs = 0;\n    for (const input of this.inputs) {\n      if (!input.slot.item) {\n        input.alpha = 0.5;\n      } else {\n        input.alpha = 1;\n        numInputs++;\n      }\n    }\n\n    const ok = numInputs === this.recipe.input.length;\n    this.output.enabled = ok;\n    this.output.alpha = ok ? 1 : 0.5;\n    this.arrow.alpha = ok ? 1 : 0.5;\n    if (!this.output.slot.item) {\n      this.output.slot.item = this.makeOutput();\n      this.game.dispatch(new InventoryUpdated(this.output.slot));\n      for (const { slot } of this.inputs) {\n        slot.item = null;\n        this.game.dispatch(new InventoryUpdated(slot));\n      }\n    }\n  }\n\n  layout() {\n    this.output.layout();\n    for (const input of this.inputs)\n      input.layout();\n  }\n\n  dispose() {\n    for (const { slot } of this.inputs)\n      if (slot.item) {\n        const drop = ItemDrop.make(this.game, slot.item);\n        this.game.entities.add(drop);\n        slot.item = null;\n        this.game.dispatch(new InventoryUpdated(slot));\n      }\n  }\n}\n\nexport class Workbench extends MenuPanel {\n  readonly name = 'Workbench';\n  readonly icon = Texture.fromFrame('sprites/ui/tab-workbench');\n\n  private readonly upButton = new Button();\n  private readonly downButton = new Button();\n  private readonly recipeViews: RecipeView[] = [];\n  private readonly subscription = new Subscription();\n\n  private scrollOffset = 0;\n\n  constructor(private readonly game: Game) {\n    super();\n\n    this.upButton = new Button();\n    const upIcon = new TextureSprite(Texture.fromFrame('sprites/ui/arrow-compact'));\n    upIcon.scale.set(2, 2);\n    upIcon.rotation = Math.PI / 2;\n    upIcon.pivot.set(8, 8);\n    upIcon.position.set(32, 16);\n    this.upButton.content.addChild(upIcon);\n    this.addChild(this.upButton);\n\n    this.downButton = new Button();\n    const downIcon = new TextureSprite(Texture.fromFrame('sprites/ui/arrow-compact'));\n    downIcon.scale.set(2, 2);\n    downIcon.rotation = -Math.PI / 2;\n    downIcon.pivot.set(8, 8);\n    downIcon.position.set(32, 16);\n    this.downButton.content.addChild(downIcon);\n    this.addChild(this.downButton);\n\n    for (const recipe of game.library.recipes) {\n      const view = new RecipeView(game, recipe);\n      this.addChild(view);\n      this.recipeViews.push(view);\n    }\n\n    this.subscription.add(game.messages$.ofType(InventoryUpdated).subscribe(this.checkInventory));\n    for (const view of this.recipeViews)\n      view.check();\n\n    this.upButton.on(Button.Clicked, () => this.scrollOffset--);\n    this.downButton.on(Button.Clicked, () => this.scrollOffset++);\n\n    game.app.view.addEventListener('wheel', this.wheelList);\n  }\n\n  private wheelDebounce = 0;\n  private wheelList = (event: WheelEvent) => {\n    if (!this.active) return;\n    if (this.elapsed - this.wheelDebounce < 20) return;\n\n    const delta = event.deltaX + event.deltaY;\n    if (Math.abs(delta) < 32) return;\n\n    this.scrollOffset += Math.sign(delta);\n  }\n\n  private elapsed = 0;\n  update(dt: number) {\n    this.elapsed += dt;\n  }\n\n  private checkInventory = ({ slot }: InventoryUpdated) => {\n    for (const view of this.recipeViews)\n      view.check(slot);\n  }\n\n  layout(width: number, height: number) {\n    const scrollMin = 0, scrollMax = this.recipeViews.length - NumRows;\n    this.scrollOffset = clamp(this.scrollOffset, 0, scrollMax);\n    this.upButton.visible = this.scrollOffset > scrollMin;\n    this.downButton.visible = this.scrollOffset < scrollMax;\n\n    let y = 0;\n    this.upButton.position.set(0, y);\n    this.upButton.layout(64, 32);\n    y += 32;\n\n    for (let i = 0; i < this.recipeViews.length; i++) {\n      const view = this.recipeViews[i];\n      if (i < this.scrollOffset || i >= this.scrollOffset + NumRows) {\n        view.visible = false;\n      } else {\n        view.visible = true;\n\n        view.position.set(2, y);\n        view.layout();\n        y += 64;\n      }\n    }\n    this.downButton.position.set(0, y);\n    this.downButton.layout(64, 32);\n  }\n\n  dispose(exit: boolean) {\n    if (exit) {\n      this.subscription.unsubscribe();\n      this.game.app.view.removeEventListener('wheel', this.wheelList);\n    }\n\n    for (const view of this.recipeViews)\n      view.dispose();\n  }\n}","import { Button, SlotView, TextureSprite } from 'app/components';\nimport { Game } from 'app/game';\nimport { ItemDrop } from 'app/game/entities';\nimport { MenuPanel } from 'app/game/menu';\nimport { InventoryUpdated } from 'app/game/messages';\nimport { Item } from 'common/data';\nimport { mixSolution } from 'common/logic/alchemy';\nimport { Texture } from 'pixi.js';\nimport { Subscription } from 'rxjs/Subscription';\n\nexport class Alchemy extends MenuPanel {\n  readonly name = 'Alchemy';\n  readonly icon = Texture.fromFrame('sprites/ui/tab-alchemy');\n\n  private readonly processButton = new Button();\n  private readonly input1: SlotView;\n  private readonly input2: SlotView;\n  private readonly fuel: SlotView;\n  private readonly output: SlotView;\n  private readonly bg: TextureSprite;\n  private readonly subscription = new Subscription();\n\n  constructor(private readonly game: Game) {\n    super();\n\n    this.bg = new TextureSprite(Texture.from('sprites/ui/cauldron'));\n    this.bg.outline = true;\n    this.bg.scale.set(7, 7);\n    this.addChild(this.bg);\n\n    const icon = new TextureSprite(Texture.fromFrame('sprites/ui/arrow-compact'));\n    icon.scale.set(2, 2);\n    icon.rotation = -Math.PI / 2;\n    icon.pivot.set(8, 8);\n    icon.position.set(18, 20);\n    this.processButton.content.addChild(icon);\n    this.addChild(this.processButton);\n\n    this.input1 = new SlotView(game, { accepts: [Item.Type.Consumable], item: null });\n    this.input2 = new SlotView(game, { accepts: [Item.Type.Consumable], item: null });\n    this.fuel = new SlotView(game, { accepts: '^wood-', item: null });\n    this.output = new SlotView(game, { accepts: [], item: null });\n    this.addChild(this.input1);\n    this.addChild(this.input2);\n    this.addChild(this.fuel);\n    this.addChild(this.output);\n    this.fuel.bgOverlay.setTexture('sprites/ui/inv-slot-fire');\n\n    this.subscription.add(game.messages$.ofType(InventoryUpdated).subscribe(this.checkInventory));\n    this.checkInventory();\n\n    this.processButton.on(Button.Clicked, this.doAlchemy);\n  }\n\n  private checkInventory = () => {\n    this.processButton.isEnabled =\n      !this.input1.empty && !this.input2.empty && !this.fuel.empty && this.output.empty;\n  }\n\n  private doAlchemy = () => {\n    const input1 = this.input1.slot.item!;\n    const input2 = this.input2.slot.item!;\n    const output = mixSolution(input1, input2, this.game.library.elements);\n\n    this.output.slot.item = output;\n    this.input1.slot.item = null;\n    this.input2.slot.item = null;\n    this.fuel.slot.item = null;\n    this.game.dispatch(new InventoryUpdated(this.input1.slot));\n    this.game.dispatch(new InventoryUpdated(this.input2.slot));\n    this.game.dispatch(new InventoryUpdated(this.output.slot));\n    this.game.dispatch(new InventoryUpdated(this.fuel.slot));\n  }\n\n  layout(width: number, height: number) {\n    const contentWidth = SlotView.Size + 16 + 40 + 16 + SlotView.Size;\n    this.input1.position.set(16, 4);\n    this.input1.layout();\n\n    this.processButton.position.set(16 + SlotView.Size + 16, 16);\n    this.processButton.layout(40, 40);\n\n    this.input2.position.set(16 + SlotView.Size + 16 + 40 + 16, 4);\n    this.input2.layout();\n\n    this.bg.position.set(16 + (contentWidth - this.bg.width) / 2, SlotView.Size + 8);\n\n    this.output.position.set(16 + (contentWidth - SlotView.Size) / 2, SlotView.Size + 28);\n    this.output.layout();\n\n    this.fuel.position.set(16 + (contentWidth - SlotView.Size) / 2, 192);\n    this.fuel.layout();\n  }\n\n  dispose(exit: boolean) {\n    if (exit) this.subscription.unsubscribe();\n    for (const { slot } of [this.input1, this.input2, this.fuel, this.output])\n      if (slot.item) {\n        const drop = ItemDrop.make(this.game, slot.item);\n        this.game.entities.add(drop);\n        slot.item = null;\n        this.game.dispatch(new InventoryUpdated(slot));\n      }\n  }\n}","import { Aspect, Effect, Element, Item, MaterialStats } from 'common/data';\nimport { mix } from 'common/logic/alchemy';\nimport { computeEffects, makeEffect, scaleAspects } from 'common/logic/effect/common';\nimport { EffectDef } from 'data/effects';\nimport { ElementDef } from 'data/elements';\n\nfunction computeEffect(element: string, strength: number, strengths: Record<string, number>) {\n  switch (element) {\n    case ElementDef.Type.Energy: {\n      let amount = strength * 50;\n\n      return makeEffect(EffectDef.Type.Strength, amount, 0);\n    }\n    case ElementDef.Type.Weakness: {\n      let amount = strength * 50;\n\n      return makeEffect(EffectDef.Type.Weakness, amount, 0);\n    }\n    case ElementDef.Type.Defense: {\n      let amount = strength * 50;\n\n      if (strengths[ElementDef.Type.Void] > strength * 0.5)\n        return makeEffect(EffectDef.Type.DefBreak, amount, 0);\n      else\n        return makeEffect(EffectDef.Type.Resistance, amount, 0);\n    }\n    case ElementDef.Type.Life:\n    case ElementDef.Type.Recovery: {\n      let amount = strength * 50;\n      if (element === ElementDef.Type.Life)\n        amount *= 0.5;\n\n      return makeEffect(EffectDef.Type.VitalityUp, amount, 0);\n    }\n    case ElementDef.Type.Void:\n    case ElementDef.Type.Injury: {\n      let amount = strength * 50;\n      if (element === ElementDef.Type.Void)\n        amount *= 0.3;\n\n      return makeEffect(EffectDef.Type.VitalityDown, amount, 0);\n    }\n    case ElementDef.Type.Motion: {\n      let amount = strength * 50;\n\n      return makeEffect(EffectDef.Type.Speed, amount, 0);\n    }\n    case ElementDef.Type.Frost:\n    case ElementDef.Type.Capture: {\n      let amount = strength * 50;\n      if (element === ElementDef.Type.Capture)\n        amount *= 1.5;\n\n      return makeEffect(EffectDef.Type.Slowness, amount, 0);\n    }\n  }\n}\n\nexport function compute(\n  parts: Item[], material: MaterialStats,\n  multiplier: number, data: Record<string, Element>\n): [Effect[], Aspect[]] {\n  const materialAspects: Aspect[] = [{\n    element: ElementDef.Type.Defense,\n    amount: material.toughness * (1 + Math.pow(material.weight, 0.75)) * 1000 * multiplier\n  }, {\n    element: ElementDef.Type.Capture,\n    amount: material.weight * 10 * multiplier\n  }, {\n    element: ElementDef.Type.Energy,\n    amount: material.sharpness * 100 * multiplier\n  }];\n\n  const affinity = Math.pow(material.affinity, 0.5);\n  const aspects = mix([\n    ...parts.map(item => ({ aspects: scaleAspects(item.aspects || [], affinity) })),\n    { aspects: materialAspects }\n  ], data);\n  return [computeEffects(aspects, computeEffect, 0.01), aspects];\n}","import { blend } from 'common/color';\nimport { Aspect, Effect, Element, Item, MaterialStats, TextureDef, Weapon } from 'common/data';\nimport { mix } from 'common/logic/alchemy';\nimport { compute as computeArmors } from 'common/logic/effect/armors';\nimport { scaleAspects } from 'common/logic/effect/common';\nimport { compute as computeSolution } from 'common/logic/effect/solution';\nimport { countBy, startCase } from 'lodash';\n\nexport enum AssemblyType {\n  Chestplate = 'chestplate',\n  Leggings = 'leggings',\n  Boots = 'boots',\n  Sword = 'sword',\n  Spear = 'spear',\n  Bow = 'bow',\n  Arrow = 'arrow',\n  Infusion = 'infusion'\n}\n\nconst Parts: Record<Exclude<AssemblyType, AssemblyType.Infusion>, MaterialStats[]> = {\n  [AssemblyType.Chestplate]: [\n    { weight: 0.2, toughness: 0.4, sharpness: 0.4, affinity: 0.2, },\n    { weight: 0.2, toughness: 0.4, sharpness: 0.4, affinity: 0.2, },\n    { weight: 0.05, toughness: 0, sharpness: 0.1, affinity: 0.45, },\n    { weight: 0.35, toughness: 0.2, sharpness: 0.1, affinity: 0.15, },\n  ],\n  [AssemblyType.Leggings]: [\n    { weight: 0.2, toughness: 0.3, sharpness: 0.3, affinity: 0.5, },\n    { weight: 0.4, toughness: 0.35, sharpness: 0.35, affinity: 0.25, },\n    { weight: 0.4, toughness: 0.35, sharpness: 0.35, affinity: 0.25, },\n  ],\n  [AssemblyType.Boots]: [\n    { weight: 0.5, toughness: 0.5, sharpness: 0.5, affinity: 0.5, },\n    { weight: 0.5, toughness: 0.5, sharpness: 0.5, affinity: 0.5, },\n  ],\n  [AssemblyType.Sword]: [\n    { weight: 0.45, toughness: 0.3, sharpness: 0.5, affinity: 0.25, },\n    { weight: 0.35, toughness: 0.3, sharpness: 0.4, affinity: 0.2, },\n    { weight: 0.2, toughness: 0.4, sharpness: 0.1, affinity: 0.55, },\n  ],\n  [AssemblyType.Spear]: [\n    { weight: 0.6, toughness: 0.1, sharpness: 0.9, affinity: 0.7, },\n    { weight: 0.2, toughness: 0.45, sharpness: 0.05, affinity: 0.15, },\n    { weight: 0.2, toughness: 0.45, sharpness: 0.05, affinity: 0.15, },\n  ],\n  [AssemblyType.Bow]: [\n    { weight: 0.35, toughness: 0.1, sharpness: 0.05, affinity: 0.2, },\n    { weight: 0.1, toughness: 0.1, sharpness: 0.35, affinity: 0.05, },\n    { weight: 0.35, toughness: 0.1, sharpness: 0.05, affinity: 0.2, },\n    { weight: 0.05, toughness: 0.3, sharpness: 0.1, affinity: 0.25, },\n    { weight: 0.1, toughness: 0.1, sharpness: 0.35, affinity: 0.05, },\n    { weight: 0.05, toughness: 0.3, sharpness: 0.1, affinity: 0.25, },\n  ],\n  [AssemblyType.Arrow]: [\n    { weight: 0.6, toughness: 0.5, sharpness: 0.45, affinity: 0.4, },\n    { weight: 0.3, toughness: 0.4, sharpness: 0.1, affinity: 0.2, },\n    { weight: 0.1, toughness: 0.1, sharpness: 0.45, affinity: 0.4, },\n  ]\n};\n\nexport function assemble(type: AssemblyType, parts: Item[], data: Record<string, Element>): Item | null {\n  if (type === AssemblyType.Infusion) {\n    const material = parts[1].material;\n    if (!material) {\n      console.error('unexpected item');\n      return null;\n    }\n    if (parts[1].type === Item.Type.Weapon) {\n      const aspects = mix(parts, data);\n      return Object.assign({}, parts[1], { effects: computeSolution(aspects) });\n    } else {\n      const [effects, aspects] = computeArmors(parts, material, 1, data);\n      return Object.assign({}, parts[1], { aspects, effects });\n    }\n  } else {\n    const mat: MaterialStats = { weight: 0, toughness: 0, sharpness: 0, affinity: 0 };\n    for (let i = 0; i < parts.length; i++) {\n      const material = parts[i].material;\n      if (!material) {\n        console.error('unexpected item');\n        return null;\n      }\n      mat.weight += material.weight * Parts[type][i].weight;\n      mat.toughness += material.toughness * Parts[type][i].toughness;\n      mat.sharpness += material.sharpness * Parts[type][i].sharpness;\n      mat.affinity += material.affinity * Parts[type][i].affinity;\n    }\n    mat.weight *= parts.length;\n    mat.toughness = Math.pow(mat.toughness, 1.5);\n    mat.sharpness = Math.pow(mat.sharpness, 1.5);\n    console.log(mat);\n\n    let weapon: Weapon | undefined;\n    let effects: Effect[];\n    let aspects: Aspect[];\n    let texture: TextureDef;\n    let itemType = Item.Type.Weapon;\n    function blendPartColors(parts: Item[]) {\n      return blend(parts.map(({ material }) => ({\n        color: parseInt(material!.color, 16)\n      }))).toString(16);\n    }\n\n    let materialName = '';\n    let matColor = 'ffffff';\n    function mainParts(parts: Item[]) {\n      const materialCounts = countBy(parts.map(part => part.material!.name));\n      let maxMaterial = 0;\n      for (const material of Object.keys(materialCounts))\n        if (materialCounts[material] > maxMaterial) {\n          materialName = material;\n          maxMaterial = materialCounts[material];\n        }\n      matColor = blendPartColors(parts);\n    }\n\n    switch (type) {\n      case AssemblyType.Sword:\n        mainParts(parts.slice(0, 2));\n        weapon = {\n          type: Weapon.Type.Sword,\n          strength: (1 + mat.sharpness) * (mat.weight + mat.toughness) / 2 * 100,\n          cooldown: mat.weight * (1 - mat.toughness) * 5000,\n          knockback: mat.weight * (1 + mat.sharpness) * 10,\n          pierce: true,\n          range: 2.5,\n          color: matColor\n        };\n        aspects = mix(parts, data);\n        effects = computeSolution(aspects);\n        texture = {\n          type: 'composite',\n          overlay: {\n            type: 'single',\n            tex: 'sprites/items/sword-blade',\n            tint: blendPartColors(parts.slice(0, 2))\n          },\n          base: {\n            type: 'single',\n            tex: 'sprites/items/sword',\n            tint: parts[2].material!.color\n          }\n        };\n        break;\n      case AssemblyType.Spear:\n        mainParts(parts.slice(0, 1));\n        weapon = {\n          type: Weapon.Type.Spear,\n          strength: (1 + mat.sharpness) * (mat.weight + mat.toughness) / 2 * 250,\n          cooldown: mat.weight * (1 - mat.toughness) * 15000,\n          knockback: mat.weight * (1 + mat.sharpness) * 20,\n          pierce: true,\n          range: 4,\n          color: matColor\n        };\n        aspects = mix(parts, data);\n        effects = computeSolution(aspects);\n        texture = {\n          type: 'composite',\n          overlay: {\n            type: 'single',\n            tex: 'sprites/items/spear-head',\n            tint: parts[0].material!.color\n          },\n          base: {\n            type: 'single',\n            tex: 'sprites/items/spear',\n            tint: blendPartColors(parts.slice(1, 3))\n          }\n        };\n        break;\n      case AssemblyType.Bow:\n        mainParts([parts[0], parts[1], parts[2], parts[4]]);\n        weapon = {\n          type: Weapon.Type.Bow,\n          strength: mat.toughness * (1 + mat.weight) * 20,\n          cooldown: mat.weight * (1 - mat.toughness) * 1000,\n          knockback: 0,\n          range: 0,\n          color: matColor\n        };\n        aspects = mix(parts, data);\n        effects = computeSolution(aspects);\n        texture = {\n          type: 'composite',\n          overlay: {\n            type: 'single',\n            tex: 'sprites/items/bow-string',\n            tint: blendPartColors([parts[3], parts[5]])\n          },\n          base: {\n            type: 'single',\n            tex: 'sprites/items/bow',\n            tint: blendPartColors([parts[0], parts[1], parts[2], parts[4]])\n          }\n        };\n        break;\n      case AssemblyType.Arrow:\n        mainParts(parts.slice(0, 1));\n        weapon = {\n          type: Weapon.Type.Arrow,\n          strength: mat.weight * (1 + mat.sharpness) * 10,\n          cooldown: 0,\n          knockback: 0,\n          range: 5 + mat.toughness * 15,\n          color: matColor\n        };\n        aspects = scaleAspects(mix(parts, data), Math.pow(mat.affinity, 0.5));\n        effects = computeSolution(aspects);\n        texture = {\n          type: 'composite',\n          base: {\n            type: 'single',\n            tex: 'sprites/items/arrow',\n            tint: parts[1].material!.color\n          },\n          overlay: {\n            type: 'composite',\n            base: {\n              type: 'single',\n              tex: 'sprites/items/arrow-head',\n              tint: parts[0].material!.color\n            },\n            overlay: {\n              type: 'single',\n              tex: 'sprites/items/arrow-fletch',\n              tint: parts[2].material!.color\n            }\n          }\n        };\n        break;\n      case AssemblyType.Chestplate:\n        mainParts(parts);\n        itemType = Item.Type.Chestplate;\n        [effects, aspects] = computeArmors(parts, mat, 1, data);\n        texture = {\n          type: 'composite',\n          base: {\n            type: 'single',\n            tex: 'sprites/items/chestplate',\n            tint: parts[3].material!.color\n          },\n          overlay: {\n            type: 'composite',\n            base: {\n              type: 'single',\n              tex: 'sprites/items/chestplate-belt',\n              tint: parts[2].material!.color\n            },\n            overlay: {\n              type: 'composite',\n              base: {\n                type: 'single',\n                tex: 'sprites/items/chestplate-left',\n                tint: parts[0].material!.color\n              },\n              overlay: {\n                type: 'single',\n                tex: 'sprites/items/chestplate-right',\n                tint: parts[1].material!.color\n              }\n            }\n          }\n        };\n        break;\n      case AssemblyType.Leggings:\n        mainParts(parts);\n        itemType = Item.Type.Leggings;\n        [effects, aspects] = computeArmors(parts, mat, 0.5, data);\n        texture = {\n          type: 'composite',\n          base: {\n            type: 'single',\n            tex: 'sprites/items/leggings',\n            tint: parts[0].material!.color\n          },\n          overlay: {\n            type: 'composite',\n            base: {\n              type: 'single',\n              tex: 'sprites/items/leggings-left',\n              tint: parts[1].material!.color\n            },\n            overlay: {\n              type: 'single',\n              tex: 'sprites/items/leggings-right',\n              tint: parts[2].material!.color\n            }\n          }\n        };\n        break;\n      case AssemblyType.Boots:\n        mainParts(parts);\n        itemType = Item.Type.Boots;\n        [effects, aspects] = computeArmors(parts, mat, 0.2, data);\n        texture = {\n          type: 'composite',\n          base: {\n            type: 'single',\n            tex: 'sprites/items/boots',\n            tint: parts[0].material!.color\n          },\n          overlay: {\n            type: 'single',\n            tex: 'sprites/items/boots-right',\n            tint: parts[1].material!.color\n          }\n        };\n        break;\n      default:\n        console.error('unexpected type');\n        return null;\n    }\n    console.log(weapon);\n    console.log(effects);\n\n    return {\n      id: type,\n      name: `${materialName} ${startCase(type)}`,\n      type: itemType,\n      texture,\n      aspects,\n      effects,\n      material: { name: materialName, color: matColor, ...mat },\n      weapon\n    };\n  }\n}","import { Button, SlotView } from 'app/components';\nimport { TextToolTip } from 'app/components/TextToolTip';\nimport { Game } from 'app/game';\nimport { ItemDrop } from 'app/game/entities';\nimport { MenuPanel } from 'app/game/menu';\nimport { InventoryUpdated } from 'app/game/messages';\nimport { Item } from 'common/data';\nimport { assemble, AssemblyType } from 'common/logic/anvil';\nimport { times } from 'lodash';\nimport { Sprite, Texture } from 'pixi.js';\nimport { Subscription } from 'rxjs/Subscription';\n\ninterface AnvilTarget {\n  id: AssemblyType;\n  name: string;\n  description: string;\n  slots: ({\n    accepts: string,\n    textures: string[]\n  } | null)[];\n}\n\nfunction slot(...accepts: string[]) {\n  return { accepts: `^(${accepts.join('|')})$`, textures: accepts.map(id => `sprites/items/${id}`) };\n}\n\nconst Targets: AnvilTarget[] = [{\n  id: AssemblyType.Chestplate,\n  name: 'Chestplate',\n  description: '',\n  slots: [\n    slot('skin', 'scale'), null, slot('skin', 'scale'),\n    null, slot('skin'), null,\n    null, slot('skin', 'scale'), null,\n  ]\n}, {\n  id: AssemblyType.Leggings,\n  name: 'Leggings',\n  description: '',\n  slots: [\n    null, null, null,\n    null, slot('skin'), null,\n    slot('skin', 'scale'), null, slot('skin', 'scale'),\n  ]\n}, {\n  id: AssemblyType.Boots,\n  name: 'Boots',\n  description: '',\n  slots: [\n    null, null, null,\n    null, null, null,\n    slot('skin'), null, slot('skin'),\n  ]\n}, {\n  id: AssemblyType.Sword,\n  name: 'Sword',\n  description: `\naverage damage\naverage range\naverage speed\n`,\n  slots: [\n    slot('fang', 'scale'), null, null,\n    null, slot('fang', 'scale'), null,\n    null, null, slot('bone', 'rod'),\n  ]\n}, {\n  id: AssemblyType.Spear,\n  name: 'Spear',\n  description: `\nhigh damage\naverage range\nlow speed\n`,\n  slots: [\n    slot('fang', 'scale'), null, null,\n    null, slot('bone', 'rod'), null,\n    null, null, slot('bone', 'rod'),\n  ]\n}, {\n  id: AssemblyType.Bow,\n  name: 'Bow',\n  description: `\nlow damage\nhigh range\nhigh speed\n`,\n  slots: [\n    null, slot('bone', 'rod'), slot('bone', 'rod'),\n    slot('bone', 'rod'), null, slot('skin'),\n    slot('bone', 'rod'), slot('skin'), null,\n  ]\n}, {\n  id: AssemblyType.Arrow,\n  name: 'Arrow',\n  description: 'ammo of bow',\n  slots: [\n    slot('fang', 'scale'), null, null,\n    null, slot('bone', 'rod'), null,\n    null, null, slot('scale', 'leaf'),\n  ]\n}, {\n  id: AssemblyType.Infusion,\n  name: 'Infusion',\n  description: 'infuse solution effects into equipment',\n  slots: [\n    null, null, slot('solution'),\n    null, null, null,\n    null, null, slot('chestplate', 'leggings', 'boots', 'sword', 'spear', 'bow', 'arrow'),\n  ]\n}];\n\nexport class Anvil extends MenuPanel {\n  readonly name = 'Anvil';\n  readonly icon = Texture.fromFrame('sprites/ui/tab-anvil');\n\n  readonly toolTip: TextToolTip;\n\n  readonly inSlots: SlotView[];\n  readonly outSlot: SlotView;\n  readonly arrow = new Sprite(Texture.fromFrame('sprites/ui/arrow'));\n\n  activeTarget = Targets[0];\n  readonly targetButtons: (Button & { target: AnvilTarget })[] = [];\n\n  private readonly subscription = new Subscription();\n\n  constructor(private readonly game: Game) {\n    super();\n    this.toolTip = new TextToolTip(game.app, '', {\n      default: { align: 'left' },\n      desc: { fill: '#d0d0d0' }\n    });\n\n    this.inSlots = times(9, () => new SlotView(game, { accepts: [], item: null }));\n    for (const input of this.inSlots) {\n      input.bgOverlay.outline = true;\n      this.addChild(input);\n    }\n    this.outSlot = new SlotView(game, { accepts: [], item: null });\n    this.addChild(this.outSlot);\n\n    this.arrow.scale.set(2, 2);\n    this.arrow.rotation = Math.PI;\n    this.arrow.pivot.set(16, 16);\n    this.arrow.position.set(SlotView.Size * 3 + 112, 64 + SlotView.Size + 24);\n    this.addChild(this.arrow);\n\n    let x = 0;\n    for (const target of Targets) {\n      const button = Object.assign(new Button(), { target });\n\n      const texId = target.id === AssemblyType.Infusion ? 'solution' : target.id;\n      const icon = new Sprite(Texture.fromFrame(`sprites/ui/inv-slot-${texId}`));\n      icon.scale.set(2, 2);\n      icon.alpha = 0.5;\n      button.content.addChild(icon);\n\n      button.position.set(x, 0);\n      this.addChild(button);\n      game.app.toolTip.add(button, () => {\n        this.toolTip.text = `\n${target.name}\n<desc>${target.description}</desc>\n`.trim();\n        return this.toolTip;\n      });\n      button.on(Button.Clicked, () => this.updateTarget(target));\n\n      this.targetButtons.push(button);\n      x += 64;\n    }\n    this.updateTarget();\n\n    this.subscription.add(game.messages$.ofType(InventoryUpdated).subscribe(this.checkInventory));\n  }\n\n  private updateTarget(target = this.activeTarget) {\n    for (const { slot } of this.inSlots) {\n      if (slot.item) {\n        this.game.entities.add(ItemDrop.make(this.game, slot.item));\n        slot.item = null;\n        this.game.dispatch(new InventoryUpdated(slot));\n      }\n    }\n\n    for (let i = 0; i < 9; i++) {\n      this.inSlots[i].slot.item = null;\n      const targetSlot = target.slots[i];\n      if (!targetSlot) {\n        this.inSlots[i].enabled = false;\n        this.inSlots[i].visible = false;\n      } else {\n        this.inSlots[i].enabled = true;\n        this.inSlots[i].visible = true;\n        this.inSlots[i].slot.accepts = targetSlot.accepts;\n      }\n    }\n\n    this.activeTarget = target;\n  }\n\n  private checkInventory = ({ slot }: InventoryUpdated) => {\n    let ok = true;\n    const items: Item[] = [];\n    for (let i = 0; i < 9; i++) {\n      const slot = this.activeTarget.slots[i];\n      if (!slot) continue;\n      const item = this.inSlots[i].slot.item;\n      if (item) {\n        items.push(item);\n      } else {\n        ok = false;\n        break;\n      }\n    }\n    if (!ok && this.outSlot.slot.item) {\n      this.outSlot.slot.item = null;\n      this.game.dispatch(new InventoryUpdated(this.outSlot.slot));\n    } else if (ok && slot === this.outSlot.slot && !slot.item) {\n      for (const { slot } of this.inSlots) {\n        slot.item = null;\n        this.game.dispatch(new InventoryUpdated(slot));\n      }\n    } else if (ok && slot !== this.outSlot.slot) {\n      this.outSlot.slot.item = assemble(this.activeTarget.id, items, this.game.library.elements);\n      this.game.dispatch(new InventoryUpdated(this.outSlot.slot));\n    }\n  }\n\n  layout(width: number, height: number) {\n    const anvilX = 64, anvilY = 64;\n    let x = 0, y = 0;\n    for (const input of this.inSlots) {\n      input.position.set(anvilX + x * SlotView.Size, anvilY + y * SlotView.Size);\n      input.layout();\n      if (++x === 3) {\n        x = 0; y++;\n      }\n    }\n\n    this.outSlot.position.set(SlotView.Size * 3 + 164, anvilY + SlotView.Size);\n    this.outSlot.layout();\n\n    for (const button of this.targetButtons) {\n      button.isEnabled = this.activeTarget !== button.target;\n      button.layout(50, 50);\n    }\n  }\n\n  elapsed = 0;\n  update(dt: number) {\n    this.elapsed += dt;\n    const tick = Math.floor(this.elapsed / 1000);\n    for (let i = 0; i < 9; i++) {\n      const slot = this.activeTarget.slots[i];\n      if (!slot) continue;\n      if (this.inSlots[i].slot.item)\n        this.inSlots[i].bgOverlay.clearTexture();\n      else\n        this.inSlots[i].bgOverlay.setTexture(slot.textures[tick % slot.textures.length]);\n    }\n  }\n\n  dispose(exit: boolean) {\n    this.updateTarget();\n    if (exit) this.subscription.unsubscribe();\n  }\n}","import { Text, TextureSprite } from 'app/components';\nimport { Game } from 'app/game';\nimport { MenuPanel } from 'app/game/menu';\nimport { EnemyData, PlayerData, Stats } from 'app/game/traits';\nimport { Container, Texture } from 'pixi.js';\n\nconst HPBarWidth = 256;\nconst HPBarHeight = 32;\n\nexport class EnemyInfo extends MenuPanel {\n  readonly name = 'Enemy Info';\n  readonly icon = Texture.fromFrame('sprites/ui/tab-enemy');\n\n  private readonly enemyTex = new TextureSprite();\n  private readonly nameLabel = new Text('', { align: 'left' });\n\n  private readonly hpBar = new Container();\n  private readonly hpBarIcon = new TextureSprite(Texture.fromFrame('sprites/ui/status-hp'));\n  private readonly hpBarBg = new TextureSprite(Texture.WHITE);\n  private readonly hpBarFill = new TextureSprite(Texture.WHITE);\n  private readonly hpBarText = new Text();\n\n  constructor(private readonly game: Game) {\n    super();\n\n    this.enemyTex.animName = 'right';\n\n    this.hpBarBg.tint = 0x808080;\n    this.hpBarBg.width = HPBarWidth;\n    this.hpBarBg.height = HPBarHeight;\n\n    this.hpBar.addChild(this.hpBarBg);\n    this.hpBar.addChild(this.hpBarFill);\n    this.hpBar.addChild(this.hpBarText);\n    this.addChild(this.hpBarIcon);\n    this.addChild(this.hpBar);\n    this.addChild(this.enemyTex);\n    this.addChild(this.nameLabel);\n  }\n\n  private getEnemy() {\n    const { lastAttackId } = this.game.player.traits.get(PlayerData);\n    const target = this.game.entities.get(lastAttackId);\n    if (!target)\n      return null;\n    if (!target.traits.get(EnemyData))\n      return null;\n    return target;\n  }\n\n  update() {\n    const enemy = this.getEnemy();\n    if (!enemy) {\n      this.enemyTex.clearTexture();\n      this.hpBarIcon.visible = false;\n      this.hpBar.visible = false;\n      this.nameLabel.text = 'none';\n      return;\n    }\n\n    const { def } = enemy.traits.get(EnemyData);\n    const { hp, maxHp } = Stats.compute(enemy.traits.get(Stats));\n    this.enemyTex.setTexture(def.texture);\n    this.enemyTex.update(0);\n    this.nameLabel.text = def.name;\n\n    this.hpBarIcon.visible = true;\n    this.hpBar.visible = true;\n    const percentage = hp / maxHp;\n    this.hpBarText.text = `${Math.ceil(hp)}/${maxHp}`;\n    this.hpBarFill.width = HPBarWidth * percentage;\n    this.hpBarFill.height = HPBarHeight;\n\n    if (percentage < 0.3) this.hpBarFill.tint = 0xa00000;\n    else if (percentage < 0.6) this.hpBarFill.tint = 0xa0a000;\n    else this.hpBarFill.tint = 0x00a000;\n  }\n\n  layout(width: number, height: number) {\n    this.enemyTex.position.set(0, 0);\n    this.nameLabel.position.set(80, 0);\n    this.nameLabel.layout(256, 64);\n\n    this.hpBarIcon.position.set(0, 96);\n    this.hpBar.position.set(48, 96);\n    this.hpBarText.layout(HPBarWidth, HPBarHeight);\n  }\n}","import { Panel } from 'app/components';\nimport { Game } from 'app/game';\n\nexport class GameOverlay extends Panel {\n  constructor(public readonly game: Game) {\n    super(game.app);\n  }\n\n  public init() { }\n  public dispose() { }\n  public update(dt: number) { }\n\n  protected async done() {\n    await this.game.app.popState();\n  }\n}","import { Text, TextButton } from 'app/components';\nimport { Game } from 'app/game';\nimport { GameOverlay } from 'app/game/overlays';\n\nconst Width = 400;\nconst Height = 200;\n\nexport class DeathOverlay extends GameOverlay {\n  private readonly exitButton: TextButton;\n  private readonly message: Text;\n\n  constructor(game: Game) {\n    super(game);\n\n    this.message = new Text('you died!', { fontWeight: 'bold' });\n    this.addChild(this.message);\n\n    this.exitButton = new TextButton('exit');\n    this.exitButton.position.set((Width - 128) / 2, Height - 16 - 48);\n    this.exitButton.on(TextButton.Clicked, this.exit);\n    this.addChild(this.exitButton);\n  }\n\n  layout(width: number, height: number) {\n    this.position.set(\n      Math.round((width - Width) / 2),\n      Math.round((height - Height) / 2)\n    );\n    super.layout(Width, Height);\n\n    this.message.layout(Width, 128);\n    this.exitButton.layout(128, 48);\n  }\n\n  private exit = async () => {\n    await this.done();\n    await this.game.app.popState();\n  }\n}","import { Button, SlotView, TextureSprite, TextButton } from 'app/components';\nimport { StyledText } from 'app/components/StyledText';\nimport { TextToolTip } from 'app/components/TextToolTip';\nimport { Game } from 'app/game';\nimport { Alchemy, Anvil, EnemyInfo, MenuPanel, Workbench } from 'app/game/menu';\nimport { GameOverlay } from 'app/game/overlays';\nimport { Inventory, Stats, StatList } from 'app/game/traits';\nimport * as vex from 'vex-js';\n\nconst MenuWidth = 800;\nconst MenuHeight = 600;\nconst SlotsPerRow = 8;\n\nexport class MenuOverlay extends GameOverlay {\n  private activeTab: MenuPanel;\n  private readonly tabs: MenuPanel[] = [];\n  private readonly tabButtons: Button[];\n  private readonly saveButton = new TextButton('save');\n  private readonly exitButton = new TextButton('exit');\n\n  private readonly slotViews: SlotView[] = [];\n  private readonly trash = new SlotView(this.game, { item: null, accepts: null });\n\n  private readonly stats: StatList;\n  private readonly base: StatList;\n  private readonly statNames = new StyledText('', {\n    default: { align: 'right', fontWeight: 'bold' },\n    s: { fontSize: 12 }\n  });\n  private readonly statValues = new StyledText('', {\n    default: { align: 'left' },\n    s: { fontSize: 12 },\n    incr: { fill: '#d0d000' },\n    decr: { fill: '#d00000' }\n  });\n\n  constructor(game: Game) {\n    super(game);\n\n    this.tabs.push(new Workbench(game));\n    this.tabs.push(new Alchemy(game));\n    this.tabs.push(new Anvil(game));\n    this.tabs.push(new EnemyInfo(game));\n    this.activeTab = this.tabs[0];\n    this.activeTab.active = true;\n    this.addChild(this.activeTab);\n\n    const toolTip = new TextToolTip(game.app, '', {});\n\n    this.tabButtons = this.tabs.map(tab => {\n      const btn = new Button();\n      const icon = new TextureSprite(tab.icon);\n      icon.scale.set(2, 2);\n      btn.content.addChild(icon);\n      this.addChild(btn);\n      game.app.toolTip.add(btn, () => {\n        toolTip.text = tab.name;\n        return toolTip;\n      });\n      btn.on(Button.Clicked, () => {\n        if (this.activeTab === tab) return;\n        this.removeChild(this.activeTab);\n        this.addChild(tab);\n        this.activeTab.active = false;\n        this.activeTab = tab;\n        tab.active = true;\n      });\n      return btn;\n    });\n\n    const slots = game.player.traits.get(Inventory).slots;\n    for (const slot of slots) {\n      const view = new SlotView(this.game, slot);\n      this.slotViews.push(view);\n      this.content.addChild(view);\n    }\n    this.slotViews[40].bgOverlay.setTexture('sprites/ui/inv-slot-chestplate');\n    this.slotViews[41].bgOverlay.setTexture('sprites/ui/inv-slot-leggings');\n    this.slotViews[42].bgOverlay.setTexture('sprites/ui/inv-slot-boots');\n\n    this.content.addChild(this.trash);\n    this.trash.bgOverlay.setTexture('sprites/ui/inv-slot-trash');\n\n    const stats = this.game.player.traits.get(Stats);\n    this.stats = Stats.compute(stats);\n    this.base = stats.base;\n    this.content.addChild(this.statNames);\n    this.content.addChild(this.statValues);\n\n    this.content.addChild(this.saveButton);\n    this.content.addChild(this.exitButton);\n    this.saveButton.on(TextButton.Clicked, this.save.bind(this));\n    this.exitButton.on(TextButton.Clicked, this.exit.bind(this));\n  }\n\n  layout(width: number, height: number) {\n    this.position.set(\n      Math.round((width - MenuWidth) / 2),\n      Math.round((height - MenuHeight) / 2)\n    );\n    super.layout(MenuWidth, MenuHeight);\n\n    const slotLeft = 24, slotTop = 24;\n    let x = 0, y = 0;\n    for (const view of this.slotViews.slice(-3)) {\n      view.position.set(slotLeft + (x + SlotsPerRow) * SlotView.Size + 16, slotTop);\n      view.layout();\n      x++;\n    }\n    this.trash.position.set(slotLeft + (SlotsPerRow + 4) * SlotView.Size + 16, slotTop);\n    this.trash.layout();\n\n    x = y = 0;\n    for (const view of this.slotViews.slice(0, -3)) {\n      view.position.set(slotLeft + x * SlotView.Size, slotTop + y * SlotView.Size + (y > 0 ? 16 : 0));\n      view.layout();\n      if (++x === SlotsPerRow) {\n        x = 0;\n        y++;\n      }\n    }\n\n    this.statNames.position.set(\n      slotLeft + SlotsPerRow * SlotView.Size + 16,\n      slotTop + SlotView.Size + 16\n    );\n    this.statNames.layout(this.statNames.contentWidth, this.statNames.contentHeight);\n    this.statValues.position.set(\n      slotLeft + SlotsPerRow * SlotView.Size + 16 + this.statNames.contentWidth,\n      slotTop + SlotView.Size + 16\n    );\n    this.statValues.layout(this.statValues.contentWidth, this.statValues.contentHeight);\n\n    const buttonX = 24, buttonY = 336;\n    x = buttonX;\n    y = buttonY;\n\n    for (let i = 0; i < this.tabs.length; i++) {\n      const button = this.tabButtons[i];\n      button.isEnabled = this.activeTab !== this.tabs[i];\n      button.position.set(x, y);\n      button.layout(50, 50);\n      x += 50 + 16;\n      if (x + 50 >= 256) {\n        x = buttonX;\n        y += 50 + 16;\n      }\n    }\n    y += 50 + 16;\n\n    x = buttonX;\n    this.saveButton.position.set(x, y);\n    this.saveButton.layout(96, 48);\n    x += 96 + 16;\n    this.exitButton.position.set(x, y);\n    this.exitButton.layout(96, 48);\n\n    this.activeTab.position.set(256, 336);\n    this.activeTab.layout(MenuWidth - 256 - 16, MenuHeight - 336 - 16);\n  }\n\n  update(dt: number) {\n    if (this.game.keyboard.isDown('Escape')) this.done();\n\n    for (const view of this.slotViews)\n      view.update(dt);\n\n    this.trash.slot.item = null;\n    this.trash.update(dt);\n\n    this.updateStats();\n\n    this.activeTab.update(dt);\n  }\n\n  private updateStats() {\n    function makeBonusText(base: number, computed: number) {\n      const diff = computed - base;\n      if (diff < 0) return `(<decr>${computed - base}</decr>)`;\n      else if (diff > 0) return `(<incr>+${computed - base}</incr>)`;\n      else return '';\n    }\n\n    this.statNames.text = `\nhp<s> </s>\nstr<s> </s>\ndef<s> </s>\nspd<s> </s>\nvit<s> </s>\n`.trim();\n    this.statValues.text = `\n<s> </s>${Math.ceil(this.stats.hp)} / ${this.stats.maxHp} ${makeBonusText(this.base.maxHp, this.stats.maxHp)}\n<s> </s>${this.stats.str} ${makeBonusText(this.base.str, this.stats.str)}\n<s> </s>${this.stats.def} ${makeBonusText(this.base.def, this.stats.def)}\n<s> </s>${this.stats.spd} ${makeBonusText(this.base.spd, this.stats.spd)}\n<s> </s>${this.stats.vit} ${makeBonusText(this.base.vit, this.stats.vit)}\n`.trim();\n  }\n\n  private save() {\n    vex.dialog.prompt({\n      label: 'Save name (max 8 char.): ',\n      value: this.game.data.id,\n      callback: (name) => {\n        if (name === false) {\n          this.game.app.view.focus();\n          return;\n        }\n\n        if (!name) {\n          vex.dialog.alert({ content: 'Name is empty!', callback: () => this.game.app.view.focus() });\n          return;\n        } else if (name.length > 8) {\n          vex.dialog.alert({ content: 'Name is too long!', callback: () => this.game.app.view.focus() });\n          return;\n        }\n        for (const tab of this.tabs)\n          tab.dispose(false);\n\n        this.game.save();\n        this.game.data.id = name;\n        localStorage[name] = this.game.data.export();\n        vex.dialog.alert({ content: `Saved as name '${name}'.`, callback: () => this.game.app.view.focus() });\n      }\n    });\n  }\n\n  private async exit() {\n    await this.done();\n    await this.game.app.popState();\n  }\n\n  async done() {\n    this.game.app.dragDrop.cancel();\n    for (const tab of this.tabs)\n      tab.dispose(true);\n    await super.done();\n  }\n}","import { Game } from 'app/game';\nimport { MenuOverlay } from 'app/game/overlays/MenuOverlay';\nimport { Task } from 'app/game/tasks';\nimport { Spatial, Stats, StatList } from 'app/game/traits';\nimport { StateOverlay } from 'app/states';\nimport { tilePerSecond } from 'common/logic/stats';\nimport { vec2 } from 'gl-matrix';\n\nexport class PlayerInputTask extends Task {\n  private readonly vel: vec2;\n  private readonly stats: Stats;\n  private readonly statList: StatList;\n  private readonly direction = vec2.create();\n\n  constructor(game: Game) {\n    super(game);\n    this.vel = game.player.traits.get(Spatial).velocity;\n    this.stats = game.player.traits.get(Stats);\n    this.statList = Stats.compute(this.stats);\n  }\n\n  public update(dt: number) {\n    if (Stats.canMove(this.stats)) {\n      vec2.set(this.direction, 0, 0);\n      if (this.game.keyboard.isPressed('a')) this.direction[0]--;\n      if (this.game.keyboard.isPressed('d')) this.direction[0]++;\n      if (this.game.keyboard.isPressed('w')) this.direction[1]--;\n      if (this.game.keyboard.isPressed('s')) this.direction[1]++;\n\n      vec2.normalize(this.direction, this.direction);\n      vec2.scale(this.vel, this.direction, tilePerSecond(this.statList.spd));\n    }\n\n    if (this.game.keyboard.isDown('Escape')) {\n      this.game.app.pushState(new StateOverlay(new MenuOverlay(this.game)));\n    }\n  }\n}","import { Game } from 'app/game';\nimport { BehaviorTree } from 'app/game/behavior';\nimport { Enemies } from 'app/game/behavior/enemies';\nimport { Enemy } from 'app/game/entities';\nimport { SpawnEnemy } from 'app/game/messages';\nimport { Task } from 'app/game/tasks';\nimport { Behavior } from 'app/game/traits';\nimport { filter } from 'rxjs/operators/filter';\n\nexport class BehaviorTask extends Task {\n  constructor(game: Game) {\n    super(game);\n    this.game.messages$.ofType(SpawnEnemy)\n      .pipe(filter(msg => msg.enemyType !== 'dragon'))\n      .subscribe(this.spawn);\n  }\n\n  private spawn = ({ enemyType, position }: SpawnEnemy) => {\n    const enemyDef = Enemies[enemyType];\n    const entity = Enemy.make(this.game, enemyDef, position);\n    this.game.entities.add(entity);\n  }\n\n  update(dt: number) {\n    for (const entity of this.game.entities.withTrait(Behavior)) {\n      const { behaviors } = entity.traits.get(Behavior);\n      BehaviorTree.run(entity, dt, behaviors);\n    }\n  }\n}","import { ActionState, ConditionState } from 'app/game/behavior';\nimport { Charge, Chase, Escape, Shoot } from 'app/game/behavior/actions';\nimport { AtSpawn, Distance, HP } from 'app/game/behavior/conditions';\nimport { Weapon } from 'common/data';\n\nfunction random(min: number, max: number) {\n  return Math.random() * (max - min) + min;\n}\n\nexport const Attacks: ((color: string) => ActionState)[] = [\n  // targeted\n  (color: string) => Shoot.make({\n    type: Math.random() < 0.5 ? Weapon.Type.Bolt : Weapon.Type.Orb,\n    pierce: true,\n    strength: 5 + random(-3, 5),\n    cooldown: 5000 + random(-2000, 2000),\n    knockback: 10,\n    range: 5 + random(-2, 2),\n    color\n  }, [], 1000 + random(-500, 1000),\n    Math.floor(random(1, 3)), random(5, 20),\n    random(0, 10), Math.random() * 2000),\n\n  // ring\n  (color: string) => {\n    let numShoots = Math.floor(random(3, 6));\n    return Shoot.make({\n      type: Math.random() < 0.5 ? Weapon.Type.Bolt : Weapon.Type.Orb,\n      pierce: true,\n      strength: 5 + random(-3, 5),\n      cooldown: 5000 + random(-2000, 2000),\n      knockback: 10,\n      range: 5 + random(-2, 2),\n      color\n    }, [], 1000 + random(-500, 1000),\n      numShoots, 360 / numShoots,\n      random(0, 10), Math.random() * 2000);\n  },\n];\n\nexport const Movements: (() => ActionState)[] = [\n  () => Chase.make(),\n  () => Charge.make(),\n  () => Escape.make()\n];\n\nexport const Conditions: (() => ConditionState)[] = [\n  () => HP.greaterThan(random(0.7, 0.9)),\n  () => HP.lessThan(random(0.3, 0.4)),\n  () => AtSpawn.make(),\n  () => Distance.greaterThan(random(6, 10)),\n  () => Distance.lessThan(random(5, 8)),\n];","import { shuffle, sortBy, times } from 'lodash';\n\nexport const BatchSize = 4;\nexport const SelectionSize = 0.5;\n\nexport interface GeneticAlgorithm<Instance> {\n  seed(): Instance\n  evaluate(instance: Instance): number;\n  crossover(a: Instance, b: Instance): Instance;\n  mutate(instance: Instance): Instance;\n}\n\nexport function begin<Instance>(algo: GeneticAlgorithm<Instance>) {\n  return times(BatchSize, () => algo.seed());\n}\n\nexport function nextGeneration<Instance>(algo: GeneticAlgorithm<Instance>, batch: Instance[]) {\n  // selection\n  const parents = sortBy(batch, instance => -algo.evaluate(instance))\n    .slice(BatchSize * SelectionSize);\n\n  // crossover\n  const children = times(BatchSize - parents.length, () => {\n    const parentsCopys = parents.slice();\n    const a = parentsCopys.splice(Math.floor(Math.random() * parentsCopys.length), 1)[0];\n    const b = parentsCopys.splice(Math.floor(Math.random() * parentsCopys.length), 1)[0];\n    return algo.crossover(a, b);\n  });\n\n  // mutation\n  const newParents = parents.map(instance => algo.mutate(instance));\n\n  return shuffle([...newParents, ...children]);\n}","import { Game } from 'app/game';\nimport { ActionState, BehaviorTree } from 'app/game/behavior';\nimport { Shoot, Wander } from 'app/game/behavior/actions';\nimport { HP } from 'app/game/behavior/conditions';\nimport { Attacks, Conditions, Movements } from 'app/game/behavior/genes';\nimport { Enemy } from 'app/game/entities';\nimport { SpawnEnemy } from 'app/game/messages';\nimport { Task } from 'app/game/tasks';\nimport { EnemyData, Stats } from 'app/game/traits';\nimport { random as randomColor } from 'common/color';\nimport { DropTable, EnemyDef, Item, Weapon } from 'common/data';\nimport { begin, nextGeneration, GeneticAlgorithm } from 'common/logic/genetic';\nimport { generateName } from 'common/markov';\nimport { Animations } from 'data/animations';\nimport { clamp, cloneDeep, meanBy, shuffle } from 'lodash';\nimport { filter } from 'rxjs/operators/filter';\n\ninterface DragonDef extends EnemyDef {\n  dragonId: number;\n  color: string;\n  maxDPS: number;\n  minPlayerHP: number;\n  age: number;\n  score: number;\n}\n\nfunction randomRange(max: number) {\n  return Math.floor(Math.random() * max);\n}\n\nconst DragonDefTemplate: DragonDef = {\n  dragonId: 0,\n  maxDPS: 0,\n  color: '',\n  minPlayerHP: 100000,\n  age: 0,\n  score: 0,\n\n  name: '',\n  texture: Animations.Dragon,\n  scale: 2,\n  horizontalAnim: true,\n  offset: [0, -1],\n  behaviors: { activeStateIndex: -1, states: [] },\n  drops: { numDrops: { type: 'constant', value: 0 }, items: [] },\n  stats: {\n    hp: 200,\n    maxHp: 200,\n    str: 10,\n    def: 0,\n    spd: 5,\n    vit: 0\n  }\n};\n\nfunction touchShoot() {\n  return Shoot.make({\n    type: Weapon.Type.Invisible,\n    pierce: true,\n    strength: 5,\n    cooldown: 100,\n    knockback: 10,\n    range: 2,\n    color: '0'\n  }, [], 100);\n}\n\ninterface GeneticSave {\n  readonly dragons: DragonDef[];\n  nextId: number;\n}\n\nexport class DragonTask extends Task implements GeneticAlgorithm<DragonDef> {\n  private thisGeneration: DragonDef[] = [];\n  private instancePool: DragonDef[] = [];\n  private data: GeneticSave;\n\n  constructor(game: Game) {\n    super(game);\n    this.game.messages$.ofType(SpawnEnemy)\n      .pipe(filter(msg => msg.enemyType === 'dragon'))\n      .subscribe(this.spawn);\n\n    this.data = this.game.data.custom.dragons || (this.game.data.custom.dragons = {\n      dragons: [],\n      nextId: 0\n    });\n    this.nextGen(begin(this));\n  }\n\n  private nextGen(generation: DragonDef[]) {\n    this.thisGeneration = generation.map(dragon => {\n      dragon.dragonId = this.data.nextId++;\n      this.computeDrops(dragon);\n      this.data.dragons[dragon.dragonId] = dragon;\n      return dragon;\n    });\n    this.instancePool = this.thisGeneration.slice();\n  }\n\n  private spawn = ({ position }: SpawnEnemy) => {\n    if (this.instancePool.length === 0) {\n      this.nextGen(nextGeneration(this, this.thisGeneration));\n    }\n\n    const def = this.instancePool.pop()!;\n    const entity = Enemy.make(this.game, def, position);\n    this.game.entities.add(entity);\n  }\n\n  private interval = 0;\n  private lastPlayerHP = -1;\n  update(dt: number) {\n    this.interval -= dt;\n\n    const playerHP = this.game.player.traits.get(Stats).base.hp;\n    if (this.lastPlayerHP < 0) this.lastPlayerHP = playerHP;\n\n    for (const enemy of this.game.entities.withTrait(EnemyData)) {\n      const { def } = enemy.traits.get(EnemyData);\n      const dragonId = (def as DragonDef).dragonId;\n      if (typeof dragonId !== 'number')\n        continue;\n\n      const dragonDef = this.data.dragons[dragonId];\n      dragonDef.minPlayerHP = Math.min(dragonDef.minPlayerHP, playerHP);\n      if (this.interval <= 0)\n        dragonDef.maxDPS = Math.max(dragonDef.maxDPS, Math.max(0, this.lastPlayerHP - playerHP));\n      dragonDef.age = enemy.age;\n    }\n\n    if (this.interval <= 0) {\n      this.lastPlayerHP = playerHP;\n      this.interval = 1000;\n    }\n  }\n\n  private makeRandomState(color: string) {\n    const state = {\n      condition: Conditions[Math.floor(Math.random() * Conditions.length)](),\n      actions: [] as ActionState[]\n    };\n\n    const numAttacks = 1 + randomRange(2);\n    for (let j = 0; j < numAttacks; j++)\n      state.actions.push(Attacks[randomRange(Attacks.length)](color));\n    state.actions.push(Movements[randomRange(Movements.length)]());\n\n    // basic actions\n    state.actions.push(touchShoot());\n    state.actions.push(Wander.make());\n    return state;\n  }\n\n  seed() {\n    const color = randomColor(\n      { type: 'uniform', min: 0.6, max: 0.8 },\n      { type: 'uniform', min: 0.6, max: 0.8 }\n    );\n\n    const instance = cloneDeep(DragonDefTemplate);\n    instance.name = generateName(6, 12);\n    instance.color = color;\n    instance.texture = Object.assign({}, Animations.Dragon, { tint: color });\n\n    for (let i = 0; i < 4; i++) {\n      const state = this.makeRandomState(color);\n      // first state is basic state\n      if (i === 0)\n        state.condition = HP.greaterThan(0);\n      instance.behaviors.states.push(state);\n    }\n\n    return instance;\n  }\n\n  evaluate(instance: DragonDef): number {\n    const dragonDef = this.data.dragons[instance.dragonId];\n    const ageScore = clamp(Math.abs(dragonDef.age - 60 * 1000) / 60000, 0, 1);\n    const dpsScore = clamp(Math.abs(dragonDef.maxDPS - 20) / 10, 0, 1);\n    const hpScore = clamp(Math.abs(dragonDef.minPlayerHP - 50) / 50, 0, 1);\n    const finalScore = 1 - (ageScore + dpsScore + hpScore) / 3;\n    console.log(`evaluate ${instance.dragonId}: ${finalScore}`);\n    dragonDef.score = finalScore;\n    return finalScore;\n  }\n\n  adjustStats(instances: DragonDef[], target: DragonDef) {\n    const ageScore = clamp(meanBy(instances, dragon => dragon.age - 60 * 1000) / 60000, -1, 1);\n    const dpsScore = clamp(meanBy(instances, dragon => dragon.maxDPS - 20) / 10, -1, 1);\n    const hpScore = clamp(meanBy(instances, dragon => dragon.minPlayerHP - 50) / 50, -1, 1);\n    target.stats.maxHp = meanBy(instances, dragon => dragon.stats.maxHp) * (1 - ageScore / 2);\n    target.stats.hp = target.stats.maxHp;\n    target.stats.str = meanBy(instances, dragon => dragon.stats.str) * (1 - dpsScore / 2);\n    target.stats.spd = meanBy(instances, dragon => dragon.stats.spd) * (1 - hpScore / 2);\n    console.log('stats', target.stats);\n  }\n\n  computeDrops(dragon: DragonDef) {\n    const drops: DropTable = {\n      numDrops: { type: 'exponential', min: 3, max: 6, rate: 0.5 },\n      items: []\n    };\n    const baseWeight = dragon.stats.maxHp / 2000 - dragon.stats.spd / 200 + Math.random() * 0.1;\n    const baseToughness = dragon.stats.maxHp / 2000 + Math.random() * 0.1;\n    const baseSharpness = dragon.stats.str / 100 + Math.random() * 0.1;\n    const affinity = clamp((dragon.stats.maxHp / 1000 + dragon.stats.spd / 100 + dragon.stats.str / 50) / 3, 0, 1);\n    drops.items.push({\n      prob: 0.3, item: {\n        template: {\n          id: 'skin',\n          name: `Skin of ${dragon.name}`,\n          type: Item.Type.Material,\n          texture: { type: 'single', tex: 'sprites/items/skin', tint: dragon.color },\n          material: {\n            name: dragon.name,\n            color: dragon.color,\n            weight: clamp(baseWeight * 1, 0, 1),\n            toughness: clamp(baseToughness * 1.5, 0, 1),\n            sharpness: clamp(baseSharpness * 0.5, 0, 1),\n            affinity,\n          },\n        },\n        substs: []\n      }\n    }, {\n        prob: 0.3, item: {\n          template: {\n            id: 'bone',\n            name: `Bone of ${dragon.name}`,\n            type: Item.Type.Material,\n            texture: { type: 'single', tex: 'sprites/items/bone', tint: dragon.color },\n            material: {\n              name: dragon.name,\n              color: dragon.color,\n              weight: clamp(baseWeight * 1.5, 0, 1),\n              toughness: clamp(baseToughness * 1.5, 0, 1),\n              sharpness: clamp(baseSharpness * 1, 0, 1),\n              affinity,\n            },\n          },\n          substs: []\n        }\n      }, {\n        prob: 0.2, item: {\n          template: {\n            id: 'fang',\n            name: `Fang of ${dragon.name}`,\n            type: Item.Type.Material,\n            texture: { type: 'single', tex: 'sprites/items/fang', tint: dragon.color },\n            material: {\n              name: dragon.name,\n              color: dragon.color,\n              weight: clamp(baseWeight * 0.5, 0, 1),\n              toughness: clamp(baseToughness * 0.5, 0, 1),\n              sharpness: clamp(baseSharpness * 2, 0, 1),\n              affinity,\n            },\n          },\n          substs: []\n        }\n      }, {\n        prob: 0.2, item: {\n          template: {\n            id: 'scale',\n            name: `Scale of ${dragon.name}`,\n            type: Item.Type.Material,\n            texture: { type: 'single', tex: 'sprites/items/scale', tint: dragon.color },\n            material: {\n              name: dragon.name,\n              color: dragon.color,\n              weight: clamp(baseWeight * 0.5, 0, 1),\n              toughness: clamp(baseToughness * 2, 0, 1),\n              sharpness: clamp(baseSharpness * 1, 0, 1),\n              affinity,\n            },\n          },\n          substs: []\n        }\n      });\n    dragon.drops = drops;\n  }\n\n  crossover(a: DragonDef, b: DragonDef) {\n    console.log(`crossover: ${a.dragonId} ${b.dragonId}`);\n    const newDragon = this.seed();\n\n    const candidateStates = [\n      ...cloneDeep(a.behaviors.states.slice(1)),\n      ...cloneDeep(b.behaviors.states.slice(1))\n    ];\n    const states = shuffle(candidateStates).slice(candidateStates.length / 2);\n    newDragon.behaviors.states = [newDragon.behaviors.states[0], ...states];\n    this.adjustStats([a, b], newDragon);\n    return newDragon;\n  }\n\n  mutate(instance: DragonDef) {\n    console.log(`mutate: ${instance.dragonId}`);\n    const newDragon = this.seed();\n    newDragon.behaviors = cloneDeep(instance.behaviors);\n\n    const stateIndex = Math.floor(Math.random() * (newDragon.behaviors.states.length + 1));\n    if (stateIndex < newDragon.behaviors.states.length) {\n      const state = newDragon.behaviors.states[stateIndex];\n      state.condition = BehaviorTree.conditions.get(state.condition.type)!.mutate(state.condition);\n\n      const actionIndex = Math.floor(Math.random() * state.actions.length);\n      const action = state.actions[actionIndex];\n      state.actions[actionIndex] = BehaviorTree.actions.get(action.type)!.mutate(action);\n    } else {\n      const state = this.makeRandomState(newDragon.color);\n      instance.behaviors.states.push(state);\n    }\n    this.adjustStats([instance], newDragon);\n    return newDragon;\n  }\n\n}","import { DropTable } from 'common/data';\nimport { instantiate, randomValue } from 'common/random';\n\nexport function generateDrops(dropTable: DropTable) {\n  const numDrops = Math.round(randomValue(dropTable.numDrops));\n  const drops = [];\n  for (let i = 0; i < numDrops; i++) {\n    let x = Math.random();\n    for (const { prob, item } of dropTable.items) {\n      x -= prob;\n      if (x <= 0) {\n        drops.push(instantiate(item));\n        break;\n      }\n    }\n  }\n  return drops;\n}","import { Game } from 'app/game';\nimport { ItemDrop } from 'app/game/entities';\nimport { ApplyEffects, EntityCollision, ObjectSpriteRequest, PlayFX, ShowParticles, TileCollision, UpdateHP } from 'app/game/messages';\nimport { Task } from 'app/game/tasks';\nimport { PlayerData, ProjectileData, Stats } from 'app/game/traits';\nimport { Spatial } from 'app/game/traits';\nimport { generateDrops } from 'app/utils/drops';\nimport { TileObject, Weapon } from 'common/data';\nimport { makeEffect } from 'common/logic/effect/common';\nimport { knockbackSpeed } from 'common/logic/stats';\nimport { EffectDef } from 'data/effects';\nimport { vec2 } from 'gl-matrix';\nimport { cloneDeep } from 'lodash';\n\nconst ObjectHPRegenInterval = 5000;\n\nexport class ProjectileTask extends Task {\n  constructor(game: Game) {\n    super(game);\n    game.messages$.ofType(TileCollision).subscribe(this.tileCollided);\n    game.messages$.ofType(EntityCollision).subscribe(this.entityCollided);\n  }\n\n  private regenCooldown = 0;\n  private readonly objectDamages = new Map<string, number>();\n\n  private readonly target = vec2.create();\n  update(dt: number) {\n    for (const entity of this.game.entities.withTrait(ProjectileData)) {\n      const projectile = entity.traits.get(ProjectileData);\n      if (entity.age >= projectile.lifetime) {\n        entity.delete();\n        continue;\n      }\n      const spatial = entity.traits.get(Spatial);\n      spatial.sprite.visible = entity.age > 100;\n\n      // update velocity\n      vec2.sub(this.target, projectile.end, projectile.start);\n      vec2.scaleAndAdd(this.target, projectile.start, this.target, entity.age / projectile.lifetime);\n      vec2.sub(spatial.velocity, this.target, spatial.position);\n      vec2.scale(spatial.velocity, spatial.velocity, 1000 / dt);\n    }\n\n    this.regenCooldown += dt;\n    if (this.regenCooldown >= ObjectHPRegenInterval) {\n      for (const key of this.objectDamages.keys()) {\n        const dmg = (this.objectDamages.get(key) || 0) - 1;\n        if (dmg <= 0)\n          this.objectDamages.delete(key);\n        else\n          this.objectDamages.set(key, dmg);\n      }\n      this.regenCooldown = 0;\n    }\n  }\n\n  private tileCollided = ({ entityId, x, y }: TileCollision) => {\n    const entity = this.game.entities.get(entityId);\n    if (!entity) return;\n    const projectile = entity.traits.get(ProjectileData);\n    if (!projectile) return;\n\n    const tileObj = this.game.map.getObject(x, y);\n    const tileObjDef = this.game.library.objects[tileObj];\n    if (!tileObjDef) return;\n\n    if (tileObjDef.drops && (projectile.weapon.type !== Weapon.Type.Arrow || tileObjDef.obstacle)) {\n      this.hitObject(projectile, x, y, tileObjDef);\n    }\n    if (tileObjDef.obstacle && !projectile.weapon.pierce) {\n      entity.delete();\n    }\n  }\n\n  private readonly objectCenter = vec2.create();\n  private hitObject(projectile: ProjectileData, x: number, y: number, obj: TileObject) {\n    const key = `${x}:${y}`;\n    if (projectile.hit.has(key)) return;\n    else projectile.hit.add(key);\n\n    const sprite = this.game.dispatch(new ObjectSpriteRequest(x, y)).sprite;\n    vec2.set(this.objectCenter, x + 0.5, y + 0.5);\n    if (sprite) {\n      vec2.add(this.objectCenter, this.objectCenter, sprite.jitter);\n      this.game.dispatch(new PlayFX.Shake(PlayFX.Type.Shake, sprite));\n      this.game.dispatch(ShowParticles.splash(this.objectCenter, 20, parseInt(obj.color, 16), 0));\n    }\n\n    const damage = (this.objectDamages.get(key) || 0) + 1;\n    const drops = obj.drops!;\n    if (damage <= drops.hp) {\n      this.objectDamages.set(key, damage);\n      return;\n    }\n\n    this.objectDamages.delete(key);\n    for (const drop of generateDrops(drops.table)) {\n      const itemDrop = ItemDrop.make(this.game, drop, this.objectCenter);\n      this.game.entities.add(itemDrop);\n    }\n    const replacement = drops.replaceWith;\n    const id = replacement ?\n      this.game.library.objects.find(obj => obj && obj.name === replacement)!.id :\n      0;\n    this.game.map.setObject(x, y, id);\n  }\n\n  private readonly knockbackDirection = vec2.create();\n  private entityCollided = ({ entityIdA, entityIdB }: EntityCollision) => {\n    const entityA = this.game.entities.get(entityIdA);\n    const entityB = this.game.entities.get(entityIdB);\n    if (!entityA || !entityB) return;\n\n    let projectile: ProjectileData, stats: Stats;\n    let projectileEntity, targetEntity;\n    if ((projectile = entityA.traits.get(ProjectileData)) && (stats = entityB.traits.get(Stats))) {\n      projectileEntity = entityA;\n      targetEntity = entityB;\n    } else if ((projectile = entityB.traits.get(ProjectileData)) && (stats = entityA.traits.get(Stats))) {\n      projectileEntity = entityB;\n      targetEntity = entityA;\n    } else return;\n\n    const key = `${targetEntity.id}`;\n    if (projectile.hit.has(key)) return;\n    else projectile.hit.add(key);\n\n    // only hits opposing entities\n    if (projectile.sourceEntityId !== this.game.player.id && targetEntity !== this.game.player)\n      return;\n    if (projectile.sourceEntityId === this.game.player.id && targetEntity === this.game.player)\n      return;\n\n    const effects = cloneDeep(projectile.effects);\n\n    // knockback\n    if (!Stats.hasEffect(stats, EffectDef.Type.KnockbackResist)) {\n      vec2.sub(this.knockbackDirection, projectile.end, projectile.start);\n      vec2.normalize(this.knockbackDirection, this.knockbackDirection);\n      if (projectile.weapon.type === Weapon.Type.Sword)\n        vec2.set(this.knockbackDirection, this.knockbackDirection[1], -this.knockbackDirection[0]);\n      const { velocity: targetVel } = targetEntity.traits.get(Spatial);\n      vec2.scale(targetVel, this.knockbackDirection, knockbackSpeed(projectile.weapon.knockback));\n      effects.push(makeEffect(EffectDef.Type.Knockback, 0, 100));\n    }\n\n    const damage = Math.max(Math.ceil(projectile.damage * 0.1), projectile.damage - Stats.compute(stats).def);\n    this.game.dispatch(new UpdateHP(targetEntity.id, -damage));\n    this.game.dispatch(new ApplyEffects(targetEntity.id, effects));\n\n    if (!projectile.weapon.pierce) {\n      projectileEntity.delete();\n    }\n    if (projectile.sourceEntityId === this.game.player.id) {\n      this.game.player.traits.get(PlayerData).lastAttackId = targetEntity.id;\n    }\n  }\n}","import { Game } from 'app/game';\nimport { Entity } from 'app/game/entities';\nimport { ApplyEffects, UpdateHP } from 'app/game/messages';\nimport { Task } from 'app/game/tasks';\nimport { Stats, StatList } from 'app/game/traits';\nimport { Effect } from 'common/data';\nimport { EffectDef } from 'data/effects';\n\nexport class EffectTask extends Task {\n  constructor(game: Game) {\n    super(game);\n    this.game.messages$.ofType(ApplyEffects).subscribe(this.applyEffects);\n  }\n\n  private applyEffects = ({ entityId, effects }: ApplyEffects) => {\n    const entity = this.game.entities.get(entityId);\n    if (!entity) return;\n    const stats = entity.traits.get(Stats);\n    if (!stats) return;\n\n    const entityEffects = stats.effects;\n\n    // replace existing effect if duration of new effect is longer / stronger\n    for (let i = 0; i < entityEffects.length; i++) {\n      const { type, duration, power } = entityEffects[i];\n      const effectIndex = effects.findIndex(effect => effect.type === type);\n      if (effectIndex >= 0) {\n        if (effects[effectIndex].duration > duration || effects[effectIndex].power > power)\n          entityEffects[i] = effects[effectIndex];\n        effects.splice(effectIndex, 1);\n      }\n    }\n\n    entityEffects.push(...effects);\n  }\n\n  update(dt: number) {\n    for (const entity of this.game.entities.withTrait(Stats)) {\n      const { base, boost, effects } = entity.traits.get(Stats);\n      // reset boost stats, recalc each tick\n      boost.hp = 0;\n      boost.maxHp = 0;\n      boost.str = 0;\n      boost.def = 0;\n      boost.spd = 0;\n      boost.vit = 0;\n\n      for (let i = effects.length - 1; i >= 0; i--) {\n        const effect = effects[i];\n        // when a second just elapsed\n        const secEdge = (Math.floor(effect.duration / 1000) - Math.floor((effect.duration - dt) / 1000)) !== 0;\n        this.applyEffect(effect, entity, base, boost, secEdge);\n        effect.duration -= dt;\n        if (effect.duration <= 0)\n          effects.splice(i, 1);\n      }\n    }\n  }\n\n  private applyEffect(effect: Effect, entity: Entity, base: StatList, boost: StatList, secondEdge: boolean) {\n    switch (effect.type) {\n      case EffectDef.Type.Regen: if (!secondEdge) break;\n      case EffectDef.Type.Heal:\n        this.game.dispatch(new UpdateHP(entity.id, effect.power));\n        break;\n\n      case EffectDef.Type.Poison: if (!secondEdge) break;\n      case EffectDef.Type.Damage:\n        this.game.dispatch(new UpdateHP(entity.id, -effect.power));\n        break;\n\n      case EffectDef.Type.Resistance:\n        boost.def += effect.power; break;\n      case EffectDef.Type.DefBreak:\n        boost.def -= effect.power; break;\n\n      case EffectDef.Type.Speed:\n        boost.spd += effect.power; break;\n      case EffectDef.Type.Slowness:\n        boost.spd -= effect.power; break;\n\n      case EffectDef.Type.Strength:\n        boost.str += effect.power; break;\n      case EffectDef.Type.Weakness:\n        boost.str -= effect.power; break;\n\n      case EffectDef.Type.VitalityUp:\n        boost.vit += effect.power; break;\n      case EffectDef.Type.VitalityDown:\n        boost.vit -= effect.power; break;\n    }\n  }\n}","import { UpdateHP } from 'app/game/messages';\nimport { Task } from 'app/game/tasks';\nimport { Float, Spatial, Stats } from 'app/game/traits';\n\nexport class TerrainEffectTask extends Task {\n  private elapsed = 0;\n  public update(dt: number) {\n    const doDamage = (Math.floor(this.elapsed / 1000) - Math.floor((this.elapsed + dt) / 1000)) !== 0;\n    this.elapsed += dt;\n\n    for (const entity of this.game.entities.withTrait(Spatial)) {\n      const { position } = entity.traits.get(Spatial);\n      const float = entity.traits.get(Float);\n      if (float && float.z[0] > 0) continue;\n\n      const stats = entity.traits.get(Stats);\n      if (!stats) continue;\n\n      const terrainId = this.game.map.getTerrain(position[0], position[1] + 0.5);\n      const terrain = this.game.library.terrains[terrainId];\n      if (!terrain) continue;\n\n      if (terrain.speed) {\n        stats.boost.spd += terrain.speed;\n      }\n      if (terrain.damage && doDamage) {\n        this.game.dispatch(new UpdateHP(entity.id, -terrain.damage));\n      }\n    }\n  }\n}","import { Game } from 'app/game';\nimport { Task } from 'app/game/tasks';\nimport { Inventory, Stats, StatList } from 'app/game/traits';\nimport { Effect } from 'common/data';\nimport { EffectDef } from 'data/effects';\n\nexport class EquipmentEffectTask extends Task {\n  public readonly runWhenPaused = true;\n\n  constructor(game: Game) {\n    super(game);\n  }\n\n  update(dt: number) {\n    const { slots } = this.game.player.traits.get(Inventory);\n    const { bonus } = this.game.player.traits.get(Stats);\n    // reset bonus stats, recalc each tick\n    bonus.hp = 0;\n    bonus.maxHp = 0;\n    bonus.str = 0;\n    bonus.def = 0;\n    bonus.spd = 0;\n    bonus.vit = 0;\n\n    const equipments = slots.slice(40, 43);\n\n    for (const { item } of equipments) {\n      if (!item || !item.effects) continue;\n      for (const effect of item.effects) {\n        this.applyEffect(effect, bonus);\n      }\n    }\n  }\n\n  private applyEffect(effect: Effect, boost: StatList) {\n    switch (effect.type) {\n      case EffectDef.Type.Resistance:\n        boost.def += effect.power; break;\n      case EffectDef.Type.DefBreak:\n        boost.def -= effect.power; break;\n\n      case EffectDef.Type.Speed:\n        boost.spd += effect.power; break;\n      case EffectDef.Type.Slowness:\n        boost.spd -= effect.power; break;\n\n      case EffectDef.Type.Strength:\n        boost.str += effect.power; break;\n      case EffectDef.Type.Weakness:\n        boost.str -= effect.power; break;\n\n      case EffectDef.Type.VitalityUp:\n        boost.vit += effect.power; break;\n      case EffectDef.Type.VitalityDown:\n        boost.vit -= effect.power; break;\n    }\n  }\n}","import { Game } from 'app/game';\nimport { Death, ShowParticles, UpdateHP } from 'app/game/messages';\nimport { Task } from 'app/game/tasks';\nimport { Spatial, Stats } from 'app/game/traits';\nimport { healPerTick } from 'common/logic/stats';\nimport { clamp } from 'lodash';\n\nexport class EntityHPTask extends Task {\n  constructor(game: Game) {\n    super(game);\n    this.game.messages$.ofType(UpdateHP).subscribe(this.updateHP);\n  }\n\n  private updateHP = ({ entityId, hpDiff }: UpdateHP) => {\n    const entity = this.game.entities.get(entityId);\n    if (!entity) return;\n    const stats = entity.traits.get(Stats);\n    if (!stats) return;\n\n    const { maxHp } = Stats.compute(stats);\n    stats.base.hp = clamp(stats.base.hp + hpDiff, 0, maxHp);\n\n    const position = entity.traits.get(Spatial).position;\n    if (stats.base.hp === 0)\n      this.game.dispatch(ShowParticles.splash(position, 100, 0xff0000));\n    else if (hpDiff > 0)\n      this.game.dispatch(ShowParticles.float(position, 20, 0xffffff));\n    else if (hpDiff < 0)\n      this.game.dispatch(ShowParticles.splash(position, 20, 0xff0000));\n\n    if (stats.base.hp === 0)\n      this.game.dispatch(new Death(entity.id));\n  }\n\n  update(dt: number) {\n    for (const entity of this.game.entities.withTrait(Stats)) {\n      const stats = entity.traits.get(Stats);\n      const { vit, maxHp } = Stats.compute(stats);\n      if (stats.base.hp > 0)\n        stats.base.hp = clamp(stats.base.hp + healPerTick(vit), 0, maxHp);\n    }\n  }\n}","import { Easing, Tween } from '@tweenjs/tween.js';\nimport { DisplayObject } from 'pixi.js';\nimport { bindCallback } from 'rxjs/observable/bindCallback';\n\nexport function fadeOut(obj: DisplayObject) {\n  return bindCallback(callback => new Tween(obj)\n    .to({ alpha: 0 }, 250)\n    .easing(Easing.Quadratic.Out)\n    .onComplete(callback)\n    .start()\n  )();\n}\n\nexport function fadeIn(obj: DisplayObject) {\n  return bindCallback(callback => new Tween(obj)\n    .to({ alpha: 1 }, 250)\n    .easing(Easing.Quadratic.In)\n    .onComplete(callback)\n    .start()\n  )();\n}\n\nfunction dir(dy: number, dx: number, left: number, right: number) {\n  const angle = Math.atan2(dy, dx);\n  if (Math.abs(angle) >= Math.PI * left)\n    return 'left';\n  else if (Math.abs(angle) < Math.PI * right)\n    return 'right';\n  else if (angle < 0)\n    return 'up';\n  else\n    return 'down';\n}\n\nexport function direction(dy: number, dx: number, type: 'movement' | 'attack' | 'horizontal') {\n  switch (type) {\n    case 'movement': return dir(dy, dx, 3 / 5, 2 / 5);\n    case 'attack': return dir(dy, dx, 3 / 4, 1 / 4);\n    case 'horizontal': return dir(dy, dx, 1 / 2, 1 / 2);\n  }\n}","/*\nhttps://github.com/noonat/intersect/\n\nCopyright (c) 2011 Nathan Ostgard http://nathanostgard.com\n\nThis software is provided 'as-is', without any express or implied\nwarranty.  In no event will the authors be held liable for any damages\narising from the use of this software.\n\nPermission is granted to anyone to use this software for any purpose,\nincluding commercial applications, and to alter it and redistribute it\nfreely, subject to the following restrictions:\n\n1. The origin of this software must not be misrepresented; you must not\n   claim that you wrote the original software. If you use this software\n   in a product, an acknowledgment in the product documentation would be\n   appreciated but is not required.\n\n2. Altered source versions must be plainly marked as such, and must not be\n   misrepresented as being the original software.\n\n3. This notice may not be removed or altered from any source distribution.\n*/\n\nexport const EPSILON: number = 1e-8;\n\nexport function abs(value: number): number {\n  return value < 0 ? -value : value;\n}\n\nexport function clamp(value: number, min: number, max: number): number {\n  if (value < min) {\n    return min;\n  } else if (value > max) {\n    return max;\n  } else {\n    return value;\n  }\n}\n\nexport function sign(value: number): number {\n  return value < 0 ? -1 : 1;\n}\n\nexport class Point {\n  public x: number;\n  public y: number;\n\n  constructor(x: number = 0, y: number = 0) {\n    this.x = x;\n    this.y = y;\n  }\n\n  public clone(): Point {\n    return new Point(this.x, this.y);\n  }\n\n  public normalize(): number {\n    let length = this.x * this.x + this.y * this.y;\n    if (length > 0) {\n      length = Math.sqrt(length);\n      const inverseLength = 1.0 / length;\n      this.x *= inverseLength;\n      this.y *= inverseLength;\n    } else {\n      this.x = 1;\n      this.y = 0;\n    }\n    return length;\n  }\n}\n\nexport class Hit {\n  public collider: AABB;\n  public pos: Point;\n  public delta: Point;\n  public normal: Point;\n  public time: number;\n\n  constructor(collider: AABB) {\n    this.collider = collider;\n    this.pos = new Point();\n    this.delta = new Point();\n    this.normal = new Point();\n    this.time = 0;\n  }\n}\n\nexport class Sweep {\n  public hit: Hit | null;\n  public pos: Point;\n  public time: number;\n\n  constructor() {\n    this.hit = null;\n    this.pos = new Point();\n    this.time = 1;\n  }\n}\n\nexport class AABB {\n  public pos: Point;\n  public half: Point;\n\n  constructor(pos: Point, half: Point) {\n    this.pos = pos;\n    this.half = half;\n  }\n\n  public intersectPoint(point: Point): Hit | null {\n    const dx = point.x - this.pos.x;\n    const px = this.half.x - abs(dx);\n    if (px <= 0) {\n      return null;\n    }\n\n    const dy = point.y - this.pos.y;\n    const py = this.half.y - abs(dy);\n    if (py <= 0) {\n      return null;\n    }\n\n    const hit = new Hit(this);\n    if (px < py) {\n      const sx = sign(dx);\n      hit.delta.x = px * sx;\n      hit.normal.x = sx;\n      hit.pos.x = this.pos.x + (this.half.x * sx);\n      hit.pos.y = point.y;\n    } else {\n      const sy = sign(dy);\n      hit.delta.y = py * sy;\n      hit.normal.y = sy;\n      hit.pos.x = point.x;\n      hit.pos.y = this.pos.y + (this.half.y * sy);\n    }\n    return hit;\n  }\n\n  public intersectSegment(pos: Point, delta: Point, paddingX: number = 0,\n    paddingY: number = 0): Hit | null {\n    const scaleX = 1.0 / delta.x;\n    const scaleY = 1.0 / delta.y;\n    const signX = sign(scaleX);\n    const signY = sign(scaleY);\n    const nearTimeX = (this.pos.x - signX * (this.half.x + paddingX) - pos.x) * scaleX;\n    const nearTimeY = (this.pos.y - signY * (this.half.y + paddingY) - pos.y) * scaleY;\n    const farTimeX = (this.pos.x + signX * (this.half.x + paddingX) - pos.x) * scaleX;\n    const farTimeY = (this.pos.y + signY * (this.half.y + paddingY) - pos.y) * scaleY;\n    if (nearTimeX > farTimeY || nearTimeY > farTimeX) {\n      return null;\n    }\n\n    const nearTime = nearTimeX > nearTimeY ? nearTimeX : nearTimeY;\n    const farTime = farTimeX < farTimeY ? farTimeX : farTimeY;\n    if (nearTime >= 1 || farTime <= 0) {\n      return null;\n    }\n\n    const hit = new Hit(this);\n    hit.time = clamp(nearTime, 0, 1);\n    if (nearTimeX > nearTimeY) {\n      hit.normal.x = -signX;\n      hit.normal.y = 0;\n    } else {\n      hit.normal.x = 0;\n      hit.normal.y = -signY;\n    }\n    hit.delta.x = (1.0 - hit.time) * -delta.x;\n    hit.delta.y = (1.0 - hit.time) * -delta.y;\n    hit.pos.x = pos.x + delta.x * hit.time;\n    hit.pos.y = pos.y + delta.y * hit.time;\n    return hit;\n  }\n\n  public intersectAABB(box: AABB): Hit | null {\n    const dx = box.pos.x - this.pos.x;\n    const px = (box.half.x + this.half.x) - abs(dx);\n    if (px <= 0) {\n      return null;\n    }\n\n    const dy = box.pos.y - this.pos.y;\n    const py = (box.half.y + this.half.y) - abs(dy);\n    if (py <= 0) {\n      return null;\n    }\n\n    const hit = new Hit(this);\n    if (px < py) {\n      const sx = sign(dx);\n      hit.delta.x = px * sx;\n      hit.normal.x = sx;\n      hit.pos.x = this.pos.x + (this.half.x * sx);\n      hit.pos.y = box.pos.y;\n    } else {\n      const sy = sign(dy);\n      hit.delta.y = py * sy;\n      hit.normal.y = sy;\n      hit.pos.x = box.pos.x;\n      hit.pos.y = this.pos.y + (this.half.y * sy);\n    }\n    return hit;\n  }\n\n  public sweepAABB(box: AABB, delta: Point): Sweep {\n    const sweep = new Sweep();\n    if (delta.x === 0 && delta.y === 0) {\n      sweep.pos.x = box.pos.x;\n      sweep.pos.y = box.pos.y;\n      sweep.hit = this.intersectAABB(box);\n      if (sweep.hit) {\n        sweep.time = sweep.hit.time = 0;\n      } else {\n        sweep.time = 1;\n      }\n      return sweep;\n    }\n\n    sweep.hit = this.intersectSegment(box.pos, delta, box.half.x, box.half.y);\n    if (sweep.hit) {\n      sweep.time = clamp(sweep.hit.time - EPSILON, 0, 1);\n      sweep.pos.x = box.pos.x + delta.x * sweep.time;\n      sweep.pos.y = box.pos.y + delta.y * sweep.time;\n      const direction = delta.clone();\n      direction.normalize();\n      sweep.hit.pos.x = clamp(\n        sweep.hit.pos.x + direction.x * box.half.x,\n        this.pos.x - this.half.x, this.pos.x + this.half.x);\n      sweep.hit.pos.y = clamp(\n        sweep.hit.pos.y + direction.y * box.half.y,\n        this.pos.y - this.half.y, this.pos.y + this.half.y);\n    } else {\n      sweep.pos.x = box.pos.x + delta.x;\n      sweep.pos.y = box.pos.y + delta.y;\n      sweep.time = 1;\n    }\n    return sweep;\n  }\n\n  public sweepInto(staticColliders: AABB[], delta: Point): Sweep {\n    let nearest = new Sweep();\n    nearest.time = 1;\n    nearest.pos.x = this.pos.x + delta.x;\n    nearest.pos.y = this.pos.y + delta.y;\n    for (let i = 0, il = staticColliders.length; i < il; i++) {\n      const sweep = staticColliders[i].sweepAABB(this, delta);\n      if (sweep.time < nearest.time) {\n        nearest = sweep;\n      }\n    }\n    return nearest;\n  }\n}","import { TextureSprite } from 'app/components';\nimport { Entity } from 'app/game/entities';\nimport { EntityCollision, TileCollision } from 'app/game/messages';\nimport { Task } from 'app/game/tasks';\nimport { Collidable, Float, Spatial, Stats } from 'app/game/traits';\nimport { direction } from 'app/utils/animations';\nimport { AABB, EPSILON, Point, Sweep } from 'app/utils/intersect';\nimport { TileObject } from 'common/data';\nimport { vec2 } from 'gl-matrix';\n\nconst Gravity = -10;\nconst StaticThreshold = 0.5;\nconst EntitySizeExtent = 5;\n\nfunction pt(x: number, y: number) { return new Point(x, y); }\n\ninterface ObjectAABB extends AABB {\n  readonly obstacle: boolean;\n}\nclass TileAABB extends AABB implements ObjectAABB {\n  public readonly x: number;\n  public readonly y: number;\n  public readonly obstacle: boolean;\n\n  constructor(x: number, y: number, objectDef?: TileObject) {\n    super(\n      pt(x + 0.5, y),\n      (!objectDef || objectDef.terrain) ? pt(0.5, 0.5) : pt(0.4, 0.4)\n    );\n    this.x = x;\n    this.y = y;\n    this.obstacle = !objectDef || (!!objectDef.obstacle);\n  }\n}\n\nclass EntityAABB extends AABB {\n  public readonly entity: Entity;\n  public readonly obstacle: boolean;\n\n  constructor(entity: Entity) {\n    const { position } = entity.traits.get(Spatial);\n    const { size, mass } = entity.traits.get(Collidable);\n    super(pt(position[0], position[1]), pt(size[0], size[1]));\n    this.entity = entity;\n    this.obstacle = mass > 0;\n  }\n\n  update() {\n    const { position } = this.entity.traits.get(Spatial);\n    const { size } = this.entity.traits.get(Collidable);\n    this.pos.x = position[0];\n    this.pos.y = position[1];\n    this.half.x = size[0];\n    this.half.y = size[1];\n  }\n}\n\nexport class EntityMovementTask extends Task {\n  private readonly vel = vec2.create();\n  private readonly collisions = new Set<string>();\n\n  public update(dt: number) {\n    const t = dt / 1000;\n    for (const id of this.entityAABBMap.keys()) {\n      if (!this.game.entities.get(id))\n        this.entityAABBMap.delete(id);\n    }\n    for (const entity of this.game.entities.withTrait(Collidable)) {\n      let aabb = this.entityAABBMap.get(entity.id);\n      if (!aabb)\n        this.entityAABBMap.set(entity.id, aabb = new EntityAABB(entity));\n      else\n        aabb.update();\n      this.entityAABBs.push(aabb);\n    }\n\n    const objects: ObjectAABB[] = [];\n    for (const entity of this.game.entities.withTrait(Spatial)) {\n      const { position, sprite, velocity, horizontalAnim } = entity.traits.get(Spatial);\n      const stats = entity.traits.get(Stats);\n      vec2.scale(this.vel, velocity, dt / 1000);\n\n      const collidable = entity.traits.get(Collidable);\n      let hits: ObjectAABB[];\n      if (collidable) {\n        this.getAABBs(position, entity, objects);\n        const shape = this.entityAABBMap.get(entity.id) || new EntityAABB(entity);\n        hits = this.resolve(objects, shape);\n        objects.length = 0;\n        vec2.set(position, shape.pos.x, shape.pos.y);\n      } else {\n        vec2.add(position, position, this.vel);\n        hits = [];\n      }\n\n      if (stats && Stats.canMove(stats))\n        this.updateDisplay(velocity, this.vel, sprite, horizontalAnim);\n\n      const float = entity.traits.get(Float);\n      if (float && float.gravity) {\n        float.z[0] += float.z[1] * t + 0.5 * Gravity * t * t;\n        float.z[1] += Gravity * t;\n        if (float.z[0] < StaticThreshold * 0.1) {\n          vec2.set(float.z, 0, 0);\n          vec2.set(velocity, 0, 0);\n        }\n      } else if (!float || float.z[0] === 0) {\n        if (this.vel[0] === 0) velocity[0] = 0;\n        if (this.vel[1] === 0) velocity[1] = 0;\n        vec2.scale(velocity, velocity, Math.pow(0.5, t));\n        if (Math.abs(velocity[0]) < StaticThreshold) velocity[0] = 0;\n        if (Math.abs(velocity[1]) < StaticThreshold) velocity[1] = 0;\n      }\n\n      for (const collider of hits) {\n        if (collider instanceof EntityAABB)\n          this.entityCollided(entity, collider.entity);\n        else if (collider instanceof TileAABB)\n          this.tileCollided(entity, collider.x, collider.y);\n      }\n    }\n\n    this.collisions.clear();\n    this.entityAABBs.length = 0;\n  }\n\n  private readonly entityAABBMap = new Map<number, EntityAABB>();\n  private entityAABBs: EntityAABB[] = [];\n  private getAABBs(position: vec2, exclude: Entity, aabbs: ObjectAABB[]) {\n    const map = this.game.map;\n    const lib = this.game.library;\n\n    const left = Math.floor(Math.min(position[0] + this.vel[0], position[0])) - 1;\n    const right = Math.ceil(Math.max(position[0] + this.vel[0], position[0])) + 1;\n    const top = Math.floor(Math.min(position[1] + this.vel[1], position[1])) - 1;\n    const bottom = Math.ceil(Math.max(position[1] + this.vel[1], position[1])) + 1;\n\n    for (let y = top; y <= bottom; y++)\n      for (let x = left; x <= right; x++) {\n        const terrainDef = lib.terrains[map.getTerrain(x, y)];\n        if (!terrainDef) {\n          aabbs.push(new TileAABB(x, y));\n        }\n\n        const objectDef = lib.objects[map.getObject(x, y)];\n        if (objectDef && objectDef.collidable)\n          aabbs.push(new TileAABB(x, y, objectDef));\n      }\n\n    for (const aabb of this.entityAABBs) {\n      if (aabb.entity === exclude) continue;\n\n      if (\n        aabb.pos.x < left - EntitySizeExtent || aabb.pos.y > right + EntitySizeExtent ||\n        aabb.pos.x < top - EntitySizeExtent || aabb.pos.y > bottom + EntitySizeExtent\n      )\n        continue;\n\n      aabbs.push(aabb);\n    }\n  }\n\n  private readonly collidedAABBs = new Map<ObjectAABB, number>();\n  private resolve(objects: ObjectAABB[], self: EntityAABB) {\n    const performSweep = (delta: Point) => {\n      let nearest = new Sweep();\n      nearest.time = 1;\n      nearest.pos.x = self.pos.x + delta.x;\n      nearest.pos.y = self.pos.y + delta.y;\n      for (const obj of objects) {\n        const sweep = obj.sweepAABB(self, delta);\n        if (sweep.hit && sweep.time < nearest.time) {\n          this.collidedAABBs.set(obj, sweep.time);\n          if (!obj.obstacle) continue;\n          nearest = sweep;\n        }\n      }\n      return nearest;\n    };\n    const resolveSweep = (sweep: Sweep) => {\n      if (sweep.hit && sweep.hit.time > 0) {\n        const collider = sweep.hit.collider;\n        if (sweep.hit.normal.x !== 0)\n          sweep.pos.x = collider.pos.x + (collider.half.x + self.half.x + EPSILON) * sweep.hit.normal.x;\n        if (sweep.hit.normal.y !== 0)\n          sweep.pos.y = collider.pos.y + (collider.half.y + self.half.y + EPSILON) * sweep.hit.normal.y;\n\n        vec2.mul(this.vel, this.vel, [1 - Math.abs(sweep.hit.normal.x), 1 - Math.abs(sweep.hit.normal.y)]);\n      } else if (sweep.hit) {\n        sweep.pos.x += sweep.hit.delta.x;\n        sweep.pos.y += sweep.hit.delta.y;\n      }\n      self.pos = sweep.pos;\n    };\n\n    let collisionTime: number;\n    if (!self.obstacle) {\n      // no collision resolution for non-obstacles\n      const sweep = performSweep(pt(this.vel[0], this.vel[1]));\n      self.pos.x += this.vel[0];\n      self.pos.y += this.vel[1];\n      collisionTime = sweep.time;\n    } else {\n      const sweepX = performSweep(pt(this.vel[0], 0));\n      const sweepY = performSweep(pt(0, this.vel[1]));\n      const maxSweep = sweepX.time > sweepY.time ? sweepX : sweepY;\n      resolveSweep(maxSweep);\n      const nextVel = sweepX.time > sweepY.time ? pt(0, this.vel[1]) : pt(this.vel[0], 0);\n      const sweepFinal = performSweep(nextVel);\n      resolveSweep(sweepFinal);\n      collisionTime = Math.min(sweepX.time, sweepY.time);\n    }\n\n    const hit = [...this.collidedAABBs].filter(([, time]) => time <= collisionTime).map(([collider]) => collider);\n    this.collidedAABBs.clear();\n    return hit;\n  }\n\n  private tileCollided(entity: Entity, x: number, y: number) {\n    const key = `${entity.id}:${x},${y}`;\n    if (this.collisions.has(key)) return;\n    this.collisions.add(key);\n\n    this.game.dispatch(new TileCollision(entity.id, x, y));\n  }\n  private entityCollided(a: Entity, b: Entity) {\n    const aId = Math.min(a.id, b.id), bId = Math.max(a.id, b.id);\n    const key = `${aId}:${bId}`;\n    if (this.collisions.has(key)) return;\n    this.collisions.add(key);\n\n    this.game.dispatch(new EntityCollision(aId, bId));\n  }\n\n  private updateDisplay(intendedVel: vec2, actualVel: vec2, sprite: TextureSprite, horizontal: boolean) {\n    if (!sprite.animName)\n      sprite.animName = horizontal ? 'left' : 'down';\n\n    sprite.still = actualVel[0] === 0 && actualVel[1] === 0;\n\n    if (intendedVel[0] !== 0 || intendedVel[1] !== 0) {\n      sprite.animName = direction(intendedVel[1], intendedVel[0], horizontal ? 'horizontal' : 'movement');\n    }\n  }\n}","import { Game } from 'app/game';\nimport { ItemDrop } from 'app/game/entities';\nimport { Death } from 'app/game/messages';\nimport { DeathOverlay } from 'app/game/overlays';\nimport { Task } from 'app/game/tasks';\nimport { EnemyData, PlayerData, Spatial } from 'app/game/traits';\nimport { StateOverlay } from 'app/states';\nimport { generateDrops } from 'app/utils/drops';\n\nexport class DeathTask extends Task {\n  constructor(game: Game) {\n    super(game);\n    this.game.messages$.ofType(Death).subscribe(this.death);\n  }\n\n  private death = ({ entityId }: Death) => {\n    const entity = this.game.entities.get(entityId);\n    if (!entity) return;\n\n    const enemy = entity.traits.get(EnemyData);\n    if (enemy) {\n      const { position } = entity.traits.get(Spatial);\n      for (const drop of generateDrops(enemy.def.drops)) {\n        const itemDrop = ItemDrop.make(this.game, drop, position);\n        this.game.entities.add(itemDrop);\n      }\n      entity.delete();\n      return;\n    }\n\n    const player = entity.traits.get(PlayerData);\n    if (player) {\n      this.game.app.pushState(new StateOverlay(new DeathOverlay(this.game)));\n    }\n  }\n}","import { TextureSprite } from 'app/components';\nimport { Game } from 'app/game';\nimport { ApplyEffects, InventoryUpdated } from 'app/game/messages';\nimport { Attack } from 'app/game/messages';\nimport { Task } from 'app/game/tasks';\nimport { Inventory, PlayerData, Spatial, Stats } from 'app/game/traits';\nimport { direction } from 'app/utils/animations';\nimport { Effect, Item, ItemSlot, Weapon } from 'common/data';\nimport { EffectDef } from 'data/effects';\nimport { vec2 } from 'gl-matrix';\nimport { cloneDeep } from 'lodash';\nimport { interaction, Point } from 'pixi.js';\n\nconst ConsumeCooldown = 1000;\nconst FistRange = 2.5;\n\ntype UseType = 'attack' | 'interact' | null;\n\nexport class UseItemTask extends Task {\n  private type: UseType = null;\n  private readonly playerPos: vec2;\n  private readonly playerVel: vec2;\n  private readonly playerSprite: TextureSprite;\n  private readonly data: PlayerData;\n  private readonly stats: Stats;\n  private readonly inventory: ItemSlot[];\n\n  private readonly cursorPos = new Point();\n\n  constructor(game: Game) {\n    super(game);\n    this.data = game.player.traits.get(PlayerData);\n    this.stats = game.player.traits.get(Stats);\n    ({\n      position: this.playerPos,\n      velocity: this.playerVel,\n      sprite: this.playerSprite\n    } = game.player.traits.get(Spatial));\n    this.inventory = game.player.traits.get(Inventory).slots;\n\n    const handler = (e: interaction.InteractionEvent) => {\n      if (e.data.originalEvent.target !== this.game.app.view) {\n        this.type = null;\n        return;\n      }\n      e.data.getLocalPosition(this.game.view.camera, this.cursorPos);\n\n      if ((e.data.buttons & 1) !== 0) this.type = 'attack';\n      else if ((e.data.buttons & 2) !== 0) this.type = 'interact';\n      else this.type = null;\n    };\n    game.view.camera.on('pointermove', handler);\n    game.view.camera.on('pointerdown', handler);\n    game.view.camera.on('pointerup', handler);\n    game.view.camera.on('pointerupoutside', handler);\n  }\n\n  update(dt: number) {\n    this.data.consumeCooldown = Math.max(0, this.data.consumeCooldown - dt);\n    this.data.attackCooldown = Math.max(0, this.data.attackCooldown - dt);\n    if (!this.type)\n      return;\n\n    const { hotbarSelection } = this.game.player.traits.get(PlayerData);\n    const slot = this.inventory[hotbarSelection];\n\n    if (this.type === 'interact') {\n      this.interact(slot);\n    } else if (this.type === 'attack') {\n      this.attack(slot);\n    }\n  }\n\n  private interact(slot: ItemSlot) {\n    if (slot.item && slot.item.type === Item.Type.Consumable) {\n      if (this.data.consumeCooldown > 0)\n        return;\n      this.consumeItem(slot.item);\n      slot.item = null;\n      this.game.dispatch(new InventoryUpdated(slot));\n    }\n  }\n\n  private consumeItem(item: Item) {\n    if (item.effects && item.effects.length > 0) {\n      const effects = cloneDeep(item.effects);\n      this.game.dispatch(new ApplyEffects(this.game.player.id, effects));\n      this.data.consumeCooldown = ConsumeCooldown;\n    }\n  }\n\n  private readonly coords = vec2.create();\n  private readonly direction = vec2.create();\n  private attack(slot: ItemSlot) {\n    if (this.data.attackCooldown > 0)\n      return;\n    if (Stats.hasEffect(this.stats, EffectDef.Type.Stunned))\n      return;\n\n    let item = slot.item;\n    // arrow is treated as fist attack\n    let weapon = item && item.weapon && item.weapon.type !== Weapon.Type.Arrow ? item.weapon : {\n      type: Weapon.Type.Fist,\n      strength: 5,\n      cooldown: 0,\n      knockback: 2.5,\n      range: FistRange,\n      color: 'ffffff'\n    };\n\n    if (weapon.type === Weapon.Type.Bow) {\n      let arrow: Item | undefined;\n      for (const slot of this.inventory) {\n        const item = slot.item;\n        if (item && item.weapon && item.weapon.type === Weapon.Type.Arrow) {\n          arrow = item;\n          slot.item = null;\n          this.game.dispatch(new InventoryUpdated(slot));\n          break;\n        }\n      }\n      if (!arrow)\n        return;\n\n      item = arrow;\n      weapon = {\n        type: Weapon.Type.Arrow,\n        strength: weapon.strength + arrow.weapon!.strength,\n        cooldown: weapon.cooldown + arrow.weapon!.cooldown,\n        knockback: weapon.knockback + arrow.weapon!.knockback,\n        range: weapon.range + arrow.weapon!.range,\n        color: arrow.weapon!.color\n      };\n    }\n\n    let duration = 500;\n    if (weapon.type === Weapon.Type.Spear) duration = Math.min(1000, weapon.cooldown);\n    else if (weapon.type !== Weapon.Type.Fist) duration = Math.min(500, weapon.cooldown);\n    let effects: Effect[] = [];\n    if (item && item.weapon && item.material && item.material.affinity > Math.random())\n      effects = item.effects || [];\n\n    this.game.view.camera.toMapCoords(this.cursorPos, this.coords);\n    vec2.sub(this.direction, this.coords, this.playerPos);\n    if (weapon.type === Weapon.Type.Fist && vec2.length(this.direction) > weapon.range) {\n      // no out of range fist attack\n      return;\n    }\n    vec2.normalize(this.direction, this.direction);\n\n    const animDirection = direction(this.direction[1], this.direction[0], 'attack');\n    const animName = `${weapon.type}-${animDirection}`;\n    this.playerSprite.animName = animDirection;\n    this.playerSprite.playActionAnim(animName, duration);\n\n    this.game.dispatch(new Attack(this.game.player.id, weapon, this.coords, effects));\n    vec2.set(this.playerVel, 0, 0);\n    this.data.attackCooldown = weapon.cooldown || 500;\n  }\n}","import { Game } from 'app/game';\nimport { Projectile } from 'app/game/entities';\nimport { ApplyEffects, Attack } from 'app/game/messages';\nimport { Task } from 'app/game/tasks';\nimport { Spatial } from 'app/game/traits';\nimport { Weapon } from 'common/data';\nimport { makeEffect } from 'common/logic/effect/common';\nimport { EffectDef } from 'data/effects';\nimport { vec2 } from 'gl-matrix';\n\nexport class AttackTask extends Task {\n  constructor(game: Game) {\n    super(game);\n    game.messages$.ofType(Attack).subscribe(this.attack);\n  }\n\n  private readonly direction = vec2.create();\n  private readonly start = vec2.create();\n  private readonly end = vec2.create();\n\n  private attack = ({ entityId, weapon, targetPosition, effects, duration }: Attack) => {\n    const entity = this.game.entities.get(entityId);\n    if (!entity) return;\n\n    const { position } = entity.traits.get(Spatial);\n    vec2.sub(this.direction, targetPosition, position);\n\n    let stunDuration;\n    if (weapon.type === Weapon.Type.Fist) {\n      vec2.scaleAndAdd(this.start, targetPosition, this.direction, -0.5);\n      vec2.copy(this.end, targetPosition);\n\n      const projectile = Projectile.make(\n        this.game, entityId, weapon, effects,\n        this.start, this.end, 100, 'sprites/projectiles/invisible');\n      this.game.entities.add(projectile);\n      stunDuration = 500;\n\n    } else {\n      if (weapon.type === Weapon.Type.Sword) {\n        if (vec2.length(this.direction) > weapon.range) {\n          vec2.normalize(this.direction, this.direction);\n          vec2.scaleAndAdd(targetPosition, position, this.direction, weapon.range);\n        } else {\n          vec2.normalize(this.direction, this.direction);\n        }\n\n        vec2.scaleAndAdd(this.start, targetPosition, [this.direction[1], -this.direction[0]], 1);\n        vec2.scaleAndAdd(this.end, targetPosition, [-this.direction[1], this.direction[0]], 1);\n        duration = duration || 250;\n      } else {\n        vec2.normalize(this.direction, this.direction);\n\n        vec2.copy(this.start, position);\n        vec2.scaleAndAdd(this.end, this.start, this.direction, weapon.range);\n        duration = duration || 500;\n      }\n      stunDuration = Math.min(weapon.type === Weapon.Type.Spear ? 1000 : 500, weapon.cooldown);\n\n      const projectile = Projectile.make(\n        this.game, entityId, weapon, effects,\n        this.start, this.end, duration,\n        `sprites/projectiles/${weapon.type}`\n      );\n      this.game.entities.add(projectile);\n    }\n\n    if (entity === this.game.player) {\n      // TODO: stun + knockback can cause extra long knockback\n      this.game.dispatch(new ApplyEffects(entity.id, [\n        makeEffect(EffectDef.Type.Stunned, 0, stunDuration)\n      ]));\n    }\n  }\n}","import { Game } from 'app/game';\nimport { ItemDrop } from 'app/game/entities';\nimport { EntityCollision, InventorySwap, InventoryUpdated } from 'app/game/messages';\nimport { Task } from 'app/game/tasks';\nimport { Inventory, Spatial } from 'app/game/traits';\nimport { Item, ItemSlot } from 'common/data';\nimport { vec2 } from 'gl-matrix';\n\nconst MinInteractAge = 350;\n\nexport class InventoryTask extends Task {\n  public readonly runWhenPaused = true;\n\n  private readonly playerPos: vec2;\n  private readonly playerInv: ItemSlot[];\n\n  constructor(game: Game) {\n    super(game);\n    game.messages$.ofType(InventorySwap).subscribe(this.swapInventory);\n    game.messages$.ofType(EntityCollision).subscribe(this.entityCollided);\n    this.playerPos = game.player.traits.get(Spatial).position;\n    this.playerInv = game.player.traits.get(Inventory).slots;\n  }\n\n  update(dt: number) {\n    for (const itemDrop of this.game.entities.ofType(ItemDrop)) {\n      const { slots } = itemDrop.traits.get(Inventory);\n      if (!this.canPickUp(slots[0].item!)) continue;\n\n      const spatial = itemDrop.traits.get(Spatial);\n      const d = vec2.dist(spatial.position, this.playerPos);\n\n      if (itemDrop.age >= MinInteractAge && d > 0.5 && d < 3.5) {\n        // magnet (faster if nearer)\n        vec2.sub(spatial.velocity, this.playerPos, spatial.position);\n        const len = vec2.len(spatial.velocity);\n        vec2.normalize(spatial.velocity, spatial.velocity);\n        vec2.scale(spatial.velocity, spatial.velocity, 5 / (len * len));\n      }\n    }\n  }\n\n  private entityCollided = ({ entityIdA, entityIdB }: EntityCollision) => {\n    const entityA = this.game.entities.get(entityIdA);\n    const entityB = this.game.entities.get(entityIdB);\n    let item;\n    if (entityA instanceof ItemDrop && entityB === this.game.player) {\n      item = entityA;\n    } else if (entityA === this.game.player && entityB instanceof ItemDrop) {\n      item = entityB;\n    } else return;\n\n    if (item.age >= MinInteractAge && this.pickUp(item.traits.get(Inventory).slots[0].item!))\n      item.delete();\n  }\n\n  private acceptable(item: Item | null, accepts: Item.Type[] | string | null) {\n    if (!item || !accepts) return true;\n    if (typeof accepts === 'string')\n      return !!item.id.match(accepts);\n    else\n      return accepts.indexOf(item.type) >= 0;\n  }\n\n  private canPickUp(item: Item) {\n    for (const slot of this.playerInv) {\n      if (slot.item) continue;\n      if (this.acceptable(item, slot.accepts)) return true;\n    }\n    return false;\n  }\n\n  private pickUp(item: Item) {\n    for (const slot of this.playerInv) {\n      if (slot.item) continue;\n      if (!this.acceptable(item, slot.accepts)) continue;\n\n      slot.item = item;\n      this.game.dispatch(new InventoryUpdated(slot));\n      return true;\n    }\n    return false;\n  }\n\n  private swapInventory = (swap: InventorySwap) => {\n    const { slotA, slotB } = swap;\n    if (!this.acceptable(slotA.item, slotB.accepts) || !this.acceptable(slotB.item, slotA.accepts))\n      return;\n    const tmp = slotB.item;\n    slotB.item = slotA.item;\n    slotA.item = tmp;\n    this.game.dispatch(new InventoryUpdated(slotA));\n    this.game.dispatch(new InventoryUpdated(slotB));\n  }\n}","import { DisplayTileSize } from 'app';\nimport { Game } from 'app/game';\nimport { Task } from 'app/game/tasks';\nimport { Spatial } from 'app/game/traits';\nimport { vec2 } from 'gl-matrix';\n\nexport class CameraUpdateTask extends Task {\n  public readonly runWhenPaused = true;\n\n  private readonly position: vec2;\n  private readonly cameraOffset = vec2.create();\n\n  constructor(game: Game) {\n    super(game);\n    this.position = game.player.traits.get(Spatial).position;\n  }\n\n  public update(dt: number) {\n    vec2.scale(this.cameraOffset, this.position, DisplayTileSize);\n    vec2.floor(this.game.view.camera.offset, this.cameraOffset);\n  }\n}","import { DisplayTileSize } from 'app';\nimport { TextureSprite } from 'app/components';\nimport { Game } from 'app/game';\nimport { Task } from 'app/game/tasks';\nimport { Camera } from 'app/game/Camera';\nimport { vec2 } from 'gl-matrix';\nimport { Container, RenderTexture, Sprite, SCALE_MODES, TransformStatic } from 'pixi.js';\n\nconst TileSize = 16;\n\nexport class TerrainDisplayTask extends Task {\n  public readonly runWhenPaused = true;\n\n  private readonly sprites = new Map<string, TextureSprite>();\n  private readonly container = new Container();\n  private readonly renderTex = RenderTexture.create(1, 1, SCALE_MODES.NEAREST);\n  private readonly view = Object.assign(new Sprite(this.renderTex), {\n    layer: Camera.Layer.Terrain,\n    sortOffset: vec2.fromValues(0, 0)\n  });\n\n  constructor(game: Game) {\n    super(game);\n    this.game.view.camera.add(this.view);\n  }\n\n  public update(dt: number) {\n    this.updateVisibility();\n    this.updateSprites(dt);\n    this.render();\n  }\n\n  private updateVisibility() {\n    const { offset: [x, y], viewWidth: w, viewHeight: h } = this.game.view.camera;\n    const r = Math.ceil(Math.sqrt(w * w + h * h) / 2 + DisplayTileSize);\n    const origin = vec2.fromValues(x, y);\n    const scale = DisplayTileSize / TileSize;\n    function isVisible(x: number, y: number) {\n      const dx = x * scale - origin[0], dy = y * scale - origin[1];\n      return (dx * dx + dy * dy) <= r * r;\n    }\n\n    const removePool: TextureSprite[] = [];\n    for (const [key, sprite] of this.sprites) {\n      const { x, y } = (sprite.transform as TransformStatic).position;\n      if (!isVisible(x, y)) {\n        removePool.push(sprite);\n        this.sprites.delete(key);\n      }\n    }\n\n    const map = this.game.map;\n    const left = Math.max(0, Math.floor((x - r) / DisplayTileSize));\n    const right = Math.min(map.width - 1, Math.ceil((x + r) / DisplayTileSize));\n    const top = Math.max(0, Math.floor((y - r) / DisplayTileSize));\n    const bottom = Math.min(map.height - 1, Math.ceil((y + r) / DisplayTileSize));\n\n    const terrainData = this.game.library.terrains;\n    for (let x = left; x <= right; x++)\n      for (let y = top; y <= bottom; y++) {\n        const terrain = terrainData[map.getTerrain(x, y)];\n        if (!terrain) continue;\n\n        const tx = x * TileSize;\n        const ty = y * TileSize;\n        if (!isVisible(tx, ty))\n          continue;\n\n        const key = `${x}:${y}`;\n        if (this.sprites.has(key)) continue;\n\n        const sprite = removePool.pop() || new TextureSprite();\n        sprite.setTexture(terrain.texture, x + y * map.width);\n        sprite.position.set(tx, ty);\n        if (!sprite.parent)\n          this.container.addChild(sprite);\n        this.sprites.set(key, sprite);\n      }\n\n    for (const sprite of removePool)\n      this.container.removeChild(sprite);\n  }\n\n  private elapsed = 0;\n  private updateSprites(dt: number) {\n    this.elapsed += dt;\n    for (const sprite of this.container.children)\n      (sprite as TextureSprite).update(this.elapsed);\n  }\n\n  private render() {\n    const { offset: [x, y], viewWidth: w, viewHeight: h } = this.game.view.camera;\n    const r = Math.ceil(Math.sqrt(w * w + h * h));\n\n    let minX: number = Number.MAX_VALUE, minY: number = Number.MAX_VALUE;\n    for (const sprite of this.sprites.values()) {\n      const { x, y } = (sprite.transform as TransformStatic).position;\n      minX = Math.min(minX, x);\n      minY = Math.min(minY, y);\n    }\n    this.container.setTransform(-minX, -minY);\n\n    const length = Math.ceil(r / DisplayTileSize) * TileSize * 2;\n    const texSize = 1 << (32 - Math.clz32(length - 1));\n    this.renderTex.resize(texSize, texSize);\n    this.game.app.renderer.render(this.container, this.renderTex);\n    const scale = DisplayTileSize / TileSize;\n    this.view.setTransform(\n      (minX * scale - x + w / 2), (minY * scale - y + h / 2),\n      scale, scale\n    );\n  }\n}","import { DisplayTileSize } from 'app';\nimport { TextureSprite } from 'app/components';\nimport { Game } from 'app/game';\nimport { TileObjectSprite } from 'app/game/interfaces';\nimport { ObjectSpriteRequest } from 'app/game/messages';\nimport { Task } from 'app/game/tasks';\nimport { Camera } from 'app/game/Camera';\nimport { TileObject } from 'common/data';\nimport { Noise } from 'common/noise';\nimport { vec2 } from 'gl-matrix';\nimport { create as createRand } from 'random-seed';\n\nconst ObjectSize = 32;\nconst MarginSize = 5;\n\nclass ObjectSprite extends TextureSprite implements Camera.Sprite, TileObjectSprite {\n  public readonly jitter = vec2.fromValues(0, 0);\n  public readonly sortOffset = vec2.fromValues(0, 0);\n  public layer = Camera.Layer.Objects;\n  public readonly coords = vec2.fromValues(-1, -1);\n\n  constructor(public readonly game: Game) {\n    super();\n    this.outline = true;\n    this.anchor.set(0.5, 1);\n  }\n\n  public setTile(x: number, y: number, obj: TileObject) {\n    vec2.set(this.coords, x, y);\n\n    this.layer = obj.terrain ? Camera.Layer.Terrain : Camera.Layer.Objects;\n    this.setTexture(obj.texture, x + y * this.game.map.width);\n\n    this.interactive = obj.interactive || false;\n\n    const scale = (obj.scale || 1) * DisplayTileSize / ObjectSize;\n    this.scale.set(scale, scale);\n  }\n}\n\nfunction tileKey(x: number, y: number) {\n  return `${x}:${y}`;\n}\n\nexport class ObjectDisplayTask extends Task {\n  public readonly runWhenPaused = true;\n\n  private readonly sprites = new Map<string, ObjectSprite>();\n  private readonly jitterNoiseX: Noise;\n  private readonly jitterNoiseY: Noise;\n\n  constructor(game: Game) {\n    super(game);\n\n    const rand = createRand(this.game.map.props.seed);\n    this.jitterNoiseX = new Noise(rand, 1, 1);\n    this.jitterNoiseY = new Noise(rand, 1, 1);\n    this.game.map.changes$.subscribe(({ x, y }) => {\n      const key = tileKey(x, y);\n      const sprite = this.sprites.get(key);\n      if (sprite) {\n        this.game.view.camera.removeChild(sprite);\n        this.sprites.delete(key);\n      }\n    });\n\n    this.game.messages$.ofType(ObjectSpriteRequest).subscribe(request => {\n      request.sprite = this.sprites.get(tileKey(request.x, request.y));\n    });\n  }\n\n  public update(dt: number) {\n    this.updateVisibility();\n    this.updateSprites(dt);\n    this.updateTransforms();\n  }\n\n  private updateVisibility() {\n    const { offset: [offsetX, offsetY], viewWidth: w, viewHeight: h } = this.game.view.camera;\n    const margin = MarginSize * DisplayTileSize;\n    const halfW = w / 2 + margin, halfH = h / 2 + margin;\n    function isVisible(x: number, y: number) {\n      return x >= offsetX - halfW && x <= offsetX + halfW &&\n        y >= offsetY - halfH && y <= offsetY + halfH;\n    }\n\n    const removePool: ObjectSprite[] = [];\n    let updated = false;\n\n    for (const [key, sprite] of this.sprites) {\n      if (!isVisible(sprite.coords[0] * DisplayTileSize, sprite.coords[1] * DisplayTileSize)) {\n        removePool.push(sprite);\n        this.sprites.delete(key);\n        updated = true;\n      }\n    }\n\n    const map = this.game.map;\n    const left = Math.max(0, Math.floor((offsetX - halfW) / DisplayTileSize));\n    const right = Math.min(map.width - 1, Math.ceil((offsetX + halfW) / DisplayTileSize));\n    const top = Math.max(0, Math.floor((offsetY - halfH) / DisplayTileSize));\n    const bottom = Math.min(map.height - 1, Math.ceil((offsetY + halfH) / DisplayTileSize));\n\n    const objectData = this.game.library.objects;\n    for (let x = left; x <= right; x++)\n      for (let y = top; y <= bottom; y++) {\n        const obj = objectData[map.getObject(x, y)];\n        if (!obj) continue;\n\n        const tx = x * DisplayTileSize;\n        const ty = y * DisplayTileSize;\n        if (!isVisible(tx, ty))\n          continue;\n\n        const key = tileKey(x, y);\n        if (this.sprites.has(key)) continue;\n\n        const sprite = removePool.pop() || new ObjectSprite(this.game);\n        sprite.setTile(x, y, obj);\n        if (obj.jitter) {\n          sprite.jitter[0] = (this.jitterNoiseX.noise2D(x, y) * 2 - 1) * (1 / 3);\n          sprite.jitter[1] = (this.jitterNoiseY.noise2D(x, y) * 2 - 1) * (1 / 3);\n        }\n\n        if (!sprite.parent)\n          this.game.view.camera.add(sprite);\n\n        this.sprites.set(key, sprite);\n        updated = true;\n      }\n\n    for (const sprite of removePool)\n      this.game.view.camera.removeChild(sprite);\n    return updated;\n  }\n\n  private elapsed = 0;\n  private updateSprites(dt: number) {\n    this.elapsed += dt;\n    for (const sprite of this.sprites.values())\n      (sprite as TextureSprite).update(this.elapsed);\n  }\n\n  private readonly spriteCoords = vec2.create();\n  private updateTransforms() {\n    const map = this.game.map;\n    const objectData = this.game.library.objects;\n\n    for (const sprite of this.sprites.values()) {\n      const obj = objectData[map.getObject(sprite.coords[0], sprite.coords[1])];\n\n      vec2.add(this.spriteCoords, sprite.coords, sprite.jitter);\n      this.spriteCoords[0] += 0.5;\n      this.spriteCoords[1] += obj.terrain ? 1 : 0.5;\n      this.game.view.camera.toCameraPoint(this.spriteCoords, sprite.position);\n    }\n  }\n}","import { DisplayTileSize } from 'app';\nimport { Entity } from 'app/game/entities';\nimport { Task } from 'app/game/tasks';\nimport { Float, Spatial } from 'app/game/traits';\nimport { vec2 } from 'gl-matrix';\n\nconst MarginSize = 5;\n\nexport class EntityDisplayTask extends Task {\n  public readonly runWhenPaused = true;\n\n  private readonly visible = new Set<Entity>();\n\n  public update(dt: number) {\n    this.updateVisibility();\n    this.updateSprites(dt);\n    this.updateTransforms();\n  }\n\n  private halfSize = vec2.create();\n  private tr = vec2.create();\n  private updateVisibility() {\n    const { offset, viewWidth: w, viewHeight: h } = this.game.view.camera;\n    const margin = MarginSize * DisplayTileSize;\n    vec2.scaleAndAdd(this.halfSize, [margin, margin], [w, h], 2);\n    const isVisible = (position: vec2) => {\n      vec2.scaleAndAdd(this.tr, this.halfSize, position, -DisplayTileSize);\n      vec2.add(this.tr, this.tr, offset);\n      return this.tr[0] > 0 && this.tr[1] > 0;\n    };\n\n    for (const entity of this.visible) {\n      const { position, sprite } = entity.traits.get(Spatial);\n      if (!entity.game || !isVisible(position)) {\n        this.visible.delete(entity);\n        this.game.view.camera.removeChild(sprite);\n      }\n    }\n\n    for (const entity of this.game.entities.withTrait(Spatial)) {\n      const { position, sprite } = entity.traits.get(Spatial);\n      if (isVisible(position) && !this.visible.has(entity)) {\n        this.visible.add(entity);\n        this.game.view.camera.add(sprite);\n      }\n    }\n  }\n\n  private elapsed = 0;\n  private updateSprites(dt: number) {\n    this.elapsed += dt;\n    for (const entity of this.visible)\n      entity.traits.get(Spatial).sprite.update(this.elapsed);\n  }\n\n  private updateTransforms() {\n    for (const entity of this.visible) {\n      const { position, offset, sprite, scale } = entity.traits.get(Spatial);\n      const float = entity.traits.get(Float);\n      sprite.scale.set(scale[0], scale[1]);\n\n      const z = float ? float.z[0] : 0;\n      const terrain = this.game.library.terrains[this.game.map.getTerrain(position[0], position[1] + 0.5)];\n      const liquid = terrain && terrain.liquid;\n      sprite.clip = liquid && z === 0 ? [0, 1 / 6] : undefined;\n\n      vec2.add(this.tr, position, offset);\n      this.game.view.camera.toCameraPoint(this.tr, sprite.position, z);\n      vec2.sub(sprite.sortOffset, [0, z + 1], offset);\n      sprite.pivot.set(sprite.width / 2 / scale[0], sprite.height / 2 / scale[1]);\n    }\n  }\n}","import { Group, Tween } from '@tweenjs/tween.js';\nimport { Game } from 'app/game';\nimport { PlayFX } from 'app/game/messages';\nimport { Task } from 'app/game/tasks';\n\nexport class FXTask extends Task {\n  private readonly animTargets = new Set();\n  private readonly tween = new Group();\n  private elapsed = 0;\n\n  constructor(game: Game) {\n    super(game);\n    this.game.messages$.ofType(PlayFX.Shake).subscribe(this.shake);\n  }\n\n  update(dt: number) {\n    this.elapsed += dt;\n    this.tween.update(this.elapsed);\n  }\n\n  private shake = ({ target }: PlayFX.Shake) => {\n    if (target) {\n      if (this.animTargets.has(target))\n        return;\n      this.animTargets.add(target);\n      target.renderTranslation = target.renderTranslation || [0, 0];\n      const offsets = [4, -4, 3, -3, 2, -2, 1, -1, 0];\n      new Tween(target.renderTranslation, this.tween)\n        .to({ [0]: offsets.slice(0, 4) }, 300)\n        .chain(new Tween(target.renderTranslation, this.tween).to({ [0]: offsets.slice(4) }, 300))\n        .onComplete(() => this.animTargets.delete(target))\n        .start(this.elapsed);\n    }\n  }\n}","import { Game } from 'app/game';\nimport { ShowParticles } from 'app/game/messages';\nimport { Task } from 'app/game/tasks';\nimport { vec2 } from 'gl-matrix';\nimport { clamp } from 'lodash';\nimport { particles, Sprite, Texture } from 'pixi.js';\n\nconst ParticleLife = 1000;\nconst ParticleSize = 16;\nconst ParticleGravity = -10;\nconst ParticleRestitution = 0.5;\n\nclass Particle extends Sprite {\n  readonly coords: vec2;\n  readonly velocity: vec2;\n  readonly z: vec2;\n  readonly gravity: boolean;\n  life = ParticleLife * (Math.random() * 0.5 + 0.75);\n\n  constructor(type: ShowParticles.Type, coords: vec2, z: number, color: number) {\n    super(Texture.fromFrame('sprites/ui/particle'));\n\n    let size;\n    if (type === ShowParticles.Type.Splash) {\n      this.coords = vec2.random(vec2.create(), 0.25);\n      this.velocity = vec2.random(vec2.create(), 0.5);\n      this.z = vec2.fromValues(z + 0.25 + Math.random() * 0.5, Math.random());\n      this.gravity = true;\n      size = clamp(ParticleSize * (Math.random() + 0.5), 10, 22);\n    } else {\n      this.coords = vec2.fromValues(Math.random() - 0.5, 0);\n      this.velocity = vec2.fromValues(0, 0);\n      this.z = vec2.fromValues(z + 0.25 + Math.random(), Math.random() * 0.5 + 0.25);\n      this.gravity = false;\n      size = clamp(ParticleSize * Math.random(), 10, 16);\n      this.alpha = 0.7;\n    }\n\n    vec2.add(this.coords, this.coords, coords);\n\n    // even size to reduce scale artifacts\n    size = (size + 1) & ~1;\n    this.scale.set(size / ParticleSize, size / ParticleSize);\n\n    const colorJitter = Math.floor((Math.random() * 2 - 1) * 32);\n    let r = (color >> 16) & 0xff, g = (color >> 8) & 0xff, b = color & 0xff;\n    r = clamp(r + colorJitter, 0, 255);\n    g = clamp(g + colorJitter, 0, 255);\n    b = clamp(b + colorJitter, 0, 255);\n    this.tint = (r << 16) + (g << 8) + b;\n  }\n}\n\nexport class ParticleTask extends Task {\n  private readonly particles: Particle[] = [];\n  private readonly overlay = Object.assign(new particles.ParticleContainer(), { layout: () => { } });\n\n  constructor(game: Game) {\n    super(game);\n    game.view.add(this.overlay);\n    game.messages$.ofType(ShowParticles).subscribe(this.showParticles);\n  }\n\n  private showParticles = ({ particleType, coords, numParticles, color, z }: ShowParticles) => {\n    for (let i = 0; i < numParticles; i++) {\n      const particle = new Particle(particleType, coords, z, color);\n\n      this.overlay.addChild(particle);\n      this.particles.push(particle);\n    }\n  }\n\n  public update(dt: number) {\n    const t = dt / 1000;\n    for (let i = this.particles.length - 1; i >= 0; i--) {\n      const particle = this.particles[i];\n      particle.life -= dt;\n      if (particle.life <= 0) {\n        this.overlay.removeChild(particle);\n        this.particles.splice(i, 1);\n        continue;\n      }\n\n      vec2.scaleAndAdd(particle.coords, particle.coords, particle.velocity, t);\n\n      const gravity = particle.gravity ? ParticleGravity : 0;\n      particle.z[0] += particle.z[1] * t + 0.5 * gravity * t * t;\n      particle.z[1] += gravity * t;\n      if (particle.z[0] <= 0) {\n        particle.z[0] = 0;\n        particle.z[1] = -particle.z[1] * ParticleRestitution;\n        vec2.scale(particle.velocity, particle.velocity, ParticleRestitution);\n      }\n\n      this.game.view.camera.toCameraPoint(particle.coords, particle.position, particle.z[0]);\n    }\n  }\n}","import { CommandContext } from 'app/game/commands';\n\nexport abstract class Command {\n  static readonly registry = new Map<string, Command>();\n  static register(command: Command) {\n    this.registry.set(command.name, command);\n  }\n\n  abstract get name(): string;\n\n  private context?: CommandContext;\n  protected get game() { return this.context!.game; }\n  protected log(text: string) { return this.context!.log(text); }\n\n  run(context: CommandContext, args: string[]) {\n    this.context = context;\n    this.exec(...args);\n    this.context = undefined;\n  }\n  abstract exec(...args: string[]): void;\n}","import { Command } from 'app/game/commands';\nimport { InventoryUpdated } from 'app/game/messages';\nimport { Inventory } from 'app/game/traits';\n\nexport class ClearInventory extends Command {\n  readonly name = 'clear-inv';\n\n  exec() {\n    const { slots } = this.game.player.traits.get(Inventory);\n    for (const slot of slots) {\n      slot.item = null;\n      this.game.dispatch(new InventoryUpdated(slot));\n    }\n    this.log('inventory cleared.');\n  }\n}\nCommand.register(new ClearInventory());","import { BehaviorTree } from 'app/game/behavior';\nimport { Command } from 'app/game/commands';\nimport { EnemyData, Inventory, PlayerData } from 'app/game/traits';\nimport { instantiate, randomValue, RandomValue } from 'common/random';\nimport { Elements } from 'data/elements';\nimport { padStart } from 'lodash';\n\nexport class Dump extends Command {\n  readonly name = 'dump';\n\n  exec(type: string = 'elements') {\n    switch (type) {\n      case 'elements': {\n        const valueOf = (value: RandomValue) => padStart(randomValue(value).toFixed(2), 5, ' ');\n        this.log('|   name   |    fission   |    fusion    | color |');\n        for (const name of Object.keys(this.game.library.elements)) {\n          const elem = this.game.library.elements[name];\n          this.log(`\\\n ${padStart(name, 10, ' ')}\\\n (${valueOf(elem.fissionThreshold)}, ${valueOf(elem.fissionRate)})\\\n (${valueOf(elem.fusionThreshold)}, ${valueOf(elem.fusionRate)})\\\n ${padStart(elem.color, 6, '0')}`);\n        }\n      } break;\n      case 'compo': {\n        this.log('|tier|    name    |   element   |   element   |');\n        for (const { tier, name, composition } of Elements) {\n          this.log(`\\\n ${padStart(tier.toString(), 4, ' ')}\\\n ${padStart(name, 12, ' ')}\\\n ${padStart(composition ? composition[0] : '', 13, ' ')}\\\n ${padStart(composition ? composition[1] : '', 13, ' ')}`);\n        }\n      } break;\n      case 'plants': {\n        this.log('|       name       |   element   |   element   |');\n        for (const obj of this.game.library.objects.filter(obj => obj && obj.drops)) {\n          for (const { item: template } of obj.drops!.table.items) {\n            const item = instantiate(template);\n            if (!item.id.startsWith('flower-') && !item.id.startsWith('berries-'))\n              continue;\n            this.log(`\\\n ${padStart(item.name, 18, ' ')}\\\n ${padStart(item.aspects![0].element, 13, ' ')}\\\n ${padStart(item.aspects![1].element, 13, ' ')}`);\n          }\n        }\n      } break;\n      case 'item': {\n        const { slots } = this.game.player.traits.get(Inventory);\n        const { hotbarSelection } = this.game.player.traits.get(PlayerData);\n        const { item } = slots[hotbarSelection];\n        this.log(JSON.stringify(item, null, 4));\n      } break;\n      case 'dragons': {\n        this.log('| id |       name       |  HP  | STR | SPD | score |');\n        for (const dragon of this.game.data.custom.dragons.dragons) {\n          this.log(`\\\n ${padStart(dragon.dragonId, 4, ' ')}\\\n ${padStart(dragon.name, 18, ' ')}\\\n ${padStart(dragon.stats.maxHp.toFixed(1), 6, ' ')}\\\n ${padStart(dragon.stats.str.toFixed(1), 5, ' ')}\\\n ${padStart(dragon.stats.spd.toFixed(1), 5, ' ')}\\\n ${padStart(dragon.score.toFixed(4), 7, ' ')}`);\n        }\n      } break;\n      case 'behaviors': {\n        const { lastAttackId } = this.game.player.traits.get(PlayerData);\n        const target = this.game.entities.get(lastAttackId);\n        if (!target) {\n          this.log('target entity does not exist.');\n          break;\n        }\n        const enemy = target.traits.get(EnemyData);\n        if (!enemy) {\n          this.log('target entity is not enemy.');\n          break;\n        }\n        this.log(BehaviorTree.dump(enemy.def.behaviors));\n      } break;\n      default:\n        this.log('unknown dump type: ' + type);\n    }\n  }\n}\nCommand.register(new Dump());","import { Command } from 'app/game/commands';\nimport { ItemDrop } from 'app/game/entities';\nimport { Inventory, PlayerData } from 'app/game/traits';\n\nexport class Dupe extends Command {\n  readonly name = 'dupe';\n\n  exec(count: string) {\n    let numItems = Number(count) || 1;\n\n    const { hotbarSelection: sel } = this.game.player.traits.get(PlayerData);\n    const { slots } = this.game.player.traits.get(Inventory);\n    const item = slots[sel].item;\n    if (!item) return;\n\n    while (numItems-- > 0) {\n      const drop = ItemDrop.make(this.game, item);\n      drop.age = 10000;\n      this.game.entities.add(drop);\n    }\n  }\n}\nCommand.register(new Dupe());","import { Command } from 'app/game/commands';\nimport { ItemDrop } from 'app/game/entities';\nimport { instantiate } from 'common/random';\nimport { cloneDeep, startCase } from 'lodash';\n\nexport class Give extends Command {\n  readonly name = 'give';\n\n  exec(...items: string[]) {\n    items = items.map(startCase);\n    for (const obj of this.game.library.objects.filter(obj => obj && obj.drops)) {\n      for (const { item: template } of obj.drops!.table.items) {\n        const item = instantiate(template);\n        const index = items.indexOf(item.name);\n        if (index < 0)\n          continue;\n\n        items.splice(index, 1);\n        const drop = ItemDrop.make(this.game, item);\n        drop.age = 10000;\n        this.game.entities.add(drop);\n      }\n    }\n    for (const { output } of this.game.library.recipes) {\n      const index = items.indexOf(output.name);\n      if (index < 0)\n        continue;\n\n      items.splice(index, 1);\n      const drop = ItemDrop.make(this.game, cloneDeep(output));\n      drop.age = 10000;\n      this.game.entities.add(drop);\n    }\n    if (items.length > 0)\n      this.log('item not found: ' + items.join(', '));\n  }\n}\nCommand.register(new Give());","import { Command } from 'app/game/commands';\nimport { ItemDrop } from 'app/game/entities';\nimport { Aspect } from 'common/data';\nimport { makeSolution } from 'common/logic/alchemy';\nimport { startCase } from 'lodash';\n\nexport class Potion extends Command {\n  readonly name = 'potion';\n\n  exec(...args: string[]) {\n    const aspects: Aspect[] = [];\n    for (let i = 0; i + 1 < args.length; i += 2) {\n      const element = startCase(args[i]);\n      const amount = Number(args[i + 1]) || 100;\n      if (!this.game.library.elements[element]) {\n        this.log('element not found: ' + element);\n        continue;\n      }\n      aspects.push({ element, amount });\n    }\n    const drop = ItemDrop.make(this.game, makeSolution(aspects, this.game.library.elements));\n    drop.age = 10000;\n    this.game.entities.add(drop);\n  }\n}\nCommand.register(new Potion());","import { Enemies } from 'app/game/behavior/enemies';\nimport { Command } from 'app/game/commands';\nimport { SpawnEnemy } from 'app/game/messages';\nimport { Spatial } from 'app/game/traits';\n\nexport class Spawn extends Command {\n  readonly name = 'spawn';\n\n  exec(type: string) {\n    const enemyDef = Enemies[type.toLowerCase()];\n    if (!enemyDef) {\n      this.log('unknown type: ' + type);\n      return;\n    }\n\n    this.game.dispatch(new SpawnEnemy(\n      type.toLowerCase(),\n      this.game.player.traits.get(Spatial).position\n    ));\n  }\n}\nCommand.register(new Spawn());","import { Game } from 'app/game';\nimport { Command, CommandContext } from 'app/game/commands';\nimport { HUDElement } from 'app/game/hud';\nimport 'app/game/hud/console.css';\nimport { compact } from 'lodash';\n\nconst ConsoleHTML = `\n<div class=\"console\">\n  <div class=\"con-log-box\">\n    <div class=\"con-log-scroll\">\n      <div class=\"con-log\"></div>\n    </div>\n  </div>\n  <div>\n    <input class=\"con-input\">\n  </div>\n</div>\n`;\n\nexport class Console implements HUDElement, CommandContext {\n  public readonly display = null;\n\n  private readonly root = new DOMParser().parseFromString(ConsoleHTML, 'text/html').querySelector('.console') as HTMLElement;\n  private readonly input = this.root.querySelector('.con-input') as HTMLInputElement;\n  private readonly logBox = this.root.querySelector('.con-log') as HTMLDivElement;\n\n  constructor(public readonly game: Game) {\n    document.body.appendChild(this.root);\n    this.root.addEventListener('keydown', this.onKeyDown);\n    this.game.app.view.addEventListener('keydown', this.onKeyDown);\n  }\n\n  private lastInput = '';\n\n  private onKeyDown = (event: KeyboardEvent) => {\n    const isActive = this.root.classList.contains('active');\n    if (isActive && event.key === 'Escape') {\n      this.toggleInput();\n    } else if (isActive && event.key === 'ArrowUp' && event.target === this.input) {\n      this.input.value = this.lastInput;\n      this.input.setSelectionRange(this.input.value.length, this.input.value.length);\n      event.preventDefault();\n    } else if (event.key.toLowerCase() === 't' || event.key === '/') {\n      if (isActive)\n        this.input.focus();\n      else if (document.activeElement === this.game.app.view)\n        this.toggleInput();\n\n      if (event.key === '/' && event.target !== this.input)\n        this.input.value = '/';\n    } else if (event.key === 'Enter' && event.target === this.input) {\n      this.processInput(this.input.value);\n      this.input.value = '';\n    }\n    if (event.target !== this.input)\n      event.preventDefault();\n  }\n\n  update() {\n  }\n\n  dispose() {\n    this.root.remove();\n    document.body.removeEventListener('keydown', this.onKeyDown);\n  }\n\n  toggleInput() {\n    if (this.root.classList.toggle('active'))\n      this.input.focus();\n    else\n      this.game.app.view.focus();\n  }\n\n  log(text: string) {\n    const entry = document.createElement('li');\n    entry.classList.add('con-log-entry');\n    entry.innerText = text;\n    this.logBox.appendChild(entry);\n    entry.scrollIntoView();\n  }\n\n  private processInput(input: string) {\n    if (!input) return;\n    this.lastInput = input;\n\n    if (!input.startsWith('/')) {\n      this.log(input);\n      return;\n    }\n    const [cmd, ...args] = compact(input.split(' ').map(part => part.trim()));\n    const commandName = cmd.substr(1).toLowerCase();\n    if (commandName === 'clear') {\n      while (this.logBox.lastChild) {\n        this.logBox.removeChild(this.logBox.lastChild);\n      }\n    } else if (Command.registry.has(commandName)) {\n      Command.registry.get(commandName)!.run(this, args);\n    } else {\n      this.log('unknown command: ' + commandName);\n    }\n  }\n}","import { Panel } from 'app/components';\nimport { Game } from 'app/game';\nimport { Entity, ItemDrop, Projectile } from 'app/game/entities';\nimport { HUDElement } from 'app/game/hud';\nimport { PlayerData, Spatial } from 'app/game/traits';\nimport { vec2 } from 'gl-matrix';\nimport { Container, Sprite, Texture } from 'pixi.js';\n\nconst Opacity = 0.8;\nconst ObjectAlpha = 0.25;\n\nexport class MiniMap extends Panel implements HUDElement {\n  public readonly display = this;\n\n  private readonly offset: vec2;\n  private readonly map = new Container();\n  private readonly mapSprite = new Sprite();\n  private isFullscreen = false;\n  private isMouseOver = false;\n\n  private mapDirty = false;\n  private readonly canvas: HTMLCanvasElement;\n  private readonly mapData: Uint8ClampedArray;\n  private readonly indicators = new Map<number, Sprite>();\n  private readonly entityVisible = new Set<number>();\n\n  constructor(private readonly game: Game) {\n    super(game.app);\n    this.offset = this.game.player.traits.get(Spatial).position;\n\n    this.content.addChild(this.map);\n    this.map.addChild(this.mapSprite);\n    this.mapSprite.anchor.set(0, 0);\n    this.alpha = Opacity;\n\n    this.content.interactive = true;\n    this.content.on('pointerover', () => this.isMouseOver = true);\n    this.content.on('pointerout', () => this.isMouseOver = false);\n    this.content.on('pointerdown', () => this.isFullscreen = true);\n    this.content.on('pointerup', () => this.isFullscreen = false);\n    this.content.on('pointerupoutside', () => this.isFullscreen = false);\n\n    const map = this.game.map;\n    this.canvas = document.createElement('canvas');\n    this.canvas.width = map.width;\n    this.canvas.height = map.height;\n    this.mapData = new Uint8ClampedArray(map.width * map.height * 4);\n    this.mapSprite.texture = Texture.fromCanvas(this.canvas);\n\n    this.game.map.changes$.subscribe(({ x, y }) => this.renderTile(x, y));\n    for (let y = 0; y < map.height; y++) {\n      for (let x = 0; x < map.width; x++)\n        this.renderTile(x, y);\n    }\n    this.update();\n  }\n\n  private getIndicator(entity: Entity) {\n    let indicator = this.indicators.get(entity.id);\n    if (indicator)\n      return indicator;\n\n    indicator = new Sprite(Texture.fromFrame('sprites/ui/indicator'));\n    if (entity.traits.get(PlayerData))\n      indicator.tint = 0x0000ff;\n    else\n      indicator.tint = 0xff0000;\n    indicator.anchor.set(0.5, 0.5);\n    this.indicators.set(entity.id, indicator);\n    return indicator;\n  }\n\n  private renderTile(x: number, y: number) {\n    const index = (x + y * this.game.map.width) * 4;\n\n    function parseColor(color: string) {\n      if (!color) return null;\n      const colorNum = parseInt(color, 16);\n      return [(colorNum >>> 16) & 0xff, (colorNum >>> 8) & 0xff, (colorNum >>> 0) & 0xff];\n    }\n\n    const terrain = this.game.library.terrains[this.game.map.getTerrain(x, y)];\n    const terrainColor = terrain ? parseColor(terrain.color)! : [0, 0, 0];\n\n    const object = this.game.library.objects[this.game.map.getObject(x, y)];\n    const objectColor = object ? parseColor(object.color) : null;\n\n    let color = terrainColor;\n    if (objectColor !== null) {\n      color = [\n        terrainColor[0] * (1 - ObjectAlpha) + objectColor[0] * ObjectAlpha,\n        terrainColor[1] * (1 - ObjectAlpha) + objectColor[1] * ObjectAlpha,\n        terrainColor[2] * (1 - ObjectAlpha) + objectColor[2] * ObjectAlpha\n      ];\n    }\n\n    this.mapData[index] = color[0];\n    this.mapData[index + 1] = color[1];\n    this.mapData[index + 2] = color[2];\n    this.mapData[index + 3] = 0xff;\n    this.mapDirty = true;\n  }\n\n  private readonly dist = vec2.create();\n  update() {\n    for (const id of this.indicators.keys()) {\n      if (!this.game.entities.get(id)) {\n        this.map.removeChild(this.indicators.get(id)!);\n        this.indicators.delete(id);\n        this.entityVisible.delete(id);\n      }\n    }\n    const { position: playerPos } = this.game.player.traits.get(Spatial);\n    for (const entity of this.game.entities.withTrait(Spatial)) {\n      if (entity.type === ItemDrop.Type || entity.type === Projectile.Type) continue;\n      const indicator = this.getIndicator(entity);\n\n      const { position } = entity.traits.get(Spatial);\n      vec2.sub(this.dist, playerPos, position);\n      const visible = this.isFullscreen || vec2.length(this.dist) < 50;\n      if (visible && !this.entityVisible.has(entity.id)) {\n        this.map.addChild(indicator);\n        this.entityVisible.add(entity.id);\n      } else if (!visible && this.entityVisible.has(entity.id)) {\n        this.map.removeChild(indicator);\n        this.entityVisible.delete(entity.id);\n      }\n    }\n\n    if (!this.mapDirty) return;\n\n    const ctx = this.canvas.getContext('2d')!;\n    const img = ctx.getImageData(0, 0, this.canvas.width, this.canvas.height);\n    img.data.set(this.mapData);\n    ctx.putImageData(img, 0, 0);\n    this.mapSprite.texture.update();\n    this.mapDirty = false;\n  }\n\n  layout(width: number, height: number) {\n    let scale;\n    if (this.isFullscreen) {\n      this.x = 16;\n      this.y = 16;\n      super.layout(width - 32, height - 32);\n      scale = 1;\n      this.alpha = 1;\n      this.map.position.set(\n        Math.floor(-this.offset[0] + (width - 32) / 2),\n        Math.floor(-this.offset[1] + (height - 32) / 2)\n      );\n    } else {\n      this.x = width - 16 - 256;\n      this.y = 16;\n      super.layout(256, 256);\n      scale = 4;\n      this.alpha = this.isMouseOver ? 1 : Opacity;\n      this.map.position.set(\n        Math.floor(-this.offset[0] * 4 + 256 / 2),\n        Math.floor(-this.offset[1] * 4 + 256 / 2)\n      );\n    }\n    this.mapSprite.scale.set(scale, scale);\n    for (const [id, indicator] of this.indicators) {\n      const entity = this.game.entities.get(id);\n      if (!entity) continue;\n      const { position } = entity.traits.get(Spatial);\n      indicator.position.set(position[0] * scale, position[1] * scale);\n    }\n  }\n}","import { SlotView } from 'app/components';\nimport { Game } from 'app/game';\nimport { HUDElement } from 'app/game/hud';\nimport { Inventory, PlayerData } from 'app/game/traits';\nimport { Item, ItemSlot, Weapon } from 'common/data';\nimport { Container, Sprite, Texture } from 'pixi.js';\n\nconst HotbarOpacity = 0.75;\nconst HotbarKeys: [number, string][] = [\n  [0, '1'],\n  [1, '2'],\n  [2, '3'],\n  [3, '4'],\n  [4, '5'],\n  [5, '6'],\n  [6, '7'],\n  [7, '8'],\n];\n\nexport class Hotbar extends Container implements HUDElement {\n  public readonly display = this;\n\n  private readonly bg = new Sprite(Texture.WHITE);\n  private readonly selection = new Sprite(Texture.fromFrame('sprites/ui/inv-selection'));\n\n  private readonly slots: ItemSlot[];\n  private readonly player: PlayerData;\n  private readonly slotViews: SlotView[];\n\n  constructor(private readonly game: Game) {\n    super();\n    this.slots = game.player.traits.get(Inventory).slots.slice(0, 8);\n    this.player = game.player.traits.get(PlayerData);\n\n    this.bg.tint = 0x404040;\n\n    const views = new Container();\n    views.addChild(this.bg);\n\n    this.slotViews = this.slots.map(slot => new SlotView(game, slot));\n    for (const view of this.slotViews) {\n      view.enabled = false;\n      view.toolTipOpacity = 0.9;\n      view.alwaysInteractive = true;\n\n      view.bgOverlay.texture = Texture.WHITE;\n      view.bgOverlay.width = 48;\n      view.bgOverlay.height = 0;\n      view.bgOverlay.alpha = 0.2;\n      view.bgOverlay.anchor.set(0, 1);\n      view.bgOverlay.position.set(4, 52);\n\n      views.addChild(view);\n      view.on('pointerdown', () => this.player.hotbarSelection = this.slots.indexOf(view.slot));\n    }\n\n    this.addChild(views);\n    this.addChild(this.selection);\n\n    views.alpha = HotbarOpacity;\n    this.interactive = true;\n    this.on('pointerover', () => views.alpha = 1);\n    this.on('pointerout', () => views.alpha = HotbarOpacity);\n\n    game.app.view.addEventListener('wheel', this.wheelSelection);\n  }\n\n  private wheelDebounce = 0;\n  private wheelSelection = (event: WheelEvent) => {\n    if (this.game.paused) return;\n    if (this.elapsed - this.wheelDebounce < 20) return;\n\n    const delta = event.deltaX + event.deltaY;\n    if (Math.abs(delta) < 32) return;\n\n    const offset = Math.sign(delta);\n    const numSlots = this.slots.length;\n    this.player.hotbarSelection = (this.player.hotbarSelection + offset + numSlots) % numSlots;\n    this.wheelDebounce = this.elapsed;\n  }\n\n  dispose() {\n    this.game.app.view.removeEventListener('wheel', this.wheelSelection);\n  }\n\n  private elapsed = 0;\n  private maxConsumeCooldown = 0;\n  private maxAttackCooldown = 0;\n  private lastConsumeCooldown = 0;\n  private lastAttackCooldown = 0;\n  update(dt: number) {\n    for (const [slotNum, key] of HotbarKeys) {\n      if (this.game.keyboard.isDown(key))\n        this.player.hotbarSelection = slotNum;\n    }\n    this.elapsed += dt;\n\n    if (this.player.consumeCooldown > this.lastConsumeCooldown)\n      this.maxConsumeCooldown = this.player.consumeCooldown;\n    this.lastConsumeCooldown = this.player.consumeCooldown;\n\n    if (this.player.attackCooldown > this.lastAttackCooldown)\n      this.maxAttackCooldown = this.player.attackCooldown;\n    this.lastAttackCooldown = this.player.attackCooldown;\n\n    const consumeCooldownHeight = 48 * (this.player.consumeCooldown / this.maxConsumeCooldown);\n    const attackCooldownHeight = 48 * (this.player.attackCooldown / this.maxAttackCooldown);\n\n    for (const { slot, bgOverlay } of this.slotViews) {\n      if (slot.item && slot.item.weapon && slot.item.weapon.type !== Weapon.Type.Arrow)\n        bgOverlay.height = attackCooldownHeight;\n      else if (slot.item && slot.item.type === Item.Type.Consumable)\n        bgOverlay.height = consumeCooldownHeight;\n      else\n        bgOverlay.height = 0;\n    }\n  }\n\n  layout(width: number, height: number) {\n    const contentWidth = 8 + (SlotView.Size + 4) * this.slotViews.length;\n    const contentHeight = SlotView.Size + 12;\n    this.position.set(\n      Math.round((width - contentWidth) / 2),\n      height - contentHeight\n    );\n\n    let x = 6;\n    for (const view of this.slotViews) {\n      view.position.set(x, 6);\n      view.layout();\n      x += SlotView.Size + 4;\n    }\n    this.selection.position.set(3 + (SlotView.Size + 4) * this.player.hotbarSelection, 3);\n\n    this.bg.position.set(0, 0);\n    this.bg.width = contentWidth;\n    this.bg.height = contentHeight;\n  }\n}","import { App } from 'app';\nimport { TextToolTip } from 'app/components/TextToolTip';\nimport { Effect } from 'common/data';\nimport { Sprite, Texture } from 'pixi.js';\n\nexport class EffectToolTip extends TextToolTip {\n  private effect?: Effect;\n  private readonly icon = new Sprite();\n\n  constructor(app: App) {\n    super(app, '', {\n      default: { align: 'left' },\n      s: { fontSize: 12 },\n      name: { fontWeight: 'bold', valign: 'middle' },\n      desc: { fontStyle: 'italic' },\n      time: { fill: '#d0d0d0' }\n    });\n\n    this.icon.scale.set(2, 2);\n    this.icon.position.set(20, 20);\n    this.alpha = 0.75;\n    this.addChild(this.icon);\n  }\n\n  public setEffect(effect: Effect) {\n    this.effect = effect;\n    this.icon.texture = Texture.fromFrame(`sprites/effects/${effect.type}`);\n    this.update();\n  }\n\n  update() {\n    if (!this.effect) return;\n\n    const texts: string[] = [\n      `<s>     </s><name>${this.effect.name}</name>`,\n      `<desc>${this.effect.description}</desc>`,\n      `<time>${Math.floor(this.effect.duration / 1000)}s remains</time>`\n    ];\n\n    this.text = texts.join('\\n');\n  }\n}","import { Text } from 'app/components';\nimport { EffectToolTip } from 'app/components/EffectToolTip';\nimport { Game } from 'app/game';\nimport { HUDElement } from 'app/game/hud';\nimport { Stats, StatList } from 'app/game/traits';\nimport { Effect } from 'common/data';\nimport { Effects, EffectDef } from 'data/effects';\nimport { Container, Sprite, Texture } from 'pixi.js';\n\nconst HPBarWidth = 256;\nconst HPBarHeight = 32;\n\nexport class Status extends Container implements HUDElement {\n  public readonly display = this;\n\n  private readonly stats: StatList;\n  private readonly effects: Effect[];\n\n  private readonly hpBarIcon = new Sprite(Texture.fromFrame('sprites/ui/status-hp'));\n  private readonly hpBarBg = new Sprite(Texture.WHITE);\n  private readonly hpBarFill = new Sprite(Texture.WHITE);\n  private readonly hpBarText = new Text();\n\n  private readonly effectIcons: (Sprite & { effectIndex: number })[] = [];\n  private readonly effectToolTip: EffectToolTip;\n\n  constructor(private readonly game: Game) {\n    super();\n    this.stats = Stats.compute(game.player.traits.get(Stats));\n    this.effects = game.player.traits.get(Stats).effects;\n    this.effectToolTip = new EffectToolTip(game.app);\n\n    this.hpBarBg.tint = 0x808080;\n    this.hpBarBg.width = HPBarWidth;\n    this.hpBarBg.height = HPBarHeight;\n\n    const hpBar = new Container();\n    this.addChild(hpBar);\n\n    hpBar.addChild(this.hpBarBg);\n    hpBar.addChild(this.hpBarFill);\n    hpBar.addChild(this.hpBarText);\n    hpBar.addChild(this.hpBarIcon);\n\n    hpBar.alpha = 0.65;\n    this.hpBarText.visible = false;\n    hpBar.interactive = true;\n    hpBar.on('pointerover', () => {\n      hpBar.alpha = 1;\n      this.hpBarText.visible = true;\n    });\n    hpBar.on('pointerout', () => {\n      hpBar.alpha = 0.65;\n      this.hpBarText.visible = false;\n    });\n  }\n\n  update(dt: number) {\n    const { hp, maxHp } = this.stats;\n    const percentage = hp / maxHp;\n\n    this.hpBarText.text = `${Math.ceil(hp)}/${maxHp}`;\n    this.hpBarFill.width = HPBarWidth * percentage;\n    this.hpBarFill.height = HPBarHeight;\n\n    if (percentage < 0.3) this.hpBarFill.tint = 0xa00000;\n    else if (percentage < 0.6) this.hpBarFill.tint = 0xa0a000;\n    else this.hpBarFill.tint = 0x00a000;\n\n    const showEffects = this.effects.filter(\n      ({ type, duration }) => duration > 0 && Effects[type as EffectDef.Type].visible\n      );\n    while (this.effectIcons.length < showEffects.length) {\n      const icon = Object.assign(new Sprite(), { effectIndex: 0 });\n      icon.interactive = true;\n      icon.scale.set(2, 2);\n      this.addChild(icon);\n\n      this.game.app.toolTip.add(icon, () => {\n        this.effectToolTip.setEffect(this.effects[icon.effectIndex]);\n        return this.effectToolTip;\n      });\n      this.effectIcons.push(icon);\n    }\n    while (this.effectIcons.length > showEffects.length) {\n      this.removeChild(this.effectIcons.splice(this.effectIcons.length - 1, 1)[0]);\n    }\n\n    for (let i = 0; i < showEffects.length; i++) {\n      this.effectIcons[i].texture = Texture.fromFrame(`sprites/effects/${showEffects[i].type}`);\n      this.effectIcons[i].effectIndex = this.effects.indexOf(showEffects[i]);\n    }\n    this.effectToolTip.update();\n  }\n\n  layout(width: number, height: number) {\n    const hpBarX = width - HPBarWidth - 16, hpBarY = 256 + 32;\n    this.hpBarBg.position.set(hpBarX, hpBarY);\n    this.hpBarFill.position.set(hpBarX, hpBarY);\n    this.hpBarText.position.set(hpBarX, hpBarY);\n    this.hpBarText.layout(HPBarWidth, HPBarHeight);\n    this.hpBarIcon.position.set(hpBarX - this.hpBarIcon.width - 4, hpBarY);\n\n    const effectsX = hpBarX, effectsY = hpBarY + HPBarHeight + 16;\n    for (let i = 0; i < this.effectIcons.length; i++) {\n      this.effectIcons[i].position.set(effectsX + i * (32 + 8), effectsY);\n    }\n  }\n}","import { Game } from 'app/game';\nimport * as hud from 'app/game/hud';\nimport { Task } from 'app/game/tasks';\n\nconst HUDElements: hud.HUDElementType[] = [\n  hud.Console,\n  hud.Hotbar,\n  hud.Status,\n  hud.MiniMap,\n];\n\nexport class HUDTask extends Task {\n  public readonly runWhenPaused = true;\n  private readonly elements: hud.HUDElement[] = [];\n\n  constructor(game: Game) {\n    super(game);\n    for (const HUDElement of HUDElements) {\n      const elem = new HUDElement(game);\n      if (elem.display)\n        game.view.add(elem.display);\n      this.elements.push(elem);\n    }\n  }\n\n  update(dt: number) {\n    for (const elem of this.elements)\n      elem.update(dt);\n  }\n\n  dispose() {\n    for (const elem of this.elements)\n      elem.dispose && elem.dispose();\n  }\n}","import { Game } from 'app/game';\nimport * as tasks from 'app/game/tasks';\n\ntype Task = tasks.Task;\n\nexport class TaskManager {\n  private readonly tasks: Task[] = [];\n\n  constructor(private readonly game: Game) {\n  }\n\n  public init() {\n    this.add(tasks.EffectTask);\n    this.add(tasks.TerrainEffectTask);\n    this.add(tasks.EquipmentEffectTask);\n\n    this.add(tasks.PlayerInputTask);\n    this.add(tasks.BehaviorTask);\n    this.add(tasks.DragonTask);\n\n    this.add(tasks.ProjectileTask);\n    this.add(tasks.EntityHPTask);\n    this.add(tasks.EntityMovementTask);\n    this.add(tasks.DeathTask);\n\n    this.add(tasks.UseItemTask);\n    this.add(tasks.AttackTask);\n    this.add(tasks.InventoryTask);\n\n    this.add(tasks.CameraUpdateTask);\n    this.add(tasks.TerrainDisplayTask);\n    this.add(tasks.ObjectDisplayTask);\n    this.add(tasks.EntityDisplayTask);\n\n    this.add(tasks.FXTask);\n    this.add(tasks.ParticleTask);\n    this.add(tasks.HUDTask);\n  }\n\n  public dispose() {\n    for (const task of this.tasks)\n      task.dispose();\n    this.tasks.length = 0;\n  }\n\n  public add<T extends Task>(Task: { new(game: Game): Task }) {\n    const task = new Task(this.game);\n    this.tasks.push(task);\n  }\n\n  public update(dt: number, paused: boolean) {\n    for (let i = 0; i < this.tasks.length; i++) {\n      if (this.tasks[i].isActive) {\n        if (!paused || this.tasks[i].runWhenPaused)\n          this.tasks[i].update(dt);\n      }\n      else {\n        this.tasks[i].dispose();\n        this.tasks.splice(i, 1);\n        i--;\n      }\n    }\n  }\n}","import { MapProps, SerializedMap } from 'common/map';\nimport { Subject } from 'rxjs/Subject';\n\nexport interface MapChange {\n  x: number;\n  y: number\n}\n\nexport class TileMap {\n  private readonly data: Uint16Array;\n  public readonly changes$ = new Subject<MapChange>();\n\n  constructor(\n    public readonly width: number, public readonly height: number,\n    public readonly props: MapProps\n  ) {\n    this.data = new Uint16Array(width * height * 2);\n  }\n\n  public serialize(): SerializedMap {\n    const terrains = new Uint16Array(this.width * this.height);\n    const objects = new Uint16Array(this.width * this.height);\n    for (let i = 0; i < terrains.length; i++) {\n      terrains[i] = this.data[i * 2];\n      objects[i] = this.data[i * 2 + 1];\n    }\n    return {\n      width: this.width,\n      height: this.height,\n      props: this.props,\n      terrains, objects\n    };\n  }\n\n  public static deserialize(data: SerializedMap) {\n    const map = new TileMap(data.width, data.height, data.props);\n    const len = data.width * data.height;\n    for (let i = 0; i < len; i++) {\n      map.data[i * 2] = data.terrains[i];\n      map.data[i * 2 + 1] = data.objects[i];\n    }\n    return map;\n  }\n\n  private toIndex(x: number, y: number): number {\n    x = Math.floor(x);\n    y = Math.floor(y);\n    if (x < 0 || x >= this.width) return -1;\n    if (y < 0 || y >= this.height) return -1;\n    return x + this.width * y;\n  }\n\n  public getTerrain(x: number, y: number) {\n    const index = this.toIndex(x, y);\n    return this.data[index * 2] || 0;\n  }\n\n  public getObject(x: number, y: number) {\n    const index = this.toIndex(x, y);\n    return this.data[index * 2 + 1] || 0;\n  }\n\n  public setTerrain(x: number, y: number, terrain: number) {\n    const index = this.toIndex(x, y);\n    if (index < 0 || index >= this.data.length) return;\n    this.data[index * 2] = terrain;\n    this.changes$.next({ x, y });\n  }\n\n  public setObject(x: number, y: number, object: number) {\n    const index = this.toIndex(x, y);\n    if (index < 0 || index >= this.data.length) return;\n    this.data[index * 2 + 1] = object;\n    this.changes$.next({ x, y });\n  }\n}","import { App } from 'app';\nimport { Message } from 'app/game/messages';\nimport { EntityManager } from 'app/game/EntityManager';\nimport { GameView } from 'app/game/GameView';\nimport { TaskManager } from 'app/game/TaskManagers';\nimport { TileMap } from 'app/game/TileMap';\nimport { DataLibrary, GameSave } from 'common/data';\nimport { filter } from 'rxjs/operators/filter';\nimport { Observable } from 'rxjs/Observable';\nimport { Subject } from 'rxjs/Subject';\n\nexport class Game {\n  constructor(public readonly app: App, public readonly data: GameSave) {\n    this.library = data.library;\n  }\n\n  public readonly view = new GameView();\n  public readonly keyboard = this.app.keyboard;\n  public map!: TileMap;\n  public readonly library: DataLibrary;\n\n  public readonly tasks = new TaskManager(this);\n  public readonly entities = new EntityManager(this);\n\n  private _paused = false;\n  public get paused() { return this._paused; }\n\n  public init() {\n    this.map = TileMap.deserialize(this.data.map);\n    this.entities.init();\n    this.tasks.init();\n  }\n\n  public save() {\n    this.data.map = this.map.serialize();\n    this.entities.save();\n  }\n\n  public update(dt: number, paused = false) {\n    this._paused = paused;\n    // update tasks first to allow check for entity age = 0\n    this.tasks.update(dt, paused);\n    if (!paused)\n      this.entities.update(dt);\n  }\n\n  public layout() {\n    const { width, height } = this.app.screen;\n    this.view.layout(width, height);\n  }\n\n  public dispose() {\n    this.tasks.dispose();\n    this.entities.dispose();\n  }\n\n  public get player() { return this.entities.get(1)!; }\n\n  private _message$ = new Subject<Message>();\n  public readonly messages$ = Object.assign(this._message$ as Observable<Message>, {\n    ofType: <T extends { new(...args: any[]): Message }>(Type: T) => {\n      return this.messages$.pipe(filter(msg => msg instanceof Type)) as Observable<InstanceType<T>>;\n    }\n  });\n\n  public dispatch<T extends Message>(message: T) {\n    this._message$.next(message);\n    return message;\n  }\n}","import { App } from 'app';\nimport { Game } from 'app/game';\nimport { GameState } from 'app/states/GameState';\nimport { fadeIn, fadeOut } from 'app/utils/animations';\nimport { GameSave } from 'common/data';\n\nexport class StateMain extends GameState {\n  public get name() { return 'main'; }\n\n  private readonly game: Game;\n\n  constructor(app: App, data: GameSave) {\n    super(app);\n    this.game = new Game(app, data);\n    this.root.addChild(this.game.view);\n  }\n\n  async enter() {\n    this.game.init();\n    this.root.alpha = 0;\n    await fadeIn(this.root).toPromise();\n  }\n\n  update(dt: number) {\n    this.game.update(dt);\n  }\n\n  layout() {\n    this.game.layout();\n  }\n\n  async leave() {\n    this.game.dispose();\n    this.root.alpha = 1;\n    await fadeOut(this.root).toPromise();\n  }\n}","import { App, MapSize, Seed } from 'app';\nimport { Text, TextButton } from 'app/components';\nimport { Generator } from 'app/game/Generator';\nimport { GameState } from 'app/states/GameState';\nimport { StateMain } from 'app/states/StateMain';\nimport { fadeIn, fadeOut } from 'app/utils/animations';\nimport { GameSave } from 'common/data';\nimport { Sprite, Texture } from 'pixi.js';\n\nexport class StateTitle extends GameState {\n  public get name() { return 'title'; }\n\n  private logo = new Sprite(Texture.fromFrame('sprites/ui/title'));\n  private newButton = new TextButton('new game');\n  private loadBar = new Sprite(Texture.WHITE);\n  private loadMessage = new Text('');\n  private saveLabel = new Text('saves');\n  private saveButtons: TextButton[] = [];\n\n  constructor(app: App) {\n    super(app);\n\n    this.root.addChild(this.logo);\n    this.root.addChild(this.newButton);\n    this.root.addChild(this.loadBar);\n    this.root.addChild(this.loadMessage);\n    this.newButton.on(TextButton.Clicked, this.newGame.bind(this));\n    this.loadBar.tint = 0x404040;\n    this.loadBar.width = 0;\n  }\n\n  async enter() {\n    this.updateSaves();\n    this.root.alpha = 0;\n    await fadeIn(this.root).toPromise();\n  }\n\n  async pause() {\n    this.root.alpha = 1;\n    await fadeOut(this.root).toPromise();\n  }\n\n  async resume() {\n    this.updateSaves();\n    this.newButton.isEnabled = true;\n    this.loadMessage.text = '';\n    this.loadBar.width = 0;\n\n    this.root.alpha = 0;\n    await fadeIn(this.root).toPromise();\n  }\n\n  private updateSaves() {\n    for (const btn of this.saveButtons)\n      this.root.removeChild(btn);\n\n    this.saveButtons = [];\n    for (const name of Object.keys(localStorage).sort()) {\n      const btn = new TextButton(name);\n      btn.on(TextButton.Clicked, () => this.startGame(GameSave.import(localStorage[name])));\n      this.root.addChild(btn);\n      this.saveButtons.push(btn);\n    }\n    if (this.saveButtons.length > 0)\n      this.root.addChild(this.saveLabel);\n  }\n\n  layout() {\n    const contentHeight = this.logo.height + 50 + 75 + 20 + 50;\n    const { width, height } = this.app.screen;\n\n    this.logo.position.set((width - this.logo.width) / 2, (height - contentHeight) / 2);\n    this.newButton.position.set((width - 160) / 2, this.logo.y + this.logo.height + 50);\n    this.newButton.layout(160, 64);\n    this.loadMessage.position.set(0, this.newButton.y + 64 + 20);\n    this.loadMessage.layout(width, 50);\n    this.loadBar.position.set(width / 4, this.newButton.y + 64 + 20);\n    this.loadBar.height = 50;\n\n    this.saveLabel.position.set(width - 256, 64);\n    this.saveLabel.layout(192, 48);\n    let y = this.saveLabel.y + 48 + 16;\n    for (const button of this.saveButtons) {\n      button.position.set(width - 256, y);\n      button.layout(192, 48);\n      y += 48 + 16;\n    }\n  }\n\n  async newGame() {\n    this.newButton.isEnabled = false;\n    this.saveButtons.forEach(btn => btn.isEnabled = false);\n    const data = await new Generator(MapSize, MapSize, Seed || performance.now().toString()).generate((message, progress) => {\n      if (message)\n        this.loadMessage.text = message;\n      this.loadBar.width = (this.app.screen.width / 2) * progress;\n    });\n\n    await this.startGame(data);\n  }\n\n  private async startGame(data: GameSave) {\n    this.newButton.isEnabled = false;\n    this.saveButtons.forEach(btn => btn.isEnabled = false);\n    await this.app.pushState(new StateMain(this.app, data));\n  }\n}","import { GameOverlay } from 'app/game/overlays';\nimport { GameState } from 'app/states/GameState';\nimport { Sprite, Texture } from 'pixi.js';\n\nexport class StateOverlay extends GameState {\n  public get name() { return 'overlay'; }\n\n  private readonly bg = new Sprite(Texture.WHITE);\n  constructor(private readonly overlay: GameOverlay) {\n    super(overlay.game.app);\n    this.bg.tint = 0;\n    this.bg.alpha = 0.5;\n    this.root.addChild(this.bg);\n    this.root.addChild(this.overlay);\n  }\n\n  async enter() {\n    this.overlay.init();\n  }\n\n  update(dt: number) {\n    this.overlay.update(dt);\n    this.overlay.game.update(dt, true);\n  }\n\n  layout() {\n    const { width, height } = this.app.screen;\n    this.bg.width = width;\n    this.bg.height = height;\n    this.overlay.layout(width, height);\n    this.overlay.game.layout();\n  }\n\n  async leave() {\n    this.overlay.dispose();\n  }\n}","export class Keyboard {\n  private state = new Set<string>();\n  private newKey = new Map<string, boolean>();\n\n  constructor(private readonly elem: HTMLElement) {\n    this.keydown = this.keydown.bind(this);\n    this.keyup = this.keyup.bind(this);\n    this.blur = this.blur.bind(this);\n\n    elem.tabIndex = 1;\n    elem.addEventListener('keydown', this.keydown);\n    elem.addEventListener('keyup', this.keyup);\n    elem.addEventListener('blur', this.blur);\n    setTimeout(() => elem.focus(), 0);\n  }\n\n  private keydown(event: KeyboardEvent) {\n    event.preventDefault();\n    if (event.repeat) return;\n    this.state.add(event.key.toLowerCase());\n    this.newKey.set(event.key.toLowerCase(), true);\n  }\n\n  private keyup(event: KeyboardEvent) {\n    event.preventDefault();\n    if (event.repeat) return;\n    this.state.delete(event.key.toLowerCase());\n    this.newKey.set(event.key.toLowerCase(), false);\n  }\n\n  private blur() {\n    for (const key of this.state)\n      this.newKey.set(key, false);\n    this.state.clear();\n  }\n\n  public isDown(...keys: string[]) {\n    return keys.some(key => this.newKey.get(key.toLowerCase()) === true);\n  }\n\n  public isUp(...keys: string[]) {\n    return keys.some(key => this.newKey.get(key.toLowerCase()) === false);\n  }\n\n  public isPressed(...keys: string[]) {\n    return keys.some(key => this.state.has(key.toLowerCase()));\n  }\n\n  public update() {\n    this.newKey.clear();\n  }\n\n  public dispose() {\n    this.elem.removeEventListener('keydown', this.keydown);\n    this.elem.removeEventListener('keyup', this.keyup);\n    this.elem.removeEventListener('blur', this.blur);\n  }\n}\n","import { App } from 'app';\nimport { interaction, Container, DisplayObject, Point, RendererPlugins } from 'pixi.js';\nimport { first } from 'rxjs/operators/first';\nimport { Subject } from 'rxjs/Subject';\n\ntype InteractionEvent = interaction.InteractionEvent;\n\nexport class DragDrop {\n  private interaction: interaction.InteractionManager;\n  private readonly overlay = new Container();\n  private readonly pointerPos = new Point();\n  private dragOffset = new Point();\n  private activeObj?: DisplayObject;\n  private endDrag$ = new Subject<DisplayObject | null>();\n\n  public get active() { return !!this.activeObj; }\n\n  constructor(private readonly app: App) {\n    this.interaction = (app.renderer.plugins as RendererPlugins).interaction;\n    app.stage.addChild(this.overlay);\n    this.interaction.on('pointermove', (e: InteractionEvent) => {\n      if (e.data.originalEvent.target !== app.view) {\n        this.cancel();\n        return;\n      }\n      e.data.getLocalPosition(this.overlay, this.pointerPos);\n    });\n    this.interaction.on('pointerup', this.end);\n  }\n\n  public begin(object: DisplayObject) {\n    if (this.activeObj) {\n      console.log('dragdrop: already in progress');\n      this.cancel();\n    }\n    this.overlay.toLocal(new Point(0, 0), object, this.dragOffset);\n    this.dragOffset.x -= this.pointerPos.x;\n    this.dragOffset.y -= this.pointerPos.y;\n    object.parent && object.parent.removeChild(object);\n    this.overlay.addChild(object);\n    this.activeObj = object;\n    return this.endDrag$.pipe(first()).toPromise();\n  }\n\n  public cancel(object = this.activeObj) {\n    if (this.activeObj && this.activeObj === object) {\n      this.overlay.removeChild(this.activeObj);\n      this.endDrag$.next(null);\n      this.activeObj = undefined;\n    }\n  }\n\n  private end = (e: InteractionEvent) => {\n    if (this.activeObj) {\n      const pt = e.data.global.clone();\n      pt.x += this.dragOffset.x;\n      pt.y += this.dragOffset.y;\n      const target = this.interaction.hitTest(pt, this.app.root);\n      this.endDrag$.next(target);\n\n      this.overlay.removeChild(this.activeObj);\n      this.activeObj = undefined;\n    }\n    e.data.getLocalPosition(this.overlay, this.pointerPos);\n  }\n\n  public layout() {\n    if (this.activeObj) {\n      this.activeObj.position.set(\n        this.pointerPos.x + this.dragOffset.x,\n        this.pointerPos.y + this.dragOffset.y\n      );\n    }\n  }\n}","import { App } from 'app';\nimport { Panel } from 'app/components';\nimport { interaction, Container, DisplayObject, Point, RendererPlugins } from 'pixi.js';\n\ntype InteractionEvent = interaction.InteractionEvent;\n\nconst ToolTipOffset = 8;\n\nexport class ToolTip {\n  private interaction: interaction.InteractionManager;\n  private readonly overlay = new Container();\n  private readonly pointerPos = new Point();\n  private readonly global = new Point();\n  private panel?: Panel;\n  private target?: DisplayObject;\n\n  public get active() { return !!this.panel; }\n\n  constructor(private readonly app: App) {\n    this.interaction = (app.renderer.plugins as RendererPlugins).interaction;\n    app.stage.addChild(this.overlay);\n    this.interaction.on('pointermove', (e: InteractionEvent) => {\n      if (e.data.originalEvent.target !== app.view) {\n        if (this.panel) this.hide(this.panel);\n        return;\n      }\n\n      e.data.getLocalPosition(this.overlay, this.pointerPos);\n      this.global.copy(e.data.global);\n    });\n  }\n\n  public add(target: DisplayObject, show: () => Panel | null) {\n    const showToolTip = (e: interaction.InteractionEvent) => {\n      if (e.data.originalEvent.target !== this.app.view)\n        return;\n\n      if (e.target === target && !this.app.dragDrop.active) {\n        const panel = show();\n        if (panel)\n          this.show(panel, target);\n      }\n    };\n    target.on('pointerover', showToolTip);\n    target.on('pointermove', showToolTip);\n  }\n\n  public show(panel: Panel, target: DisplayObject) {\n    if (this.panel) this.hide(this.panel);\n\n    this.overlay.addChild(panel);\n    this.panel = panel;\n    this.target = target;\n  }\n\n  public hide(panel: Panel) {\n    if (this.panel === panel) {\n      this.overlay.removeChild(panel);\n      this.panel = undefined;\n      this.target = undefined;\n    }\n  }\n\n  public update() {\n    if (!this.panel) return;\n    const target = this.interaction.hitTest(this.global, this.app.root);\n    if (target !== this.target) {\n      this.hide(this.panel);\n    }\n  }\n\n  public layout() {\n    if (this.panel) {\n      const { width, height } = this.app.screen;\n      this.panel.layout(width, height);\n      const { width: panelWidth, height: panelHeight } = this.panel;\n\n      let x = this.pointerPos.x + ToolTipOffset, y = this.pointerPos.y + ToolTipOffset;\n      if (x + panelWidth >= width) x = this.pointerPos.x - ToolTipOffset - panelWidth;\n      if (y + panelHeight >= height) y = this.pointerPos.y - ToolTipOffset - panelHeight;\n      this.panel.position.set(x, y);\n    }\n  }\n}","import * as TWEEN from '@tweenjs/tween.js';\nimport { GameState } from 'app/states';\nimport { Keyboard } from 'app/utils/Keyboard';\nimport { DragDrop } from 'app/DragDrop';\nimport { ToolTip } from 'app/ToolTip';\nimport {\n  interaction, settings, Application, Container, DisplayObject,\n  Rectangle, RendererPlugins, SCALE_MODES\n} from 'pixi.js';\n\nexport class App extends Application {\n  public readonly root = this.stage.addChild(new Container());\n\n  constructor() {\n    super({\n      autoResize: true,\n      antialias: true,\n      roundPixels: true\n    });\n    this.view.oncontextmenu = event => event.preventDefault();\n\n    settings.SCALE_MODE = SCALE_MODES.NEAREST;\n    this.ticker.add(this.tick.bind(this));\n\n    const interaction = (this.renderer.plugins as RendererPlugins).interaction;\n    interaction.moveWhenInside = true;\n\n    // Workaround for outside events not firing due to pixi.js#4608\n    // Passes outside events to children\n    interaction.on('pointerup', (e: interaction.InteractionEvent) => {\n      function passEvent(obj: DisplayObject, trigger: boolean) {\n        if (trigger && obj.interactive) {\n          e.currentTarget = obj;\n          obj.emit('pointerupoutside', e);\n        }\n        if (obj.interactiveChildren && (obj as Container).children) {\n          const doTrigger = trigger || !!obj.mask || !!obj.hitArea;\n          for (const child of (obj as Container).children)\n            passEvent(child, doTrigger);\n        }\n      }\n      passEvent(this.stage, false);\n    });\n  }\n\n  private _states: GameState[] = [];\n  public get state(): GameState | null { return this._states[this._states.length - 1] || null; }\n  public async pushState(next: GameState) {\n    if (this.state) {\n      await this.state.pause();\n      this.state.root.hitArea = Rectangle.EMPTY;\n    }\n    this._states.push(next);\n    this.root.addChild(next.root);\n    await next.enter();\n  }\n  public async popState() {\n    if (this.state) {\n      await this.state.leave();\n      this.root.removeChild(this.state.root);\n      this._states.pop();\n    }\n    if (this.state) {\n      this.state.root.hitArea = null as any;\n      await this.state.resume();\n    }\n  }\n  public async topState(next: GameState) {\n    await this.popState();\n    await this.pushState(next);\n  }\n\n  private tick() {\n    this.state && this.state.update(this.ticker.elapsedMS);\n    TWEEN.update();\n    this.keyboard.update();\n    this.toolTip.update();\n  }\n\n  public render() {\n    this.state && this.state.layout();\n    this.toolTip.layout();\n    this.dragDrop.layout();\n    super.render();\n  }\n\n  public readonly resources: Record<string, any> = {};\n  public readonly keyboard = new Keyboard(this.view);\n  public readonly toolTip = new ToolTip(this);\n  public readonly dragDrop = new DragDrop(this);\n}","export const MapSize = 2048;\nexport const Seed: string = '';\nexport const UIScaleFactor = 2;\nexport const DisplayTileSize = 64;","import { bootstrap } from 'app/bootstrap';\nimport { StatePreload } from 'app/states';\nimport { App } from 'app/App';\nexport * from 'app/App';\nexport * from 'app/settings';\n\nconst app = bootstrap(new App());\napp.pushState(new StatePreload(app));\nObject.assign(window, { app });","import { glMatrix } from 'gl-matrix';\nimport { Application } from 'pixi.js';\nimport * as Stats from 'stats.js';\nimport * as vexDialog from 'vex-dialog';\nimport * as vex from 'vex-js';\n\nimport 'vex-js/dist/css/vex-theme-plain.css';\nimport 'vex-js/dist/css/vex.css';\nimport './styles.css';\n\nexport function bootstrap<App extends Application>(app: App) {\n  document.body.appendChild(app.view);\n\n  function resize() {\n    const width = window.innerWidth;\n    const height = window.innerHeight;\n    app.renderer.resize(width, height);\n  }\n  window.onresize = resize;\n  resize();\n\n  const stats = new Stats();\n  document.body.appendChild(stats.dom);\n  const _update = app.ticker.update;\n  app.ticker.update = (...args: any[]) => {\n    stats.begin();\n    _update.apply(app.ticker, args);\n    stats.end();\n  };\n\n  glMatrix.setMatrixArrayType(Float64Array);\n\n  vex.registerPlugin(vexDialog);\n  vex.defaultOptions.className = 'vex-theme-plain';\n\n  return app;\n}\n","import { App } from 'app';\nimport { GameState } from 'app/states/GameState';\nimport { StateTitle } from 'app/states/StateTitle';\nimport { fadeOut } from 'app/utils/animations';\nimport * as FontFaceObserver from 'fontfaceobserver';\nimport { loaders, Text } from 'pixi.js';\n\nexport class StatePreload extends GameState {\n  public get name() { return 'preload'; }\n\n  private loadingText = new Text('loading...\\n', {\n    fill: 'white',\n    fontSize: 14,\n    lineHeight: 20,\n    align: 'center',\n  });\n\n  constructor(app: App) {\n    super(app);\n    this.root.addChild(this.loadingText);\n  }\n\n  async enter() {\n    this.run();\n  }\n\n  layout() {\n    this.loadingText.x = (this.app.screen.width - this.loadingText.width) / 2;\n    this.loadingText.y = (this.app.screen.height - this.loadingText.height) / 2;\n  }\n\n  private run() {\n    const loader = this.app.loader;\n    const progressHandler = loader.onProgress.add(() => {\n      this.loadingText.text = `loading...\\n${Math.round(loader.progress)}%`;\n    });\n\n    const context = require.context('assets', true, /.*/);\n    for (const key of context.keys()) {\n      const match = /^\\.\\/(.*)\\.(.*)$/.exec(key);\n      if (!match) continue;\n\n      const [, name, ext] = match;\n      if (name.startsWith('sprites/')) {\n        if (ext === 'json')\n          loader.add(name, key);\n      } else {\n        loader.add(name, context(key));\n      }\n    }\n\n    loader.pre((res: loaders.Resource, next: () => void) => {\n      if (res.name.startsWith('sprites/') && res.extension === 'json') {\n        res.type = loaders.Resource.TYPE.JSON;\n        res.data = context(res.url);\n        res.data.meta.image = `../${context(`./sprites/${res.data.meta.image}`)}`;\n        res.complete();\n      }\n      next();\n    });\n\n    const fontLoad = Promise.all([\n      new FontFaceObserver('Unibody8Pro').load(),\n      new FontFaceObserver('Unibody8Pro', { weight: 'bold' }).load(),\n      new FontFaceObserver('Unibody8Pro', { style: 'italic' }).load(),\n    ]);\n\n    loader.load(async (_: any, resources: Record<string, loaders.Resource>) => {\n      loader.onProgress.detach(progressHandler);\n\n      for (const name of Object.keys(resources)) {\n        const resource = resources[name];\n        if (resource.type === loaders.Resource.TYPE.JSON &&\n          !(resource as any)['spritesheet']) {\n          this.app.resources[name] = resource.data;\n        }\n      }\n\n      await fontLoad;\n      await fadeOut(this.root).toPromise();\n      await this.app.topState(new StateTitle(this.app));\n    });\n  }\n}","module.exports = __webpack_public_path__ + \"assets/36da4bca0fcaf1b4230ba4d64a98851a.png\";","module.exports = __webpack_public_path__ + \"assets/c229e891deb9f6d9f1cf520062c124d3.png\";","module.exports = __webpack_public_path__ + \"assets/e102be4e7a10df707aa4a623bb5d9ff1.png\";","module.exports = __webpack_public_path__ + \"assets/07731d168a36a9866b70d85faa0d807e.png\";","module.exports = __webpack_public_path__ + \"assets/8caa79760b88108cfa33ab29e21f0711.png\";","module.exports = __webpack_public_path__ + \"assets/14ee55c8b4b8c8dfb49322478df2f5a2.png\";","module.exports = __webpack_public_path__ + \"assets/cbecab81f1f8884a561e500b807c5d7d.png\";","module.exports = __webpack_public_path__ + \"assets/80d16f4a37bafae97d6525bd52105580.png\";","module.exports = __webpack_public_path__ + \"assets/b30d95b19a67c96aa17f568568cc3bea.png\";","module.exports = __webpack_public_path__ + \"assets/ec95783fec56e1e2460c4f37ad99afa0.png\";","module.exports = __webpack_public_path__ + \"assets/cd77bfe99eaf472b92eeb4aedfadc9ef.png\";","var map = {\n\t\"./fonts/Unibody8Pro-Bold.otf\": 186,\n\t\"./fonts/Unibody8Pro-Regular.otf\": 187,\n\t\"./fonts/Unibody8Pro-RegularItalic.otf\": 185,\n\t\"./fonts/unscii-16.woff\": 184,\n\t\"./sprites/dragons.json\": 239,\n\t\"./sprites/dragons.png\": 238,\n\t\"./sprites/effects.json\": 237,\n\t\"./sprites/effects.png\": 236,\n\t\"./sprites/equipment.json\": 235,\n\t\"./sprites/equipment.png\": 234,\n\t\"./sprites/items.json\": 233,\n\t\"./sprites/items.png\": 232,\n\t\"./sprites/objects.json\": 231,\n\t\"./sprites/objects.png\": 230,\n\t\"./sprites/placeholder.json\": 229,\n\t\"./sprites/placeholder.png\": 228,\n\t\"./sprites/player.json\": 227,\n\t\"./sprites/player.png\": 226,\n\t\"./sprites/projectiles.json\": 225,\n\t\"./sprites/projectiles.png\": 224,\n\t\"./sprites/skeleton.json\": 223,\n\t\"./sprites/skeleton.png\": 222,\n\t\"./sprites/terrains.json\": 221,\n\t\"./sprites/terrains.png\": 220,\n\t\"./sprites/ui.json\": 219,\n\t\"./sprites/ui.png\": 218\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\tvar module = __webpack_require__(id);\n\treturn module;\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 240;","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".console {\\n  z-index: 10;\\n\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  width: 100%;\\n  height: 100%;\\n\\n  pointer-events: none;\\n  visibility: hidden;\\n  display: flex;\\n  flex-direction: column;\\n}\\n\\n.console *::selection {\\n  background: rgba(0, 0, 0, 0.25);\\n}\\n\\n.console.active {\\n  visibility: visible;\\n}\\n\\n.console * {\\n  cursor: default;\\n  font-family: Unscii;\\n  font-size: 32px;\\n  box-sizing: border-box;\\n}\\n\\n.con-log-box {\\n  flex: 1;\\n  position: relative;\\n}\\n\\n.con-log-scroll {\\n  position: absolute;\\n  left: 0;\\n  bottom: 0;\\n\\n  background: rgba(255, 255, 255, 0.6);\\n  width: 850px;\\n  max-height: 800px;\\n  pointer-events: auto;\\n\\n  overflow-y: auto;\\n}\\n\\n.con-log {\\n  padding: 4px;\\n  display: flex;\\n  flex-direction: column;\\n  width: 100%;\\n}\\n\\n.con-log:empty {\\n  padding: 0;\\n}\\n\\n.con-log-entry {\\n  display: block;\\n  padding: 4px;\\n  color: #000000;\\n  white-space: pre;\\n}\\n\\n.con-input {\\n  height: 64px;\\n  width: 100%;\\n\\n  background: rgba(255, 255, 255, 0.6);\\n  color: #000000;\\n  outline: none;\\n  border: none;\\n  border-top: 1px solid #202020;\\n  padding: 16px;\\n  pointer-events: auto;\\n}\", \"\"]);\n\n// exports\n","\nvar content = require(\"!!../../../../node_modules/css-loader/index.js!./console.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/index.js!./console.css\", function() {\n\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/index.js!./console.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","export interface EffectDef {\n  readonly name: string;\n  readonly description: string;\n  readonly visible: boolean;\n}\n\nexport namespace EffectDef {\n  export enum Type {\n    Stunned = 'stunned',\n    Knockback = 'knockback',\n    KnockbackResist = 'knockback-resist',\n\n    Heal = 'heal',\n    Damage = 'damage',\n    Regen = 'regen',\n    Poison = 'poison',\n\n    Strength = 'strength',\n    Weakness = 'weakness',\n    Resistance = 'resistance',\n    DefBreak = 'def-break',\n    Speed = 'speed',\n    Slowness = 'slowness',\n    VitalityUp = 'vit-up',\n    VitalityDown = 'vit-down',\n  }\n}\n\nfunction effect(name: string, description: string, visible = true): EffectDef {\n  return { name, description, visible };\n}\n\nexport const Effects: Record<EffectDef.Type, EffectDef> = {\n  // technical effects\n  [EffectDef.Type.Stunned]: effect('Stunned', 'Cannot move or attack', false),\n  [EffectDef.Type.Knockback]: effect('Knockback', 'Cannot move', false),\n  [EffectDef.Type.KnockbackResist]: effect('Knockback Resistance', 'Resist knockback', false),\n\n  // actual effects\n  [EffectDef.Type.Heal]: effect('Heal', 'Recover <power> HP', false),\n  [EffectDef.Type.Damage]: effect('Damage', 'Damage <power> HP', false),\n  [EffectDef.Type.Regen]: effect('Regeneration', 'Recover <power> HP regularly'),\n  [EffectDef.Type.Poison]: effect('Poison', 'Lose <power> HP regularly'),\n  [EffectDef.Type.Strength]: effect('Strength', 'Increase strength by <power>'),\n  [EffectDef.Type.Weakness]: effect('Weakness', 'Decrease strength by <power>'),\n  [EffectDef.Type.Resistance]: effect('Resistance', 'Increase defense by <power>'),\n  [EffectDef.Type.DefBreak]: effect('Defense Break', 'Decrease defense by <power>'),\n  [EffectDef.Type.Speed]: effect('Speed', 'Increase speed by <power>'),\n  [EffectDef.Type.Slowness]: effect('Slowness', 'Decrease speed by <power>'),\n  [EffectDef.Type.VitalityUp]: effect('Vitality Up', 'Increase vitality by <power>'),\n  [EffectDef.Type.VitalityDown]: effect('Vitality Down', 'Decrease vitality by <power>'),\n};","import { Aspect, Effect } from 'common/data';\nimport { computeEffects, makeEffect } from 'common/logic/effect/common';\nimport { EffectDef } from 'data/effects';\nimport { ElementDef } from 'data/elements';\n\nfunction computeEffect(element: string, strength: number, strengths: Record<string, number>) {\n  switch (element) {\n    case ElementDef.Type.Life:\n    case ElementDef.Type.Recovery: {\n      let amount = strength * 100;\n      if (element === ElementDef.Type.Life)\n        amount *= 0.5;\n\n      let duration = 0;\n      if (strengths[ElementDef.Type.Time] > strength * 0.5) {\n        duration = strengths[ElementDef.Type.Time] * 30000;\n        amount = amount / duration * 1500;\n        return makeEffect(EffectDef.Type.Regen, amount, duration);\n      } else {\n        return makeEffect(EffectDef.Type.Heal, amount, 0);\n      }\n    }\n    case ElementDef.Type.Void:\n    case ElementDef.Type.Injury: {\n      let amount = strength * 50;\n      if (element === ElementDef.Type.Void)\n        amount *= 0.3;\n\n      let duration = 0;\n      if (strengths[ElementDef.Type.Time] > strength * 0.5) {\n        duration = strengths[ElementDef.Type.Time] * 20000;\n        amount = amount / duration * 1500;\n        return makeEffect(EffectDef.Type.Poison, amount, duration);\n      } else {\n        return makeEffect(EffectDef.Type.Damage, amount, 0);\n      }\n    }\n    case ElementDef.Type.Defense: {\n      let amount = strength * 50;\n\n      if (strengths[ElementDef.Type.Void] > strength * 0.5)\n        return makeEffect(EffectDef.Type.DefBreak, amount, 10000);\n      else\n        return makeEffect(EffectDef.Type.Resistance, amount, 10000);\n    }\n    case ElementDef.Type.Motion: {\n      let amount = strength * 50;\n\n      return makeEffect(EffectDef.Type.Speed, amount, 10000);\n    }\n    case ElementDef.Type.Frost:\n    case ElementDef.Type.Capture: {\n      let amount = strength * 50;\n      if (element === ElementDef.Type.Capture)\n        amount *= 1.5;\n\n      return makeEffect(EffectDef.Type.Slowness, amount, 10000);\n    }\n    case ElementDef.Type.Energy: {\n      let amount = strength * 25;\n\n      return makeEffect(EffectDef.Type.Strength, amount, 10000);\n    }\n    case ElementDef.Type.Weakness: {\n      let amount = strength * 25;\n\n      return makeEffect(EffectDef.Type.Weakness, amount, 10000);\n    }\n  }\n}\n\nexport function compute(aspects: Aspect[]): Effect[] {\n  return computeEffects(aspects, computeEffect);\n}","var escape = require(\"../../node_modules/css-loader/lib/url/escape.js\");\nexports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"html,\\nbody {\\n  height: 100%;\\n  width: 100%;\\n  margin: 0;\\n  padding: 0;\\n  background: #202020;\\n  overflow: hidden;\\n}\\n\\n.vex * {\\n  font-family: Unscii !important;\\n  font-weight: bold !important;\\n  font-size: 16px !important;\\n}\\n\\ncanvas {\\n  image-rendering: crisp-edges;\\n  image-rendering: pixelated;\\n}\\n\\n@font-face {\\n  font-family: \\\"Unibody8Pro\\\";\\n  src: url(\" + escape(require(\"../../assets/fonts/Unibody8Pro-Regular.otf\")) + \") format(\\\"opentype\\\")\\n}\\n\\n@font-face {\\n  font-family: \\\"Unibody8Pro\\\";\\n  font-weight: bold;\\n  src: url(\" + escape(require(\"../../assets/fonts/Unibody8Pro-Bold.otf\")) + \") format(\\\"opentype\\\")\\n}\\n\\n@font-face {\\n  font-family: \\\"Unibody8Pro\\\";\\n  font-style: italic;\\n  src: url(\" + escape(require(\"../../assets/fonts/Unibody8Pro-RegularItalic.otf\")) + \") format(\\\"opentype\\\")\\n}\\n\\n@font-face {\\n  font-family: \\\"Unscii\\\";\\n  font-weight: bold;\\n  src: url(\" + escape(require(\"../../assets/fonts/unscii-16.woff\")) + \") format(\\\"woff\\\")\\n}\", \"\"]);\n\n// exports\n","\nvar content = require(\"!!../../node_modules/css-loader/index.js!./styles.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../node_modules/css-loader/index.js!./styles.css\", function() {\n\t\tvar newContent = require(\"!!../../node_modules/css-loader/index.js!./styles.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","export interface ElementDef {\n  readonly tier: number;\n  readonly name: string;\n  readonly composition?: [string, string];\n}\n\nexport namespace ElementDef {\n  export const MaxTier = 3;\n  export enum Type {\n    Fire = 'Fire',\n    Water = 'Water',\n    Order = 'Order',\n    Chaos = 'Chaos',\n\n    Void = 'Void',\n    Light = 'Light',\n    Energy = 'Energy',\n    Frost = 'Frost',\n    Motion = 'Motion',\n    Life = 'Life',\n\n    Defense = 'Defense',\n    Recovery = 'Recovery',\n    Time = 'Time',\n    Explosion = 'Explosion',\n    Injury = 'Injury',\n    Darkness = 'Darkness',\n    Weakness = 'Weakness',\n    Spirit = 'Spirit',\n    Capture = 'Capture',\n\n    Sense = 'Sense',\n    Absorption = 'Absorption',\n    Cognition = 'Cognition',\n    Deception = 'Deception',\n  }\n}\n\nfunction element(\n  tier: number, name: ElementDef.Type,\n  composition?: [ElementDef.Type, ElementDef.Type]\n): ElementDef {\n  return {\n    tier,\n    name,\n    composition\n  };\n}\n\nexport const Elements: ElementDef[] = [\n  element(0, ElementDef.Type.Fire),\n  element(0, ElementDef.Type.Water),\n  element(0, ElementDef.Type.Order),\n  element(0, ElementDef.Type.Chaos),\n\n  element(1, ElementDef.Type.Void, [ElementDef.Type.Fire, ElementDef.Type.Water]),\n  element(1, ElementDef.Type.Light, [ElementDef.Type.Fire, ElementDef.Type.Order]),\n  element(1, ElementDef.Type.Energy, [ElementDef.Type.Fire, ElementDef.Type.Chaos]),\n  element(1, ElementDef.Type.Frost, [ElementDef.Type.Water, ElementDef.Type.Order]),\n  element(1, ElementDef.Type.Motion, [ElementDef.Type.Water, ElementDef.Type.Chaos]),\n  element(1, ElementDef.Type.Life, [ElementDef.Type.Order, ElementDef.Type.Chaos]),\n\n  element(2, ElementDef.Type.Defense, [ElementDef.Type.Order, ElementDef.Type.Void]),\n  element(2, ElementDef.Type.Recovery, [ElementDef.Type.Order, ElementDef.Type.Life]),\n  element(2, ElementDef.Type.Time, [ElementDef.Type.Order, ElementDef.Type.Motion]),\n  element(2, ElementDef.Type.Explosion, [ElementDef.Type.Chaos, ElementDef.Type.Energy]),\n  element(2, ElementDef.Type.Injury, [ElementDef.Type.Chaos, ElementDef.Type.Life]),\n  element(2, ElementDef.Type.Darkness, [ElementDef.Type.Void, ElementDef.Type.Light]),\n  element(2, ElementDef.Type.Weakness, [ElementDef.Type.Void, ElementDef.Type.Energy]),\n  element(2, ElementDef.Type.Spirit, [ElementDef.Type.Energy, ElementDef.Type.Life]),\n  element(2, ElementDef.Type.Capture, [ElementDef.Type.Frost, ElementDef.Type.Motion]),\n\n  element(3, ElementDef.Type.Sense, [ElementDef.Type.Motion, ElementDef.Type.Spirit]),\n  element(3, ElementDef.Type.Absorption, [ElementDef.Type.Recovery, ElementDef.Type.Spirit]),\n  element(3, ElementDef.Type.Cognition, [ElementDef.Type.Time, ElementDef.Type.Spirit]),\n  element(3, ElementDef.Type.Deception, [ElementDef.Type.Weakness, ElementDef.Type.Spirit]),\n];\n\nexport const ElementLookup: Record<string, ElementDef> =\n  Object.assign({}, ...Elements.map(elem => ({ [elem.name]: elem })));\n","import { lch } from 'chroma-js';\nimport { randomValue, RandomValue } from 'common/random';\n\nexport function blend(colors: { color: number, weight?: number }[]) {\n  const rgb = [0, 0, 0];\n  let total = 0;\n  for (const { color, weight } of colors) {\n    const elemColor = color;\n    const w = weight || 1;\n    rgb[0] += ((elemColor >> 16) & 0xff) * w;\n    rgb[1] += ((elemColor >> 8) & 0xff) * w;\n    rgb[2] += ((elemColor >> 0) & 0xff) * w;\n    total += w;\n  }\n  return (\n    (Math.floor(rgb[0] / total) << 16) +\n    (Math.floor(rgb[1] / total) << 8) +\n    (Math.floor(rgb[2] / total) << 0)\n  );\n}\n\nexport function random(lightness: RandomValue, chroma: RandomValue, random = Math.random) {\n  const h = random() * 360;\n  const l = randomValue(lightness, random) * 100;\n  const c = randomValue(chroma, random) * 100;\n  return lch(l, c, h).hex().substr(1);\n}","import { Aspect, Effect } from 'common/data';\nimport { MaxAspects } from 'common/logic/alchemy';\nimport { Effects, EffectDef } from 'data/effects';\nimport { fromPairs, round } from 'lodash';\n\nexport function scaleAspects(aspects: Aspect[], scale: number) {\n  return aspects.map(({ element, amount }) => ({ element, amount: amount * scale }));\n}\n\nexport function makeEffect(effect: EffectDef.Type, power: number, duration: number, element?: string): Effect {\n  power = Math.round(power);\n  duration = round(duration, -2);\n  const name = Effects[effect].name;\n  const description = Effects[effect].description.replace('<power>', power.toString()) +\n    (duration ? ` for ${round(duration / 1000)} seconds` : '');\n\n  return {\n    type: effect,\n    name, description,\n    power, element, duration\n  };\n}\n\nconst StrengthThreshold = 0.1;\n\nfunction computeStrength(amount: number, total: number) {\n  const purity = amount / total;\n  const power = Math.pow(amount / MaxAspects, 0.75);\n  const strength = purity * power;\n  return strength;\n}\n\ntype EffectComputer = (element: string, strength: number, strengths: Record<string, number>) => Effect | undefined;\nexport function computeEffects(aspects: Aspect[], compute: EffectComputer, threshold = StrengthThreshold): Effect[] {\n  let total = 0;\n  for (const { amount } of aspects) total += amount;\n\n  const strengths = fromPairs(aspects.map<[string, number]>(({ element, amount }) =>\n    [element, computeStrength(amount, total)]\n  ).sort((a, b) => b[1] - a[1]));\n\n  const effects: Effect[] = [];\n  for (const element of Object.keys(strengths)) {\n    const strength = strengths[element];\n    if (strength < threshold) continue;\n\n    const effect = compute(element, strength, strengths);\n    if (effect)\n      effects.push(effect);\n  }\n\n  return effects;\n}","/**\n@license Foswig.js | (c) Glenn Conner. | https://github.com/mrsharpoblunto/foswig.js/blob/master/LICENSE\n*/\n\n// Ported to TypeScript\n// Modified to accept custom random function\n\nclass Node {\n\treadonly neighbors: (Node | null)[] = [];\n\tconstructor(readonly character: string) { }\n}\n\nclass TrieNode {\n\treadonly children: Record<string, TrieNode> = {};\n}\n\nfunction addToDuplicatesTrie(word: string, duplicates: TrieNode) {\n\tif (word.length > 1) {\n\t\taddToDuplicatesTrie(word.substr(1), duplicates);\n\t}\n\n\tvar currentNode = duplicates;\n\tfor (var i = 0; i < word.length; ++i) {\n\t\tvar childNode = currentNode.children[word[i]];\n\t\tif (!childNode) {\n\t\t\tchildNode = new TrieNode();\n\t\t\tcurrentNode.children[word[i]] = childNode;\n\t\t}\n\t\tcurrentNode = childNode;\n\t}\n}\n\nfunction isDuplicate(word: string, duplicates: TrieNode) {\n\tword = word.toLowerCase();\n\tvar currentNode = duplicates;\n\tfor (var i = 0; i < word.length; ++i) {\n\t\tvar childNode = currentNode.children[word[i]];\n\t\tif (!childNode) return false;\n\t\tcurrentNode = childNode;\n\t}\n\treturn true;\n}\n\nexport class Foswig {\n\tprivate readonly duplicates = new TrieNode();\n\tprivate readonly start = new Node('');\n\tprivate readonly map: Record<string, Node> = {};\n\n\tconstructor(private readonly order: number) {\n\n\t}\n\n\taddWordsToChain(words: string[]) {\n\t\tfor (var i = 0; i < words.length; ++i) {\n\t\t\tthis.addWordToChain(words[i]);\n\t\t}\n\t}\n\n\taddWordToChain(word: string) {\n\t\taddToDuplicatesTrie(word.toLowerCase(), this.duplicates);\n\n\t\tvar previous = this.start;\n\t\tvar key = '';\n\t\tfor (var i = 0; i < word.length; ++i) {\n\t\t\tvar ch = word[i];\n\t\t\tkey += ch;\n\t\t\tif (key.length > this.order) {\n\t\t\t\tkey = key.substr(1);\n\t\t\t}\n\t\t\tvar newNode = this.map[key];\n\t\t\tif (!newNode) {\n\t\t\t\tnewNode = new Node(ch);\n\t\t\t\tthis.map[key] = newNode;\n\t\t\t}\n\n\t\t\tprevious.neighbors.push(newNode);\n\t\t\tprevious = newNode;\n\t\t}\n\t\t//link to end node.\n\t\tprevious.neighbors.push(null);\n\t}\n\n\tgenerateWord(minLength = 0, maxLength = -1, allowDuplicates = true, maxAttempts = 25, random = Math.random) {\n\t\tvar word;\n\t\tvar repeat;\n\t\tvar attempts = 0;\n\t\tdo {\n\t\t\trepeat = false;\n\t\t\tvar nextNodeIndex = Math.floor(random() * this.start.neighbors.length);\n\t\t\tvar currentNode = this.start.neighbors[nextNodeIndex];\n\t\t\tword = '';\n\n\t\t\twhile (currentNode && (maxLength < 0 || word.length <= maxLength)) {\n\t\t\t\tword += currentNode.character;\n\t\t\t\tnextNodeIndex = Math.floor(random() * currentNode.neighbors.length);\n\t\t\t\tcurrentNode = currentNode.neighbors[nextNodeIndex];\n\t\t\t}\n\t\t\tif (word.length > maxLength || word.length < minLength) {\n\t\t\t\trepeat = true;\n\t\t\t}\n\t\t}\n\t\t// we don't want to output any exact replicas from the input dictionary\n\t\twhile (repeat || (!allowDuplicates && ++attempts < maxAttempts && isDuplicate(word, this.duplicates)));\n\t\tif (attempts >= maxAttempts) {\n\t\t\tthrow new Error('Unable to generate a word with the given parameters after ' + attempts + ' attempts');\n\t\t}\n\t\treturn word;\n\t}\n}","import { Foswig } from 'common/lib/foswig';\nimport { SpeciesNames } from 'data/names';\nimport { startCase } from 'lodash';\n\nconst nameMarkov = new Foswig(3);\nnameMarkov.addWordsToChain(SpeciesNames);\n\nexport function generateName(min: number, max: number, random = Math.random) {\n  return startCase(nameMarkov.generateWord(min, max, false, undefined, random));\n}","// Dataset retrieved from wikidata\n// Licensed under CC0\n\nexport const SpeciesNames = [\n'abachi',\n'abacops',\n'abashicus',\n'abensis',\n'abetoneensis',\n'aboriscus',\n'abrictos',\n'abroscelis',\n'abrotocrinus',\n'absalomichthys',\n'abundum',\n'acalophaena',\n'acanthocladi',\n'acanthofemurilis',\n'acceia',\n'accusator',\n'aceroae',\n'achaeae',\n'achillae',\n'achtyca',\n'acinopterus',\n'acmeceps',\n'acmonia',\n'acochlidioida',\n'acompus',\n'acrasidae',\n'acroceuthes',\n'acropsis',\n'actaeifolium',\n'actileuca',\n'actinocalyx',\n'actinodontidae',\n'actinodurae',\n'acugni',\n'acunae',\n'acutipoditus',\n'acutiscutellum',\n'acutispinata',\n'adilophontes',\n'adornatalis',\n'adramitana',\n'advarians',\n'aedoea',\n'aemulatrix',\n'aeneocupreus',\n'aequiflexa',\n'aequilumata',\n'aericeps',\n'aerophilum',\n'aeroppia',\n'aeschynomene',\n'aethiopicodynerus',\n'aethodelphax',\n'aetosaurinae',\n'affaber',\n'afghanistanicum',\n'afreutreta',\n'afrobolivina',\n'afrogypsa',\n'afrojavanica',\n'afroscardia',\n'afrotremex',\n'agamarum',\n'aganacma',\n'aganipus',\n'agardhina',\n'agaricostilbales',\n'agastor',\n'agnina',\n'agnostos',\n'agolambrus',\n'agonismus',\n'agrabeeja',\n'agraptocoris',\n'aguanueva',\n'aguaytiella',\n'aguirreanus',\n'ahermodontus',\n'ahldreva',\n'ajubensis',\n'akaisialpina',\n'alakoliense',\n'alantika',\n'alarodia',\n'albifulgens',\n'albitarsus',\n'albius',\n'albocitrina',\n'albocitrinus',\n'albogriseella',\n'albolabratus',\n'aleata',\n'alecanopsis',\n'aleophilum',\n'aleuti',\n'algrizea',\n'alibertioides',\n'alitaeus',\n'allantois',\n'allarithmus',\n'alleocomatella',\n'allineata',\n'allolaterita',\n'allomorphinoides',\n'allotheca',\n'alloxacis',\n'almogaver',\n'alocypha',\n'alpigenes',\n'alsinastrum',\n'alsobacter',\n'alternicirrus',\n'alternimaculata',\n'altescandens',\n'altistrix',\n'alutellus',\n'alvariella',\n'alyeskaensis',\n'amamiconcha',\n'amantichitinum',\n'amaris',\n'amarygia',\n'amathimysis',\n'amazonicesa',\n'ambita',\n'ambovestita',\n'americorophium',\n'ametroides',\n'amidalae',\n'amideta',\n'amisadaiae',\n'ammobium',\n'amoebophryaceae',\n'ampelioides',\n'ampelopsisella',\n'amphiascus',\n'amphiheloides',\n'ampliator',\n'amplicolle',\n'amyntula',\n'amyris',\n'anafense',\n'anagastus',\n'anancosorius',\n'anaperidae',\n'anargyrtes',\n'anarsiae',\n'anathyrsa',\n'anatotitan',\n'anchises',\n'ancistrifolia',\n'ancistrocladus',\n'ancylostomia',\n'ancylus',\n'ancystropodium',\n'anderisus',\n'andocidia',\n'andranotobakensis',\n'anendopodia',\n'anepsirhizomys',\n'aneuvittata',\n'angraecinae',\n'angusticincta',\n'angusticlavius',\n'angustilamella',\n'angustimembranus',\n'angustiplatus',\n'anheteromeyenia',\n'anillochlamys',\n'anischiinae',\n'anisopaulax',\n'ankarapithecus',\n'ankaratrotrox',\n'ankylodon',\n'annaimallaiensis',\n'anodontophora',\n'anodorhynchus',\n'anonera',\n'anorhaebus',\n'antarxata',\n'antelientomon',\n'antennulata',\n'anteos',\n'anteridata',\n'anthepiscopus',\n'anthicimorphus',\n'antibodies',\n'antiincrescens',\n'antillanorchis',\n'antipoloensis',\n'antistydatusa',\n'anurophylla',\n'anxioides',\n'anydrophilini',\n'anyllis',\n'aonidiae',\n'apaloxylon',\n'apameina',\n'apanthuropsis',\n'apechthes',\n'aphaenogasteroides',\n'aphiocephalus',\n'apicealba',\n'apicinigrella',\n'apicobystra',\n'apinae',\n'apiocystinae',\n'aplysinellidae',\n'apocarpum',\n'apogonis',\n'apomastus',\n'aponius',\n'aposteira',\n'apparicianum',\n'apparitrix',\n'appressihirtus',\n'apricans',\n'apsilinae',\n'apteralium',\n'apterobrachys',\n'apterygodonia',\n'apterygon',\n'aqualupianus',\n'aquinia',\n'arabesca',\n'arachoides',\n'araracuarae',\n'aravanense',\n'arawakorum',\n'arceuthoides',\n'archangelskii',\n'archeosetus',\n'archichthys',\n'archicnephasia',\n'archiphysa',\n'architectonicacea',\n'archocelis',\n'archolabus',\n'arcidopsis',\n'arcifera',\n'arctopacifica',\n'ardeola',\n'ardesia',\n'arduous',\n'arenonionella',\n'argentae',\n'argopus',\n'argusmontana',\n'argutana',\n'argyrothrix',\n'ariantinae',\n'arigonis',\n'arilaringa',\n'ariphanarthra',\n'aristeis',\n'aristosquamosa',\n'arkarua',\n'armoracioides',\n'arnoldi',\n'arrawarricum',\n'arrhythmopis',\n'artaversala',\n'artemisifolium',\n'artericus',\n'artodiscus',\n'artoventris',\n'artumbilicatum',\n'arturoana',\n'arutunjani',\n'aselliata',\n'asestra',\n'ashlaiana',\n'aspenitinae',\n'aspidophryxus',\n'aspidopora',\n'asprospilos',\n'assimulatana',\n'asterosporiaceae',\n'astrapetes',\n'astraspida',\n'asturasoma',\n'asymmetrarcha',\n'asymmetrurus',\n'ateleopodidae',\n'atilia',\n'atractosteus',\n'atraphaxifolius',\n'atringa',\n'atrivaria',\n'atroclypeata',\n'atroviridaria',\n'attenata',\n'atypicalis',\n'atypicus',\n'audeti',\n'audreia',\n'aulacoceras',\n'aulorhynchidae',\n'aulosaphoides',\n'aurataeformis',\n'aurearenaceae',\n'aurilineata',\n'aussiorum',\n'australiphemeridae',\n'australodaphnia',\n'australosphenida',\n'austrinata',\n'austroagrion',\n'austrohormiini',\n'austrokarelicus',\n'autarchoglossa',\n'avarus',\n'avelingiae',\n'avuncula',\n'axnpelopsis',\n'azotostoma',\n'babaensis',\n'baborensis',\n'babukellinae',\n'bacarum',\n'backusella',\n'badiifolia',\n'badiusalis',\n'baehnii',\n'baeoptila',\n'baeosomus',\n'baeotica',\n'baicalinella',\n'baiochii',\n'bakeri',\n'balanarcha',\n'balchhi',\n'balingiti',\n'baliogaster',\n'balliana',\n'baltimoriana',\n'balvei',\n'bambusioides',\n'bamiani',\n'bampurius',\n'bancroftianus',\n'bankoi',\n'baracoalis',\n'barattolites',\n'barbeliana',\n'barbillana',\n'bareinus',\n'barksdalei',\n'barnebianum',\n'baroringensis',\n'barsac',\n'barsakelmes',\n'barskovi',\n'basibulbus',\n'basilisi',\n'basipecten',\n'basipterini',\n'basirei',\n'bastardoanus',\n'bathrogramma',\n'bathycranium',\n'batocaulon',\n'batomys',\n'beatleyae',\n'beaumontianus',\n'bebile',\n'bedeshai',\n'bedfordianus',\n'beharii',\n'beketi',\n'bellera',\n'bellicula',\n'beloti',\n'benacoceras',\n'beneluzi',\n'benignalis',\n'bergenhayni',\n'berlandiella',\n'berlesedesmus',\n'berlinafricanus',\n'bermudagidiella',\n'bernalei',\n'bertarollae',\n'bethelium',\n'betonicifolium',\n'betschi',\n'betsiloensis',\n'biapertura',\n'bibbia',\n'bibiolona',\n'biblianum',\n'bibractella',\n'bicelli',\n'biceropsis',\n'bicophaga',\n'bicornuatus',\n'bicucullus',\n'bidenticeps',\n'bidentulum',\n'bidiense',\n'bidiscus',\n'bifidentata',\n'biincisa',\n'bilirana',\n'biloborostratus',\n'bilsana',\n'bimucronota',\n'biobessa',\n'biparta',\n'bipartipes',\n'biramulata',\n'biritika',\n'birnovensis',\n'biruncinata',\n'bisbimaculata',\n'bismila',\n'bispirale',\n'bissexnotata',\n'bistrigata',\n'biuterinus',\n'blaesodactylus',\n'blakesleeanus',\n'blaseii',\n'blattinopsidae',\n'bleura',\n'bocasdeltoroensis',\n'bodmeri',\n'boingaei',\n'bojamyces',\n'bokariana',\n'bolivaria',\n'bolodon',\n'bolsaticus',\n'bombacoideae',\n'bombella',\n'bonaducecytheridae',\n'bonaia',\n'bononiensis',\n'bonplandius',\n'bonseyi',\n'bonzia',\n'boopsis',\n'borderii',\n'borealia',\n'borealotodus',\n'boreococcus',\n'boripat',\n'borneichus',\n'bornesalpinia',\n'bosmani',\n'bosniaca',\n'bosniscus',\n'bothriospermum',\n'bouchardii',\n'bourgeana',\n'bouvetia',\n'brachylaminata',\n'brachyloma',\n'brachyneuroides',\n'brachyosoma',\n'brachypezoides',\n'brachypharyngeus',\n'bracteantha',\n'bracteolaris',\n'bradburya',\n'bradys',\n'brancaefolia',\n'brasileanus',\n'brassica',\n'brassicata',\n'brausei',\n'brevibeccus',\n'brevicoccus',\n'brevidens',\n'brevilamellata',\n'brevipatellatus',\n'brevipilus',\n'breviscopa',\n'brevispineus',\n'brillanceausuchidae',\n'brissonii',\n'brochopaga',\n'brongniardellus',\n'brossardia',\n'broughi',\n'brownelli',\n'brujitavirus',\n'brunneicollis',\n'brunneopunctata',\n'brunneotomentosa',\n'brunnibasis',\n'brusinia',\n'bryonioides',\n'bubonifolium',\n'bubulla',\n'bucaniellidae',\n'buchholzianum',\n'buchubergense',\n'bucina',\n'bucinaria',\n'buckara',\n'bucolinus',\n'buddleiifolius',\n'buekkense',\n'bulimorpha',\n'bulleri',\n'buriasense',\n'bursalobata',\n'burukovskii',\n'butalidella',\n'buttelreepeni',\n'butyraceum',\n'buxella',\n'bwambae',\n'byctisculus',\n'cacatuopyga',\n'cactaceae',\n'cadetiiflorum',\n'caeluronigricans',\n'caeruleonotatus',\n'caesariana',\n'cailloli',\n'calamosternus',\n'calapodium',\n'calcedoniae',\n'calcehtokanus',\n'calceolariopsis',\n'calculata',\n'calhypnorna',\n'caliginum',\n'calilestes',\n'callacallanum',\n'callichthyinae',\n'callidrepana',\n'calligetus',\n'callinivalis',\n'callitricha',\n'calloplesiops',\n'callosphingia',\n'calodectes',\n'calogramma',\n'calonalis',\n'calotemognatha',\n'calvulum',\n'calyptophyllum',\n'calyptosuchus',\n'camaronensis',\n'cambaroides',\n'camdenensis',\n'camelaria',\n'camellia',\n'camerobia',\n'cameroon',\n'campanopsis',\n'camptochaeta',\n'camptozada',\n'canalicata',\n'cancanae',\n'cancerae',\n'candybus',\n'caniripes',\n'cantiana',\n'capillataspora',\n'capnobotes',\n'capsae',\n'capsaspora',\n'caputabnormis',\n'capysoides',\n'caracasica',\n'carbina',\n'carcani',\n'cardiopygus',\n'cardonii',\n'carduiforis',\n'cardwellia',\n'carettalis',\n'caricae',\n'carinifer',\n'carinulorbis',\n'carlopeltis',\n'carlosfeliui',\n'carmara',\n'carnifrons',\n'caroli',\n'carpodeti',\n'carria',\n'carrii',\n'carrizalense',\n'cartalloides',\n'carteretensis',\n'carthagoensis',\n'caryonodini',\n'cassubiciformis',\n'castanes',\n'castensis',\n'castilliaria',\n'catantopsilus',\n'catapionus',\n'cataplectica',\n'cataspilates',\n'catenata',\n'catops',\n'catopysops',\n'caucasicola',\n'caucasicus',\n'caudapinniger',\n'caudatispora',\n'caudifolium',\n'caulokaempferia',\n'cavadoensis',\n'cavalerieana',\n'cavedanus',\n'caviunas',\n'cebudonus',\n'cecidostiba',\n'cecidothyris',\n'cecropioides',\n'celeripes',\n'cellariiforme',\n'cemiostominae',\n'centenaria',\n'centicola',\n'centrimacula',\n'centrirufa',\n'centroonoceras',\n'centropristis',\n'centrovarioplanidae',\n'cephali',\n'ceradocus',\n'ceratinostoma',\n'ceratoclada',\n'ceratosebacina',\n'cerbvina',\n'cerchysiella',\n'cercomorphus',\n'cercopionidae',\n'ceriaeforme',\n'cerozona',\n'cerrioides',\n'cestrus',\n'cetibeli',\n'cetratus',\n'ceylonensis',\n'chabriosoma',\n'chaetostephanidae',\n'chaetozone',\n'chalarocladum',\n'chalcocnemis',\n'chalybe',\n'chamaepeuce',\n'chamelaensis',\n'chamisis',\n'charadropsyche',\n'charamaensis',\n'charapensis',\n'chariesthes',\n'charlei',\n'charleswerneri',\n'charmus',\n'chasmagnathus',\n'chauliopleurus',\n'chelon',\n'chelyoidea',\n'chelysida',\n'chernyshinellinae',\n'chetyson',\n'chihpenensis',\n'chihuahuanae',\n'chilesi',\n'chillanensis',\n'chillcottiana',\n'chilognatha',\n'chilophus',\n'chilostomella',\n'chilostomellina',\n'chionothrix',\n'chirieanum',\n'chiroderma',\n'chirophylla',\n'chisochetonia',\n'chisternon',\n'chlerogella',\n'chloraeformis',\n'chloraria',\n'chlorocurtis',\n'choerognathus',\n'chommati',\n'chondrolepis',\n'chondrorhynchus',\n'chorodoxa',\n'chrestobunus',\n'chromelosporium',\n'chromocentrum',\n'chronosemium',\n'chrysma',\n'chrysocelis',\n'chrysochaetum',\n'chrysomeloides',\n'chrysomus',\n'chrysonus',\n'chrysopotama',\n'chuangchihi',\n'chyrmangensis',\n'cicadellopsis',\n'cicatricosulus',\n'cinachyrella',\n'cinereovariegatus',\n'cinnyris',\n'cintaromorpha',\n'circassian',\n'circumflexum',\n'citharexifolia',\n'cladiellae',\n'cladophila',\n'cladoscenium',\n'clamans',\n'clararia',\n'claricolor',\n'clarilimbata',\n'clarimargo',\n'clavaeforme',\n'clavidives',\n'cleghornia',\n'cleonolithus',\n'clethropsis',\n'clinacanthus',\n'clinomochla',\n'cliochloria',\n'clivina',\n'clorindae',\n'clymenicola',\n'clypeinitens',\n'clyton',\n'cnemodes',\n'coagerus',\n'coamensis',\n'cobreensis',\n'coburni',\n'cocalina',\n'coccocephalichthys',\n'coccomyxa',\n'cochabambina',\n'cochleasvorax',\n'codioides',\n'codites',\n'coelositona',\n'coelostomidiidae',\n'coeruleata',\n'coeruleofuscus',\n'coerulipennis',\n'cognatocompressus',\n'coihuensis',\n'coldeniae',\n'colensoica',\n'coleocacamus',\n'coleocanis',\n'coleophorinae',\n'colerolumnus',\n'colita',\n'collarigera',\n'collartinus',\n'collativus',\n'collectiva',\n'collinsonae',\n'colocleora',\n'colomai',\n'colopha',\n'colorada',\n'coloradus',\n'colpotriplicis',\n'colynis',\n'comani',\n'comarilis',\n'commonae',\n'comocephalum',\n'comoliopsis',\n'companyoi',\n'compotrix',\n'compsogene',\n'concanicus',\n'concarenae',\n'condate',\n'conexibacter',\n'confertiserratum',\n'conflata',\n'congrogadus',\n'conicella',\n'conicibaccata',\n'conicospermium',\n'coniocera',\n'conlara',\n'conobrosis',\n'conoclinium',\n'consanguinea',\n'conspectus',\n'constrictatus',\n'contacris',\n'contentious',\n'contristans',\n'conyzicola',\n'coocoo',\n'coonorensis',\n'cooperrideri',\n'coorilla',\n'copidoplana',\n'copromorpha',\n'coprosmifolia',\n'coptotomus',\n'copturus',\n'coracina',\n'coraeophos',\n'corallicarpus',\n'corallicola',\n'coraniana',\n'coritanica',\n'coronostylus',\n'corpesiensis',\n'correctata',\n'corrivalis',\n'corroboreethrips',\n'corticicolus',\n'corupella',\n'corussans',\n'corymbuloides',\n'coryneaceae',\n'coryphophylax',\n'cosmemosignatum',\n'cossmannica',\n'costosyrnola',\n'cotanda',\n'cotinaea',\n'couleruana',\n'cousiniopsis',\n'coutume',\n'coventinae',\n'coxitinae',\n'crangonoides',\n'craniella',\n'crassepupillata',\n'crassesignata',\n'crassidens',\n'crassoascus',\n'crastina',\n'craterantha',\n'craterelloides',\n'craterocephala',\n'cratocechenus',\n'crebrifolius',\n'crenoliratus',\n'cribripuga',\n'criconemoides',\n'cricophera',\n'crinonia',\n'crisae',\n'cristatoides',\n'cristinae',\n'critheus',\n'crocogastra',\n'crocomela',\n'cronartiaceae',\n'crotolitha',\n'crouzeti',\n'crowelli',\n'cruentipellis',\n'cruranthura',\n'crypsicola',\n'cryptarthria',\n'cryptocystidiatum',\n'cryptolimifrons',\n'cryptopecten',\n'cryptophasa',\n'cryptophlebiae',\n'cryptophthalma',\n'cryptophysoderes',\n'cryptosporina',\n'crytochilus',\n'ctenoimbricata',\n'cuatro',\n'cucharas',\n'cuculidae',\n'cuculliae',\n'cucumerina',\n'cuiabai',\n'culama',\n'cultrigaster',\n'cumbasonum',\n'cumminsiella',\n'cuneilobatus',\n'cunninghamianum',\n'cupreochalybea',\n'curtiaristatus',\n'curticrus',\n'curtilamellata',\n'curviformis',\n'curvipenis',\n'cyanochlorus',\n'cyclodesma',\n'cycloneuralia',\n'cyclosora',\n'cyclotis',\n'cycnoderus',\n'cydistinae',\n'cylindrocarpus',\n'cymatocarpus',\n'cymbriaella',\n'cymophorus',\n'cynanchiflorum',\n'cynedesmus',\n'cynoctoni',\n'cyphoderia',\n'cyphoderiidae',\n'cypridinoidea',\n'cyrenida',\n'cytherissinellidae',\n'dactylopteni',\n'daedalia',\n'dallicordiidae',\n'dalpia',\n'dalquesti',\n'daltoniaecarpa',\n'damalinia',\n'dasycnemis',\n'dasycrotapha',\n'dasypogonini',\n'davidsoniae',\n'dayaoshan',\n'deasonia',\n'debalsaci',\n'debrajiana',\n'decaphalangium',\n'deciduana',\n'declivitatum',\n'decorites',\n'decorticata',\n'deflectus',\n'deitersi',\n'dekkanus',\n'delclosia',\n'deliquum',\n'deloachorum',\n'deltavjatia',\n'dendroarabis',\n'dendronephthyphagus',\n'deniseae',\n'densibracteata',\n'densiserratus',\n'densisorum',\n'dentatherinidae',\n'denticollaris',\n'denticulalis',\n'denticulipes',\n'depressiferus',\n'derasocobaltinus',\n'dercylini',\n'derecyrtini',\n'derica',\n'derouetae',\n'desaussurei',\n'desertibacter',\n'desmaresti',\n'desmoceratoides',\n'destacar',\n'detris',\n'deuveiellum',\n'devauxi',\n'devergescens',\n'devignati',\n'diaboliella',\n'diachrysa',\n'diadocis',\n'diaeus',\n'dianaria',\n'dianxibeiensis',\n'diaphanocypris',\n'diaspros',\n'dicephalospora',\n'dichetophora',\n'dichilocraspedon',\n'dichodon',\n'dichotomica',\n'dickdellia',\n'dicolecia',\n'dictyostelida',\n'didymictis',\n'didymochrysis',\n'diensti',\n'difficilana',\n'digitalia',\n'digitata',\n'dilitara',\n'dilleriella',\n'dillwyniana',\n'dimisophria',\n'dimochla',\n'dimorphanthera',\n'dinocosma',\n'dinophasma',\n'diomediae',\n'dioryctriae',\n'dioscurea',\n'diotrophorus',\n'diploglyptus',\n'dipteridae',\n'dirfica',\n'dirias',\n'dischematalis',\n'discimita',\n'disciphania',\n'discodon',\n'discolia',\n'discospira',\n'discostromatidae',\n'discovery',\n'disiens',\n'disordinata',\n'dispar',\n'disparia',\n'disparicollis',\n'distata',\n'distentifolium',\n'ditrachybothridium',\n'ditrogalis',\n'diuturnus',\n'diversitermes',\n'docoglossa',\n'dolbyi',\n'dolerosa',\n'dolichoderinae',\n'dolichoderoides',\n'dolichoplectra',\n'dolichowithius',\n'dolioflagellomera',\n'dolliata',\n'doloisia',\n'dolosis',\n'dophora',\n'doratopsylla',\n'dorcasia',\n'dorkadiaria',\n'dormia',\n'doshman',\n'douglasprimusensis',\n'dracaeneae',\n'drilliola',\n'drilus',\n'dromidiopsis',\n'dromodromoa',\n'droogmaniana',\n'drucealis',\n'dryadonycteris',\n'dryocoetes',\n'dryocopinus',\n'dryptitae',\n'dszumrutensis',\n'duarctopoa',\n'duckworlhorum',\n'duclouxii',\n'dudleyae',\n'duliniae',\n'dulosus',\n'dunnya',\n'duospinum',\n'duplicornis',\n'duprixi',\n'durbana',\n'duskei',\n'dutkevichites',\n'dysgenopsyllus',\n'eatonella',\n'ebbelsii',\n'ebrius',\n'echeilea',\n'echelatus',\n'echigoana',\n'echinastra',\n'echinocephala',\n'echinorhynchida',\n'echinovirens',\n'echinuscodendrium',\n'echippigerum',\n'echonitor',\n'ectemnorhinus',\n'ectenesseca',\n'edanioi',\n'edaphosauridae',\n'edestus',\n'edetanum',\n'edithais',\n'efluxa',\n'egeana',\n'egestoides',\n'ehlersiae',\n'eiphasos',\n'ekatherinae',\n'eknomisis',\n'elassoctenus',\n'elbayensis',\n'electrocrania',\n'electrofuscus',\n'elerobi',\n'eleutherospermi',\n'elinguis',\n'elkoanus',\n'elleanthodiceras',\n'elliptifolium',\n'elongatobractea',\n'emarginelloides',\n'emblemaria',\n'emmiltos',\n'emydopidae',\n'enchalcoa',\n'enchodelium',\n'endochroa',\n'endophragmiopsis',\n'enicostemmatis',\n'entalinidae',\n'entomogonus',\n'entypus',\n'eomacropis',\n'eopsychops',\n'eorasaurus',\n'eoscapherpeton',\n'eoseira',\n'ephesiella',\n'epichalca',\n'epimetalla',\n'epitripta',\n'equisecta',\n'erebearia',\n'erenitus',\n'erennidae',\n'ergodes',\n'eriodictyonis',\n'ermienae',\n'errolichthyidae',\n'erythana',\n'erythraena',\n'erythromeris',\n'erythrorhamphos',\n'escoces',\n'esquamata',\n'esterhuysenianum',\n'etorofensis',\n'euanoma',\n'euathlus',\n'eucaudomyiidae',\n'euceratoneis',\n'euchana',\n'eueolidoidea',\n'eugraphis',\n'euloewiodoria',\n'eumeristis',\n'eumicrini',\n'euneuron',\n'eunomia',\n'euphysothrips',\n'euplectus',\n'eupolymorphinella',\n'eupulcher',\n'eupulmonata',\n'euritina',\n'euritmia',\n'eurukuttarus',\n'eurychlidonis',\n'eurychone',\n'eurygonia',\n'eurypilus',\n'eurystictus',\n'eurytiches',\n'eusemionopsis',\n'eusemoides',\n'eusisyrum',\n'eusyrophoxus',\n'eutetraphae',\n'eutrichiurides',\n'euzerconidae',\n'evonymella',\n'exasperatula',\n'excelens',\n'exclusaria',\n'excuratum',\n'exstipulatae',\n'extendorum',\n'eyipayipi',\n'eytelweinii',\n'ezodda',\n'fabespora',\n'fabianorum',\n'factoris',\n'faculta',\n'fadyenia',\n'fagacarus',\n'fagildei',\n'fagotiidae',\n'fajardi',\n'fakfak',\n'falanense',\n'falcatalayex',\n'falcicarpae',\n'falciterebra',\n'falvisectalis',\n'fanseriae',\n'fastigiatoramosum',\n'fastigo',\n'faucibarbara',\n'faustiella',\n'favocassidulina',\n'favonicus',\n'favosifolium',\n'favositinae',\n'fellodistomidae',\n'femorata',\n'fenxli',\n'feraliini',\n'fernandezgarcesi',\n'ferrea',\n'ferreroi',\n'ferrobacteria',\n'ferwillemsei',\n'festulpia',\n'fibrinflatum',\n'fictitia',\n'fictrix',\n'fijianus',\n'fijivirus',\n'filamentata',\n'filamentosa',\n'filiformis',\n'fimbricoxa',\n'findens',\n'findersi',\n'flabellifera',\n'flabellopora',\n'flavangularis',\n'flavicurvata',\n'flavinucha',\n'flavispicum',\n'flavofemoratum',\n'flavopleuralis',\n'flavotaeniatus',\n'flavusella',\n'flectonotus',\n'fleurei',\n'flexicaulis',\n'flexiclymenia',\n'flexilissima',\n'flexistyloides',\n'floracoccus',\n'floravillensis',\n'floridicola',\n'florisi',\n'flustrina',\n'folliculata',\n'fontellana',\n'forelii',\n'foresteriana',\n'forillonaria',\n'foroiuliensis',\n'forskoehlii',\n'forticarinata',\n'fossidorsis',\n'fraglis',\n'franceii',\n'franzdaniela',\n'fraudulentaria',\n'fraudulosus',\n'freyomyia',\n'friedrichiae',\n'frisingensis',\n'fritzwagneria',\n'frolovia',\n'frutillaria',\n'fthiotidensis',\n'fuergiana',\n'fujiansis',\n'fukayai',\n'fukugakuchiana',\n'fulgidella',\n'fulvastrum',\n'fulvifusalis',\n'fulvobrunnea',\n'fulvohirtum',\n'fulvomarginatus',\n'fumigans',\n'fumoferalis',\n'furcatus',\n'furculana',\n'furnishinidae',\n'fuscatrix',\n'fuscinota',\n'fusciventis',\n'fuscoaeneum',\n'fuscoapicella',\n'fuscothorax',\n'fusilieri',\n'fusulculus',\n'gabbioceratinae',\n'gabillytes',\n'galbinaria',\n'galeansellia',\n'galgula',\n'gambogia',\n'gammae',\n'ganapatiella',\n'ganella',\n'ganguli',\n'gannoni',\n'gaoligongshanensis',\n'gariensis',\n'garuus',\n'gassanense',\n'gaudini',\n'gavisus',\n'geganius',\n'geigyi',\n'geleverjae',\n'geminipilis',\n'genicularis',\n'genophantis',\n'geococcyx',\n'geodes',\n'geodiplosis',\n'geophagus',\n'georgecraigius',\n'georghioui',\n'gephyrogramma',\n'geralda',\n'geraldtonensis',\n'ghardaqanum',\n'gibsonella',\n'gibsonhilli',\n'gigantocapulidae',\n'gigantopygus',\n'gigantorubra',\n'gigantoscorpionoidea',\n'gilanica',\n'gilleti',\n'gilsonichrysis',\n'ginibitohia',\n'ginkgophyta',\n'gisara',\n'glaboabdominalis',\n'glabrimargo',\n'glabrimpressum',\n'glabropilumnus',\n'glaucelloides',\n'glaziouana',\n'gloiocolax',\n'gloreus',\n'gloriamaris',\n'glosus',\n'glyocyclus',\n'gmeineri',\n'gnathocera',\n'gnophos',\n'gobbettia',\n'goetheoides',\n'goldschmidti',\n'gomontia',\n'gomphreneae',\n'goncen',\n'gondwanica',\n'goniurosaurus',\n'gonothyraea',\n'gonyaulacoidia',\n'goodfieldi',\n'goodwoodensis',\n'gordioida',\n'gorgops',\n'gosobius',\n'goupillaudina',\n'gouvernoni',\n'goweroconcha',\n'grancarovii',\n'grandistylum',\n'granicauda',\n'graniger',\n'granimanus',\n'graphania',\n'graphomya',\n'grassmani',\n'greenmanianum',\n'greenwelliae',\n'greeri',\n'gregariella',\n'griffinia',\n'grimontia',\n'grossefoveolatus',\n'grossepunctatus',\n'groveolopsis',\n'grypoceras',\n'guairense',\n'guaitecae',\n'guanajuatensis',\n'guanomyces',\n'guiananana',\n'guihua',\n'guinnae',\n'gymnoceros',\n'gymnomorphus',\n'gymnophrea',\n'gymnoscutellatus',\n'gymnotoplax',\n'gynopeltis',\n'gypsochroa',\n'gyrothyraceae',\n'habenifera',\n'habrophila',\n'hachimantaiensis',\n'haddeni',\n'hadromischa',\n'haeggochiton',\n'haenschiella',\n'haesselbyholmiensis',\n'hagenbecki',\n'haleakala',\n'halichondriae',\n'hallex',\n'hallonympha',\n'hallsi',\n'halomonadaceae',\n'hamipalpis',\n'hanamauensis',\n'hankensis',\n'hannense',\n'hapalopa',\n'haplocyoninae',\n'haplotaxina',\n'haptogenys',\n'hapuuarum',\n'harenamica',\n'hariolator',\n'haripurensis',\n'harpanor',\n'harrisia',\n'hartmannulidae',\n'hartmanthus',\n'hastingsi',\n'hauschildianus',\n'havila',\n'hawbicum',\n'hecatorgnia',\n'hechtioides',\n'heddleichthys',\n'helianthialis',\n'helicinella',\n'heliomystis',\n'helionidia',\n'heliopa',\n'heliopsis',\n'heliopyrgus',\n'helluonina',\n'heluanensis',\n'hemerobiella',\n'hemerophila',\n'hemhem',\n'hemianospilus',\n'hemicyclicum',\n'hemidactyliinae',\n'hemigordiidae',\n'hemilecanitidae',\n'hemimarginula',\n'hemistropharia',\n'heppleana',\n'heptasema',\n'herklotsichthys',\n'hernandaria',\n'heronia',\n'heronum',\n'hesycha',\n'heteronevrus',\n'heteropachylus',\n'heteropanope',\n'heteroparamera',\n'heterospina',\n'heterotominae',\n'heugteni',\n'hexagonae',\n'hexaradiata',\n'hexatarsostinus',\n'hexovulata',\n'hialmari',\n'hiatula',\n'hibridum',\n'hieracifolia',\n'hieroglyphyca',\n'hillifera',\n'himalajenses',\n'himalayacetus',\n'hippodice',\n'hirtilobata',\n'hirudoidea',\n'hispaniolyna',\n'hivaagrion',\n'holochrysis',\n'holophlebia',\n'holovestita',\n'homeria',\n'homochirus',\n'homoeoctenia',\n'homoeosomae',\n'homoplatus',\n'homopterus',\n'honanodon',\n'hotooworry',\n'howaia',\n'huairouensis',\n'huallagana',\n'huancayensis',\n'huangensis',\n'hucketti',\n'hugotdiplogaster',\n'huitzmolotitlensis',\n'hulaquina',\n'humaciense',\n'hummel',\n'hummeliana',\n'huntella',\n'huriana',\n'hututsi',\n'hyalodiscaceae',\n'hyalopyrgus',\n'hydroisotoma',\n'hydrometra',\n'hydrotalea',\n'hydrotherikornis',\n'hypachroa',\n'hypapocheima',\n'hypermaculata',\n'hyphochytriaceae',\n'hypholomoides',\n'hypocephalini',\n'hypochaeridoides',\n'hypocline',\n'hypolispa',\n'hypoplexia',\n'hypospilata',\n'hypselosomatum',\n'hypsina',\n'hypsipyrga',\n'hysterolitinae',\n'ianrichardi',\n'iaoensis',\n'iberobarbarus',\n'ichneumia',\n'ichnolepida',\n'ichthyosomoides',\n'ictonyx',\n'idaecamenta',\n'idastes',\n'ideratini',\n'idiostolidae',\n'ifanidianae',\n'igarassuensis',\n'ignecolora',\n'ignifacies',\n'iljiniana',\n'impalpabilis',\n'improvidus',\n'inadmirabilis',\n'inclusana',\n'incubitor',\n'indistinctaria',\n'indolens',\n'indorhynchiinae',\n'indricotheriidae',\n'indubius',\n'inebriantis',\n'inefficax',\n'inermosyllis',\n'infanticida',\n'infasciatum',\n'infectus',\n'inflaticeras',\n'infraflavescens',\n'ingliseria',\n'ingogius',\n'inositophilus',\n'instabilaria',\n'instabilipes',\n'interrogatus',\n'inthanonica',\n'intonsus',\n'intrigella',\n'inyonensis',\n'ioannoui',\n'ionescui',\n'ioogoon',\n'iophana',\n'irapeanum',\n'iriditinctus',\n'isalaux',\n'isalensis',\n'ishidai',\n'isidiosella',\n'isocrinida',\n'isoetopsis',\n'isommata',\n'isotemnidae',\n'isoxys',\n'itabaiana',\n'ituribisciensis',\n'itwarra',\n'iulomorpha',\n'ivanovae',\n'iwamai',\n'ixiophyllum',\n'jacuipensis',\n'jaimeramirezi',\n'jajiensis',\n'jameela',\n'janikornae',\n'janirioides',\n'janosik',\n'jansei',\n'japenensis',\n'jasminaria',\n'jehlius',\n'jejudonia',\n'jiangduensis',\n'jianlingensis',\n'johnpaxtoni',\n'johnwurdackiana',\n'jokaquarta',\n'jonssoni',\n'joshuella',\n'jouiniana',\n'jovoensis',\n'juenthneri',\n'jugatoria',\n'jujuyensis',\n'juniperoideae',\n'juropeltastica',\n'juxticata',\n'kabogoensis',\n'kaibatonis',\n'kakaberrans',\n'kalidupa',\n'kalimeris',\n'kalingenwae',\n'kalonis',\n'kamacops',\n'kamande',\n'kamengense',\n'kamitakaranus',\n'kamtschatkensis',\n'kananaskensis',\n'kandymella',\n'kangeanus',\n'kapsanensis',\n'karadenizicus',\n'karataefolia',\n'karateghinicus',\n'karawajevi',\n'karwara',\n'kasungensis',\n'kawaihoaensis',\n'kefersteiniana',\n'kelelensis',\n'kemmisi',\n'khairei',\n'khuzistanicus',\n'kikibudiamini',\n'kiklonana',\n'killiasi',\n'kimurae',\n'kinabalum',\n'kingdonia',\n'kirstenboschensis',\n'kirthari',\n'kitagawia',\n'kivuanus',\n'kiwuensis',\n'kiyokoae',\n'kladotyphlus',\n'kleinpeteri',\n'klementii',\n'klenei',\n'koilomera',\n'kokeshia',\n'komokia',\n'kopsiopsis',\n'kosemponica',\n'koshiana',\n'kosnipatensis',\n'kostylevi',\n'kroyeri',\n'krusadensis',\n'kuhnistera',\n'kukalova',\n'kungae',\n'kunikikoana',\n'kunjerabi',\n'kuomeii',\n'kuschei',\n'kushmasarensis',\n'kusiacus',\n'kustorae',\n'kuturnee',\n'lachneifolia',\n'lachnocladium',\n'lachnoides',\n'lactate',\n'ladismithiense',\n'laevitarsis',\n'lagarocladum',\n'lagarosoma',\n'lagenina',\n'lagerara',\n'lagopodes',\n'laitimtik',\n'lamades',\n'lamellipodia',\n'lamellothyrea',\n'laminiformis',\n'lamora',\n'lamottiana',\n'lamprospilus',\n'lamuralla',\n'lamutica',\n'landoi',\n'langendoenii',\n'langerhansia',\n'lanicaulis',\n'lanthanostegus',\n'lanzenbergeri',\n'laororshanae',\n'lappodes',\n'lapsariata',\n'larainae',\n'laristanica',\n'larrainiana',\n'lascaris',\n'lasioderma',\n'lasiopterinus',\n'lasiospermus',\n'lateretuberculatum',\n'lathridelmis',\n'latipetiolata',\n'latisporum',\n'latitegminis',\n'latocorophium',\n'launayi',\n'laurenticus',\n'lauronia',\n'lavalettei',\n'lavbleckiana',\n'lavernellus',\n'laversiidae',\n'laxipilosum',\n'lecanoricola',\n'lecithodes',\n'lecythion',\n'leensis',\n'legerae',\n'leiboldiana',\n'leichenina',\n'leiocassis',\n'leiopelmatidae',\n'leiotelus',\n'leipoxaides',\n'leiramara',\n'leliae',\n'lemoultana',\n'lensia',\n'lenyrhova',\n'leocrinidae',\n'leonensis',\n'leonfairmairei',\n'lepidoteuthis',\n'leptocaudus',\n'leptocera',\n'leptochilichthys',\n'leptoiulini',\n'leptojulis',\n'leptolomoides',\n'leptomenaeus',\n'leptomma',\n'leptomorphum',\n'leptoschendyla',\n'leptoscirtus',\n'leptosomaheristus',\n'lerina',\n'lesegneuri',\n'letepsammia',\n'letilae',\n'leucadea',\n'leucalis',\n'leucanepsia',\n'leucanopsis',\n'leucolaema',\n'leucopodella',\n'leucopsarus',\n'leucorhodum',\n'leucosilia',\n'leucotabanus',\n'leuzeopsis',\n'levanidovorum',\n'leveyi',\n'levicaris',\n'leviense',\n'levisella',\n'liaoxipterus',\n'libidoclaea',\n'lichnasthenina',\n'lignarium',\n'lilaciflora',\n'lilacino',\n'lilliformis',\n'limenita',\n'limnogenneton',\n'limothrips',\n'linanensis',\n'lineitergum',\n'lingianus',\n'linifoliiformis',\n'linocerus',\n'linpingensis',\n'linshuiensis',\n'linwenhsini',\n'lionychini',\n'lioptilaria',\n'liosomeniidae',\n'lipocarpa',\n'lissodema',\n'litholampriminae',\n'lithosiformis',\n'litoricola',\n'lixinites',\n'llanoaspis',\n'lobigenis',\n'lockhartioides',\n'loesneriana',\n'loeuffintesi',\n'lombardiana',\n'lomyenensis',\n'lonchocephalus',\n'lonchodactylus',\n'longae',\n'longicomosum',\n'longifibula',\n'longipendulum',\n'longiscata',\n'longisellatus',\n'longispinata',\n'longistipulata',\n'longisubulatus',\n'longivelis',\n'longusorbiidae',\n'lophochroa',\n'lophopyxis',\n'lopriorea',\n'loranthiflorum',\n'loranthophila',\n'lornadepewae',\n'lotoxalis',\n'lubaria',\n'lubilensis',\n'lucidifrons',\n'lucifugus',\n'lugdunarium',\n'luikae',\n'lukaschia',\n'lumsdenae',\n'lunatum',\n'lungshenensis',\n'luodianense',\n'lupatus',\n'luridavolta',\n'luristanica',\n'lusingaense',\n'luteifrons',\n'luteileprosa',\n'luteosignata',\n'luxiense',\n'lycaenops',\n'lycaeopsidae',\n'lycocarpum',\n'lygria',\n'lysiphyllum',\n'maamingidae',\n'mabanuria',\n'mabellarca',\n'machairodontini',\n'mackaviensis',\n'macrocarpata',\n'macrocheila',\n'macrocornutus',\n'macrocremastra',\n'macroglossini',\n'macrogryllus',\n'macrolabis',\n'macropharyngodon',\n'macrotarrhusina',\n'macrotegmenta',\n'macrothylaciini',\n'macsweenyi',\n'maculaalba',\n'maculatus',\n'maculimembris',\n'madathisanotia',\n'madenphloeus',\n'maestingellus',\n'magadinensis',\n'magallanes',\n'magalonii',\n'maghrebiana',\n'magnacalx',\n'magneta',\n'magnetensis',\n'magnispiracularis',\n'magnopunctata',\n'mahmudbejovi',\n'mahunkaisimilis',\n'majorica',\n'majusdentatus',\n'makandal',\n'makarcevae',\n'makawao',\n'malabaris',\n'malaxioides',\n'malchanovi',\n'malpighiales',\n'malybo',\n'malziana',\n'mamigna',\n'mandanus',\n'manfeldtii',\n'mangrovae',\n'mannena',\n'mansonella',\n'mantamonadida',\n'maoricoris',\n'maquiensis',\n'maquipucuna',\n'marathonitinae',\n'marcellaria',\n'marcomesostoma',\n'margarostigma',\n'margelanica',\n'marisaurus',\n'marisminoris',\n'marmarensis',\n'marmarodeceia',\n'marmoretta',\n'marmorii',\n'marnkalha',\n'marojejiense',\n'marquesa',\n'marriana',\n'martynovae',\n'masaiensis',\n'mascarone',\n'maseri',\n'mashanense',\n'mashuana',\n'massariola',\n'massaspicula',\n'mastopomatoides',\n'matacarus',\n'mathuriana',\n'matiganae',\n'mauroprosopa',\n'maurya',\n'maximiliani',\n'mazama',\n'mbamou',\n'mbenjii',\n'mcnabi',\n'medioscutellatus',\n'medwayensis',\n'meerausi',\n'megalobrunneum',\n'megalomycter',\n'megalorrhizum',\n'megalothyrsa',\n'megalyridiini',\n'megamphida',\n'megaoonops',\n'megapex',\n'megateles',\n'megispilota',\n'meigangae',\n'meilloniellum',\n'meingangbii',\n'melakeghebrekristosi',\n'melanchares',\n'melanchlaenus',\n'melanicterata',\n'melanocausta',\n'melanophyllaceae',\n'melanopneumon',\n'melicopea',\n'meligastra',\n'melissimum',\n'mellici',\n'melonius',\n'melphidippella',\n'meneghinianum',\n'mentawir',\n'meoticaops',\n'merdrignaci',\n'merensis',\n'mergense',\n'merhynchites',\n'meridiocarpathicus',\n'merriamosauridae',\n'merularia',\n'mesamidostomum',\n'mesembriomys',\n'mesoepisternalis',\n'mesogitanus',\n'mesolestes',\n'mesoleucalis',\n'mesonotochra',\n'mesosindris',\n'mesostegia',\n'mesovelia',\n'messicobolidae',\n'mestorus',\n'metabacterium',\n'metacerylon',\n'metalacurbs',\n'metallicut',\n'metallophilus',\n'metanaga',\n'metapterygota',\n'metapulvinata',\n'metasidama',\n'metatensis',\n'metatrichini',\n'metellona',\n'metopiora',\n'mevesi',\n'meyerinkii',\n'michaelisi',\n'michelinoceratida',\n'michoniana',\n'micralabastra',\n'micralsopsis',\n'microbahia',\n'microcarunculata',\n'microcephalophis',\n'microcorses',\n'microcyma',\n'micromesozonata',\n'microsciadium',\n'microscopicus',\n'microstethum',\n'microstriatus',\n'microviolacea',\n'micruropodidae',\n'mictophileurus',\n'mikatae',\n'milishai',\n'millerburtonia',\n'miltochristalis',\n'miltoni',\n'mimeugoa',\n'minarzianus',\n'mineirosensis',\n'minhensis',\n'minirosea',\n'minorbrachyblasta',\n'minyaense',\n'miocaenica',\n'mionatrix',\n'mionebulosa',\n'miradornsis',\n'miristigma',\n'mirkinii',\n'misiones',\n'missionensis',\n'mistassinica',\n'mitonia',\n'mixoscia',\n'moathi',\n'mochae',\n'modicoides',\n'moellendorffi',\n'moerisioidea',\n'mogollona',\n'mogorka',\n'mohavanensis',\n'mohavea',\n'molochina',\n'monachophyllum',\n'monactinus',\n'monalita',\n'monapunctata',\n'mongiensis',\n'mongoz',\n'monochorhynchus',\n'monotrete',\n'monreali',\n'monroeae',\n'montandoniola',\n'montanetana',\n'montemaris',\n'montieli',\n'moratiana',\n'morosevitshae',\n'morosphaeria',\n'mosambicensis',\n'moscoviensis',\n'motleyi',\n'motuweta',\n'moussavoui',\n'moutiai',\n'moutouchi',\n'msuata',\n'mugangensis',\n'mulgedii',\n'mulibrinus',\n'mullerrutzi',\n'multareis',\n'multicristatella',\n'multilata',\n'munbyanus',\n'mundeola',\n'munissii',\n'muraenolepis',\n'muricola',\n'murieliae',\n'murinocardiopsis',\n'murmurensis',\n'mutilla',\n'mweroensis',\n'mycobacteriaceae',\n'mycterobius',\n'myialginae',\n'myocaster',\n'myohyangsanica',\n'myopius',\n'myopsychoides',\n'myoxophora',\n'mystriocentrus',\n'myxodictyum',\n'nacladense',\n'naevana',\n'nagamasu',\n'nagatoella',\n'naiguatana',\n'nakamuriformis',\n'nakanai',\n'nakipa',\n'nakuru',\n'nalepellidae',\n'namacus',\n'nangra',\n'nanniae',\n'nannoconus',\n'nannosteinmannites',\n'nannosuchus',\n'narmanica',\n'nascioides',\n'nassatula',\n'nassipa',\n'nasturtium',\n'natalicius',\n'natriophilus',\n'nattaiensis',\n'nausibus',\n'nautiliaceae',\n'nealecypridini',\n'neatodes',\n'necallianassa',\n'necopinatidae',\n'necopinum',\n'negasilus',\n'negibacteria',\n'negroppia',\n'negundana',\n'neibae',\n'neimaniae',\n'nemosoma',\n'neoacutidens',\n'neoaves',\n'neobasalis',\n'neobradyidae',\n'neocichla',\n'neocteniza',\n'neofascipennis',\n'neoflavicans',\n'neohornibrookella',\n'neomisellina',\n'neonola',\n'neopamera',\n'neoperlops',\n'neopiliferum',\n'neotabidus',\n'nephelioides',\n'nephrodinium',\n'nepogomphus',\n'neptunoides',\n'nerens',\n'neseotes',\n'nesoriella',\n'nestia',\n'netica',\n'neuontobotrys',\n'neurigrammalis',\n'niamiae',\n'nicarete',\n'nichofii',\n'nicholai',\n'nictheroyana',\n'niglarus',\n'nigricapita',\n'nigricrissa',\n'nigriguttulus',\n'nigripennus',\n'nigriscuta',\n'nigriventus',\n'nigroaxillaris',\n'nigrobrunneana',\n'nigrocupuliferous',\n'nigrofactum',\n'nigronaervalis',\n'nigropeltata',\n'nigrova',\n'nikanoria',\n'ningchengensis',\n'niphocera',\n'nitrariifolius',\n'nivemaculata',\n'nivenorum',\n'niveociliaria',\n'nixoniana',\n'noaeae',\n'noctuitaria',\n'nodilirata',\n'nomadus',\n'nonornata',\n'nonstylatum',\n'nordenstamia',\n'noscibilis',\n'nosterella',\n'nostochopsidaceae',\n'notanisus',\n'notati',\n'nothosaerva',\n'notoderus',\n'notogomphus',\n'notoleuca',\n'notonectoides',\n'notothixoides',\n'novahebridensis',\n'novobritanniensis',\n'nublians',\n'nucleatus',\n'nucleosus',\n'nullamphiura',\n'nulliferana',\n'nuttallielloidea',\n'nyakaensis',\n'nyanzense',\n'nycthemeraria',\n'nycticorpum',\n'nygmiae',\n'nysiusae',\n'nyssanthes',\n'nyssonini',\n'oblenita',\n'obliquans',\n'oblongissimus',\n'obovatocarpa',\n'obsequiosa',\n'occulta',\n'ocellicaudus',\n'ocenebrinae',\n'ochridaphe',\n'ochrochrous',\n'ochrodorsella',\n'ochterus',\n'odobenocetopsidae',\n'odontonotacris',\n'odontopsammodius',\n'odontopygidae',\n'oedothelphusa',\n'oelandinus',\n'ohlertidion',\n'okadaiidae',\n'okeani',\n'oksalianum',\n'oldroydiana',\n'olgashelestae',\n'oligocarinatum',\n'oligophyton',\n'oligospilota',\n'oligotrophicum',\n'olliffiana',\n'olmediopsis',\n'olmosensis',\n'olmotega',\n'omalonomus',\n'omariusalis',\n'omogonis',\n'omopyge',\n'onchocalanus',\n'onophas',\n'onychiurini',\n'onychogammarus',\n'onychoglenea',\n'oochoristica',\n'oosomini',\n'opadius',\n'opalinula',\n'opatrina',\n'operantis',\n'ophiochalcis',\n'ophiopogonoides',\n'opifexi',\n'opopaea',\n'opulentium',\n'orangica',\n'orbicularius',\n'orbipora',\n'orchonicus',\n'ordunyai',\n'oreopithecus',\n'oresbia',\n'oresbios',\n'orgyale',\n'orichalcescens',\n'orichloris',\n'orisasini',\n'orithopsidae',\n'ornatodorcadion',\n'orohenense',\n'orongia',\n'orsunius',\n'orthomeroides',\n'orthoraphis',\n'orthostichopsis',\n'orthotrichum',\n'osellae',\n'osoensis',\n'osoriana',\n'osperlioceras',\n'ostuchiensis',\n'oswaldia',\n'otallensis',\n'ouadanei',\n'ouricanense',\n'ovatiguttatus',\n'ovicercus',\n'ovilis',\n'oxycarenidae',\n'oxycerini',\n'oxymegaspis',\n'oxyruncus',\n'oxystoma',\n'ozokeriticus',\n'ozotomerini',\n'pachmariensis',\n'pachobex',\n'pachycaulon',\n'pachycoccyx',\n'pachydeminae',\n'pachynema',\n'paddeui',\n'paduana',\n'paedobisium',\n'paenacuceps',\n'paenedentula',\n'pailensis',\n'palaeocarcharidae',\n'palaeophonus',\n'palaeosystenus',\n'palawanella',\n'palenquense',\n'palesoidea',\n'paleuthygrammatidae',\n'palinuroidea',\n'pallidetinctus',\n'pallidicostalis',\n'pallidohirtus',\n'pallorus',\n'palmatus',\n'palmetincola',\n'palmivorus',\n'paluosa',\n'pampiconus',\n'panacina',\n'pancallia',\n'pancici',\n'pancrustacea',\n'paniferum',\n'panochthus',\n'pantecphylini',\n'panticosus',\n'papillatus',\n'papillopilosa',\n'papillospora',\n'paraansobicus',\n'parabactridium',\n'parabarossia',\n'paraborsonia',\n'parabretti',\n'paracanthonchus',\n'paracavisoma',\n'paracelastrus',\n'paracheiridium',\n'paraconara',\n'paractaeopsis',\n'paracuminiseta',\n'paradiplogynium',\n'paradoxosomatinae',\n'paradrina',\n'parafiorinia',\n'parafungicola',\n'paragonimus',\n'paragraminis',\n'parahieroglyphica',\n'parahuahindensis',\n'parajauravia',\n'paralamprotatus',\n'paralphenum',\n'paramaculipennis',\n'paramevania',\n'paramyinae',\n'paraphiloscia',\n'parapoxvirus',\n'pararapana',\n'parareolatus',\n'parasanjuanensis',\n'parasicyos',\n'parasphaeria',\n'parastemon',\n'parastenoterys',\n'paratheridula',\n'paratriaina',\n'paratubiluchus',\n'paratumbex',\n'paraumballaensis',\n'paravenia',\n'paraves',\n'paravorae',\n'pardoanum',\n'pardochrous',\n'parelegans',\n'paresmus',\n'pareulepis',\n'pareutaenia',\n'pariry',\n'parjumanensis',\n'parspeciosum',\n'parthicum',\n'parvifoliella',\n'parvipunctus',\n'pascahinnites',\n'pashupati',\n'pathana',\n'patheticus',\n'patritiodemus',\n'pattersonellidae',\n'paturattensis',\n'paucichelatus',\n'paucipetala',\n'paucivenosum',\n'paulesca',\n'paulianaleyrodes',\n'paulocordata',\n'pausandra',\n'pavelitus',\n'pavichii',\n'pearceanus',\n'peartiae',\n'pectinatum',\n'pedimarmoratus',\n'pegazzanoae',\n'peihonga',\n'pelamidis',\n'pelegrinoides',\n'pellucidellus',\n'pelobium',\n'pelodesmus',\n'pelotomaculum',\n'pempelioides',\n'pendulosa',\n'pengboense',\n'penneysii',\n'peonza',\n'peraccai',\n'peranemiformis',\n'percludalis',\n'percolens',\n'perconfusa',\n'perconicus',\n'perdica',\n'perfectana',\n'perflaveola',\n'periclimenes',\n'periglabellus',\n'perigrinus',\n'perilimicron',\n'periploceae',\n'periquesta',\n'perisphinctinae',\n'peristerensis',\n'peristrigata',\n'perlatum',\n'permagnifolia',\n'permiscus',\n'pernyii',\n'perostia',\n'perpunctulatum',\n'perseae',\n'persimplexella',\n'persinuata',\n'peruvensis',\n'pervasata',\n'pervulgaris',\n'petheri',\n'petrocrania',\n'petrograpta',\n'petroleuciscus',\n'petrolinensis',\n'petrorsus',\n'pezomantis',\n'pfefferiteuthis',\n'phaenohemiandrus',\n'phaeocroa',\n'phalacrocoraca',\n'phallopiratinae',\n'phanolophus',\n'phantomus',\n'phascolomys',\n'phelloxylon',\n'phemonoides',\n'philichthys',\n'philipomyia',\n'philippinum',\n'philocalus',\n'philocoprella',\n'philomena',\n'philosycus',\n'phinneyi',\n'phitosianus',\n'phlepsopsius',\n'phloxidiflora',\n'phoemonoe',\n'pholcochyrocer',\n'phormisalis',\n'phoxapex',\n'phrixus',\n'phycinae',\n'phylloceratitida',\n'phyllochaetopterus',\n'phyllodinarda',\n'phyllorachis',\n'phyllospongia',\n'phylochrysa',\n'phymatopteris',\n'physcomitrellae',\n'physoglenidae',\n'piasusalis',\n'piazzaria',\n'piceolus',\n'picicolor',\n'piezotrachelini',\n'pilatoi',\n'pilifilis',\n'pililoba',\n'pilsbrytyphis',\n'pimaensis',\n'pinacopodium',\n'pinguella',\n'pinidumus',\n'piniradicis',\n'pinnatifidum',\n'pinnicerca',\n'pintadus',\n'piqueriae',\n'piquerioides',\n'pirapo',\n'pirarense',\n'pirizanica',\n'pirriei',\n'pisacomensis',\n'piscacauda',\n'pisciodorus',\n'pisidium',\n'pissina',\n'pithyella',\n'pityophilus',\n'placocista',\n'placodops',\n'placotrochides',\n'plagiognathi',\n'plagioholocentrus',\n'planaltinella',\n'planipedonus',\n'planistylus',\n'plantaginoidea',\n'plasmodiophoromycetes',\n'plastica',\n'platyacantha',\n'plecopterorum',\n'plectrelgraecum',\n'plectrocerum',\n'pleionotoma',\n'plethokrossus',\n'plethotretus',\n'pleuranthoides',\n'pleurites',\n'pleurobotryosa',\n'pleurodomus',\n'pleurofascia',\n'pleuronichthys',\n'pleuropasta',\n'plicosula',\n'pliculosa',\n'plinthiza',\n'pliosauridae',\n'plumacea',\n'plumeriifolia',\n'pluricapitata',\n'plurosorus',\n'pluvia',\n'pninaella',\n'poblanus',\n'pocopunctella',\n'podaucheniellus',\n'podonectriaceae',\n'poecilator',\n'poliona',\n'polititapes',\n'polosi',\n'polychrosis',\n'polycladae',\n'polyfimbriata',\n'polygamiae',\n'polygonanae',\n'polymorphidae',\n'polysentoriformes',\n'polysperchinus',\n'polytmus',\n'polyzonatus',\n'polzbergia',\n'pomeroyi',\n'ponerus',\n'pontisquamata',\n'populifolia',\n'porchatensis',\n'porochordus',\n'porosa',\n'porthesioides',\n'portoricoscia',\n'porulosa',\n'postcervix',\n'postdentaria',\n'postfasciculata',\n'postmediana',\n'postoparvipuncta',\n'postpoliatus',\n'postsemipluripuncta',\n'potebniamyces',\n'prabha',\n'praecursoria',\n'praephacorhabdotus',\n'praeprocris',\n'praestolatorius',\n'pratumidiscus',\n'pretenderis',\n'primevus',\n'primigenus',\n'prionotemnus',\n'prismatocarpus',\n'proarchus',\n'problematodes',\n'proboscidoplocia',\n'probosciformis',\n'procerocheles',\n'productinae',\n'profundocythere',\n'projecturata',\n'projicienfrontoides',\n'prolaminatus',\n'prolaupala',\n'prolixifasciata',\n'prolixistyla',\n'promirotermes',\n'proniphea',\n'pronoritidae',\n'pronotacanthus',\n'prorepentia',\n'proriedelia',\n'prosadiya',\n'prosectoides',\n'prosenactia',\n'prosobothrium',\n'prosopalpus',\n'prosorhochmus',\n'protocardiinae',\n'protochitonidae',\n'protoglomeris',\n'protoiurus',\n'protopidius',\n'protoreticulata',\n'protorhyssalodes',\n'protosciarella',\n'protosculptilis',\n'protrama',\n'psammoticus',\n'psarisomus',\n'pselaphostena',\n'pseudacanthopale',\n'pseudachorutella',\n'pseudacroleptus',\n'pseudanurophorus',\n'pseudapoderus',\n'pseudargentata',\n'pseudartiocotylus',\n'pseudephedrus',\n'pseudincoides',\n'pseudoalstonii',\n'pseudoarmillaris',\n'pseudoborniales',\n'pseudobothrideres',\n'pseudobotrys',\n'pseudochroma',\n'pseudodiplotaxis',\n'pseudodoliolininae',\n'pseudoeurydesmella',\n'pseudoglauca',\n'pseudogonitis',\n'pseudogyrinocheilus',\n'pseudohookeriana',\n'pseudoialapennsis',\n'pseudokovacevici',\n'pseudomacrophya',\n'pseudomaroccana',\n'pseudomarsupidium',\n'pseudomarteli',\n'pseudomassilina',\n'pseudomedaeus',\n'pseudoncholaimus',\n'pseudonudicaulis',\n'pseudooblongum',\n'pseudopallescens',\n'pseudopannaria',\n'pseudopasilia',\n'pseudopentameris',\n'pseudopiceus',\n'pseudopithyella',\n'pseudoptiletes',\n'pseudorchestes',\n'pseudorichia',\n'pseudorthonychiidae',\n'pseudosaxat',\n'pseudosteini',\n'pseudosymmorphus',\n'pseudothyretes',\n'pseudotrematodes',\n'pseudotriphyllopsis',\n'pseudotristicha',\n'pseudumbellata',\n'pseuduncifera',\n'pseustantha',\n'psiloderoides',\n'psychanisa',\n'psychroteuthidae',\n'pteleaevagrans',\n'pteridicola',\n'pterineidae',\n'pteron',\n'pteropelyx',\n'ptilocladioides',\n'ptilopus',\n'ptochopis',\n'pubistylosum',\n'pudicula',\n'puiggariopsis',\n'pulchricolor',\n'pulchrinodaceae',\n'pulcia',\n'pulcratis',\n'pultiphagonides',\n'pulvifer',\n'punctifimbriata',\n'punctillaris',\n'punctoterminalis',\n'purdonellinae',\n'purpureoplagiata',\n'pursellii',\n'pusanus',\n'pusztae',\n'pycnocephaloides',\n'pycnophyllopsis',\n'pycnopodia',\n'pygocentrus',\n'pyramidata',\n'pyrgotomyia',\n'pyrifer',\n'pyrimidalis',\n'pyronasi',\n'pyrrhonotum',\n'qianyiyongii',\n'qinglongopterus',\n'quadrabdominalis',\n'quadrataria',\n'quadratirostrata',\n'quadriannellatus',\n'quadricellulata',\n'quadrifalcifera',\n'quadrinotatiforme',\n'quadristrigaria',\n'quasiborelis',\n'quasiindicus',\n'quercusilicis',\n'quinquicincta',\n'quisquiliarius',\n'rabainus',\n'raceki',\n'rachelii',\n'racovitzae',\n'racovitzia',\n'radicosus',\n'rafesi',\n'ralstoniae',\n'ramicephala',\n'ramoncaracasii',\n'ramoniana',\n'ranitomeya',\n'rankini',\n'raphaelandrearum',\n'raphigastra',\n'raphis',\n'rapola',\n'rarensis',\n'rarotonga',\n'rautensis',\n'rawuense',\n'reaghi',\n'recticommata',\n'rectopalicus',\n'recurvilabre',\n'recurvistigmalis',\n'reddii',\n'redemptum',\n'rehbergi',\n'reitteri',\n'rembangensis',\n'renaudiana',\n'renauldi',\n'reniformis',\n'renipiscarius',\n'renivitta',\n'repletana',\n'rescissa',\n'residis',\n'resinophaga',\n'retextus',\n'retingensis',\n'retrospiculatum',\n'retusa',\n'rhabdomolgus',\n'rhachicoryphus',\n'rhacoindustiata',\n'rhadinosa',\n'rhamphostomella',\n'rhayatus',\n'rhealis',\n'rheumaptera',\n'rhinocolura',\n'rhinorhynchini',\n'rhiostoma',\n'rhipidomellinae',\n'rhodaphanes',\n'rhododendronis',\n'rhodophilides',\n'rhomboivora',\n'rhombonicis',\n'rhombostilbella',\n'rhopalodes',\n'rhopalopus',\n'rhymnus',\n'rhyopsocus',\n'ribeiroia',\n'ribium',\n'richardsi',\n'richerdeforgersi',\n'ricinoidoidea',\n'ricketti',\n'rifana',\n'rigiduliformis',\n'rikuzenica',\n'rimipontius',\n'riocauchosanum',\n'riparis',\n'ripidopteris',\n'risoba',\n'rithrogenophila',\n'rodentini',\n'rodriguezus',\n'rogata',\n'rolandmuelleri',\n'romanchella',\n'romeii',\n'romulanigra',\n'roschanicus',\n'roseicostis',\n'rosellei',\n'rosemariana',\n'rosenvingiella',\n'roseobrunnea',\n'roseoculma',\n'rosettiae',\n'rosettii',\n'rosica',\n'rosicola',\n'rossmania',\n'rostamii',\n'rostraloides',\n'rostrigerum',\n'rothfelsi',\n'rotulina',\n'rotuloplocamia',\n'roxasella',\n'ruaumokoi',\n'rubeschi',\n'rubicula',\n'rubrigastra',\n'rubrisetum',\n'rubronervat',\n'ruderatus',\n'rudiastra',\n'rudolphisimonii',\n'rufistigmosa',\n'rufitarsoides',\n'rufocastanea',\n'rufofuscula',\n'rufolimbaria',\n'rufosatellitia',\n'rufotactus',\n'rufotinctus',\n'rugifolium',\n'rugostriatus',\n'rugulata',\n'ruhlandiana',\n'ruiliensis',\n'rumphiensis',\n'rutaneni',\n'ruzskyellus',\n'ryphea',\n'sabatoi',\n'sabbadini',\n'sacajaweae',\n'saccharophilum',\n'saccopetaloides',\n'saccopharyngidae',\n'sacculoppia',\n'saeniensis',\n'sagaminemertes',\n'saguaroicola',\n'salamander',\n'salatini',\n'salinellidae',\n'salmositica',\n'salsburyana',\n'salsum',\n'salticidites',\n'saltursus',\n'salvagopselactus',\n'salvazi',\n'samacar',\n'samolethrius',\n'sanata',\n'sandbergeri',\n'sandrabatis',\n'sansebastianus',\n'santaelensis',\n'santoamarensis',\n'santubong',\n'sanyali',\n'sapotaefolia',\n'sapphirhinus',\n'sapporona',\n'saracrinus',\n'sarcocyphos',\n'sarsonuphis',\n'sasakii',\n'sasimella',\n'saturator',\n'sauciatus',\n'savigniorrhipis',\n'saxemarina',\n'saxeseni',\n'sbarbari',\n'scalebrina',\n'scansoria',\n'scaphidiomyces',\n'scapiflora',\n'scardiinae',\n'schabalkini',\n'schacheri',\n'schachimardanicum',\n'schaffneri',\n'schajovskoya',\n'schellwieniens',\n'scherfi',\n'schizacme',\n'schizocharis',\n'schizochiton',\n'schizonema',\n'schizopus',\n'schizotaldycupes',\n'schminkeinae',\n'schraederi',\n'sciocyrtinus',\n'scirpidium',\n'sclateria',\n'sclerieae',\n'scleropteroides',\n'scleropycnis',\n'scoliacantha',\n'scoriformis',\n'scorpaenoidei',\n'scoteinum',\n'scutellina',\n'scutuliformis',\n'scybalophagus',\n'scythromorpha',\n'secluse',\n'secostruma',\n'secretas',\n'segovicus',\n'seilerni',\n'seirospora',\n'sejongensis',\n'selaserica',\n'seleensis',\n'selenana',\n'selenariidae',\n'selenopsocus',\n'semibraccatus',\n'semicrocea',\n'semilissus',\n'semionis',\n'semisplendidum',\n'semiticella',\n'sepsidae',\n'septicemia',\n'septorispora',\n'serangodella',\n'seraxensis',\n'seriespinosum',\n'serolina',\n'seroloniscus',\n'serpentinum',\n'serradraco',\n'serranicola',\n'serranochromis',\n'sertalis',\n'sespinaea',\n'sessilifructa',\n'sestertiella',\n'setabara',\n'setantops',\n'setaphora',\n'setispinae',\n'setylaides',\n'sevastjanovi',\n'sevenetii',\n'sevosa',\n'sewertzowii',\n'sexdendata',\n'sexspinus',\n'shackletoni',\n'shataii',\n'shebania',\n'sheeppox',\n'sheidaii',\n'sherbrookei',\n'sheshanensis',\n'shigernaei',\n'shiloensis',\n'siamophylla',\n'sianenna',\n'sibaya',\n'sibayakensis',\n'sibbaldi',\n'sibukoensis',\n'siccanea',\n'sichnostola',\n'sicinae',\n'sieburgi',\n'sigilla',\n'sigmomorphina',\n'signipennis',\n'sihoensis',\n'silhouettei',\n'silolona',\n'silphedosuchus',\n'silsilesii',\n'silvaniformis',\n'silvicolus',\n'simetitia',\n'similicornuta',\n'similiphora',\n'simsata',\n'singalorum',\n'sinharajaicus',\n'sinoarundinaria',\n'sinobryobia',\n'sinotianschanicum',\n'sinuosociliatus',\n'sipunculoides',\n'sittae',\n'sivarajiana',\n'slatinensis',\n'slevinii',\n'smefarka',\n'smelowskia',\n'smyrnae',\n'snellii',\n'sochinsogonia',\n'socotricola',\n'soenderupianus',\n'sogalis',\n'sogandaresi',\n'sohayakiense',\n'sokkaejaecystis',\n'solenoxyphus',\n'solitariana',\n'solorzanoana',\n'somatania',\n'sonderophycus',\n'songpanicum',\n'sonitans',\n'sonneratioides',\n'sonogrus',\n'sonotetranychus',\n'sophista',\n'sordidopapposa',\n'sorediifera',\n'southgeorgiae',\n'soyoae',\n'spanospicula',\n'spathor',\n'spatulicornis',\n'spelaeum',\n'speoides',\n'spermodea',\n'sphaeroconcha',\n'sphaerodoridium',\n'sphaerogerinidae',\n'sphaerosporella',\n'sphaerozone',\n'sphagnorrhiza',\n'sphenorhynchus',\n'sphenotretidae',\n'sphingidites',\n'sphingopyxis',\n'spilosomini',\n'spinigerum',\n'spiniplenus',\n'spinostylus',\n'spiralifera',\n'spirifex',\n'spiroberotha',\n'spirotecta',\n'spirotectinae',\n'spongiphilus',\n'sponiifolius',\n'sporocosma',\n'springvaleensis',\n'squamatellus',\n'squamulosula',\n'stachysi',\n'stacota',\n'stagona',\n'staiusalis',\n'stalina',\n'staphylocystoides',\n'stathmodera',\n'staxrudi',\n'steccherinaceae',\n'steinbergensis',\n'steinhardti',\n'stellariifolius',\n'stellatacula',\n'stellatosporea',\n'stenanthera',\n'steninae',\n'stenocarus',\n'stenoetrus',\n'stenolejeunea',\n'stenolobium',\n'stenometopa',\n'stenopetalum',\n'stenostygninae',\n'stenothora',\n'stenotritinae',\n'stephanophyes',\n'stephenseniellus',\n'stereograpta',\n'steveniella',\n'sthenozancla',\n'stibapicalis',\n'stigmatogobius',\n'stigmatotheca',\n'stiphrogyne',\n'stipuloideum',\n'stirlingia',\n'stirojoppa',\n'stoeberhinus',\n'stolonacea',\n'stonesfieldiana',\n'straatmanni',\n'stradbrokense',\n'streyana',\n'strictiforme',\n'strigialifusus',\n'strigillatus',\n'strigosipes',\n'striposis',\n'stroemi',\n'strophingia',\n'strophis',\n'stubblefieldi',\n'stumkatae',\n'stygocarididae',\n'stylodesmus',\n'stylopauropoides',\n'stylospora',\n'stylus',\n'styphlorachis',\n'stypus',\n'styraconixidae',\n'subaana',\n'subargillacea',\n'subcongoensis',\n'subcorrosus',\n'subdecursivum',\n'subdicarpon',\n'subfinitimella',\n'subfurva',\n'subglabrum',\n'subhuti',\n'subinformis',\n'sublignosalis',\n'sublineatus',\n'submelanaria',\n'subneotrichius',\n'subobliteratus',\n'subota',\n'subpectinata',\n'subpelignus',\n'subpellucens',\n'subplacens',\n'subpohlioideum',\n'subtakecallis',\n'subterblancum',\n'subterraneoides',\n'subtrivialis',\n'subumbrosa',\n'subvariocostatus',\n'subvillosula',\n'subxanthippus',\n'subyusou',\n'sucofera',\n'suduirauti',\n'suffusinervis',\n'sugillata',\n'suiferens',\n'sukhothai',\n'sukotaiense',\n'sulcinerva',\n'sulfophila',\n'sulfureolus',\n'sumensis',\n'summergold',\n'supraglandulosa',\n'surculare',\n'suspinata',\n'susumia',\n'svecica',\n'symmetrosporaceae',\n'symphorosus',\n'synagriformis',\n'synaphe',\n'syncapna',\n'syndelphax',\n'synercta',\n'syniulus',\n'syntrita',\n'syntrophus',\n'syringilla',\n'syringopharynx',\n'syzygoniinae',\n'szulczewskii',\n'tabernai',\n'taboga',\n'tachangensis',\n'tachillanella',\n'tachiniscidae',\n'tachinoides',\n'tacoaraphaga',\n'tactiquensis',\n'taeniolatus',\n'tagetiflora',\n'tahulaspis',\n'takachihonis',\n'takahagiensis',\n'takhtajani',\n'takhti',\n'takuiricus',\n'talaena',\n'talitridira',\n'tamagohanum',\n'tamaricaria',\n'tamaska',\n'tambori',\n'tambourinicus',\n'tampiusalis',\n'tanagami',\n'tanalanacris',\n'tangaroa',\n'tapadas',\n'tapinillus',\n'taraxacicola',\n'tashkurensis',\n'tasmanentulus',\n'tasmaniae',\n'tayoensis',\n'tchupalensis',\n'telata',\n'telegdirothi',\n'telesii',\n'teliformis',\n'telmatobia',\n'telosperma',\n'telotylenchinae',\n'temascalense',\n'temnosceloides',\n'tempisque',\n'temulata',\n'tenacifolium',\n'tenacis',\n'tenaspis',\n'tengstroemella',\n'tenuicrustaceum',\n'tenuilamellatus',\n'tenuioides',\n'tenuipalpoidini',\n'teramachii',\n'terborchii',\n'terebraeformis',\n'teresopolis',\n'teretiachaenium',\n'termitarum',\n'tersonderi',\n'tessella',\n'testaceovittatus',\n'tetragattii',\n'tetragonocarpum',\n'tetraleberis',\n'tetrapila',\n'tetrapunctigera',\n'tetrasporoides',\n'thalassemae',\n'thalebanii',\n'thaliana',\n'thallicola',\n'thallostoma',\n'thamfaranga',\n'thamugadensis',\n'thapsianae',\n'tharsanthes',\n'thenardii',\n'therinia',\n'thermomyces',\n'thiofractor',\n'thoracanthoides',\n'thoracosphaera',\n'thorictosoma',\n'thymbroides',\n'thyreoconger',\n'thyrsoidea',\n'thyrsolomia',\n'thystas',\n'thysvillei',\n'tibetanophilus',\n'tibiale',\n'tibicinini',\n'tibiovela',\n'tibullus',\n'ticinepomis',\n'tietzae',\n'tiflisensis',\n'timanicum',\n'timapeba',\n'timothyei',\n'timoutoides',\n'tinoides',\n'tipulidae',\n'tishqu',\n'tissanga',\n'tobiracola',\n'toganensis',\n'tolganensis',\n'tombolatoana',\n'tombouctou',\n'tonjolana',\n'tonkienensis',\n'tonnensis',\n'topseyi',\n'toraia',\n'tororoense',\n'tortuosivenosum',\n'torvensis',\n'touchardia',\n'tovomitopsis',\n'toxopeina',\n'toxotes',\n'trachea',\n'trachygrapha',\n'trachylepis',\n'trachyuropoda',\n'transilis',\n'transversovittatus',\n'travassosinema',\n'trebida',\n'trefusiina',\n'tremataspidoidei',\n'trematocarpus',\n'tremicinae',\n'trentinus',\n'tretosterninae',\n'treverense',\n'triaenophorus',\n'tribalasia',\n'tricepoides',\n'trichiatus',\n'trichocarpum',\n'trichonychina',\n'trichopeda',\n'trichophallus',\n'trichosolen',\n'trichosomoididae',\n'trichothyriomyces',\n'tricnicos',\n'tridax',\n'trifurcillata',\n'trigonosema',\n'trigonula',\n'triloculina',\n'trimamillatus',\n'triplicalyx',\n'triplonychus',\n'triplophyllum',\n'trisecphora',\n'trisignata',\n'tristrigaria',\n'tritaenia',\n'tritodynamiinae',\n'tritoxidium',\n'trophius',\n'tropidocarpum',\n'truchanasi',\n'truxillata',\n'trychnopalpa',\n'tshukoticus',\n'tsienii',\n'tsimihetensis',\n'tsitsikammensis',\n'tsunekatanus',\n'tsurutanum',\n'tubatum',\n'tuberculiforme',\n'tuberorachidion',\n'tucanti',\n'tungchihi',\n'turbonia',\n'turkeyella',\n'turkulensis',\n'turpicula',\n'turuchanica',\n'tusimayusurika',\n'tusimomeneus',\n'tuticorina',\n'tutuilaensis',\n'tymicola',\n'typhochrestus',\n'typhoniinae',\n'tzinella',\n'ucetanus',\n'udzungwense',\n'uktaspis',\n'ulceratalis',\n'ulotrichoides',\n'ultunense',\n'umiatense',\n'uncopaederus',\n'undulitibiae',\n'unguianalis',\n'unguifortis',\n'uniclypea',\n'unimediseta',\n'unipeltoceras',\n'upermia',\n'urarensis',\n'urartuensis',\n'urceoliporoidea',\n'urgorrii',\n'uriformis',\n'uroballus',\n'urodiabunus',\n'urogymni',\n'ushari',\n'ushizanus',\n'ustifumosa',\n'ustyuzhanini',\n'usurae',\n'utahnema',\n'uvifolium',\n'uzunoglui',\n'vacatella',\n'valerian',\n'validithorax',\n'vallacerta',\n'vanakripa',\n'vanieria',\n'vansttallei',\n'varfer',\n'vauereselli',\n'vavara',\n'veerapazhasii',\n'vehemens',\n'velaminosum',\n'velebitica',\n'vendettadeae',\n'veneriglossa',\n'venitalis',\n'ventricostus',\n'ventriosa',\n'ventrolata',\n'verbanica',\n'verbeekininae',\n'verluysi',\n'vermaasi',\n'vermes',\n'vermiculifera',\n'vernale',\n'vernana',\n'verniochreana',\n'vernoniastrum',\n'vernoniensis',\n'verrugana',\n'verticillitida',\n'vertumnaliformis',\n'vervactoraria',\n'vespertillionis',\n'veteranum',\n'vexillocalyculatum',\n'viaderi',\n'vicinula',\n'vidalamiini',\n'viennae',\n'vientianea',\n'viperinus',\n'viphius',\n'virgato',\n'viridenex',\n'viridicaule',\n'viscaianum',\n'viscicola',\n'vitatticella',\n'vitrimentula',\n'vittiger',\n'volkanovi',\n'volutidae',\n'volvocaceae',\n'vrangiana',\n'vuillefroyanus',\n'waigoeensis',\n'wakiyae',\n'wandelia',\n'wanfenglinensis',\n'waningus',\n'wanumaense',\n'wareipai',\n'warhami',\n'warrierianum',\n'wasabia',\n'waterhousiae',\n'wayensis',\n'webbela',\n'weinreichius',\n'wentzelellinae',\n'wernerius',\n'westergaardi',\n'westrichi',\n'wetenschappelijk',\n'whippleanum',\n'wightensis',\n'wikkiensis',\n'wilhelminia',\n'williamsianum',\n'wilmotorum',\n'wilsonichthys',\n'winchelli',\n'winterbotomi',\n'winthemiini',\n'wintonensis',\n'wugirogaense',\n'wulikensis',\n'wyandotte',\n'wyliea',\n'wyomingense',\n'xamthurus',\n'xanthosquamosa',\n'xavantina',\n'xenopodion',\n'xerantifulva',\n'xeringinia',\n'xerophilaspidina',\n'xiangguiensis',\n'ximenans',\n'ximina',\n'xipotensis',\n'xiximeca',\n'xizanganus',\n'xyleus',\n'xysila',\n'xystophora',\n'yaetakaria',\n'yaguara',\n'yamadorianus',\n'yamamurae',\n'yamanei',\n'yanbaru',\n'yangzekiangensis',\n'yasuakii',\n'yavesia',\n'yelicones',\n'yezophora',\n'yinzhengii',\n'yokenella',\n'yoshikazui',\n'yoshinoi',\n'ypirangae',\n'ypresiomyrma',\n'yuanica',\n'yunlingense',\n'yunnananus',\n'yushanica',\n'zabrosa',\n'zacatecae',\n'zaglyptomorpha',\n'zaisanensis',\n'zakonnikovae',\n'zamenhofianum',\n'zantanus',\n'zeballosicum',\n'zebricolor',\n'zelandalbia',\n'zemiodes',\n'zeugicornis',\n'zhoushanense',\n'zhovtyi',\n'zimiensis',\n'zimmii',\n'zooxanthellae',\n'zophochalca',\n'zoroaster',\n'zosterodasys',\n'zunigai',\n'zwicknia',\n'zwolferi',\n'zygethobius',\n'zygethus',\n'zygogonium',\n'zygopterorum',\n];"],"sourceRoot":""}