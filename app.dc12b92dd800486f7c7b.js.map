{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/common/random.ts","webpack:///./src/common/noise/simplex/constants.ts","webpack:///./src/common/noise/simplex/index.ts","webpack:///./src/common/noise/index.ts","webpack:///./assets/fonts/unscii-16.woff","webpack:///./assets/fonts/Unibody8Pro-RegularItalic.otf","webpack:///./assets/fonts/Unibody8Pro-Bold.otf","webpack:///./assets/fonts/Unibody8Pro-Regular.otf","webpack:///./src/worker/generation/data/Biome.ts","webpack:///./src/worker/generation/data/GameData.ts","webpack:///./src/worker/generation/utils.ts","webpack:///./src/worker/generation/biomeGen.ts","webpack:///./src/worker/generation/decoration.ts","webpack:///./src/worker/generation/featureGen.ts","webpack:///./src/common/lib/foswig.ts","webpack:///./src/common/markov.ts","webpack:///./src/data/drops.ts","webpack:///./src/data/names.ts","webpack:///./src/data/objects.ts","webpack:///./src/data/recipes.ts","webpack:///./src/data/template.ts","webpack:///./src/data/terrains.ts","webpack:///./src/worker/generation/libraryGen.ts","webpack:///./src/data/player.ts","webpack:///./src/worker/generation/index.ts","webpack:///./src/worker/generation/propsGen.ts","webpack:///./src/worker/index.ts","webpack:///./src/app/states/GameState.ts","webpack:///./src/app/components/Button.ts","webpack:///./src/app/components/Text.ts","webpack:///./src/app/components/Panel.ts","webpack:///./src/app/components/TextButton.ts","webpack:///./src/app/components/TextureSpriteRenderer.ts","webpack:///./src/app/components/TextureSprite.ts","webpack:///./src/app/components/StyledText.ts","webpack:///./src/app/components/TextToolTip.ts","webpack:///./src/app/components/ItemToolTip.ts","webpack:///./src/app/game/messages/InventorySwap.ts","webpack:///./src/app/game/messages/InventoryUpdated.ts","webpack:///./src/app/game/messages/PlayFX.ts","webpack:///./src/app/game/messages/ShowParticles.ts","webpack:///./src/app/game/messages/ApplyEffects.ts","webpack:///./src/app/game/messages/UpdateHP.ts","webpack:///./src/app/components/SlotView.ts","webpack:///./src/app/game/traits/Trait.ts","webpack:///./src/app/game/Generator.ts","webpack:///./src/app/game/entities/Entity.ts","webpack:///./src/app/game/Camera.ts","webpack:///./src/app/game/traits/Spatial.ts","webpack:///./src/app/game/traits/Inventory.ts","webpack:///./src/app/game/traits/Float.ts","webpack:///./src/app/game/traits/Stats.ts","webpack:///./src/app/game/traits/PlayerData.ts","webpack:///./src/data/animations.ts","webpack:///./src/app/game/entities/Player.ts","webpack:///./src/app/game/entities/ItemDrop.ts","webpack:///./src/app/game/EntityManager.ts","webpack:///./src/app/game/GameView.ts","webpack:///./src/app/game/tasks/Task.ts","webpack:///./src/app/game/menu/MenuPanel.ts","webpack:///./src/app/game/menu/Workbench.ts","webpack:///./src/app/game/menu/Alchemy.ts","webpack:///./src/app/game/overlays/GameOverlay.ts","webpack:///./src/app/game/overlays/MenuOverlay.ts","webpack:///./src/common/logic/stats.ts","webpack:///./src/app/game/tasks/PlayerInputTask.ts","webpack:///./src/app/game/tasks/EffectTask.ts","webpack:///./src/app/game/tasks/TerrainEffectTask.ts","webpack:///./src/app/game/tasks/EntityHPTask.ts","webpack:///./src/app/utils/animations.ts","webpack:///./src/app/utils/intersect.ts","webpack:///./src/app/game/tasks/EntityMovementTask.ts","webpack:///./src/app/game/tasks/UseItemTask.ts","webpack:///./src/app/game/tasks/AttackTask.ts","webpack:///./src/app/utils/drops.ts","webpack:///./src/app/game/tasks/InventoryTask.ts","webpack:///./src/app/game/tasks/CameraUpdateTask.ts","webpack:///./src/app/game/tasks/TerrainDisplayTask.ts","webpack:///./src/app/game/tasks/ObjectDisplayTask.ts","webpack:///./src/app/game/tasks/EntityDisplayTask.ts","webpack:///./src/app/game/tasks/FXTask.ts","webpack:///./src/app/game/tasks/ParticleTask.ts","webpack:///./src/app/game/hud/DebugConsole.ts","webpack:///./src/app/game/hud/MiniMap.ts","webpack:///./src/app/game/hud/Hotbar.ts","webpack:///./src/app/components/EffectToolTip.ts","webpack:///./src/app/game/hud/Status.ts","webpack:///./src/app/game/tasks/HUDTask.ts","webpack:///./src/app/game/TaskManagers.ts","webpack:///./src/app/game/TileMap.ts","webpack:///./src/app/game/Game.ts","webpack:///./src/app/states/StateMain.ts","webpack:///./src/app/states/StateTitle.ts","webpack:///./src/app/states/StateOverlay.ts","webpack:///./src/app/utils/Keyboard.ts","webpack:///./src/app/DragDrop.ts","webpack:///./src/app/ToolTip.ts","webpack:///./src/app/App.ts","webpack:///./src/app/settings.ts","webpack:///./src/app/index.ts","webpack:///./src/app/bootstrap.ts","webpack:///./src/app/states/StatePreload.ts","webpack:///./assets/sprites/ui.png","webpack:///./assets/sprites/terrains.png","webpack:///./assets/sprites/player.png","webpack:///./assets/sprites/objects.png","webpack:///./assets/sprites/items.png","webpack:///./assets/sprites/effects.png","webpack:///./assets sync .*","webpack:///./src/app/game/hud/debug.css","webpack:///./src/app/game/hud/debug.css?01d1","webpack:///./src/common/logic/alchemy.ts","webpack:///./src/app/styles.css","webpack:///./src/app/styles.css?95c1","webpack:///./src/common/data/Item.ts","webpack:///./src/common/data/DataLibrary.ts","webpack:///./src/common/base64.ts","webpack:///./src/common/zlib.ts","webpack:///./src/common/data/GameSave.ts","webpack:///./src/common/logic/effect/compute.ts","webpack:///./src/data/elements.ts","webpack:///./src/data/effects.ts"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","1","exports","module","l","m","c","d","name","getter","o","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","p","jsonpArray","window","oldJsonpFunction","bind","slice","randomValue","random","Math","type","min","max","rate","x","log","undefined","exponentialRandom","mean","sd","u","v","sqrt","cos","PI","gaussianRandom","instantiate","template","obj","lodash__WEBPACK_IMPORTED_MODULE_0__","subst","substs","lodash__WEBPACK_IMPORTED_MODULE_1__","path","NORM_2D","NORM_3D","NORM_4D","SQUISH_2D","SQUISH_3D","SQUISH_4D","STRETCH_2D","STRETCH_3D","STRETCH_4D","base2D","base3D","base4D","gradients2D","gradients3D","gradients4D","lookupPairs2D","lookupPairs3D","lookupPairs4D","p2D","p3D","p4D","simplex_Contribution2","[object Object]","multiplier","xsb","ysb","this","dx","dy","simplex_Contribution3","zsb","dz","simplex_Contribution4","wsb","dw","shuffleSeed","seed","newSeed","Uint32Array","simplex_OpenSimplexNoise","clientSeed","hashVals","initialize","perm","Uint8Array","perm2D","perm3D","perm4D","source","width","height","output","Array","y","noise2D","depth","z","noise3D","wLength","w","noise4D","stretchOffset","xs","ys","floor","squishOffset","dx0","dy0","xins","yins","inSum","hash","lookup2D","attn","px","py","valuePart","next","zs","dz0","zins","lookup3D","pz","ws","dw0","wins","lookup4D","pw","contributions2D","baseSet","previous","current","k","contributions3D","contributions4D","noise_Noise","rand","freq","octaves","persistence","noise","amp","maxAmp","Biome","Type","Feature","GameData_GameData","library","makeLookup","items","assign","filter","item","map","id","biomes","rivers","game","entities","terrains","Uint16Array","objects","tileBiomes","random_seed","terrainLookup","objectLookup","props","index","toIndex","terrainName","objectName","biomeIndex","withProgress","list","report","poissonDisk","radius","cellSize","SQRT1_2","gridScale","grid","ceil","active","samples","addSample","range","theta","floatBetween","sin","randomColors","chroma","lightness","candidates","times","h","common_random","chroma_js_chroma","dist","color","candidate","rgb","g","b","randomElementPair","state","elem1","elem2","elements","data_elements","elem","tier","indexOf","rasterizeLine","x0","y0","x1","y1","cb","abs","sx","sign","sy","err","BiomeSize","EdgeRoughness","EdgeJitter","WaterRarity","biomeProps","FrozenBarren","Barren","Desert","SnowPlain","Savanna","Plain","Taiga","Forest","FrozenLake","Lake","Swamp","generateBiomes","biomeCenters","diagram","d3_voronoi","voronoi","None","feature","position","gl_matrix","fromValues","humidity","temperature","generateBiomePolygons","sources","level","waters","riverTheta","newP","from","to","biome","norm","pow","generateHumidity","temperatureNoise","temp","t","generateTemperature","Number","MAX_VALUE","dh","dt","populateBiomeTypes","noiseX","noiseY","roughnessX","roughnessY","realBiome","find","renderBiome","terrain","setTerrain","setBiomeIndex","rasterizeBiomes","decorationProps","FeatureSize","featureGen_EdgeJitter","BeachSize","RiverSegments","RiverRoughness","SpawnMargins","featureProps","LavaPond","Rocky","Cemetery","Ruins","Oasis","Pond","Floral","rasterizeBiome","offset","getBiomeIndex","generateFeatures","featurePoints","features","getTerrain","setObject","sub","create","scale","normalize","intBetween","neighbor","spawnMargins","spawnBiome","Spawn","spawn","generateBiomeFeatures","riverPoint","isFrozen","biomeA","biomeB","size","round","rasterizeRivers","Node","character","neighbors","TrieNode","children","isDuplicate","word","duplicates","toLowerCase","currentNode","childNode","nameMarkov","order","start","words","addWordToChain","addToDuplicatesTrie","substr","key","ch","newNode","minLength","maxLength","allowDuplicates","maxAttempts","repeat","attempts","nextNodeIndex","Error","generateName","startCase","generateWord","simpleDrops","numDrops","prob","addWordsToChain","makeObjects","tree-coconut","texture","jitter","obstacle","interactive","drops","hp","replaceWith","table","common_data","Material","tree-oak","tex","tint","tree-spruce","bones","cross","pillar","texs","fern","cactus","bush","stone","rocks","recipe","input","makeRecipes","description","Consumable","NumFlowerTypes","makeFlower","overlay","base","aspects","element","amount","makeBush","NumBerryTypes","makeBerryBush","depleted","effects","effect","Heal","makeTerrains","water","time","liquid","speed","lava","damage","mud","grass","grass-deep","grass-light","soil","sand","ice","snow","NumFlowers","NumBerries","InitialPlayer","age","traits","spatial","pos","generate","recipes","randomElementState","flowerColors","pop","toString","berryColors","elemColors","fromPairs","fissionThreshold","fissionRate","fusionThreshold","fusionRate","MaxTier","generateLibrary","flowers","test","berries","decorateTile","getObject","decorations","decor","decorateMap","player","nextEntityId","generateProps","mapData","finalizeMap","__webpack_exports__","onmessage","ev","action","gameSave","message","progress","postMessage","save","console","error","GameState_GameState","app","root","pixi_js_lib","Button_Button","super","content","texNormal","fromFrame","texPressed","plane","NineSlicePlane","isPressed","_contentWidth","_contentHeight","_isEnabled","addChild","UIScaleFactor","buttonMode","on","updateState","emit","Clicked","pressed","contentWidth","contentHeight","isEnabled","alpha","Text_Text","text","_text","style","fontFamily","fontSize","fill","align","Panel_Panel","panelBg","WHITE","panelMask","maskTex","panelBorder","mask","resize","renderer","render","TextButton_TextButton","layout","OutlineWidth","BatchSize","VAOBufferSize","indices","TextureSpriteRenderer_TextureSpriteRenderer","currentTex","currentBlendMode","batchSize","batch","vaoBuf","ArrayBuffer","f32","Float32Array","u32","gl","shader","TextureSpriteRenderer_SpriteShader","vb","GLBuffer","createVertexBuffer","STREAM_DRAW","ib","createIndexBuffer","STATIC_DRAW","vao","createVao","addIndex","addAttribute","attributes","aVertexPosition","FLOAT","aTextureCoord","UNSIGNED_SHORT","aColor","UNSIGNED_BYTE","aClamp","aOffset","aThickness","sprite","valid","baseTexture","blendMode","flush","bindShader","bindVao","bindTexture","setBlendMode","uvs","_uvs","uvsUint32","vd","vertexData","worldAlpha","_tint","argb","premultipliedAlpha","premultiplyTint","frame","tr","transform","worldTransform","clampX","clampY","clampZ","clampW","offsetX","offsetY","thicknessX","outline","a","realWidth","thicknessY","realHeight","trX","renderTranslation","trY","upload","drawElements","TRIANGLES","Name","registerPlugin","TextureSprite_TextureSprite","animName","still","actionAnimName","actionEndTime","EMPTY","elapsed","pluginName","clip","clone","_texture","removeChild","textureDef","updateTex","hashKey","clearTexture","parseInt","setTexture","anchor","copy","anims","animation","fps","numFrames","frameDuration","frameId","update","_onAnchorUpdate","_anchor","StyledText_StyledText","styles","defaultStyle","default","pixi_multistyle_text_default","TextToolTip_TextToolTip","textView","set","ItemToolTip_ItemToolTip","fontWeight","desc","fontStyle","aspect","updateView","texts","sum","sort","percentage","toFixed","join","InventorySwap","slotA","slotB","InventoryUpdated","slot","PlayFX","target","Shake","ShowParticles","particleType","coords","numParticles","splash","Splash","float","Float","ApplyEffects","entityId","UpdateHP","hpDiff","SlotView_SlotView","toolTip","bg","bgOverlay","fgOverlay","dragging","enabled","showTooltip","alwaysInteractive","endDrag","dispatch","add","setItem","dragDrop","begin","then","hide","empty","visible","updateSlot","Size","Trait","Generator_Generator","worker","webworkify_webpack_default","Promise","resolve","load","terminate","Entity","_traits","Map","trait","arg","make","values","_game","delete","types","Camera_Camera","viewWidth","viewHeight","layer","Layer","Background","sortOffset","nextId","pt","scaleAndAdd","DisplayTileSize","beginFill","drawRect","endFill","sortLayers","ao","bo","ax","ay","bx","by","Camera","Spatial_Spatial","Spatial","velocity","solid","Objects","serialize","vel","deserialize","defaults","Inventory_Inventory","Float_Float","Stats_Stats","PlayerData_PlayerData","Inventory","slots","accepts","gravity","Stats","maxHp","str","def","spd","vit","boost","compute","stats","PlayerData","hotbarSelection","Animations","Player","left","right","up","down","attack-left","attack-right","attack-up","attack-down","Player_Player","inventory","Chestplate","Leggings","Boots","ItemDrop_ItemDrop","entity","EntityManager_EntityManager","entityProps","traitType","keys","entityType","init","GameView_GameView","camera","view","child","Task","runWhenPaused","_active","isActive","MenuPanel_MenuPanel","NumRows","Workbench_RecipeView","makeOutput","inputs","escapeRegExp","arrow","cloneDeep","numInputs","ok","drop","Workbench_Workbench","icon","upButton","downButton","recipeViews","subscription","Subscription","scrollOffset","checkInventory","check","upIcon","rotation","pivot","downIcon","messages$","ofType","subscribe","scrollMax","clamp","unsubscribe","dispose","Alchemy_Alchemy","processButton","input1","input2","fuel","doAlchemy","alchemy","GameOverlay_GameOverlay","popState","MenuWidth","MenuHeight","SlotsPerRow","MenuOverlay_MenuOverlay","tabs","saveButton","exitButton","slotViews","trash","statNames","statValues","incr","decr","activeTab","tabButtons","tab","btn","exit","button","keyboard","isDown","done","updateStats","makeBonusText","computed","diff","trim","vex","prompt","label","callback","alert","focus","localStorage","export","cancel","_super","healPerTick","PlayerInputTask_PlayerInputTask","direction","tilePerSecond","pushState","StateOverlay_StateOverlay","EffectTask_EffectTask","applyEffects","entityEffects","duration","effectIndex","findIndex","withTrait","secEdge","applyEffect","secondEdge","data_effects","Regen","power","Poison","Damage","Speed","Slowness","Strength","Weakness","TerrainEffectTask_TerrainEffectTask","doDamage","terrainId","EntityHPTask_EntityHPTask","updateHP","fadeOut","bindCallback","Tween","easing","Quadratic","Out","onComplete","fadeIn","In","animations_dir","angle","atan2","EPSILON","intersect_clamp","Point","inverseLength","Hit","collider","delta","normal","Sweep","hit","AABB","half","point","paddingX","paddingY","scaleX","scaleY","signX","signY","nearTimeX","nearTimeY","farTimeX","farTimeY","nearTime","box","sweep","intersectAABB","intersectSegment","staticColliders","nearest","il","sweepAABB","Gravity","StaticThreshold","EntityMovementTask_EntityMovementTask","obstacles","getObstacles","shape","updateDisplay","lib","top","bottom","objectDef","handleSweep","mul","sweepX","sweepInto","sweepY","nextVel","intendedVel","actualVel","UseItemCooldown","UseItemTask_UseItemTask","pressing","e","buttons","useItem","AttackRadius","AttackCooldown","AttackTask_AttackTask","attackAnimName","cursorPos","targetTile","targetTileCenter","dir","objHp","cooldown","displayCenter","interaction","plugins","handler","global","hitTest","isTileObject","equals","endAttack","targetSprite","beginAttack","playActionAnim","attacking","dropTable","generateDrops","itemDrop","replacement","InventoryTask_InventoryTask","swapInventory","swap","acceptable","tmp","playerPos","playerInv","len","pickUp","match","CameraUpdateTask_CameraUpdateTask","cameraOffset","TileSize","TerrainDisplayTask_TerrainDisplayTask","sprites","container","renderTex","NEAREST","Terrain","updateVisibility","updateSprites","origin","isVisible","removePool","terrainData","tx","ty","has","parent","minX","minY","setTransform","texSize","clz32","ObjectSize","MarginSize","ObjectDisplayTask_ObjectSprite","sw","sh","hitArea","displayScale","tileKey","ObjectDisplayTask_ObjectDisplayTask","spriteCoords","jitterNoiseX","jitterNoiseY","changes$","updateTransforms","margin","halfW","halfH","updated","objectData","setTile","toCameraPoint","EntityDisplayTask_MarginSize","EntityDisplayTask_EntityDisplayTask","Set","halfSize","FXTask_FXTask","animTargets","tween","shake","offsets","0","chain","ParticleLife","ParticleSize","ParticleGravity","ParticleRestitution","ParticleTask_Particle","life","colorJitter","ParticleTask_ParticleTask","particles","ParticleContainer","showParticles","particle","ConsoleHTML","Opacity","ObjectAlpha","HotbarKeys","EffectToolTip_EffectToolTip","valign","HPBarWidth","HPBarHeight","HUDElements","display","DOMParser","parseFromString","querySelector","lastInput","onKeyDown","event","classList","contains","toggleInput","setSelectionRange","preventDefault","document","activeElement","processInput","body","appendChild","addEventListener","remove","removeEventListener","toggle","entry","createElement","innerText","scrollIntoView","startsWith","addLog","cmd","args","compact","split","part","lastChild","sel","valueOf","padStart","selection","wheelDebounce","wheelSelection","deltaX","deltaY","numSlots","views","slotNum","hpBarIcon","hpBarBg","hpBarFill","hpBarText","effectIcons","effectToolTip","hpBar","showEffects","setEffect","hpBarX","effectsX","effectsY","mapSprite","isFullscreen","isMouseOver","mapDirty","canvas","Uint8ClampedArray","fromCanvas","renderTile","parseColor","colorNum","terrainColor","objectColor","ctx","getContext","img","getImageData","putImageData","HUDTask_HUDTask","HUDElement","TaskManagers_TaskManager","tasks","task","paused","TileMap_TileMap","Subject","Game_Game","_message$","pipe","msg","screen","StateMain_StateMain","toPromise","StateTitle_StateTitle","logo","newButton","loadBar","loadMessage","saveLabel","saveButtons","newGame","updateSaves","startGame","import","forEach","MapSize","Keyboard","newKey","keydown","keyup","blur","tabIndex","setTimeout","clear","some","DragDrop_DragDrop","pointerPos","dragOffset","endDrag$","end","activeObj","getLocalPosition","stage","toLocal","first","ToolTipOffset","ToolTip_ToolTip","panel","show","showToolTip","panelWidth","panelHeight","App_App","autoResize","antialias","roundPixels","_states","resources","oncontextmenu","SCALE_MODE","ticker","tick","passEvent","trigger","currentTarget","interactiveChildren","doTrigger","pause","enter","leave","resume","elapsedMS","app_app","innerWidth","innerHeight","onresize","stats_min","dom","_update","setMatrixArrayType","Float64Array","vex_dialog","className","bootstrap","loadingText","lineHeight","run","loader","progressHandler","onProgress","context","exec","ext","pre","res","extension","Resource","TYPE","JSON","url","meta","image","complete","fontLoad","all","fontfaceobserver_standalone","weight","_","StatePreload_awaiter","detach","resource","topState","./fonts/Unibody8Pro-Bold.otf","./fonts/Unibody8Pro-Regular.otf","./fonts/Unibody8Pro-RegularItalic.otf","./fonts/unscii-16.woff","./sprites/effects.json","./sprites/effects.png","./sprites/items.json","./sprites/items.png","./sprites/objects.json","./sprites/objects.png","./sprites/player.json","./sprites/player.png","./sprites/terrains.json","./sprites/terrains.png","./sprites/ui.json","./sprites/ui.png","webpackContext","req","webpackContextResolve","code","options","hmr","insertInto","locals","MaxAspects","makeSolution","total","elemColor","maxElem","common_data__WEBPACK_IMPORTED_MODULE_0__","common_logic_effect__WEBPACK_IMPORTED_MODULE_1__","PurifyThreshold","PurifyRate","BoostRate","FissionLoss","FusionLoss","Epsilon","mix","fusionBoost","fissionBoost","composition","compo","data_elements__WEBPACK_IMPORTED_MODULE_3__","threshold","common_random__WEBPACK_IMPORTED_MODULE_2__","inputAmount","compoRatio","finalAspects","escape","Item","populateNameId","itemId","loadDataLib","toBase64","buf","base64_js","fromBase64","buffer","compress","pako","decompress","GameSave_GameSave","json","parse","stringify","StrengthThreshold","makeEffect","replace","computeEffect","strength","strengths","Life","Recovery","Time","Void","Injury","Motion","Frost","Capture","Energy","computeStrength","ElementDef","Elements","Fire","Water","Order","Chaos","Light","Defense","Explosion","Darkness","Spirit","Sense","Absorption","Cognition","Deception","ElementLookup","EffectDef","Effects"],"mappings":"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Q,MAAMX,UAAUyB,GAGvC,IAFArB,EAAO,GAEAG,IAAgBa,EAAY,GAAKhB,EAAK7W,QAAU6X,IACtDhB,GAAQG,EAAYR,UACpB0B,EAAgBhV,KAAKyF,MAAM1F,IAAW+T,EAAYP,UAAUzW,QAC5DgX,EAAcA,EAAYP,UAAUyB,IAEjCrB,EAAK7W,OAAS6X,GAAahB,EAAK7W,OAAS4X,KAC5CI,GAAS,SAIJA,IAAYF,KAAqBG,EAAWF,GAAenB,EAAYC,EAAMxQ,KAAKyQ,aACzF,GAAImB,GAAYF,EACf,MAAM,IAAII,MAAM,6DAA+DF,EAAW,aAE3F,OAAOpB,ICtGqB,GAGxB,SAAAuB,EAAuBhV,EAAaC,EAAaJ,EAASC,KAAKD,QACnE,OAAO9C,OAAAkY,EAAA,EAAAlY,CAAU+W,EAAWoB,aAAalV,EAAKC,GAAK,OAAOI,EAAWR,ICLjE,SAAAsV,EAAsBnV,EAAaC,EAAaC,EAAcc,GAClE,OACEoU,UAAYrV,KAAM,cAAeC,MAAKC,MAAKC,QAC3CkI,QAAUiN,KAAM,EAAG9M,KAAMvH,KDD7B8S,EAAWwB,iBEDX,SACA,UACA,YACA,UACA,eACA,YACA,WACA,aACA,eACA,iBACA,UACA,cACA,eACA,mBACA,SACA,YACA,UACA,UACA,WACA,UACA,cACA,WACA,UACA,gBACA,UACA,YACA,cACA,WACA,eACA,YACA,cACA,iBACA,cACA,SACA,SACA,eACA,iBACA,eACA,eACA,cACA,aACA,YACA,SACA,aACA,eACA,aACA,cACA,WACA,aACA,WACA,eACA,oBACA,eACA,eACA,UACA,kBACA,aACA,eACA,YACA,eACA,cACA,aACA,WACA,WACA,WACA,YACA,mBACA,UACA,SACA,WACA,aACA,YACA,YACA,eACA,YACA,cACA,cACA,eACA,WACA,YACA,eACA,cACA,WACA,WACA,cACA,aACA,SACA,cACA,eACA,gBACA,eACA,SACA,cACA,aACA,SACA,WACA,gBACA,WACA,YACA,cACA,iBACA,YACA,eACA,mBACA,YACA,YACA,YACA,WACA,YACA,cACA,aACA,gBACA,kBACA,eACA,YACA,YACA,aACA,eACA,cACA,iBACA,SACA,WACA,cACA,cACA,SACA,cACA,iBACA,aACA,WACA,UACA,aACA,WACA,kBACA,cACA,iBACA,aACA,gBACA,YACA,aACA,WACA,SACA,WACA,YACA,eACA,aACA,aACA,WACA,YACA,aACA,WACA,gBACA,iBACA,eACA,UACA,iBACA,YACA,YACA,oBACA,cACA,iBACA,cACA,cACA,gBACA,iBACA,iBACA,mBACA,gBACA,kBACA,gBACA,cACA,cACA,iBACA,gBACA,YACA,mBACA,gBACA,gBACA,UACA,aACA,YACA,gBACA,cACA,SACA,aACA,gBACA,iBACA,aACA,iBACA,iBACA,gBACA,gBACA,cACA,YACA,gBACA,UACA,WACA,aACA,WACA,gBACA,YACA,qBACA,gBACA,YACA,gBACA,cACA,SACA,eACA,iBACA,YACA,WACA,YACA,UACA,YACA,eACA,aACA,iBACA,WACA,YACA,aACA,gBACA,gBACA,YACA,eACA,UACA,WACA,aACA,cACA,aACA,aACA,eACA,gBACA,cACA,cACA,iBACA,aACA,oBACA,aACA,aACA,aACA,WACA,gBACA,UACA,UACA,UACA,gBACA,WACA,UACA,eACA,WACA,cACA,aACA,WACA,aACA,gBACA,WACA,iBACA,UACA,gBACA,UACA,eACA,eACA,cACA,iBACA,YACA,aACA,cACA,iBACA,YACA,aACA,YACA,UACA,YACA,cACA,gBACA,aACA,cACA,eACA,mBACA,aACA,aACA,aACA,gBACA,eACA,gBACA,SACA,eACA,kBACA,UACA,YACA,eACA,gBACA,WACA,aACA,WACA,SACA,UACA,cACA,iBACA,gBACA,gBACA,gBACA,cACA,YACA,qBACA,kBACA,mBACA,aACA,eACA,iBACA,kBACA,iBACA,SACA,aACA,WACA,cACA,aACA,YACA,aACA,eACA,UACA,aACA,aACA,aACA,UACA,YACA,YACA,WACA,eACA,WACA,SACA,aACA,UACA,YACA,cACA,WACA,eACA,SACA,eACA,UACA,YACA,gBACA,SACA,aACA,eACA,aACA,aACA,WACA,aACA,cACA,gBACA,SACA,cACA,WACA,aACA,WACA,aACA,cACA,UACA,eACA,eACA,eACA,aACA,UACA,YACA,gBACA,SACA,WACA,eACA,UACA,SACA,UACA,YACA,SACA,cACA,WACA,aACA,cACA,eACA,gBACA,kBACA,kBACA,WACA,cACA,YACA,iBACA,UACA,eACA,aACA,SACA,YACA,YACA,cACA,UACA,aACA,YACA,cACA,aACA,cACA,aACA,WACA,WACA,cACA,WACA,WACA,kBACA,UACA,cACA,WACA,UACA,aACA,aACA,WACA,cACA,cACA,gBACA,UACA,YACA,eACA,aACA,aACA,iBACA,gBACA,UACA,iBACA,SACA,oBACA,UACA,WACA,YACA,YACA,YACA,UACA,aACA,eACA,WACA,qBACA,SACA,cACA,cACA,UACA,SACA,UACA,WACA,WACA,eACA,cACA,UACA,aACA,gBACA,UACA,WACA,YACA,iBACA,aACA,YACA,WACA,iBACA,aACA,kBACA,cACA,iBACA,mBACA,cACA,eACA,YACA,SACA,eACA,cACA,WACA,aACA,UACA,cACA,cACA,YACA,iBACA,kBACA,aACA,aACA,eACA,sBACA,YACA,aACA,kBACA,aACA,UACA,YACA,eACA,gBACA,kBACA,mBACA,cACA,WACA,cACA,eACA,UACA,gBACA,gBACA,gBACA,SACA,YACA,UACA,YACA,iBACA,YACA,aACA,UACA,aACA,cACA,cACA,cACA,gBACA,aACA,UACA,UACA,cACA,cACA,YACA,gBACA,mBACA,kBACA,aACA,WACA,gBACA,aACA,cACA,gBACA,kBACA,YACA,cACA,YACA,aACA,gBACA,iBACA,eACA,aACA,eACA,cACA,gBACA,gBACA,aACA,aACA,YACA,iBACA,WACA,iBACA,gBACA,eACA,cACA,cACA,YACA,WACA,YACA,WACA,cACA,eACA,aACA,aACA,WACA,WACA,WACA,YACA,WACA,iBACA,aACA,SACA,aACA,gBACA,aACA,aACA,UACA,UACA,cACA,WACA,cACA,aACA,aACA,UACA,YACA,eACA,cACA,eACA,UACA,aACA,SACA,YACA,SACA,SACA,eACA,eACA,gBACA,gBACA,cACA,kBACA,WACA,YACA,eACA,gBACA,aACA,eACA,eACA,WACA,SACA,aACA,cACA,aACA,gBACA,eACA,cACA,kBACA,cACA,eACA,YACA,WACA,YACA,cACA,eACA,eACA,YACA,gBACA,gBACA,aACA,YACA,eACA,aACA,iBACA,gBACA,sBACA,UACA,YACA,gBACA,cACA,iBACA,WACA,eACA,eACA,gBACA,cACA,WACA,aACA,UACA,WACA,WACA,cACA,cACA,oBACA,aACA,gBACA,eACA,UACA,cACA,eACA,WACA,iBACA,eACA,cACA,cACA,UACA,iBACA,UACA,gBACA,iBACA,SACA,aACA,YACA,oBACA,WACA,eACA,eACA,UACA,eACA,gBACA,cACA,YACA,gBACA,kBACA,cACA,aACA,aACA,cACA,gBACA,aACA,cACA,gBACA,YACA,eACA,gBACA,WACA,eACA,kBACA,YACA,eACA,kBACA,gBACA,eACA,UACA,cACA,gBACA,iBACA,YACA,YACA,eACA,cACA,gBACA,gBACA,iBACA,eACA,oBACA,WACA,gBACA,aACA,eACA,iBACA,aACA,aACA,eACA,UACA,WACA,aACA,eACA,aACA,cACA,aACA,aACA,eACA,cACA,eACA,cACA,cACA,UACA,YACA,cACA,eACA,SACA,WACA,WACA,YACA,aACA,UACA,WACA,qBACA,YACA,eACA,gBACA,YACA,UACA,cACA,mBACA,aACA,iBACA,gBACA,oBACA,aACA,YACA,aACA,eACA,aACA,gBACA,eACA,SACA,cACA,cACA,aACA,aACA,cACA,aACA,UACA,UACA,WACA,YACA,iBACA,UACA,SACA,YACA,WACA,eACA,cACA,YACA,YACA,aACA,aACA,aACA,UACA,eACA,mBACA,WACA,cACA,YACA,gBACA,iBACA,YACA,UACA,aACA,cACA,eACA,aACA,gBACA,YACA,cACA,cACA,aACA,SACA,cACA,eACA,WACA,cACA,cACA,gBACA,aACA,WACA,WACA,aACA,gBACA,cACA,YACA,aACA,eACA,eACA,aACA,aACA,mBACA,eACA,YACA,YACA,gBACA,cACA,gBACA,kBACA,cACA,eACA,UACA,WACA,aACA,eACA,UACA,aACA,YACA,eACA,YACA,kBACA,gBACA,aACA,cACA,WACA,cACA,iBACA,iBACA,gBACA,eACA,eACA,aACA,gBACA,aACA,WACA,SACA,eACA,YACA,WACA,cACA,YACA,gBACA,aACA,WACA,WACA,gBACA,cACA,aACA,eACA,oBACA,kBACA,eACA,cACA,iBACA,iBACA,mBACA,gBACA,cACA,iBACA,SACA,WACA,YACA,YACA,aACA,UACA,SACA,eACA,aACA,eACA,eACA,kBACA,iBACA,iBACA,YACA,iBACA,cACA,aACA,eACA,aACA,gBACA,YACA,WACA,aACA,aACA,iBACA,eACA,cACA,aACA,iBACA,aACA,YACA,aACA,gBACA,gBACA,WACA,qBACA,eACA,WACA,iBACA,SACA,YACA,iBACA,YACA,aACA,eACA,eACA,cACA,YACA,WACA,YACA,aACA,iBACA,YACA,eACA,YACA,cACA,YACA,WACA,WACA,YACA,WACA,cACA,cACA,eACA,sBACA,WACA,iBACA,gBACA,aACA,kBACA,gBACA,eACA,eACA,gBACA,mBACA,YACA,cACA,SACA,YACA,cACA,gBACA,aACA,kBACA,WACA,SACA,cACA,UACA,eACA,YACA,cACA,YACA,WACA,SACA,WACA,iBACA,iBACA,WACA,iBACA,eACA,mBACA,WACA,cACA,aACA,YACA,gBACA,aACA,gBACA,UACA,cACA,YACA,WACA,WACA,cACA,cACA,cACA,WACA,iBACA,YACA,aACA,YACA,cACA,YACA,eACA,eACA,aACA,UACA,SACA,gBACA,YACA,cACA,WACA,WACA,aACA,mBACA,YACA,UACA,cACA,SACA,WACA,gBACA,UACA,iBACA,qBACA,aACA,YACA,gBACA,aACA,SACA,WACA,iBACA,kBACA,iBACA,iBACA,oBACA,WACA,WACA,UACA,UACA,eACA,WACA,cACA,SACA,UACA,qBACA,aACA,YACA,SACA,eACA,cACA,eACA,YACA,iBACA,aACA,cACA,YACA,gBACA,aACA,gBACA,YACA,WACA,WACA,UACA,SACA,YACA,cACA,UACA,UACA,SACA,gBACA,iBACA,YACA,WACA,SACA,WACA,YACA,YACA,aACA,gBACA,kBACA,eACA,oBACA,eACA,YACA,gBACA,cACA,UACA,iBACA,UACA,WACA,WACA,SACA,SACA,aACA,YACA,WACA,cACA,YACA,eACA,aACA,gBACA,gBACA,UACA,kBACA,WACA,WACA,mBACA,gBACA,kBACA,kBACA,aACA,WACA,aACA,YACA,cACA,YACA,mBACA,iBACA,cACA,cACA,UACA,aACA,aACA,aACA,iBACA,UACA,aACA,YACA,aACA,YACA,YACA,YACA,WACA,YACA,UACA,gBACA,WACA,kBACA,WACA,aACA,eACA,kBACA,UACA,YACA,mBACA,cACA,UACA,WACA,iBACA,eACA,UACA,eACA,YACA,gBACA,aACA,YACA,WACA,UACA,gBACA,YACA,oBACA,YACA,cACA,WACA,WACA,eACA,gBACA,YACA,YACA,YACA,cACA,aACA,gBACA,aACA,YACA,eACA,cACA,iBACA,eACA,aACA,eACA,WACA,aACA,YACA,eACA,aACA,YACA,cACA,SACA,YACA,aACA,WACA,UACA,WACA,YACA,WACA,aACA,UACA,SACA,YACA,eACA,cACA,eACA,gBACA,YACA,oBACA,UACA,eACA,aACA,kBACA,YACA,eACA,cACA,kBACA,WACA,SACA,YACA,mBACA,SACA,WACA,gBACA,eACA,YACA,eACA,WACA,UACA,WACA,YACA,cACA,cACA,aACA,aACA,UACA,WACA,eACA,eACA,gBACA,eACA,aACA,cACA,iBACA,iBACA,iBACA,aACA,cACA,UACA,cACA,gBACA,eACA,iBACA,cACA,iBACA,cACA,UACA,YACA,cACA,aACA,UACA,eACA,eACA,gBACA,cACA,gBACA,cACA,UACA,WACA,eACA,iBACA,cACA,YACA,eACA,eACA,gBACA,WACA,cACA,gBACA,YACA,YACA,UACA,iBACA,aACA,aACA,eACA,eACA,cACA,kBACA,WACA,cACA,WACA,YACA,gBACA,YACA,YACA,cACA,cACA,gBACA,cACA,YACA,aACA,kBACA,aACA,aACA,eACA,UACA,WACA,SACA,eACA,UACA,UACA,UACA,qBACA,YACA,SACA,aACA,UACA,UACA,WACA,SACA,aACA,cACA,cACA,cACA,YACA,SACA,cACA,YACA,iBACA,aACA,gBACA,UACA,iBACA,cACA,aACA,cACA,mBACA,eACA,eACA,uBACA,WACA,UACA,iBACA,cACA,cACA,SACA,mBACA,cACA,iBACA,iBACA,gBACA,aACA,aACA,UACA,cACA,SACA,aACA,WACA,aACA,UACA,YACA,cACA,eACA,WACA,cACA,SACA,aACA,gBACA,cACA,iBACA,aACA,gBACA,YACA,UACA,WACA,gBACA,aACA,eACA,cACA,eACA,aACA,WACA,aACA,YACA,YACA,YACA,gBACA,eACA,SACA,cACA,YACA,YACA,mBACA,kBACA,eACA,aACA,YACA,YACA,iBACA,aACA,aACA,SACA,UACA,aACA,eACA,aACA,mBACA,cACA,aACA,aACA,gBACA,aACA,aACA,mBACA,UACA,cACA,eACA,eACA,sBACA,aACA,YACA,gBACA,SACA,cACA,SACA,iBACA,aACA,eACA,YACA,WACA,WACA,gBACA,cACA,aACA,YACA,aACA,aACA,eACA,WACA,WACA,iBACA,cACA,YACA,iBACA,SACA,WACA,cACA,cACA,gBACA,gBACA,cACA,cACA,aACA,UACA,YACA,cACA,aACA,cACA,eACA,cACA,SACA,gBACA,eACA,kBACA,gBACA,kBACA,gBACA,iBACA,YACA,YACA,kBACA,cACA,UACA,UACA,UACA,eACA,iBACA,eACA,iBACA,cACA,gBACA,WACA,YACA,cACA,kBACA,aACA,WACA,UACA,WACA,eACA,gBACA,YACA,eACA,gBACA,YACA,cACA,aACA,eACA,aACA,cACA,cACA,cACA,UACA,aACA,eACA,cACA,aACA,aACA,YACA,aACA,SACA,eACA,aACA,eACA,aACA,WACA,mBACA,qBACA,YACA,aACA,SACA,aACA,WACA,UACA,UACA,iBACA,cACA,eACA,aACA,aACA,mBACA,YACA,eACA,gBACA,mBACA,gBACA,gBACA,mBACA,YACA,YACA,aACA,cACA,iBACA,UACA,aACA,iBACA,cACA,WACA,gBACA,YACA,cACA,kBACA,UACA,cACA,UACA,YACA,eACA,cACA,gBACA,aACA,aACA,YACA,eACA,aACA,gBACA,YACA,YACA,iBACA,WACA,kBACA,mBACA,WACA,cACA,YACA,eACA,cACA,cACA,WACA,eACA,kBACA,aACA,WACA,gBACA,eACA,eACA,eACA,cACA,WACA,aACA,aACA,WACA,WACA,UACA,UACA,YACA,eACA,UACA,YACA,UACA,cACA,aACA,aACA,WACA,cACA,SACA,YACA,kBACA,UACA,aACA,WACA,SACA,cACA,cACA,gBACA,YACA,UACA,aACA,cACA,UACA,SACA,aACA,aACA,UACA,YACA,eACA,gBACA,cACA,kBACA,aACA,WACA,YACA,YACA,YACA,aACA,YACA,aACA,gBACA,iBACA,YACA,cACA,aACA,cACA,WACA,YACA,cACA,UACA,WACA,UACA,aACA,gBACA,kBACA,gBACA,aACA,YACA,cACA,gBACA,eACA,iBACA,aACA,UACA,cACA,gBACA,iBACA,aACA,UACA,UACA,gBACA,gBACA,YACA,WACA,UACA,YACA,YACA,oBACA,WACA,YACA,WACA,YACA,WACA,eACA,cACA,YACA,SACA,YACA,WACA,UACA,aACA,cACA,WACA,gBACA,YACA,UACA,cACA,aACA,WACA,SACA,cACA,YACA,UACA,UACA,iBACA,WACA,WACA,WACA,eACA,gBACA,aACA,UACA,iBACA,cACA,eACA,aACA,WACA,WACA,YACA,YACA,UACA,eACA,gBACA,eACA,SACA,aACA,eACA,YACA,WACA,SACA,eACA,eACA,aACA,iBACA,gBACA,eACA,WACA,aACA,WACA,cACA,cACA,WACA,aACA,gBACA,eACA,qBACA,eACA,gBACA,aACA,eACA,gBACA,UACA,cACA,WACA,aACA,eACA,cACA,cACA,cACA,eACA,aACA,YACA,UACA,UACA,cACA,aACA,aACA,iBACA,YACA,cACA,YACA,SACA,aACA,SACA,YACA,cACA,YACA,iBACA,gBACA,cACA,YACA,mBACA,cACA,aACA,gBACA,eACA,WACA,eACA,iBACA,eACA,oBACA,SACA,aACA,cACA,UACA,WACA,WACA,cACA,cACA,aACA,eACA,cACA,cACA,aACA,eACA,aACA,gBACA,SACA,YACA,WACA,YACA,eACA,cACA,iBACA,YACA,cACA,WACA,cACA,WACA,gBACA,aACA,aACA,cACA,YACA,kBACA,YACA,eACA,eACA,cACA,aACA,cACA,gBACA,YACA,YACA,mBACA,gBACA,aACA,YACA,aACA,YACA,iBACA,cACA,eACA,cACA,cACA,iBACA,iBACA,SACA,eACA,cACA,gBACA,aACA,gBACA,eACA,iBACA,iBACA,aACA,iBACA,aACA,aACA,YACA,iBACA,gBACA,eACA,YACA,UACA,aACA,cACA,YACA,cACA,SACA,YACA,YACA,UACA,gBACA,cACA,UACA,cACA,cACA,cACA,aACA,eACA,eACA,WACA,YACA,eACA,aACA,SACA,cACA,cACA,YACA,aACA,kBACA,eACA,eACA,cACA,gBACA,iBACA,gBACA,eACA,aACA,mBACA,kBACA,gBACA,kBACA,aACA,aACA,YACA,gBACA,iBACA,eACA,gBACA,eACA,aACA,YACA,cACA,YACA,UACA,cACA,oBACA,gBACA,eACA,kBACA,WACA,gBACA,WACA,aACA,UACA,YACA,cACA,aACA,eACA,SACA,WACA,UACA,WACA,aACA,YACA,UACA,aACA,gBACA,aACA,aACA,cACA,iBACA,cACA,iBACA,gBACA,cACA,aACA,eACA,cACA,gBACA,aACA,WACA,YACA,eACA,WACA,WACA,aACA,aACA,YACA,SACA,aACA,WACA,aACA,eACA,kBACA,YACA,aACA,YACA,eACA,SACA,cACA,SACA,SACA,UACA,SACA,mBACA,cACA,WACA,iBACA,eACA,gBACA,eACA,gBACA,aACA,aACA,UACA,YACA,cACA,YACA,gBACA,cACA,uBACA,cACA,gBACA,gBACA,eACA,mBACA,gBACA,YACA,aACA,aACA,UACA,WACA,iBACA,gBACA,WACA,aACA,cACA,WACA,WACA,eACA,qBACA,mBACA,YACA,iBACA,eACA,mBACA,cACA,aACA,eACA,eACA,cACA,aACA,YACA,iBACA,WACA,gBACA,cACA,cACA,aACA,gBACA,WACA,gBACA,gBACA,aACA,aACA,eACA,YACA,YACA,SACA,aACA,aACA,oBACA,aACA,gBACA,eACA,aACA,mBACA,mBACA,cACA,YACA,kBACA,gBACA,gBACA,eACA,gBACA,gBACA,iBACA,iBACA,UACA,WACA,iBACA,kBACA,UACA,WACA,cACA,gBACA,YACA,YACA,oBACA,YACA,aACA,YACA,cACA,cACA,aACA,WACA,WACA,eACA,eACA,UACA,WACA,SACA,SACA,aACA,gBACA,eACA,YACA,UACA,eACA,UACA,YACA,iBACA,aACA,WACA,eACA,aACA,SACA,kBACA,YACA,WACA,WACA,gBACA,cACA,aACA,WACA,YACA,gBACA,eACA,gBACA,eACA,UACA,WACA,aACA,UACA,YACA,SACA,cACA,WACA,aACA,cACA,YACA,mBACA,YACA,YACA,WACA,WACA,eACA,WACA,YACA,mBACA,cACA,UACA,aACA,mBACA,cACA,aACA,YACA,iBACA,UACA,gBACA,aACA,iBACA,cACA,aACA,UACA,WACA,aACA,aACA,iBACA,UACA,SACA,SACA,eACA,UACA,SACA,UACA,aACA,qBACA,cACA,YACA,aACA,YACA,UACA,aACA,aACA,eACA,cACA,WACA,eACA,iBACA,WACA,gBACA,gBACA,YACA,YACA,eACA,YACA,YACA,SACA,YACA,WACA,eACA,UACA,aACA,eACA,YACA,aACA,iBACA,eACA,oBACA,eACA,UACA,YACA,aACA,eACA,aACA,eACA,eACA,cACA,cACA,SACA,WACA,aACA,SACA,SACA,gBACA,iBACA,UACA,WACA,WACA,WACA,eACA,WACA,cACA,cACA,gBACA,cACA,aACA,cACA,iBACA,iBACA,oBACA,cACA,iBACA,eACA,UACA,YACA,iBACA,YACA,iBACA,eACA,YACA,gBACA,YACA,SACA,cACA,aACA,UACA,YACA,cACA,eACA,aACA,aACA,oBACA,YACA,SACA,cACA,YACA,cACA,YACA,gBACA,gBACA,kBACA,oBACA,WACA,YACA,YACA,eACA,cACA,mBACA,aACA,YACA,gBACA,cACA,UACA,WACA,aACA,YACA,WACA,YACA,gBACA,eACA,aACA,UACA,eACA,cACA,aACA,cACA,gBACA,WACA,oBACA,iBACA,mBACA,gBACA,gBACA,aACA,cACA,aACA,SACA,aACA,cACA,gBACA,iBACA,cACA,eACA,iBACA,aACA,cACA,aACA,WACA,aACA,cACA,WACA,UACA,eACA,UACA,cACA,iBACA,eACA,eACA,WACA,UACA,YACA,WACA,YACA,eACA,kBACA,UACA,UACA,aACA,WACA,eACA,WACA,aACA,WACA,eACA,UACA,WACA,UACA,iBACA,aACA,YACA,eACA,kBACA,aACA,UACA,WACA,gBACA,cACA,kBACA,eACA,UACA,WACA,WACA,gBACA,eACA,WACA,aACA,WACA,cACA,gBACA,YACA,SACA,eACA,YACA,cACA,YACA,WACA,eACA,cACA,gBACA,WACA,cACA,cACA,eACA,YACA,UACA,UACA,cACA,cACA,eACA,YACA,oBACA,eACA,iBACA,cACA,cACA,aACA,sBACA,eACA,iBACA,kBACA,gBACA,WACA,WACA,eACA,aACA,UACA,aACA,WACA,YACA,UACA,eACA,YACA,aACA,gBACA,aACA,aACA,gBACA,eACA,gBACA,iBACA,eACA,eACA,aACA,kBACA,eACA,gBACA,iBACA,aACA,gBACA,iBACA,kBACA,oBACA,YACA,eACA,gBACA,cACA,eACA,oBACA,mBACA,eACA,kBACA,cACA,mBACA,cACA,aACA,gBACA,eACA,aACA,eACA,mBACA,aACA,eACA,aACA,iBACA,gBACA,cACA,iBACA,aACA,mBACA,YACA,UACA,YACA,YACA,cACA,aACA,WACA,aACA,cACA,SACA,gBACA,eACA,YACA,gBACA,eACA,gBACA,YACA,UACA,aACA,gBACA,mBACA,gBACA,gBACA,cACA,eACA,WACA,mBACA,eACA,YACA,YACA,WACA,aACA,WACA,aACA,iBACA,cACA,WACA,YACA,gBACA,gBACA,WACA,aACA,gBACA,eACA,YACA,aACA,YACA,SACA,WACA,iBACA,cACA,YACA,aACA,aACA,UACA,aACA,cACA,eACA,gBACA,aACA,eACA,cACA,aACA,kBACA,gBACA,eACA,WACA,gBACA,YACA,UACA,WACA,iBACA,UACA,iBACA,aACA,aACA,YACA,cACA,UACA,cACA,cACA,iBACA,gBACA,YACA,aACA,kBACA,mBACA,YACA,iBACA,kBACA,cACA,YACA,cACA,cACA,cACA,cACA,cACA,cACA,aACA,gBACA,YACA,aACA,WACA,cACA,eACA,gBACA,YACA,iBACA,cACA,WACA,UACA,WACA,mBACA,qBACA,gBACA,eACA,gBACA,cACA,gBACA,kBACA,gBACA,aACA,YACA,WACA,YACA,kBACA,UACA,YACA,WACA,gBACA,YACA,eACA,YACA,YACA,cACA,eACA,aACA,WACA,YACA,eACA,SACA,YACA,aACA,UACA,eACA,aACA,cACA,WACA,UACA,YACA,cACA,aACA,YACA,iBACA,eACA,oBACA,gBACA,eACA,cACA,iBACA,wBACA,WACA,eACA,gBACA,kBACA,eACA,cACA,gBACA,eACA,iBACA,YACA,iBACA,cACA,eACA,iBACA,cACA,YACA,YACA,YACA,eACA,WACA,gBACA,gBACA,aACA,SACA,YACA,WACA,gBACA,kBACA,kBACA,aACA,UACA,cACA,SACA,cACA,aACA,gBACA,aACA,cACA,gBACA,oBACA,iBACA,WACA,cACA,aACA,WACA,UACA,gBACA,cACA,eACA,cACA,SACA,gBACA,gBACA,WACA,aACA,eACA,kBACA,cACA,mBACA,eACA,sBACA,gBACA,SACA,eACA,qBACA,cACA,kBACA,gBACA,cACA,WACA,aACA,eACA,iBACA,YACA,gBACA,mBACA,iBACA,gBACA,cACA,kBACA,eACA,sBACA,eACA,aACA,kBACA,eACA,gBACA,YACA,eACA,iBACA,cACA,cACA,YACA,eACA,cACA,gBACA,cACA,gBACA,iBACA,kBACA,gBACA,aACA,cACA,kBACA,mBACA,iBACA,kBACA,WACA,cACA,aACA,gBACA,mBACA,mBACA,kBACA,mBACA,gBACA,iBACA,oBACA,gBACA,gBACA,iBACA,mBACA,kBACA,oBACA,eACA,eACA,mBACA,qBACA,qBACA,eACA,gBACA,sBACA,mBACA,oBACA,mBACA,kBACA,kBACA,oBACA,gBACA,kBACA,gBACA,mBACA,mBACA,iBACA,mBACA,iBACA,gBACA,mBACA,eACA,kBACA,iBACA,iBACA,eACA,sBACA,cACA,eACA,mBACA,iBACA,mBACA,sBACA,kBACA,iBACA,gBACA,cACA,gBACA,aACA,mBACA,iBACA,cACA,cACA,SACA,aACA,kBACA,WACA,YACA,eACA,WACA,gBACA,eACA,kBACA,SACA,YACA,kBACA,WACA,kBACA,eACA,mBACA,gBACA,mBACA,YACA,UACA,UACA,mBACA,kBACA,aACA,cACA,aACA,cACA,UACA,cACA,WACA,cACA,eACA,kBACA,mBACA,cACA,mBACA,mBACA,kBACA,kBACA,oBACA,kBACA,eACA,eACA,gBACA,gBACA,iBACA,WACA,SACA,WACA,aACA,aACA,YACA,SACA,aACA,cACA,iBACA,YACA,aACA,UACA,mBACA,cACA,SACA,SACA,WACA,YACA,YACA,WACA,SACA,eACA,eACA,eACA,mBACA,SACA,YACA,WACA,WACA,eACA,aACA,WACA,aACA,gBACA,YACA,YACA,WACA,UACA,cACA,WACA,cACA,kBACA,SACA,eACA,iBACA,kBACA,YACA,kBACA,WACA,UACA,cACA,cACA,iBACA,YACA,kBACA,cACA,iBACA,gBACA,cACA,cACA,kBACA,aACA,aACA,UACA,aACA,YACA,SACA,YACA,mBACA,gBACA,WACA,SACA,iBACA,aACA,cACA,iBACA,UACA,eACA,SACA,kBACA,YACA,cACA,SACA,iBACA,cACA,SACA,cACA,cACA,cACA,WACA,cACA,iBACA,eACA,aACA,YACA,WACA,SACA,WACA,YACA,WACA,eACA,cACA,YACA,WACA,iBACA,YACA,YACA,WACA,WACA,cACA,aACA,cACA,YACA,YACA,kBACA,eACA,gBACA,eACA,cACA,eACA,iBACA,aACA,cACA,aACA,eACA,WACA,cACA,aACA,cACA,WACA,cACA,SACA,UACA,YACA,aACA,iBACA,kBACA,mBACA,cACA,aACA,iBACA,eACA,aACA,WACA,eACA,cACA,cACA,SACA,eACA,YACA,mBACA,UACA,UACA,eACA,SACA,cACA,cACA,iBACA,eACA,iBACA,YACA,UACA,eACA,eACA,YACA,aACA,cACA,cACA,UACA,YACA,YACA,YACA,kBACA,aACA,WACA,WACA,aACA,YACA,iBACA,aACA,aACA,cACA,YACA,oBACA,aACA,eACA,iBACA,UACA,YACA,eACA,eACA,aACA,YACA,mBACA,eACA,aACA,eACA,aACA,YACA,YACA,kBACA,eACA,eACA,cACA,gBACA,YACA,aACA,gBACA,gBACA,gBACA,UACA,aACA,WACA,YACA,WACA,aACA,cACA,aACA,YACA,WACA,eACA,eACA,gBACA,aACA,aACA,WACA,iBACA,cACA,WACA,aACA,eACA,eACA,aACA,gBACA,WACA,eACA,cACA,aACA,cACA,iBACA,WACA,YACA,gBACA,eACA,WACA,YACA,YACA,aACA,aACA,eACA,YACA,SACA,cACA,aACA,YACA,cACA,UACA,WACA,WACA,WACA,cACA,eACA,aACA,aACA,cACA,WACA,SACA,eACA,WACA,cACA,WACA,cACA,UACA,WACA,UACA,gBACA,cACA,YACA,cACA,WACA,iBACA,aACA,gBACA,aACA,YACA,gBACA,cACA,UACA,aACA,gBACA,kBACA,cACA,oBACA,kBACA,gBACA,SACA,cACA,cACA,WACA,WACA,aACA,UACA,UACA,gBACA,cACA,iBACA,UACA,cACA,eACA,kBACA,eACA,cACA,eACA,YACA,gBACA,cACA,WACA,iBACA,WACA,kBACA,WACA,iBACA,cACA,gBACA,SACA,eACA,UACA,gBACA,WACA,WACA,YACA,gBACA,kBACA,mBACA,kBACA,cACA,gBACA,iBACA,iBACA,eACA,eACA,cACA,aACA,cACA,cACA,cACA,WACA,eACA,aACA,gBACA,eACA,eACA,aACA,kBACA,eACA,eACA,WACA,UACA,UACA,aACA,UACA,oBACA,cACA,WACA,kBACA,iBACA,cACA,kBACA,eACA,iBACA,cACA,WACA,aACA,aACA,gBACA,cACA,cACA,eACA,iBACA,aACA,gBACA,gBACA,mBACA,eACA,cACA,eACA,eACA,iBACA,gBACA,cACA,eACA,aACA,aACA,eACA,aACA,kBACA,cACA,gBACA,WACA,eACA,iBACA,eACA,cACA,YACA,UACA,cACA,WACA,gBACA,YACA,iBACA,cACA,mBACA,aACA,SACA,gBACA,SACA,iBACA,UACA,gBACA,gBACA,cACA,gBACA,cACA,iBACA,WACA,aACA,UACA,cACA,gBACA,cACA,eACA,iBACA,iBACA,SACA,eACA,cACA,eACA,aACA,iBACA,gBACA,gBACA,kBACA,eACA,aACA,mBACA,eACA,gBACA,WACA,WACA,aACA,gBACA,YACA,YACA,YACA,cACA,aACA,aACA,cACA,WACA,aACA,kBACA,YACA,YACA,UACA,UACA,oBACA,cACA,gBACA,UACA,WACA,aACA,WACA,WACA,WACA,aACA,aACA,iBACA,eACA,eACA,WACA,SACA,eACA,gBACA,gBACA,cACA,eACA,eACA,cACA,cACA,aACA,eACA,gBACA,aACA,SACA,aACA,UACA,cACA,cACA,cACA,UACA,UACA,gBACA,cACA,WACA,eACA,WACA,UACA,aACA,eACA,eACA,gBACA,YACA,YACA,eACA,SACA,eACA,UACA,aACA,aACA,aACA,kBACA,eACA,iBACA,YACA,WACA,eACA,UACA,WACA,iBACA,kBACA,kBACA,aACA,kBACA,aACA,aACA,iBACA,cACA,kBACA,aACA,aACA,WACA,mBACA,cACA,kBACA,eACA,YACA,kBACA,iBACA,cACA,aACA,WACA,aACA,cACA,cACA,gBACA,aACA,cACA,YACA,WACA,cACA,cACA,kBACA,iBACA,eACA,cACA,eACA,aACA,cACA,UACA,aACA,iBACA,UACA,aACA,YACA,WACA,cACA,UACA,cACA,YACA,WACA,YACA,cACA,WACA,YACA,SACA,WACA,aACA,aACA,cACA,eACA,aACA,YACA,eACA,YACA,UACA,SACA,aACA,kBACA,YACA,aACA,eACA,YACA,UACA,UACA,eACA,cACA,gBACA,YACA,qBACA,iBACA,UACA,aACA,mBACA,gBACA,aACA,YACA,iBACA,aACA,gBACA,aACA,cACA,aACA,eACA,gBACA,aACA,gBACA,cACA,mBACA,oBACA,YACA,SACA,gBACA,cACA,YACA,cACA,gBACA,cACA,eACA,gBACA,cACA,aACA,eACA,YACA,kBACA,cACA,WACA,gBACA,aACA,aACA,eACA,cACA,UACA,gBACA,kBACA,eACA,aACA,UACA,iBACA,kBACA,UACA,YACA,WACA,aACA,cACA,YACA,cACA,iBACA,eACA,aACA,eACA,WACA,gBACA,cACA,WACA,WACA,cACA,WACA,cACA,gBACA,YACA,YACA,eACA,eACA,cACA,cACA,YACA,cACA,gBACA,UACA,YACA,cACA,kBACA,WACA,YACA,YACA,cACA,WACA,SACA,YACA,aACA,eACA,SACA,WACA,YACA,YACA,YACA,WACA,eACA,aACA,YACA,WACA,cACA,SACA,cACA,SACA,gBACA,WACA,cACA,aACA,eACA,eACA,YACA,eACA,YACA,aACA,YACA,gBACA,WACA,WACA,SACA,gBACA,UACA,UACA,gBACA,gBACA,eACA,YACA,iBACA,mBACA,gBACA,kBACA,YACA,qBACA,UACA,WACA,cACA,UACA,aACA,YACA,UACA,UACA,YACA,cACA,aACA,YACA,eACA,eACA,WACA,YACA,YACA,cACA,YACA,iBACA,cACA,UACA,WACA,kBACA,WACA,aACA,WACA,UACA,eACA,UACA,eACA,WACA,UACA,eACA,iBACA,YACA,eACA,YACA,mBACA,cACA,aACA,aACA,cACA,gBACA,aACA,gBACA,YACA,eACA,cACA,cACA,eACA,aACA,YACA,SACA,cACA,YACA,iBACA,YACA,aACA,eACA,aACA,mBACA,gBACA,WACA,SACA,aACA,WACA,aACA,SACA,SACA,aACA,aACA,UACA,eACA,YACA,UACA,UACA,mBACA,WACA,UACA,YACA,YACA,aACA,YACA,aACA,WACA,YACA,eACA,UACA,cACA,aACA,YACA,UACA,YACA,iBACA,cACA,eACA,gBACA,WACA,eACA,aACA,cACA,WACA,cACA,eACA,UACA,YACA,SACA,gBACA,cACA,YACA,eACA,UACA,WACA,WACA,cACA,WACA,aACA,iBC3lHO,MAAMC,EAAc,MAEzBC,gBACEC,QAAS,4BACTpK,MAAO,SACP8G,MAAO,EACPuD,QAAQ,EACRC,UAAU,EACVC,aAAa,EACbC,OACEC,GAAI,EACJC,YAAa,KACbC,MAAOb,EAAY,EAAG,EAAG,IACvBnU,UACEyH,GAAI,YACJhK,KAAM,YACNsB,KAAMkW,EAAA,EAAKlO,KAAKmO,SAChBT,QAAS,sBAEXrU,cAIN+U,YACEV,QAAS,2BACTpK,MAAO,SACP8G,MAAO,EACPuD,QAAQ,EACRC,UAAU,EACVC,aAAa,EACbC,OACEC,GAAI,EACJC,YAAa,KACbC,MAAOb,EAAY,EAAG,EAAG,IACvBnU,UACEyH,GAAI,WACJhK,KAAM,WACNsB,KAAMkW,EAAA,EAAKlO,KAAKmO,SAChBT,SACE1V,KAAM,SACNqW,IAAK,qBACLC,KAAM,WAGVjV,cAINkV,eACEb,QAAS,8BACTpK,MAAO,SACP8G,MAAO,EAC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","file":"app.dc12b92dd800486f7c7b.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t1: 0\n \t};\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"app.\" + {}[chunkId] + \".js\"\n \t}\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([186,0]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import { cloneDeep, set } from 'lodash';\n\nexport interface Constant {\n  type: 'constant';\n  value: number;\n}\n\nexport interface UniformRandom {\n  type: 'uniform';\n  min: number;\n  max: number;\n}\n\nexport interface ExponentialRandom {\n  type: 'exponential';\n  rate: number;\n  min?: number;\n  max?: number;\n}\n\nexport interface GaussianRandom {\n  type: 'gaussian';\n  mean: number;\n  sd: number;\n  min?: number;\n  max?: number;\n}\n\nexport type RandomValue = Constant | UniformRandom | ExponentialRandom | GaussianRandom;\nexport type RandomSubst = { path: string } & RandomValue;\n\nexport interface RandomTemplate<T> {\n  template: T;\n  substs: RandomSubst[];\n}\n\nexport function randomValue(value: RandomValue, random = Math.random) {\n  switch (value.type) {\n    case 'constant': return value.value;\n    case 'uniform': return value.min + random() * (value.max - value.min);\n    case 'exponential': return exponentialRandom(value.rate, value.min, value.max, random);\n    case 'gaussian': return gaussianRandom(value.mean, value.sd, value.min, value.max, random);\n  }\n}\n\nexport function instantiate<T>(template: RandomTemplate<T>, random = Math.random) {\n  const obj = cloneDeep(template.template);\n  for (const subst of template.substs)\n    set(obj as any, subst.path, randomValue(subst));\n  return obj;\n}\n\n// https://stackoverflow.com/a/2106564\nexport function exponentialRandom(rate: number, min?: number, max?: number, random = Math.random) {\n  let x = Math.log(1 - random()) / -rate;\n  if (min !== undefined) x = Math.max(min, x);\n  if (max !== undefined) x = Math.min(max, x);\n  return x;\n}\n\n// https://stackoverflow.com/a/36481059\nexport function gaussianRandom(\n  mean: number, sd: number, min?: number, max?: number, random = Math.random\n) {\n  let u, v;\n  do { u = random(); } while (u === 0);\n  do { v = random(); } while (v === 0);\n  let x = mean + sd * (Math.sqrt(-2 * Math.log(u)) * Math.cos(2 * Math.PI * v));\n  if (min !== undefined) x = Math.max(min, x);\n  if (max !== undefined) x = Math.min(max, x);\n  return x;\n}","export const NORM_2D = 1.0 / 47.0;\nexport const NORM_3D = 1.0 / 103.0;\nexport const NORM_4D = 1.0 / 30.0;\nexport const SQUISH_2D = (Math.sqrt(2 + 1) - 1) / 2;\nexport const SQUISH_3D = (Math.sqrt(3 + 1) - 1) / 3;\nexport const SQUISH_4D = (Math.sqrt(4 + 1) - 1) / 4;\nexport const STRETCH_2D = (1 / Math.sqrt(2 + 1) - 1) / 2;\nexport const STRETCH_3D = (1 / Math.sqrt(3 + 1) - 1) / 3;\nexport const STRETCH_4D = (1 / Math.sqrt(4 + 1) - 1) / 4;\n\nexport const base2D = [\n  [1, 1, 0, 1, 0, 1, 0, 0, 0],\n  [1, 1, 0, 1, 0, 1, 2, 1, 1]\n];\n\nexport const base3D = [\n  [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1],\n  [2, 1, 1, 0, 2, 1, 0, 1, 2, 0, 1, 1, 3, 1, 1, 1],\n  [1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 2, 1, 1, 0, 2, 1, 0, 1, 2, 0, 1, 1]\n];\n\nexport const base4D = [\n  [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1],\n  [3, 1, 1, 1, 0, 3, 1, 1, 0, 1, 3, 1, 0, 1, 1, 3, 0, 1, 1, 1, 4, 1, 1, 1, 1],\n  [\n    1,\n    1,\n    0,\n    0,\n    0,\n    1,\n    0,\n    1,\n    0,\n    0,\n    1,\n    0,\n    0,\n    1,\n    0,\n    1,\n    0,\n    0,\n    0,\n    1,\n    2,\n    1,\n    1,\n    0,\n    0,\n    2,\n    1,\n    0,\n    1,\n    0,\n    2,\n    1,\n    0,\n    0,\n    1,\n    2,\n    0,\n    1,\n    1,\n    0,\n    2,\n    0,\n    1,\n    0,\n    1,\n    2,\n    0,\n    0,\n    1,\n    1\n  ],\n  [\n    3,\n    1,\n    1,\n    1,\n    0,\n    3,\n    1,\n    1,\n    0,\n    1,\n    3,\n    1,\n    0,\n    1,\n    1,\n    3,\n    0,\n    1,\n    1,\n    1,\n    2,\n    1,\n    1,\n    0,\n    0,\n    2,\n    1,\n    0,\n    1,\n    0,\n    2,\n    1,\n    0,\n    0,\n    1,\n    2,\n    0,\n    1,\n    1,\n    0,\n    2,\n    0,\n    1,\n    0,\n    1,\n    2,\n    0,\n    0,\n    1,\n    1\n  ]\n];\n\nexport const gradients2D = [\n  5,\n  2,\n  2,\n  5,\n  -5,\n  2,\n  -2,\n  5,\n  5,\n  -2,\n  2,\n  -5,\n  -5,\n  -2,\n  -2,\n  -5\n];\n\nexport const gradients3D = [\n  -11,\n  4,\n  4,\n  -4,\n  11,\n  4,\n  -4,\n  4,\n  11,\n  11,\n  4,\n  4,\n  4,\n  11,\n  4,\n  4,\n  4,\n  11,\n  -11,\n  -4,\n  4,\n  -4,\n  -11,\n  4,\n  -4,\n  -4,\n  11,\n  11,\n  -4,\n  4,\n  4,\n  -11,\n  4,\n  4,\n  -4,\n  11,\n  -11,\n  4,\n  -4,\n  -4,\n  11,\n  -4,\n  -4,\n  4,\n  -11,\n  11,\n  4,\n  -4,\n  4,\n  11,\n  -4,\n  4,\n  4,\n  -11,\n  -11,\n  -4,\n  -4,\n  -4,\n  -11,\n  -4,\n  -4,\n  -4,\n  -11,\n  11,\n  -4,\n  -4,\n  4,\n  -11,\n  -4,\n  4,\n  -4,\n  -11\n];\n\nexport const gradients4D = [\n  3,\n  1,\n  1,\n  1,\n  1,\n  3,\n  1,\n  1,\n  1,\n  1,\n  3,\n  1,\n  1,\n  1,\n  1,\n  3,\n  -3,\n  1,\n  1,\n  1,\n  -1,\n  3,\n  1,\n  1,\n  -1,\n  1,\n  3,\n  1,\n  -1,\n  1,\n  1,\n  3,\n  3,\n  -1,\n  1,\n  1,\n  1,\n  -3,\n  1,\n  1,\n  1,\n  -1,\n  3,\n  1,\n  1,\n  -1,\n  1,\n  3,\n  -3,\n  -1,\n  1,\n  1,\n  -1,\n  -3,\n  1,\n  1,\n  -1,\n  -1,\n  3,\n  1,\n  -1,\n  -1,\n  1,\n  3,\n  3,\n  1,\n  -1,\n  1,\n  1,\n  3,\n  -1,\n  1,\n  1,\n  1,\n  -3,\n  1,\n  1,\n  1,\n  -1,\n  3,\n  -3,\n  1,\n  -1,\n  1,\n  -1,\n  3,\n  -1,\n  1,\n  -1,\n  1,\n  -3,\n  1,\n  -1,\n  1,\n  -1,\n  3,\n  3,\n  -1,\n  -1,\n  1,\n  1,\n  -3,\n  -1,\n  1,\n  1,\n  -1,\n  -3,\n  1,\n  1,\n  -1,\n  -1,\n  3,\n  -3,\n  -1,\n  -1,\n  1,\n  -1,\n  -3,\n  -1,\n  1,\n  -1,\n  -1,\n  -3,\n  1,\n  -1,\n  -1,\n  -1,\n  3,\n  3,\n  1,\n  1,\n  -1,\n  1,\n  3,\n  1,\n  -1,\n  1,\n  1,\n  3,\n  -1,\n  1,\n  1,\n  1,\n  -3,\n  -3,\n  1,\n  1,\n  -1,\n  -1,\n  3,\n  1,\n  -1,\n  -1,\n  1,\n  3,\n  -1,\n  -1,\n  1,\n  1,\n  -3,\n  3,\n  -1,\n  1,\n  -1,\n  1,\n  -3,\n  1,\n  -1,\n  1,\n  -1,\n  3,\n  -1,\n  1,\n  -1,\n  1,\n  -3,\n  -3,\n  -1,\n  1,\n  -1,\n  -1,\n  -3,\n  1,\n  -1,\n  -1,\n  -1,\n  3,\n  -1,\n  -1,\n  -1,\n  1,\n  -3,\n  3,\n  1,\n  -1,\n  -1,\n  1,\n  3,\n  -1,\n  -1,\n  1,\n  1,\n  -3,\n  -1,\n  1,\n  1,\n  -1,\n  -3,\n  -3,\n  1,\n  -1,\n  -1,\n  -1,\n  3,\n  -1,\n  -1,\n  -1,\n  1,\n  -3,\n  -1,\n  -1,\n  1,\n  -1,\n  -3,\n  3,\n  -1,\n  -1,\n  -1,\n  1,\n  -3,\n  -1,\n  -1,\n  1,\n  -1,\n  -3,\n  -1,\n  1,\n  -1,\n  -1,\n  -3,\n  -3,\n  -1,\n  -1,\n  -1,\n  -1,\n  -3,\n  -1,\n  -1,\n  -1,\n  -1,\n  -3,\n  -1,\n  -1,\n  -1,\n  -1,\n  -3\n];\n\nexport const lookupPairs2D = [\n  0,\n  1,\n  1,\n  0,\n  4,\n  1,\n  17,\n  0,\n  20,\n  2,\n  21,\n  2,\n  22,\n  5,\n  23,\n  5,\n  26,\n  4,\n  39,\n  3,\n  42,\n  4,\n  43,\n  3\n];\n\nexport const lookupPairs3D = [\n  0,\n  2,\n  1,\n  1,\n  2,\n  2,\n  5,\n  1,\n  6,\n  0,\n  7,\n  0,\n  32,\n  2,\n  34,\n  2,\n  129,\n  1,\n  133,\n  1,\n  160,\n  5,\n  161,\n  5,\n  518,\n  0,\n  519,\n  0,\n  546,\n  4,\n  550,\n  4,\n  645,\n  3,\n  647,\n  3,\n  672,\n  5,\n  673,\n  5,\n  674,\n  4,\n  677,\n  3,\n  678,\n  4,\n  679,\n  3,\n  680,\n  13,\n  681,\n  13,\n  682,\n  12,\n  685,\n  14,\n  686,\n  12,\n  687,\n  14,\n  712,\n  20,\n  714,\n  18,\n  809,\n  21,\n  813,\n  23,\n  840,\n  20,\n  841,\n  21,\n  1198,\n  19,\n  1199,\n  22,\n  1226,\n  18,\n  1230,\n  19,\n  1325,\n  23,\n  1327,\n  22,\n  1352,\n  15,\n  1353,\n  17,\n  1354,\n  15,\n  1357,\n  17,\n  1358,\n  16,\n  1359,\n  16,\n  1360,\n  11,\n  1361,\n  10,\n  1362,\n  11,\n  1365,\n  10,\n  1366,\n  9,\n  1367,\n  9,\n  1392,\n  11,\n  1394,\n  11,\n  1489,\n  10,\n  1493,\n  10,\n  1520,\n  8,\n  1521,\n  8,\n  1878,\n  9,\n  1879,\n  9,\n  1906,\n  7,\n  1910,\n  7,\n  2005,\n  6,\n  2007,\n  6,\n  2032,\n  8,\n  2033,\n  8,\n  2034,\n  7,\n  2037,\n  6,\n  2038,\n  7,\n  2039,\n  6\n];\n\nexport const lookupPairs4D = [\n  0,\n  3,\n  1,\n  2,\n  2,\n  3,\n  5,\n  2,\n  6,\n  1,\n  7,\n  1,\n  8,\n  3,\n  9,\n  2,\n  10,\n  3,\n  13,\n  2,\n  16,\n  3,\n  18,\n  3,\n  22,\n  1,\n  23,\n  1,\n  24,\n  3,\n  26,\n  3,\n  33,\n  2,\n  37,\n  2,\n  38,\n  1,\n  39,\n  1,\n  41,\n  2,\n  45,\n  2,\n  54,\n  1,\n  55,\n  1,\n  56,\n  0,\n  57,\n  0,\n  58,\n  0,\n  59,\n  0,\n  60,\n  0,\n  61,\n  0,\n  62,\n  0,\n  63,\n  0,\n  256,\n  3,\n  258,\n  3,\n  264,\n  3,\n  266,\n  3,\n  272,\n  3,\n  274,\n  3,\n  280,\n  3,\n  282,\n  3,\n  2049,\n  2,\n  2053,\n  2,\n  2057,\n  2,\n  2061,\n  2,\n  2081,\n  2,\n  2085,\n  2,\n  2089,\n  2,\n  2093,\n  2,\n  2304,\n  9,\n  2305,\n  9,\n  2312,\n  9,\n  2313,\n  9,\n  16390,\n  1,\n  16391,\n  1,\n  16406,\n  1,\n  16407,\n  1,\n  16422,\n  1,\n  16423,\n  1,\n  16438,\n  1,\n  16439,\n  1,\n  16642,\n  8,\n  16646,\n  8,\n  16658,\n  8,\n  16662,\n  8,\n  18437,\n  6,\n  18439,\n  6,\n  18469,\n  6,\n  18471,\n  6,\n  18688,\n  9,\n  18689,\n  9,\n  18690,\n  8,\n  18693,\n  6,\n  18694,\n  8,\n  18695,\n  6,\n  18696,\n  9,\n  18697,\n  9,\n  18706,\n  8,\n  18710,\n  8,\n  18725,\n  6,\n  18727,\n  6,\n  131128,\n  0,\n  131129,\n  0,\n  131130,\n  0,\n  131131,\n  0,\n  131132,\n  0,\n  131133,\n  0,\n  131134,\n  0,\n  131135,\n  0,\n  131352,\n  7,\n  131354,\n  7,\n  131384,\n  7,\n  131386,\n  7,\n  133161,\n  5,\n  133165,\n  5,\n  133177,\n  5,\n  133181,\n  5,\n  133376,\n  9,\n  133377,\n  9,\n  133384,\n  9,\n  133385,\n  9,\n  133400,\n  7,\n  133402,\n  7,\n  133417,\n  5,\n  133421,\n  5,\n  133432,\n  7,\n  133433,\n  5,\n  133434,\n  7,\n  133437,\n  5,\n  147510,\n  4,\n  147511,\n  4,\n  147518,\n  4,\n  147519,\n  4,\n  147714,\n  8,\n  147718,\n  8,\n  147730,\n  8,\n  147734,\n  8,\n  147736,\n  7,\n  147738,\n  7,\n  147766,\n  4,\n  147767,\n  4,\n  147768,\n  7,\n  147770,\n  7,\n  147774,\n  4,\n  147775,\n  4,\n  149509,\n  6,\n  149511,\n  6,\n  149541,\n  6,\n  149543,\n  6,\n  149545,\n  5,\n  149549,\n  5,\n  149558,\n  4,\n  149559,\n  4,\n  149561,\n  5,\n  149565,\n  5,\n  149566,\n  4,\n  149567,\n  4,\n  149760,\n  9,\n  149761,\n  9,\n  149762,\n  8,\n  149765,\n  6,\n  149766,\n  8,\n  149767,\n  6,\n  149768,\n  9,\n  149769,\n  9,\n  149778,\n  8,\n  149782,\n  8,\n  149784,\n  7,\n  149786,\n  7,\n  149797,\n  6,\n  149799,\n  6,\n  149801,\n  5,\n  149805,\n  5,\n  149814,\n  4,\n  149815,\n  4,\n  149816,\n  7,\n  149817,\n  5,\n  149818,\n  7,\n  149821,\n  5,\n  149822,\n  4,\n  149823,\n  4,\n  149824,\n  37,\n  149825,\n  37,\n  149826,\n  36,\n  149829,\n  34,\n  149830,\n  36,\n  149831,\n  34,\n  149832,\n  37,\n  149833,\n  37,\n  149842,\n  36,\n  149846,\n  36,\n  149848,\n  35,\n  149850,\n  35,\n  149861,\n  34,\n  149863,\n  34,\n  149865,\n  33,\n  149869,\n  33,\n  149878,\n  32,\n  149879,\n  32,\n  149880,\n  35,\n  149881,\n  33,\n  149882,\n  35,\n  149885,\n  33,\n  149886,\n  32,\n  149887,\n  32,\n  150080,\n  49,\n  150082,\n  48,\n  150088,\n  49,\n  150098,\n  48,\n  150104,\n  47,\n  150106,\n  47,\n  151873,\n  46,\n  151877,\n  45,\n  151881,\n  46,\n  151909,\n  45,\n  151913,\n  44,\n  151917,\n  44,\n  152128,\n  49,\n  152129,\n  46,\n  152136,\n  49,\n  152137,\n  46,\n  166214,\n  43,\n  166215,\n  42,\n  166230,\n  43,\n  166247,\n  42,\n  166262,\n  41,\n  166263,\n  41,\n  166466,\n  48,\n  166470,\n  43,\n  166482,\n  48,\n  166486,\n  43,\n  168261,\n  45,\n  168263,\n  42,\n  168293,\n  45,\n  168295,\n  42,\n  168512,\n  31,\n  168513,\n  28,\n  168514,\n  31,\n  168517,\n  28,\n  168518,\n  25,\n  168519,\n  25,\n  280952,\n  40,\n  280953,\n  39,\n  280954,\n  40,\n  280957,\n  39,\n  280958,\n  38,\n  280959,\n  38,\n  281176,\n  47,\n  281178,\n  47,\n  281208,\n  40,\n  281210,\n  40,\n  282985,\n  44,\n  282989,\n  44,\n  283001,\n  39,\n  283005,\n  39,\n  283208,\n  30,\n  283209,\n  27,\n  283224,\n  30,\n  283241,\n  27,\n  283256,\n  22,\n  283257,\n  22,\n  297334,\n  41,\n  297335,\n  41,\n  297342,\n  38,\n  297343,\n  38,\n  297554,\n  29,\n  297558,\n  24,\n  297562,\n  29,\n  297590,\n  24,\n  297594,\n  21,\n  297598,\n  21,\n  299365,\n  26,\n  299367,\n  23,\n  299373,\n  26,\n  299383,\n  23,\n  299389,\n  20,\n  299391,\n  20,\n  299584,\n  31,\n  299585,\n  28,\n  299586,\n  31,\n  299589,\n  28,\n  299590,\n  25,\n  299591,\n  25,\n  299592,\n  30,\n  299593,\n  27,\n  299602,\n  29,\n  299606,\n  24,\n  299608,\n  30,\n  299610,\n  29,\n  299621,\n  26,\n  299623,\n  23,\n  299625,\n  27,\n  299629,\n  26,\n  299638,\n  24,\n  299639,\n  23,\n  299640,\n  22,\n  299641,\n  22,\n  299642,\n  21,\n  299645,\n  20,\n  299646,\n  21,\n  299647,\n  20,\n  299648,\n  61,\n  299649,\n  60,\n  299650,\n  61,\n  299653,\n  60,\n  299654,\n  59,\n  299655,\n  59,\n  299656,\n  58,\n  299657,\n  57,\n  299666,\n  55,\n  299670,\n  54,\n  299672,\n  58,\n  299674,\n  55,\n  299685,\n  52,\n  299687,\n  51,\n  299689,\n  57,\n  299693,\n  52,\n  299702,\n  54,\n  299703,\n  51,\n  299704,\n  56,\n  299705,\n  56,\n  299706,\n  53,\n  299709,\n  50,\n  299710,\n  53,\n  299711,\n  50,\n  299904,\n  61,\n  299906,\n  61,\n  299912,\n  58,\n  299922,\n  55,\n  299928,\n  58,\n  299930,\n  55,\n  301697,\n  60,\n  301701,\n  60,\n  301705,\n  57,\n  301733,\n  52,\n  301737,\n  57,\n  301741,\n  52,\n  301952,\n  79,\n  301953,\n  79,\n  301960,\n  76,\n  301961,\n  76,\n  316038,\n  59,\n  316039,\n  59,\n  316054,\n  54,\n  316071,\n  51,\n  316086,\n  54,\n  316087,\n  51,\n  316290,\n  78,\n  316294,\n  78,\n  316306,\n  73,\n  316310,\n  73,\n  318085,\n  77,\n  318087,\n  77,\n  318117,\n  70,\n  318119,\n  70,\n  318336,\n  79,\n  318337,\n  79,\n  318338,\n  78,\n  318341,\n  77,\n  318342,\n  78,\n  318343,\n  77,\n  430776,\n  56,\n  430777,\n  56,\n  430778,\n  53,\n  430781,\n  50,\n  430782,\n  53,\n  430783,\n  50,\n  431000,\n  75,\n  431002,\n  72,\n  431032,\n  75,\n  431034,\n  72,\n  432809,\n  74,\n  432813,\n  69,\n  432825,\n  74,\n  432829,\n  69,\n  433032,\n  76,\n  433033,\n  76,\n  433048,\n  75,\n  433065,\n  74,\n  433080,\n  75,\n  433081,\n  74,\n  447158,\n  71,\n  447159,\n  68,\n  447166,\n  71,\n  447167,\n  68,\n  447378,\n  73,\n  447382,\n  73,\n  447386,\n  72,\n  447414,\n  71,\n  447418,\n  72,\n  447422,\n  71,\n  449189,\n  70,\n  449191,\n  70,\n  449197,\n  69,\n  449207,\n  68,\n  449213,\n  69,\n  449215,\n  68,\n  449408,\n  67,\n  449409,\n  67,\n  449410,\n  66,\n  449413,\n  64,\n  449414,\n  66,\n  449415,\n  64,\n  449416,\n  67,\n  449417,\n  67,\n  449426,\n  66,\n  449430,\n  66,\n  449432,\n  65,\n  449434,\n  65,\n  449445,\n  64,\n  449447,\n  64,\n  449449,\n  63,\n  449453,\n  63,\n  449462,\n  62,\n  449463,\n  62,\n  449464,\n  65,\n  449465,\n  63,\n  449466,\n  65,\n  449469,\n  63,\n  449470,\n  62,\n  449471,\n  62,\n  449472,\n  19,\n  449473,\n  19,\n  449474,\n  18,\n  449477,\n  16,\n  449478,\n  18,\n  449479,\n  16,\n  449480,\n  19,\n  449481,\n  19,\n  449490,\n  18,\n  449494,\n  18,\n  449496,\n  17,\n  449498,\n  17,\n  449509,\n  16,\n  449511,\n  16,\n  449513,\n  15,\n  449517,\n  15,\n  449526,\n  14,\n  449527,\n  14,\n  449528,\n  17,\n  449529,\n  15,\n  449530,\n  17,\n  449533,\n  15,\n  449534,\n  14,\n  449535,\n  14,\n  449728,\n  19,\n  449729,\n  19,\n  449730,\n  18,\n  449734,\n  18,\n  449736,\n  19,\n  449737,\n  19,\n  449746,\n  18,\n  449750,\n  18,\n  449752,\n  17,\n  449754,\n  17,\n  449784,\n  17,\n  449786,\n  17,\n  451520,\n  19,\n  451521,\n  19,\n  451525,\n  16,\n  451527,\n  16,\n  451528,\n  19,\n  451529,\n  19,\n  451557,\n  16,\n  451559,\n  16,\n  451561,\n  15,\n  451565,\n  15,\n  451577,\n  15,\n  451581,\n  15,\n  451776,\n  19,\n  451777,\n  19,\n  451784,\n  19,\n  451785,\n  19,\n  465858,\n  18,\n  465861,\n  16,\n  465862,\n  18,\n  465863,\n  16,\n  465874,\n  18,\n  465878,\n  18,\n  465893,\n  16,\n  465895,\n  16,\n  465910,\n  14,\n  465911,\n  14,\n  465918,\n  14,\n  465919,\n  14,\n  466114,\n  18,\n  466118,\n  18,\n  466130,\n  18,\n  466134,\n  18,\n  467909,\n  16,\n  467911,\n  16,\n  467941,\n  16,\n  467943,\n  16,\n  468160,\n  13,\n  468161,\n  13,\n  468162,\n  13,\n  468163,\n  13,\n  468164,\n  13,\n  468165,\n  13,\n  468166,\n  13,\n  468167,\n  13,\n  580568,\n  17,\n  580570,\n  17,\n  580585,\n  15,\n  580589,\n  15,\n  580598,\n  14,\n  580599,\n  14,\n  580600,\n  17,\n  580601,\n  15,\n  580602,\n  17,\n  580605,\n  15,\n  580606,\n  14,\n  580607,\n  14,\n  580824,\n  17,\n  580826,\n  17,\n  580856,\n  17,\n  580858,\n  17,\n  582633,\n  15,\n  582637,\n  15,\n  582649,\n  15,\n  582653,\n  15,\n  582856,\n  12,\n  582857,\n  12,\n  582872,\n  12,\n  582873,\n  12,\n  582888,\n  12,\n  582889,\n  12,\n  582904,\n  12,\n  582905,\n  12,\n  596982,\n  14,\n  596983,\n  14,\n  596990,\n  14,\n  596991,\n  14,\n  597202,\n  11,\n  597206,\n  11,\n  597210,\n  11,\n  597214,\n  11,\n  597234,\n  11,\n  597238,\n  11,\n  597242,\n  11,\n  597246,\n  11,\n  599013,\n  10,\n  599015,\n  10,\n  599021,\n  10,\n  599023,\n  10,\n  599029,\n  10,\n  599031,\n  10,\n  599037,\n  10,\n  599039,\n  10,\n  599232,\n  13,\n  599233,\n  13,\n  599234,\n  13,\n  599235,\n  13,\n  599236,\n  13,\n  599237,\n  13,\n  599238,\n  13,\n  599239,\n  13,\n  599240,\n  12,\n  599241,\n  12,\n  599250,\n  11,\n  599254,\n  11,\n  599256,\n  12,\n  599257,\n  12,\n  599258,\n  11,\n  599262,\n  11,\n  599269,\n  10,\n  599271,\n  10,\n  599272,\n  12,\n  599273,\n  12,\n  599277,\n  10,\n  599279,\n  10,\n  599282,\n  11,\n  599285,\n  10,\n  599286,\n  11,\n  599287,\n  10,\n  599288,\n  12,\n  599289,\n  12,\n  599290,\n  11,\n  599293,\n  10,\n  599294,\n  11,\n  599295,\n  10\n];\n\nexport const p2D = [\n  0,\n  0,\n  1,\n  -1,\n  0,\n  0,\n  -1,\n  1,\n  0,\n  2,\n  1,\n  1,\n  1,\n  2,\n  2,\n  0,\n  1,\n  2,\n  0,\n  2,\n  1,\n  0,\n  0,\n  0\n];\n\nexport const p3D = [\n  0,\n  0,\n  1,\n  -1,\n  0,\n  0,\n  1,\n  0,\n  -1,\n  0,\n  0,\n  -1,\n  1,\n  0,\n  0,\n  0,\n  1,\n  -1,\n  0,\n  0,\n  -1,\n  0,\n  1,\n  0,\n  0,\n  -1,\n  1,\n  0,\n  2,\n  1,\n  1,\n  0,\n  1,\n  1,\n  1,\n  -1,\n  0,\n  2,\n  1,\n  0,\n  1,\n  1,\n  1,\n  -1,\n  1,\n  0,\n  2,\n  0,\n  1,\n  1,\n  1,\n  -1,\n  1,\n  1,\n  1,\n  3,\n  2,\n  1,\n  0,\n  3,\n  1,\n  2,\n  0,\n  1,\n  3,\n  2,\n  0,\n  1,\n  3,\n  1,\n  0,\n  2,\n  1,\n  3,\n  0,\n  2,\n  1,\n  3,\n  0,\n  1,\n  2,\n  1,\n  1,\n  1,\n  0,\n  0,\n  2,\n  2,\n  0,\n  0,\n  1,\n  1,\n  0,\n  1,\n  0,\n  2,\n  0,\n  2,\n  0,\n  1,\n  1,\n  0,\n  0,\n  1,\n  2,\n  0,\n  0,\n  2,\n  2,\n  0,\n  0,\n  0,\n  0,\n  1,\n  1,\n  -1,\n  1,\n  2,\n  0,\n  0,\n  0,\n  0,\n  1,\n  -1,\n  1,\n  1,\n  2,\n  0,\n  0,\n  0,\n  0,\n  1,\n  1,\n  1,\n  -1,\n  2,\n  3,\n  1,\n  1,\n  1,\n  2,\n  0,\n  0,\n  2,\n  2,\n  3,\n  1,\n  1,\n  1,\n  2,\n  2,\n  0,\n  0,\n  2,\n  3,\n  1,\n  1,\n  1,\n  2,\n  0,\n  2,\n  0,\n  2,\n  1,\n  1,\n  -1,\n  1,\n  2,\n  0,\n  0,\n  2,\n  2,\n  1,\n  1,\n  -1,\n  1,\n  2,\n  2,\n  0,\n  0,\n  2,\n  1,\n  -1,\n  1,\n  1,\n  2,\n  0,\n  0,\n  2,\n  2,\n  1,\n  -1,\n  1,\n  1,\n  2,\n  0,\n  2,\n  0,\n  2,\n  1,\n  1,\n  1,\n  -1,\n  2,\n  2,\n  0,\n  0,\n  2,\n  1,\n  1,\n  1,\n  -1,\n  2,\n  0,\n  2,\n  0\n];\n\nexport const p4D = [\n  0,\n  0,\n  1,\n  -1,\n  0,\n  0,\n  0,\n  1,\n  0,\n  -1,\n  0,\n  0,\n  1,\n  0,\n  0,\n  -1,\n  0,\n  0,\n  -1,\n  1,\n  0,\n  0,\n  0,\n  0,\n  1,\n  -1,\n  0,\n  0,\n  0,\n  1,\n  0,\n  -1,\n  0,\n  0,\n  -1,\n  0,\n  1,\n  0,\n  0,\n  0,\n  -1,\n  1,\n  0,\n  0,\n  0,\n  0,\n  1,\n  -1,\n  0,\n  0,\n  -1,\n  0,\n  0,\n  1,\n  0,\n  0,\n  -1,\n  0,\n  1,\n  0,\n  0,\n  0,\n  -1,\n  1,\n  0,\n  2,\n  1,\n  1,\n  0,\n  0,\n  1,\n  1,\n  1,\n  -1,\n  0,\n  1,\n  1,\n  1,\n  0,\n  -1,\n  0,\n  2,\n  1,\n  0,\n  1,\n  0,\n  1,\n  1,\n  -1,\n  1,\n  0,\n  1,\n  1,\n  0,\n  1,\n  -1,\n  0,\n  2,\n  0,\n  1,\n  1,\n  0,\n  1,\n  -1,\n  1,\n  1,\n  0,\n  1,\n  0,\n  1,\n  1,\n  -1,\n  0,\n  2,\n  1,\n  0,\n  0,\n  1,\n  1,\n  1,\n  -1,\n  0,\n  1,\n  1,\n  1,\n  0,\n  -1,\n  1,\n  0,\n  2,\n  0,\n  1,\n  0,\n  1,\n  1,\n  -1,\n  1,\n  0,\n  1,\n  1,\n  0,\n  1,\n  -1,\n  1,\n  0,\n  2,\n  0,\n  0,\n  1,\n  1,\n  1,\n  -1,\n  0,\n  1,\n  1,\n  1,\n  0,\n  -1,\n  1,\n  1,\n  1,\n  4,\n  2,\n  1,\n  1,\n  0,\n  4,\n  1,\n  2,\n  1,\n  0,\n  4,\n  1,\n  1,\n  2,\n  0,\n  1,\n  4,\n  2,\n  1,\n  0,\n  1,\n  4,\n  1,\n  2,\n  0,\n  1,\n  4,\n  1,\n  1,\n  0,\n  2,\n  1,\n  4,\n  2,\n  0,\n  1,\n  1,\n  4,\n  1,\n  0,\n  2,\n  1,\n  4,\n  1,\n  0,\n  1,\n  2,\n  1,\n  4,\n  0,\n  2,\n  1,\n  1,\n  4,\n  0,\n  1,\n  2,\n  1,\n  4,\n  0,\n  1,\n  1,\n  2,\n  1,\n  2,\n  1,\n  1,\n  0,\n  0,\n  3,\n  2,\n  1,\n  0,\n  0,\n  3,\n  1,\n  2,\n  0,\n  0,\n  1,\n  2,\n  1,\n  0,\n  1,\n  0,\n  3,\n  2,\n  0,\n  1,\n  0,\n  3,\n  1,\n  0,\n  2,\n  0,\n  1,\n  2,\n  0,\n  1,\n  1,\n  0,\n  3,\n  0,\n  2,\n  1,\n  0,\n  3,\n  0,\n  1,\n  2,\n  0,\n  1,\n  2,\n  1,\n  0,\n  0,\n  1,\n  3,\n  2,\n  0,\n  0,\n  1,\n  3,\n  1,\n  0,\n  0,\n  2,\n  1,\n  2,\n  0,\n  1,\n  0,\n  1,\n  3,\n  0,\n  2,\n  0,\n  1,\n  3,\n  0,\n  1,\n  0,\n  2,\n  1,\n  2,\n  0,\n  0,\n  1,\n  1,\n  3,\n  0,\n  0,\n  2,\n  1,\n  3,\n  0,\n  0,\n  1,\n  2,\n  2,\n  3,\n  1,\n  1,\n  1,\n  0,\n  2,\n  1,\n  1,\n  1,\n  -1,\n  2,\n  2,\n  0,\n  0,\n  0,\n  2,\n  3,\n  1,\n  1,\n  0,\n  1,\n  2,\n  1,\n  1,\n  -1,\n  1,\n  2,\n  2,\n  0,\n  0,\n  0,\n  2,\n  3,\n  1,\n  0,\n  1,\n  1,\n  2,\n  1,\n  -1,\n  1,\n  1,\n  2,\n  2,\n  0,\n  0,\n  0,\n  2,\n  3,\n  1,\n  1,\n  1,\n  0,\n  2,\n  1,\n  1,\n  1,\n  -1,\n  2,\n  0,\n  2,\n  0,\n  0,\n  2,\n  3,\n  1,\n  1,\n  0,\n  1,\n  2,\n  1,\n  1,\n  -1,\n  1,\n  2,\n  0,\n  2,\n  0,\n  0,\n  2,\n  3,\n  0,\n  1,\n  1,\n  1,\n  2,\n  -1,\n  1,\n  1,\n  1,\n  2,\n  0,\n  2,\n  0,\n  0,\n  2,\n  3,\n  1,\n  1,\n  1,\n  0,\n  2,\n  1,\n  1,\n  1,\n  -1,\n  2,\n  0,\n  0,\n  2,\n  0,\n  2,\n  3,\n  1,\n  0,\n  1,\n  1,\n  2,\n  1,\n  -1,\n  1,\n  1,\n  2,\n  0,\n  0,\n  2,\n  0,\n  2,\n  3,\n  0,\n  1,\n  1,\n  1,\n  2,\n  -1,\n  1,\n  1,\n  1,\n  2,\n  0,\n  0,\n  2,\n  0,\n  2,\n  3,\n  1,\n  1,\n  0,\n  1,\n  2,\n  1,\n  1,\n  -1,\n  1,\n  2,\n  0,\n  0,\n  0,\n  2,\n  2,\n  3,\n  1,\n  0,\n  1,\n  1,\n  2,\n  1,\n  -1,\n  1,\n  1,\n  2,\n  0,\n  0,\n  0,\n  2,\n  2,\n  3,\n  0,\n  1,\n  1,\n  1,\n  2,\n  -1,\n  1,\n  1,\n  1,\n  2,\n  0,\n  0,\n  0,\n  2,\n  2,\n  1,\n  1,\n  1,\n  -1,\n  0,\n  1,\n  1,\n  1,\n  0,\n  -1,\n  0,\n  0,\n  0,\n  0,\n  0,\n  2,\n  1,\n  1,\n  -1,\n  1,\n  0,\n  1,\n  1,\n  0,\n  1,\n  -1,\n  0,\n  0,\n  0,\n  0,\n  0,\n  2,\n  1,\n  -1,\n  1,\n  1,\n  0,\n  1,\n  0,\n  1,\n  1,\n  -1,\n  0,\n  0,\n  0,\n  0,\n  0,\n  2,\n  1,\n  1,\n  -1,\n  0,\n  1,\n  1,\n  1,\n  0,\n  -1,\n  1,\n  0,\n  0,\n  0,\n  0,\n  0,\n  2,\n  1,\n  -1,\n  1,\n  0,\n  1,\n  1,\n  0,\n  1,\n  -1,\n  1,\n  0,\n  0,\n  0,\n  0,\n  0,\n  2,\n  1,\n  -1,\n  0,\n  1,\n  1,\n  1,\n  0,\n  -1,\n  1,\n  1,\n  0,\n  0,\n  0,\n  0,\n  0,\n  2,\n  1,\n  1,\n  1,\n  -1,\n  0,\n  1,\n  1,\n  1,\n  0,\n  -1,\n  2,\n  2,\n  0,\n  0,\n  0,\n  2,\n  1,\n  1,\n  -1,\n  1,\n  0,\n  1,\n  1,\n  0,\n  1,\n  -1,\n  2,\n  2,\n  0,\n  0,\n  0,\n  2,\n  1,\n  1,\n  -1,\n  0,\n  1,\n  1,\n  1,\n  0,\n  -1,\n  1,\n  2,\n  2,\n  0,\n  0,\n  0,\n  2,\n  1,\n  1,\n  1,\n  -1,\n  0,\n  1,\n  1,\n  1,\n  0,\n  -1,\n  2,\n  0,\n  2,\n  0,\n  0,\n  2,\n  1,\n  -1,\n  1,\n  1,\n  0,\n  1,\n  0,\n  1,\n  1,\n  -1,\n  2,\n  0,\n  2,\n  0,\n  0,\n  2,\n  1,\n  -1,\n  1,\n  0,\n  1,\n  1,\n  0,\n  1,\n  -1,\n  1,\n  2,\n  0,\n  2,\n  0,\n  0,\n  2,\n  1,\n  1,\n  -1,\n  1,\n  0,\n  1,\n  1,\n  0,\n  1,\n  -1,\n  2,\n  0,\n  0,\n  2,\n  0,\n  2,\n  1,\n  -1,\n  1,\n  1,\n  0,\n  1,\n  0,\n  1,\n  1,\n  -1,\n  2,\n  0,\n  0,\n  2,\n  0,\n  2,\n  1,\n  -1,\n  0,\n  1,\n  1,\n  1,\n  0,\n  -1,\n  1,\n  1,\n  2,\n  0,\n  0,\n  2,\n  0,\n  2,\n  1,\n  1,\n  -1,\n  0,\n  1,\n  1,\n  1,\n  0,\n  -1,\n  1,\n  2,\n  0,\n  0,\n  0,\n  2,\n  2,\n  1,\n  -1,\n  1,\n  0,\n  1,\n  1,\n  0,\n  1,\n  -1,\n  1,\n  2,\n  0,\n  0,\n  0,\n  2,\n  2,\n  1,\n  -1,\n  0,\n  1,\n  1,\n  1,\n  0,\n  -1,\n  1,\n  1,\n  2,\n  0,\n  0,\n  0,\n  2,\n  3,\n  1,\n  1,\n  0,\n  0,\n  0,\n  2,\n  2,\n  0,\n  0,\n  0,\n  2,\n  1,\n  1,\n  1,\n  -1,\n  3,\n  1,\n  0,\n  1,\n  0,\n  0,\n  2,\n  0,\n  2,\n  0,\n  0,\n  2,\n  1,\n  1,\n  1,\n  -1,\n  3,\n  1,\n  0,\n  0,\n  1,\n  0,\n  2,\n  0,\n  0,\n  2,\n  0,\n  2,\n  1,\n  1,\n  1,\n  -1,\n  3,\n  1,\n  1,\n  0,\n  0,\n  0,\n  2,\n  2,\n  0,\n  0,\n  0,\n  2,\n  1,\n  1,\n  -1,\n  1,\n  3,\n  1,\n  0,\n  1,\n  0,\n  0,\n  2,\n  0,\n  2,\n  0,\n  0,\n  2,\n  1,\n  1,\n  -1,\n  1,\n  3,\n  1,\n  0,\n  0,\n  0,\n  1,\n  2,\n  0,\n  0,\n  0,\n  2,\n  2,\n  1,\n  1,\n  -1,\n  1,\n  3,\n  1,\n  1,\n  0,\n  0,\n  0,\n  2,\n  2,\n  0,\n  0,\n  0,\n  2,\n  1,\n  -1,\n  1,\n  1,\n  3,\n  1,\n  0,\n  0,\n  1,\n  0,\n  2,\n  0,\n  0,\n  2,\n  0,\n  2,\n  1,\n  -1,\n  1,\n  1,\n  3,\n  1,\n  0,\n  0,\n  0,\n  1,\n  2,\n  0,\n  0,\n  0,\n  2,\n  2,\n  1,\n  -1,\n  1,\n  1,\n  3,\n  1,\n  0,\n  1,\n  0,\n  0,\n  2,\n  0,\n  2,\n  0,\n  0,\n  2,\n  -1,\n  1,\n  1,\n  1,\n  3,\n  1,\n  0,\n  0,\n  1,\n  0,\n  2,\n  0,\n  0,\n  2,\n  0,\n  2,\n  -1,\n  1,\n  1,\n  1,\n  3,\n  1,\n  0,\n  0,\n  0,\n  1,\n  2,\n  0,\n  0,\n  0,\n  2,\n  2,\n  -1,\n  1,\n  1,\n  1,\n  3,\n  3,\n  2,\n  1,\n  0,\n  0,\n  3,\n  1,\n  2,\n  0,\n  0,\n  4,\n  1,\n  1,\n  1,\n  1,\n  3,\n  3,\n  2,\n  0,\n  1,\n  0,\n  3,\n  1,\n  0,\n  2,\n  0,\n  4,\n  1,\n  1,\n  1,\n  1,\n  3,\n  3,\n  0,\n  2,\n  1,\n  0,\n  3,\n  0,\n  1,\n  2,\n  0,\n  4,\n  1,\n  1,\n  1,\n  1,\n  3,\n  3,\n  2,\n  0,\n  0,\n  1,\n  3,\n  1,\n  0,\n  0,\n  2,\n  4,\n  1,\n  1,\n  1,\n  1,\n  3,\n  3,\n  0,\n  2,\n  0,\n  1,\n  3,\n  0,\n  1,\n  0,\n  2,\n  4,\n  1,\n  1,\n  1,\n  1,\n  3,\n  3,\n  0,\n  0,\n  2,\n  1,\n  3,\n  0,\n  0,\n  1,\n  2,\n  4,\n  1,\n  1,\n  1,\n  1,\n  3,\n  3,\n  2,\n  1,\n  0,\n  0,\n  3,\n  1,\n  2,\n  0,\n  0,\n  2,\n  1,\n  1,\n  1,\n  -1,\n  3,\n  3,\n  2,\n  0,\n  1,\n  0,\n  3,\n  1,\n  0,\n  2,\n  0,\n  2,\n  1,\n  1,\n  1,\n  -1,\n  3,\n  3,\n  0,\n  2,\n  1,\n  0,\n  3,\n  0,\n  1,\n  2,\n  0,\n  2,\n  1,\n  1,\n  1,\n  -1,\n  3,\n  3,\n  2,\n  1,\n  0,\n  0,\n  3,\n  1,\n  2,\n  0,\n  0,\n  2,\n  1,\n  1,\n  -1,\n  1,\n  3,\n  3,\n  2,\n  0,\n  0,\n  1,\n  3,\n  1,\n  0,\n  0,\n  2,\n  2,\n  1,\n  1,\n  -1,\n  1,\n  3,\n  3,\n  0,\n  2,\n  0,\n  1,\n  3,\n  0,\n  1,\n  0,\n  2,\n  2,\n  1,\n  1,\n  -1,\n  1,\n  3,\n  3,\n  2,\n  0,\n  1,\n  0,\n  3,\n  1,\n  0,\n  2,\n  0,\n  2,\n  1,\n  -1,\n  1,\n  1,\n  3,\n  3,\n  2,\n  0,\n  0,\n  1,\n  3,\n  1,\n  0,\n  0,\n  2,\n  2,\n  1,\n  -1,\n  1,\n  1,\n  3,\n  3,\n  0,\n  0,\n  2,\n  1,\n  3,\n  0,\n  0,\n  1,\n  2,\n  2,\n  1,\n  -1,\n  1,\n  1,\n  3,\n  3,\n  0,\n  2,\n  1,\n  0,\n  3,\n  0,\n  1,\n  2,\n  0,\n  2,\n  -1,\n  1,\n  1,\n  1,\n  3,\n  3,\n  0,\n  2,\n  0,\n  1,\n  3,\n  0,\n  1,\n  0,\n  2,\n  2,\n  -1,\n  1,\n  1,\n  1,\n  3,\n  3,\n  0,\n  0,\n  2,\n  1,\n  3,\n  0,\n  0,\n  1,\n  2,\n  2,\n  -1,\n  1,\n  1,\n  1\n];","import {\n  base2D,\n  base3D,\n  base4D,\n  gradients2D,\n  gradients3D,\n  gradients4D,\n  lookupPairs2D,\n  lookupPairs3D,\n  lookupPairs4D,\n  p2D,\n  p3D,\n  p4D,\n  NORM_2D,\n  NORM_3D,\n  NORM_4D,\n  SQUISH_2D,\n  SQUISH_3D,\n  SQUISH_4D,\n  STRETCH_2D,\n  STRETCH_3D,\n  STRETCH_4D\n} from './constants';\n\nclass Contribution2 {\n  dx: number;\n  dy: number;\n  next?: Contribution2;\n  xsb: number;\n  ysb: number;\n\n  constructor(multiplier: number, xsb: number, ysb: number) {\n    this.dx = -xsb - multiplier * SQUISH_2D;\n    this.dy = -ysb - multiplier * SQUISH_2D;\n    this.xsb = xsb;\n    this.ysb = ysb;\n  }\n}\n\nclass Contribution3 {\n  dx: number;\n  dy: number;\n  dz: number;\n  next?: Contribution3;\n  xsb: number;\n  ysb: number;\n  zsb: number;\n\n  constructor(multiplier: number, xsb: number, ysb: number, zsb: number) {\n    this.dx = -xsb - multiplier * SQUISH_3D;\n    this.dy = -ysb - multiplier * SQUISH_3D;\n    this.dz = -zsb - multiplier * SQUISH_3D;\n    this.xsb = xsb;\n    this.ysb = ysb;\n    this.zsb = zsb;\n  }\n}\n\nclass Contribution4 {\n  dw: number;\n  dx: number;\n  dy: number;\n  dz: number;\n  next?: Contribution4;\n  wsb: number;\n  xsb: number;\n  ysb: number;\n  zsb: number;\n\n  constructor(\n    multiplier: number,\n    xsb: number,\n    ysb: number,\n    zsb: number,\n    wsb: number\n  ) {\n    this.dx = -xsb - multiplier * SQUISH_4D;\n    this.dy = -ysb - multiplier * SQUISH_4D;\n    this.dz = -zsb - multiplier * SQUISH_4D;\n    this.dw = -wsb - multiplier * SQUISH_4D;\n    this.xsb = xsb;\n    this.ysb = ysb;\n    this.zsb = zsb;\n    this.wsb = wsb;\n  }\n}\n\nfunction shuffleSeed(seed: Uint32Array): Uint32Array {\n  const newSeed = new Uint32Array(1);\n  newSeed[0] = seed[0] * 1664525 + 1013904223;\n  return newSeed;\n}\n\nexport default class OpenSimplexNoise {\n  private lookup2D?: Contribution2[];\n  private lookup3D?: Contribution3[];\n  private lookup4D?: Contribution4[];\n  private perm: Uint8Array;\n  private perm2D: Uint8Array;\n  private perm3D: Uint8Array;\n  private perm4D: Uint8Array;\n\n  constructor(clientSeed: number) {\n    this.initialize();\n    this.perm = new Uint8Array(256);\n    this.perm2D = new Uint8Array(256);\n    this.perm3D = new Uint8Array(256);\n    this.perm4D = new Uint8Array(256);\n    const source = new Uint8Array(256);\n    for (let i = 0; i < 256; i++) source[i] = i;\n    let seed = new Uint32Array(1);\n    seed[0] = clientSeed;\n    seed = shuffleSeed(shuffleSeed(shuffleSeed(seed)));\n    for (let i = 255; i >= 0; i--) {\n      seed = shuffleSeed(seed);\n      const r = new Uint32Array(1);\n      r[0] = (seed[0] + 31) % (i + 1);\n      if (r[0] < 0) r[0] += i + 1;\n      this.perm[i] = source[r[0]];\n      this.perm2D[i] = this.perm[i] & 0x0e;\n      this.perm3D[i] = (this.perm[i] % 24) * 3;\n      this.perm4D[i] = this.perm[i] & 0xfc;\n      source[r[0]] = source[i];\n    }\n  }\n\n  array2D(width: number, height: number): number[][] {\n    const output = new Array(width);\n    for (let x = 0; x < width; x++) {\n      output[x] = new Array(height);\n      for (let y = 0; y < height; y++) {\n        output[x][y] = this.noise2D(x, y);\n      }\n    }\n    return output;\n  }\n\n  array3D(width: number, height: number, depth: number): number[][][] {\n    const output = new Array(width);\n    for (let x = 0; x < width; x++) {\n      output[x] = new Array(height);\n      for (let y = 0; y < height; y++) {\n        output[x][y] = new Array(depth);\n        for (let z = 0; z < depth; z++) {\n          output[x][y][z] = this.noise3D(x, y, z);\n        }\n      }\n    }\n    return output;\n  }\n\n  array4D(\n    width: number,\n    height: number,\n    depth: number,\n    wLength: number\n  ): number[][][][] {\n    const output = new Array(width);\n    for (let x = 0; x < width; x++) {\n      output[x] = new Array(height);\n      for (let y = 0; y < height; y++) {\n        output[x][y] = new Array(depth);\n        for (let z = 0; z < depth; z++) {\n          output[x][y][z] = new Array(wLength);\n          for (let w = 0; w < wLength; w++) {\n            output[x][y][z][w] = this.noise4D(x, y, z, w);\n          }\n        }\n      }\n    }\n    return output;\n  }\n\n  private hashVals = new Uint32Array(4);\n  noise2D(x: number, y: number): number {\n    const stretchOffset = (x + y) * STRETCH_2D;\n    const xs = x + stretchOffset, ys = y + stretchOffset;\n    const xsb = Math.floor(xs), ysb = Math.floor(ys);\n    const squishOffset = (xsb + ysb) * SQUISH_2D;\n    const dx0 = x - (xsb + squishOffset), dy0 = y - (ysb + squishOffset);\n    const xins = xs - xsb, yins = ys - ysb;\n    const inSum = xins + yins;\n    const hashVals = this.hashVals;\n    hashVals[0] = xins - yins + 1;\n    hashVals[1] = inSum;\n    hashVals[2] = inSum + yins;\n    hashVals[3] = inSum + xins;\n    const hash =\n      hashVals[0] |\n      (hashVals[1] << 1) |\n      (hashVals[2] << 2) |\n      (hashVals[3] << 4);\n    let c = this.lookup2D![hash];\n    let value = 0.0;\n    while (typeof c !== 'undefined') {\n      const dx = dx0 + c.dx, dy = dy0 + c.dy;\n      let attn = 2 - dx * dx - dy * dy;\n      if (attn > 0) {\n        const px = xsb + c.xsb, py = ysb + c.ysb;\n        const i = this.perm2D[(this.perm[px & 0xff] + py) & 0xff];\n        const valuePart = gradients2D[i] * dx + gradients2D[i + 1] * dy;\n        attn *= attn;\n        value += attn * attn * valuePart;\n      }\n      c = c.next!;\n    }\n    return value * NORM_2D;\n  }\n\n  noise3D(x: number, y: number, z: number): number {\n    const stretchOffset = (x + y + z) * STRETCH_3D;\n    const [xs, ys, zs] = [\n      x + stretchOffset,\n      y + stretchOffset,\n      z + stretchOffset\n    ];\n    const [xsb, ysb, zsb] = [Math.floor(xs), Math.floor(ys), Math.floor(zs)];\n    const squishOffset = (xsb + ysb + zsb) * SQUISH_3D;\n    const [dx0, dy0, dz0] = [\n      x - (xsb + squishOffset),\n      y - (ysb + squishOffset),\n      z - (zsb + squishOffset)\n    ];\n    const [xins, yins, zins] = [xs - xsb, ys - ysb, zs - zsb];\n    const inSum = xins + yins + zins;\n    const hashVals = new Uint32Array(7);\n    hashVals[0] = yins - zins + 1;\n    hashVals[1] = xins - yins + 1;\n    hashVals[2] = xins - zins + 1;\n    hashVals[3] = inSum;\n    hashVals[4] = inSum + zins;\n    hashVals[5] = inSum + yins;\n    hashVals[6] = inSum + xins;\n    const hash =\n      hashVals[0] |\n      (hashVals[1] << 1) |\n      (hashVals[2] << 2) |\n      (hashVals[3] << 3) |\n      (hashVals[4] << 5) |\n      (hashVals[5] << 7) |\n      (hashVals[6] << 9);\n    let c = this.lookup3D![hash];\n    let value = 0.0;\n    while (typeof c !== 'undefined') {\n      const [dx, dy, dz] = [dx0 + c.dx, dy0 + c.dy, dz0 + c.dz];\n      let attn = 2 - dx * dx - dy * dy - dz * dz;\n      if (attn > 0) {\n        const [px, py, pz] = [xsb + c.xsb, ysb + c.ysb, zsb + c.zsb];\n        const i = this.perm3D[\n          (this.perm[(this.perm[px & 0xff] + py) & 0xff] + pz) & 0xff\n        ];\n        const valuePart =\n          gradients3D[i] * dx +\n          gradients3D[i + 1] * dy +\n          gradients3D[i + 2] * dz;\n        attn *= attn;\n        value += attn * attn * valuePart;\n      }\n      c = c.next!;\n    }\n    return value * NORM_3D;\n  }\n\n  noise4D(x: number, y: number, z: number, w: number): number {\n    const stretchOffset = (x + y + z + w) * STRETCH_4D;\n    const [xs, ys, zs, ws] = [\n      x + stretchOffset,\n      y + stretchOffset,\n      z + stretchOffset,\n      w + stretchOffset\n    ];\n    const [xsb, ysb, zsb, wsb] = [\n      Math.floor(xs),\n      Math.floor(ys),\n      Math.floor(zs),\n      Math.floor(ws)\n    ];\n    const squishOffset = (xsb + ysb + zsb + wsb) * SQUISH_4D;\n    const dx0 = x - (xsb + squishOffset);\n    const dy0 = y - (ysb + squishOffset);\n    const dz0 = z - (zsb + squishOffset);\n    const dw0 = w - (wsb + squishOffset);\n    const [xins, yins, zins, wins] = [xs - xsb, ys - ysb, zs - zsb, ws - wsb];\n    const inSum = xins + yins + zins + wins;\n    const hashVals = new Uint32Array(11);\n    hashVals[0] = zins - wins + 1;\n    hashVals[1] = yins - zins + 1;\n    hashVals[2] = yins - wins + 1;\n    hashVals[3] = xins - yins + 1;\n    hashVals[4] = xins - zins + 1;\n    hashVals[5] = xins - wins + 1;\n    hashVals[6] = inSum;\n    hashVals[7] = inSum + wins;\n    hashVals[8] = inSum + zins;\n    hashVals[9] = inSum + yins;\n    hashVals[10] = inSum + xins;\n    const hash =\n      hashVals[0] |\n      (hashVals[1] << 1) |\n      (hashVals[2] << 2) |\n      (hashVals[3] << 3) |\n      (hashVals[4] << 4) |\n      (hashVals[5] << 5) |\n      (hashVals[6] << 6) |\n      (hashVals[7] << 8) |\n      (hashVals[8] << 11) |\n      (hashVals[9] << 14) |\n      (hashVals[10] << 17);\n    let c = this.lookup4D![hash];\n    let value = 0.0;\n    while (typeof c !== 'undefined') {\n      const [dx, dy, dz, dw] = [dx0 + c.dx, dy0 + c.dy, dz0 + c.dz, dw0 + c.dw];\n      let attn = 2 - dx * dx - dy * dy - dz * dz - dw * dw;\n      if (attn > 0) {\n        const [px, py, pz, pw] = [\n          xsb + c.xsb,\n          ysb + c.ysb,\n          zsb + c.zsb,\n          wsb + c.wsb\n        ];\n        const i = this.perm4D[\n          (this.perm[\n            (this.perm[(this.perm[px & 0xff] + py) & 0xff] + pz) & 0xff\n          ] +\n            pw) &\n          0xff\n        ];\n        const valuePart =\n          gradients4D[i] * dx +\n          gradients4D[i + 1] * dy +\n          gradients4D[i + 2] * dz +\n          gradients4D[i + 3] * dw;\n        attn *= attn;\n        value += attn * attn * valuePart;\n      }\n      c = c.next!;\n    }\n    return value * NORM_4D;\n  }\n\n  private initialize() {\n    const contributions2D: Contribution2[] = [];\n    for (let i = 0; i < p2D.length; i += 4) {\n      const baseSet = base2D[p2D[i]];\n      let previous: Contribution2 | null = null;\n      let current: Contribution2 | null = null;\n      for (let k = 0; k < baseSet.length; k += 3) {\n        current = new Contribution2(baseSet[k], baseSet[k + 1], baseSet[k + 2]);\n        if (previous === null) contributions2D[i / 4] = current;\n        else previous.next = current;\n        previous = current;\n      }\n      current!.next = new Contribution2(p2D[i + 1], p2D[i + 2], p2D[i + 3]);\n    }\n    this.lookup2D = [];\n    for (let i = 0; i < lookupPairs2D.length; i += 2) {\n      this.lookup2D[lookupPairs2D[i]] = contributions2D[lookupPairs2D[i + 1]];\n    }\n\n    const contributions3D: Contribution3[] = [];\n    for (let i = 0; i < p3D.length; i += 9) {\n      const baseSet = base3D[p3D[i]];\n      let previous: Contribution3 | null = null;\n      let current: Contribution3 | null = null;\n      for (let k = 0; k < baseSet.length; k += 4) {\n        current = new Contribution3(\n          baseSet[k],\n          baseSet[k + 1],\n          baseSet[k + 2],\n          baseSet[k + 3]\n        );\n        if (previous === null) contributions3D[i / 9] = current;\n        else previous.next = current;\n        previous = current;\n      }\n      current!.next = new Contribution3(\n        p3D[i + 1],\n        p3D[i + 2],\n        p3D[i + 3],\n        p3D[i + 4]\n      );\n      current!.next!.next = new Contribution3(\n        p3D[i + 5],\n        p3D[i + 6],\n        p3D[i + 7],\n        p3D[i + 8]\n      );\n    }\n    this.lookup3D = [];\n    for (let i = 0; i < lookupPairs3D.length; i += 2) {\n      this.lookup3D[lookupPairs3D[i]] = contributions3D[lookupPairs3D[i + 1]];\n    }\n\n    const contributions4D: Contribution4[] = [];\n    for (let i = 0; i < p4D.length; i += 16) {\n      const baseSet = base4D[p4D[i]];\n      let previous: Contribution4 | null = null;\n      let current: Contribution4 | null = null;\n      for (let k = 0; k < baseSet.length; k += 5) {\n        current = new Contribution4(\n          baseSet[k],\n          baseSet[k + 1],\n          baseSet[k + 2],\n          baseSet[k + 3],\n          baseSet[k + 4]\n        );\n        if (previous === null) contributions4D[i / 16] = current;\n        else previous.next = current;\n        previous = current;\n      }\n      current!.next = new Contribution4(\n        p4D[i + 1],\n        p4D[i + 2],\n        p4D[i + 3],\n        p4D[i + 4],\n        p4D[i + 5]\n      );\n      current!.next!.next = new Contribution4(\n        p4D[i + 6],\n        p4D[i + 7],\n        p4D[i + 8],\n        p4D[i + 9],\n        p4D[i + 10]\n      );\n      current!.next!.next!.next = new Contribution4(\n        p4D[i + 11],\n        p4D[i + 12],\n        p4D[i + 13],\n        p4D[i + 14],\n        p4D[i + 15]\n      );\n    }\n    this.lookup4D = [];\n    for (let i = 0; i < lookupPairs4D.length; i += 2) {\n      this.lookup4D[lookupPairs4D[i]] = contributions4D[lookupPairs4D[i + 1]];\n    }\n  }\n}","import OpenSimplexNoise from 'common/noise/simplex';\nimport { RandomSeed } from 'random-seed';\n\nexport class Noise {\n  private readonly noise: OpenSimplexNoise;\n  constructor(\n    rand: RandomSeed,\n    private readonly freq = 1 / 256,\n    private readonly octaves = 4,\n    private readonly persistence = 0.5\n  ) {\n    this.noise = new OpenSimplexNoise(rand.random() * 0xffffffff);\n  }\n\n  public noise2D(x: number, y: number) {\n    let amp = 1, maxAmp = 0;\n    let freq = this.freq;\n    let noise = 0;\n    for (let i = 0; i < this.octaves; i++) {\n      noise += this.noise.noise2D(x * freq, y * freq) * amp;\n      maxAmp += amp;\n      amp *= this.persistence;\n      freq *= 2;\n    }\n    noise /= maxAmp;\n    return (noise + 1) / 2;\n  }\n}\n","module.exports = __webpack_public_path__ + \"assets/712119d6b5b8404ce47d2f501258b540.woff\";","module.exports = __webpack_public_path__ + \"assets/c47bbe6b531a3063257791bfa2de6ed8.otf\";","module.exports = __webpack_public_path__ + \"assets/6d6a985a020034d856ef3579d5612c00.otf\";","module.exports = __webpack_public_path__ + \"assets/3b0ea8776746732d38c9c352e0996a82.otf\";","import { vec2 } from 'gl-matrix';\n\nexport interface Biome {\n  index: number;\n  type: Biome.Type;\n  feature: Biome.Feature;\n\n  temperature: number;\n  humidity: number;\n\n  position: vec2;\n  min: vec2;\n  max: vec2;\n}\n\nexport namespace Biome {\n  export enum Type {\n    None,\n    FrozenBarren,\n    Barren,\n    Desert,\n    SnowPlain,\n    Savanna,\n    Plain,\n    Taiga,\n    Forest,\n    FrozenLake,\n    Lake,\n    Swamp,\n  }\n  export enum Feature {\n    None,\n    Spawn,\n    Pond,\n    LavaPond,\n    Floral,\n    Rocky,\n    Oasis,\n    Cemetery,\n    Ruins,\n  }\n}","import { DataLibrary } from 'common/data';\nimport { EntityProps, GameProps } from 'common/data/props';\nimport { MapProps } from 'common/map/MapProps';\nimport { SerializedMap } from 'common/map/SerializedMap';\nimport { VoronoiDiagram } from 'd3-voronoi';\nimport { create as createRand, RandomSeed } from 'random-seed';\nimport { Biome } from 'worker/generation/data/Biome';\n\nexport interface RiverSegment {\n  from: [number, number];\n  to: [number, number];\n  level: number;\n}\n\nexport class GameData {\n  public readonly random: RandomSeed;\n  private readonly terrains: Uint16Array;\n  private readonly objects: Uint16Array;\n  private readonly tileBiomes: Uint16Array;\n  public voronoi!: VoronoiDiagram<[number, number]>;\n  public biomes: Biome[] = [];\n  public rivers: RiverSegment[] = [];\n\n\n  private readonly terrainLookup: Record<string, number>;\n  private readonly objectLookup: Record<string, number>;\n\n  public readonly map: MapProps = {} as MapProps;\n  public readonly game: GameProps = {} as GameProps;\n  public readonly entities: EntityProps[] = [];\n\n  constructor(\n    public readonly width: number, public readonly height: number,\n    public readonly seed: string, public readonly library: DataLibrary\n  ) {\n    this.terrains = new Uint16Array(width * height);\n    this.objects = new Uint16Array(width * height);\n    this.tileBiomes = new Uint16Array(width * height);\n    this.random = createRand(seed);\n\n    function makeLookup(items: ({ name: string, id: number } | null)[]): Record<string, number> {\n      return Object.assign({}, ...items\n        .filter(item => item)\n        .map(item => ({ [item!.name]: item!.id }))\n      );\n    }\n\n    this.terrainLookup = makeLookup(library.terrains);\n    this.objectLookup = makeLookup(library.objects);\n  }\n\n  public finalizeMap(): SerializedMap {\n    return {\n      width: this.width, height: this.height,\n      props: this.map as MapProps,\n      terrains: this.terrains,\n      objects: this.objects\n    };\n  }\n\n  private toIndex(x: number, y: number): number {\n    x = Math.floor(x);\n    y = Math.floor(y);\n    return x >= 0 && x < this.width && y >= 0 && y < this.height ?\n      (x + this.width * y) : -1;\n  }\n\n  public getTerrain(x: number, y: number) {\n    const index = this.toIndex(x, y);\n    if (index < 0)\n      return 0;\n    else {\n      const data = this.library.terrains[this.terrains[index]];\n      return data && data.name;\n    }\n  }\n\n  public getObject(x: number, y: number) {\n    const index = this.toIndex(x, y);\n    if (index < 0)\n      return 0;\n    else {\n      const data = this.library.objects[this.objects[index]];\n      return data && data.name;\n    }\n  }\n\n  public getBiomeIndex(x: number, y: number) {\n    const index = this.toIndex(x, y);\n    if (index < 0)\n      return -1;\n    else\n      return this.tileBiomes[index];\n  }\n\n  public setTerrain(x: number, y: number, terrainName: string | null) {\n    const index = this.toIndex(x, y);\n    if (index < 0)\n      return;\n\n    this.terrains[index] = terrainName ? this.terrainLookup[terrainName] : 0;\n  }\n\n  public setObject(x: number, y: number, objectName: string | null) {\n    const index = this.toIndex(x, y);\n    if (index < 0)\n      return;\n\n    this.objects[index] = objectName ? this.objectLookup[objectName] : 0;\n  }\n\n  public setBiomeIndex(x: number, y: number, biomeIndex: number) {\n    const index = this.toIndex(x, y);\n    if (index < 0)\n      return;\n\n    this.tileBiomes[index] = biomeIndex;\n  }\n}","import { distance, lch } from 'chroma-js';\nimport { randomValue, RandomValue } from 'common/random';\nimport { Elements, ElementDef } from 'data/elements';\nimport { times } from 'lodash';\nimport { RandomSeed } from 'random-seed';\nimport { ProgressReporter } from 'worker/generation/ProgressReporter';\n\nexport function* withProgress<T>(list: T[], report: ProgressReporter) {\n  for (let i = 0; i < list.length; i++) {\n    yield list[i];\n    report(null, i / list.length);\n  }\n}\n\nexport function poissonDisk(width: number, height: number, radius: number, rand: RandomSeed) {\n  // http://www.cs.ubc.ca/~rbridson/docs/bridson-siggraph07-poissondisk.pdf\n\n  const cellSize = radius * Math.SQRT1_2;\n  const gridScale = (n: number) => n / cellSize;\n  const grid = new Uint32Array(Math.ceil(gridScale(width)) * Math.ceil(gridScale(height)));\n  const index = (x: number, y: number) => Math.floor(gridScale(x)) + Math.floor(gridScale(y)) * Math.ceil(gridScale(width));\n  const active: [number, number][] = [];\n  const samples: [number, number][] = [];\n  const k = 64;\n\n  const addSample = (x: number, y: number) => {\n    x = Math.floor(x);\n    y = Math.floor(y);\n    if (x < 0 || y < 0 || x >= width || y >= height) return false;\n    if (grid[index(x, y)]) return false;\n\n    for (let dy = -1; dy <= 1; dy++)\n      for (let dx = -1; dx <= 1; dx++) {\n        const i = grid[index(x + dx * cellSize, y + dy * cellSize)];\n        if (!i) continue;\n        const px = (samples[i - 1][0] - x), py = (samples[i - 1][1] - y);\n        if (px * px + py * py <= radius * radius) return false;\n      }\n    active.push([x, y]);\n    grid[index(x, y)] = samples.push([x, y]);\n    return true;\n  };\n  addSample(rand.range(width), rand.range(height));\n\n  while (active.length > 0) {\n    const i = rand.range(active.length);\n\n    let j;\n    for (j = 0; j < k; j++) {\n      const theta = rand.floatBetween(0, Math.PI * 2);\n      const r = rand.floatBetween(radius, radius * 2);\n      if (addSample(active[i][0] + Math.cos(theta) * r, active[i][1] + Math.sin(theta) * r))\n        break;\n    }\n    if (j === k)\n      active.splice(i, 1);\n  }\n\n  return samples;\n}\n\nexport function randomColors(\n  rand: RandomSeed, n: number,\n  chroma: RandomValue = { type: 'uniform', min: 0, max: 1 },\n  lightness: RandomValue = { type: 'uniform', min: 0, max: 1 }\n) {\n  function randomColor() {\n    const h = rand.random() * 360;\n    const l = randomValue(lightness, rand.random) * 100;\n    const c = randomValue(chroma, rand.random) * 100;\n    return lch(l, c, h);\n  }\n\n  const candidates = times(n * 100, randomColor);\n  const result = candidates.splice(rand.range(candidates.length), 1);\n  for (let i = 1; i < n; i++) {\n    let dist = 0;\n    let color = result[0];\n\n    for (const candidate of candidates) {\n      let min = 1000;\n      for (const color of result) {\n        const d: number = distance(color, candidate) as any;\n        min = Math.min(min, d);\n        if (min < dist)\n          break;\n      }\n      if (min > dist) {\n        dist = min;\n        color = candidate;\n      }\n    }\n    result.push(color);\n  }\n  return result.map(color => color.rgb()).map(([r, g, b]) => (r * 0x10000 + g * 0x100 + b * 0x1));\n}\n\nexport function randomElementPair(rand: RandomSeed, state: any[]): [string, string] {\n  let elem1: ElementDef, elem2: ElementDef;\n  do {\n    const elements = Elements.filter(elem => elem.tier <= 1);\n    elem1 = elements.splice(rand.range(elements.length), 1)[0];\n    elem2 = elements.splice(rand.range(elements.length), 1)[0];\n  } while (state.indexOf(`${elem1.name}:${elem2.name}`) >= 0);\n  state.push(`${elem1.name}:${elem2.name}`);\n  return [elem1.name, elem2.name];\n}\n\nexport function rasterizeLine(x0: number, y0: number, x1: number, y1: number, cb: (x: number, y: number) => void) {\n  x0 = Math.floor(x0); y0 = Math.floor(y0);\n  x1 = Math.floor(x1); y1 = Math.floor(y1);\n\n  const dx = Math.abs(x1 - x0), dy = Math.abs(y1 - y0);\n  const sx = Math.sign(x1 - x0), sy = Math.sign(y1 - y0);\n  let err = dx - dy;\n  cb(x0, y0);\n  while (x0 !== x1 || y0 !== y1) {\n    const e2 = 2 * err;\n    if (e2 > -dy) {\n      err -= dy;\n      x0 += sx;\n    } else {\n      err += dx;\n      y0 += sy;\n    }\n    cb(x0, y0);\n  }\n}\n","import { Noise } from 'common/noise';\nimport { voronoi } from 'd3-voronoi';\nimport { vec2 } from 'gl-matrix';\nimport { Biome, GameData, RiverSegment } from 'worker/generation/data';\nimport { poissonDisk } from 'worker/generation/utils';\nimport { ProgressReporter } from 'worker/generation/ProgressReporter';\n\nconst BiomeSize = 32;\nconst EdgeRoughness = 16;\nconst EdgeJitter = 8;\nconst WaterRarity = 16;\n\nfunction generateBiomePolygons(data: GameData) {\n  const biomeCenters = poissonDisk(data.width, data.height, BiomeSize, data.random);\n  const diagram = voronoi()(biomeCenters);\n\n  data.voronoi = diagram;\n  data.biomes = biomeCenters.map<Biome>(([x, y], i) => ({\n    index: i,\n    type: Biome.Type.None,\n    feature: Biome.Feature.None,\n    position: vec2.fromValues(x, y),\n    min: vec2.fromValues(data.width - 1, data.height - 1), max: vec2.fromValues(0, 0),\n    humidity: 0, temperature: 0\n  }));\n}\n\nfunction generateHumidity(data: GameData) {\n  const sources = poissonDisk(data.width, data.height, BiomeSize * WaterRarity, data.random)\n    .map(position => ({ position, level: data.random.floatBetween(0.5, 1) }));\n\n  type WaterPosition = { position: [number, number], level: number };\n  const waters: WaterPosition[] = [];\n  const rivers: RiverSegment[] = [];\n  const riverTheta = new Noise(data.random, 1 / 128, 1);\n  for (const { position, level } of sources) {\n    let l = level, p = position;\n    let theta = data.random.floatBetween(-Math.PI, Math.PI);\n    while (p[0] >= 0 && p[0] < data.width && p[1] >= 0 && p[1] < data.height && l > 0.25) {\n      waters.push({ position: p, level: l });\n      const r = data.random.floatBetween(BiomeSize, BiomeSize * 2);\n      const newP: [number, number] = [p[0] + Math.cos(theta) * r, p[1] + Math.sin(theta) * r];\n      theta += (riverTheta.noise2D(p[0], p[1]) * 2 - 1) * Math.PI / 4;\n\n      rivers.push({ from: p, to: newP, level: l });\n      l *= data.random.floatBetween(0.9, 1);\n      p = newP;\n    }\n  }\n  for (const biome of data.biomes) {\n    const norm = Math.sqrt(BiomeSize * WaterRarity * BiomeSize * WaterRarity * 2);\n    biome.humidity = 0;\n    for (const { position, level } of waters) {\n      const d = vec2.dist(position, biome.position);\n      const h = level * ((d === 0) ? 1 : Math.pow(1 - Math.min(1, d / norm), 2));\n      if (h > biome.humidity) biome.humidity = h;\n    }\n  }\n  data.rivers = rivers;\n}\n\nfunction generateTemperature(data: GameData) {\n  const temperatureNoise = new Noise(data.random, 0.002, 1);\n  for (const biome of data.biomes) {\n    const temp = temperatureNoise.noise2D(biome.position[0], biome.position[1]) * 2 - 1;\n    const t = Math.sign(temp) * Math.pow(Math.abs(temp), 1);\n    biome.temperature = (t + 1) / 2;\n  }\n}\n\nconst biomeProps: [Biome.Type, number, number, number][] = [\n  [Biome.Type.FrozenBarren, 0.15, 0.2, 1],\n  [Biome.Type.Barren, 0, 0.5, 1],\n  [Biome.Type.Desert, 0.15, 0.8, 1],\n\n  [Biome.Type.SnowPlain, 0.25, 0.25, 1],\n  [Biome.Type.Savanna, 0.25, 0.75, 1],\n\n  [Biome.Type.Plain, 0.5, 0.5, 1],\n\n  [Biome.Type.Taiga, 0.7, 0.25, 1],\n  [Biome.Type.Forest, 0.7, 0.75, 1],\n\n  [Biome.Type.FrozenLake, 0.8, 0.25, 1],\n  [Biome.Type.Lake, 1, 0.5, 1],\n  [Biome.Type.Swamp, 0.8, 0.75, 1],\n];\nfunction populateBiomeTypes(data: GameData) {\n  for (const biome of data.biomes) {\n    let min = Number.MAX_VALUE;\n    for (const [type, h, t, w] of biomeProps) {\n      const dh = biome.humidity - h, dt = biome.temperature - t;\n      const d = 1 / (w * w) * (dh * dh + dt * dt);\n      if (d < min) {\n        min = d;\n        biome.type = type;\n      }\n    }\n  }\n}\n\nfunction rasterizeBiomes(data: GameData, report: ProgressReporter) {\n  const noiseX = new Noise(data.random, 1 / 32, 4);\n  const noiseY = new Noise(data.random, 1 / 32, 4);\n\n  for (let y = 0; y < data.height; y++) {\n    for (let x = 0; x < data.width; x++) {\n      const roughnessX = noiseX.noise2D(x, y) * 2 - 1;\n      const roughnessY = noiseY.noise2D(x, y) * 2 - 1;\n      let px = x + roughnessX * EdgeRoughness;\n      let py = y + roughnessY * EdgeRoughness;\n      const realBiome = data.biomes[data.voronoi.find(px, py)!.index];\n      px += data.random.floatBetween(-EdgeJitter, EdgeJitter);\n      py += data.random.floatBetween(-EdgeJitter, EdgeJitter);\n      const renderBiome = data.biomes[data.voronoi.find(px, py)!.index];\n\n      let biome = renderBiome;\n      if (realBiome.type === Biome.Type.Lake || realBiome.type === Biome.Type.FrozenLake ||\n        renderBiome.type === Biome.Type.Lake || renderBiome.type === Biome.Type.FrozenLake)\n        biome = realBiome;\n\n      let terrain: string | null = null;\n      switch (biome.type) {\n        case Biome.Type.FrozenBarren: terrain = 'snow'; break;\n        case Biome.Type.Barren: terrain = data.random.range(50) ? 'soil' : 'grass-light'; break;\n        case Biome.Type.Desert: terrain = 'sand'; break;\n        case Biome.Type.SnowPlain: terrain = 'snow'; break;\n        case Biome.Type.Savanna: terrain = 'grass-light'; break;\n        case Biome.Type.Plain: terrain = 'grass'; break;\n        case Biome.Type.Taiga: terrain = 'snow'; break;\n        case Biome.Type.Forest: terrain = 'grass-deep'; break;\n        case Biome.Type.FrozenLake: terrain = 'ice'; break;\n        case Biome.Type.Lake: terrain = 'water'; break;\n        case Biome.Type.Swamp: terrain = data.random.range(5) ? 'mud' : 'grass-deep'; break;\n      }\n      data.setTerrain(x, y, terrain);\n      data.setBiomeIndex(x, y, realBiome.index);\n      realBiome.min[0] = Math.min(realBiome.min[0], x);\n      realBiome.min[1] = Math.min(realBiome.min[1], y);\n      realBiome.max[0] = Math.max(realBiome.max[0], x);\n      realBiome.max[1] = Math.max(realBiome.max[1], y);\n    }\n    report(null, y / data.height);\n  }\n}\n\nexport function generateBiomes(data: GameData, report: ProgressReporter) {\n  report('generating biomes...', 0);\n  generateBiomePolygons(data);\n  generateHumidity(data);\n  generateTemperature(data);\n  populateBiomeTypes(data);\n  rasterizeBiomes(data, report);\n}","import { Biome, GameData } from 'worker/generation/data';\nimport { ProgressReporter } from 'worker/generation/ProgressReporter';\n\nconst decorationProps: { [type: number]: [string, number][] } = {\n  [Biome.Type.FrozenBarren]: [\n    ['stone', 0.02],\n    ['rocks', 0.02],\n  ],\n  [Biome.Type.Barren]: [\n    ['stone', 0.02],\n    ['rocks', 0.02],\n  ],\n  [Biome.Type.Desert]: [\n    ['tree-coconut', 0.001],\n    ['stone', 0.01],\n    ['rocks', 0.01],\n    ['cactus', 0.01],\n  ],\n  [Biome.Type.SnowPlain]: [\n    ['berries', 0.002],\n    ['flower', 0.005],\n    ['tree-spruce', 0.005],\n    ['bush', 0.008],\n    ['rocks', 0.01],\n    ['fern', 0.05],\n  ],\n  [Biome.Type.Savanna]: [\n    ['rocks', 0.004],\n    ['berries', 0.004],\n    ['flower', 0.005],\n    ['tree-oak', 0.005],\n    ['bush', 0.006],\n    ['fern', 0.1],\n  ],\n  [Biome.Type.Plain]: [\n    ['bush', 0.004],\n    ['tree-oak', 0.005],\n    ['berries', 0.006],\n    ['rocks', 0.01],\n    ['flower', 0.02],\n    ['fern', 0.4],\n  ],\n  [Biome.Type.Taiga]: [\n    ['rocks', 0.001],\n    ['berries', 0.003],\n    ['flower', 0.005],\n    ['bush', 0.007],\n    ['fern', 0.05],\n    ['tree-spruce', 0.1],\n  ],\n  [Biome.Type.Forest]: [\n    ['rocks', 0.001],\n    ['bush', 0.004],\n    ['flower', 0.005],\n    ['berries', 0.006],\n    ['fern', 0.05],\n    ['tree-oak', 0.1],\n  ],\n  [Biome.Type.Swamp]: [\n    ['rocks', 0.001],\n    ['fern', 0.05],\n  ],\n};\n\nexport function decorateMap(data: GameData, report: ProgressReporter) {\n  report('decorating map...', 0);\n  const flowers = data.library.objects\n    .filter(obj => obj && /^flower-\\d+$/.test(obj.name))\n    .map(obj => obj.name);\n  const berries = data.library.objects\n    .filter(obj => obj && /^berrybush-\\d+$/.test(obj.name))\n    .map(obj => obj.name);\n\n  function decorateTile(x: number, y: number) {\n    if (data.getObject(x, y)) return;\n    const terrain = data.getTerrain(x, y);\n    if (terrain === 'water' || terrain === 'lava' || terrain === 'ice' || terrain === 'mud') return;\n\n    const biome = data.biomes[data.getBiomeIndex(x, y)];\n    const decorations = decorationProps[biome.type];\n    if (!decorations) return;\n    if (\n      biome.feature !== Biome.Feature.None &&\n      biome.feature !== Biome.Feature.Floral &&\n      biome.feature !== Biome.Feature.Rocky\n    )\n      return;\n\n    let r = data.random.random();\n    for (const [decor, prob] of decorations) {\n      r -= prob;\n      if (biome.feature === Biome.Feature.Floral && decor === 'flower')\n        r -= 0.1;\n      else if (biome.feature === Biome.Feature.Rocky && decor === 'rocks')\n        r -= 0.1;\n\n      if (r <= 0) {\n        if (decor === 'flower')\n          data.setObject(x, y, flowers[data.random.range(flowers.length)]);\n        else if (decor === 'berries')\n          data.setObject(x, y, berries[data.random.range(berries.length)]);\n        else\n          data.setObject(x, y, decor);\n        break;\n      }\n    }\n  }\n\n  for (let y = 0; y < data.height; y++) {\n    for (let x = 0; x < data.width; x++)\n      decorateTile(x, y);\n    report(null, y / data.height);\n  }\n}","import { Noise } from 'common/noise';\nimport { vec2 } from 'gl-matrix';\nimport { Biome, GameData } from 'worker/generation/data';\nimport { poissonDisk, rasterizeLine, withProgress } from 'worker/generation/utils';\nimport { ProgressReporter } from 'worker/generation/ProgressReporter';\n\nconst FeatureSize = 128;\nconst EdgeJitter = 4;\nconst BeachSize = 16;\nconst RiverSegments = 16;\nconst RiverRoughness = 24;\nconst SpawnMargins = 0.2;\n\nconst featureProps: { [type: number]: Biome.Feature[] } = {\n  [Biome.Type.Barren]: [\n    Biome.Feature.LavaPond,\n    Biome.Feature.LavaPond,\n    Biome.Feature.Rocky,\n    Biome.Feature.Cemetery,\n    Biome.Feature.Cemetery,\n    Biome.Feature.Ruins,\n  ],\n  [Biome.Type.FrozenBarren]: [\n    Biome.Feature.Rocky,\n    Biome.Feature.Rocky,\n    Biome.Feature.Cemetery,\n    Biome.Feature.Cemetery,\n    Biome.Feature.Cemetery,\n    Biome.Feature.Ruins,\n  ],\n  [Biome.Type.Desert]: [\n    Biome.Feature.LavaPond,\n    Biome.Feature.LavaPond,\n    Biome.Feature.LavaPond,\n    Biome.Feature.Rocky,\n    Biome.Feature.Rocky,\n    Biome.Feature.Oasis,\n    Biome.Feature.Oasis,\n    Biome.Feature.Oasis,\n    Biome.Feature.Cemetery,\n  ],\n  [Biome.Type.SnowPlain]: [\n    Biome.Feature.Pond,\n    Biome.Feature.Floral,\n    Biome.Feature.Floral,\n    Biome.Feature.Rocky,\n    Biome.Feature.Cemetery,\n    Biome.Feature.Ruins,\n  ],\n  [Biome.Type.Savanna]: [\n    Biome.Feature.Pond,\n    Biome.Feature.Pond,\n    Biome.Feature.Floral,\n    Biome.Feature.Floral,\n    Biome.Feature.Rocky,\n    Biome.Feature.Ruins,\n  ],\n  [Biome.Type.Plain]: [\n    Biome.Feature.Pond,\n    Biome.Feature.Pond,\n    Biome.Feature.Pond,\n    Biome.Feature.Floral,\n    Biome.Feature.Floral,\n    Biome.Feature.Rocky,\n    Biome.Feature.Ruins,\n  ],\n  [Biome.Type.Taiga]: [\n    Biome.Feature.Pond,\n    Biome.Feature.Pond,\n    Biome.Feature.Pond,\n    Biome.Feature.Floral,\n    Biome.Feature.Floral,\n    Biome.Feature.Floral,\n    Biome.Feature.Ruins,\n  ],\n  [Biome.Type.Forest]: [\n    Biome.Feature.Pond,\n    Biome.Feature.Pond,\n    Biome.Feature.Pond,\n    Biome.Feature.Floral,\n    Biome.Feature.Floral,\n    Biome.Feature.Floral,\n    Biome.Feature.Ruins,\n  ],\n  [Biome.Type.Swamp]: [\n    Biome.Feature.Pond,\n    Biome.Feature.Rocky,\n    Biome.Feature.Rocky,\n    Biome.Feature.Cemetery,\n    Biome.Feature.Cemetery,\n  ],\n};\n\nfunction rasterizeBiome(data: GameData, biome: Biome,\n  cb: (x: number, y: number) => void,\n  offset?: (x: number, y: number) => [number, number]\n) {\n  for (let y = biome.min[1] - EdgeJitter; y <= biome.max[1] + EdgeJitter; y++)\n    for (let x = biome.min[0] - EdgeJitter; x <= biome.max[0] + EdgeJitter; x++) {\n      let px = x, py = y;\n      if (offset) {\n        const [dx, dy] = offset(x, y);\n        px += dx;\n        py += dy;\n      }\n      if (data.getBiomeIndex(px, py) === biome.index)\n        cb(x, y);\n    }\n}\n\nfunction generateBiomeFeatures(data: GameData, report: ProgressReporter) {\n  const featurePoints = poissonDisk(data.width, data.height, FeatureSize, data.random);\n  const noiseX = new Noise(data.random, 1 / 32, 4);\n  const noiseY = new Noise(data.random, 1 / 32, 4);\n\n  for (const [x, y] of withProgress(featurePoints, report)) {\n    const biome = data.biomes[data.getBiomeIndex(x, y)];\n    const features = featureProps[biome.type];\n    if (!features) continue;\n    const feature = features[data.random.range(10)];\n    if (!feature) continue;\n\n    switch (feature) {\n      case Biome.Feature.Pond:\n      case Biome.Feature.LavaPond: {\n        let terrain: string;\n        if (feature === Biome.Feature.LavaPond) terrain = 'lava';\n        else terrain = 'water';\n\n        if (terrain === 'water') {\n          rasterizeBiome(data, biome,\n            (x, y) => data.setTerrain(x, y, 'sand'),\n            (x, y) => [\n              (noiseX.noise2D(x, y) * 2 - 1) * BeachSize,\n              (noiseY.noise2D(x, y) * 2 - 1) * BeachSize\n            ]);\n        }\n        rasterizeBiome(data, biome, (x, y) => data.setTerrain(x, y, terrain));\n      } break;\n      case Biome.Feature.Oasis: {\n        rasterizeBiome(data, biome, (x, y) => data.setTerrain(x, y, 'water'));\n        rasterizeBiome(data, biome,\n          (x, y) => {\n            if (data.getTerrain(x, y) === 'sand' && data.random.range(5) === 0)\n              data.setObject(x, y, 'tree-coconut');\n          },\n          (x, y) => {\n            const d = vec2.sub(vec2.create(), [x, y], biome.position);\n            vec2.scale(d, vec2.normalize(d, d), EdgeJitter);\n            return [-d[0], -d[1]];\n          }\n        );\n      } break;\n      case Biome.Feature.Cemetery: {\n        rasterizeBiome(data, biome,\n          (x, y) => {\n            if (data.random.range(3) === 0) {\n              data.setTerrain(x, y, 'mud');\n              if (data.random.range(10) === 0) data.setObject(x, y, 'cross');\n              else if (data.random.range(10) === 0) data.setObject(x, y, 'bones');\n            }\n          }\n        );\n      } break;\n      case Biome.Feature.Ruins: {\n        rasterizeBiome(data, biome,\n          (x, y) => {\n            data.setTerrain(x, y, 'stone');\n            if (data.random.range(50) === 0)\n              data.setObject(x, y, 'pillar');\n            else if (data.random.range(50) === 0)\n              data.setObject(x, y, 'bones');\n          },\n          (x, y) => [\n            data.random.intBetween(-EdgeJitter, EdgeJitter),\n            data.random.intBetween(-EdgeJitter, EdgeJitter)\n          ]\n        );\n      } break;\n    }\n    biome.feature = feature;\n    if (feature === Biome.Feature.Floral || feature === Biome.Feature.Rocky) {\n      let neighbor: Biome;\n      if (neighbor = data.biomes[data.getBiomeIndex(x - FeatureSize, y)])\n        neighbor.feature = feature;\n      if (neighbor = data.biomes[data.getBiomeIndex(x + FeatureSize, y)])\n        neighbor.feature = feature;\n      if (neighbor = data.biomes[data.getBiomeIndex(x, y - FeatureSize)])\n        neighbor.feature = feature;\n      if (neighbor = data.biomes[data.getBiomeIndex(x, y + FeatureSize)])\n        neighbor.feature = feature;\n    }\n  }\n\n  const spawnMargins = [data.width * SpawnMargins, data.height * SpawnMargins];\n  let spawnBiome: Biome;\n  do {\n    spawnBiome = data.biomes[data.getBiomeIndex(\n      data.random.intBetween(spawnMargins[0], data.width - spawnMargins[0]),\n      data.random.intBetween(spawnMargins[1], data.width - spawnMargins[1])\n    )];\n  } while (\n    spawnBiome.feature !== Biome.Feature.None &&\n    spawnBiome.type !== Biome.Type.Lake &&\n    spawnBiome.type !== Biome.Type.FrozenLake);\n\n  spawnBiome.feature = Biome.Feature.Spawn;\n  data.map.spawn = [spawnBiome.position[0], spawnBiome.position[1]];\n}\n\nfunction rasterizeRivers(data: GameData, report: ProgressReporter) {\n  const noiseX = new Noise(data.random, 1 / 32, 4);\n  const noiseY = new Noise(data.random, 1 / 32, 4);\n\n  for (const { from, to, level } of withProgress(data.rivers, report)) {\n    function riverPoint(i: number) {\n      let x = from[0] + (to[0] - from[0]) * (i / RiverSegments);\n      let y = from[1] + (to[1] - from[1]) * (i / RiverSegments);\n      x += Math.floor((noiseX.noise2D(x, y) * 2 - 1) * RiverRoughness);\n      y += Math.floor((noiseY.noise2D(x, y) * 2 - 1) * RiverRoughness);\n      return [x, y];\n    }\n    function isFrozen(biome: Biome) {\n      if (!biome) return false;\n      switch (biome.type) {\n        case Biome.Type.FrozenLake:\n        case Biome.Type.FrozenBarren:\n        case Biome.Type.SnowPlain:\n        case Biome.Type.Taiga:\n          return true;\n      }\n      return false;\n    }\n    for (let i = 0; i < RiverSegments; i++) {\n      const from = riverPoint(i), to = riverPoint(i + 1);\n      const biomeA = data.biomes[data.getBiomeIndex(from[0], from[1])];\n      const biomeB = data.biomes[data.getBiomeIndex(to[0], to[1])];\n      const terrain = isFrozen(biomeA) && isFrozen(biomeB) ? 'ice' : 'water';\n      rasterizeLine(from[0], from[1], to[0], to[1], (x, y) => {\n        const size = Math.round(level * 4);\n        for (let dy = 0; dy < size; dy++)\n          for (let dx = 0; dx < size; dx++) {\n            if (data.getTerrain(x + dx, y + dy) !== 'water')\n              data.setTerrain(x + dx, y + dy, terrain);\n            data.setObject(x + dx, y + dy, null);\n          }\n      });\n    }\n  }\n}\n\nexport function generateFeatures(data: GameData, report: ProgressReporter) {\n  report('generating features...', 0);\n  generateBiomeFeatures(data, report);\n  rasterizeRivers(data, report);\n}","/**\n@license Foswig.js | (c) Glenn Conner. | https://github.com/mrsharpoblunto/foswig.js/blob/master/LICENSE\n*/\n\n// Ported to TypeScript\n// Modified to accept custom random function\n\nclass Node {\n\treadonly neighbors: (Node | null)[] = [];\n\tconstructor(readonly character: string) { }\n}\n\nclass TrieNode {\n\treadonly children: Record<string, TrieNode> = {};\n}\n\nfunction addToDuplicatesTrie(word: string, duplicates: TrieNode) {\n\tif (word.length > 1) {\n\t\taddToDuplicatesTrie(word.substr(1), duplicates);\n\t}\n\n\tvar currentNode = duplicates;\n\tfor (var i = 0; i < word.length; ++i) {\n\t\tvar childNode = currentNode.children[word[i]];\n\t\tif (!childNode) {\n\t\t\tchildNode = new TrieNode();\n\t\t\tcurrentNode.children[word[i]] = childNode;\n\t\t}\n\t\tcurrentNode = childNode;\n\t}\n}\n\nfunction isDuplicate(word: string, duplicates: TrieNode) {\n\tword = word.toLowerCase();\n\tvar currentNode = duplicates;\n\tfor (var i = 0; i < word.length; ++i) {\n\t\tvar childNode = currentNode.children[word[i]];\n\t\tif (!childNode) return false;\n\t\tcurrentNode = childNode;\n\t}\n\treturn true;\n}\n\nexport class Foswig {\n\tprivate readonly duplicates = new TrieNode();\n\tprivate readonly start = new Node('');\n\tprivate readonly map: Record<string, Node> = {};\n\n\tconstructor(private readonly order: number) {\n\n\t}\n\n\taddWordsToChain(words: string[]) {\n\t\tfor (var i = 0; i < words.length; ++i) {\n\t\t\tthis.addWordToChain(words[i]);\n\t\t}\n\t}\n\n\taddWordToChain(word: string) {\n\t\taddToDuplicatesTrie(word.toLowerCase(), this.duplicates);\n\n\t\tvar previous = this.start;\n\t\tvar key = '';\n\t\tfor (var i = 0; i < word.length; ++i) {\n\t\t\tvar ch = word[i];\n\t\t\tkey += ch;\n\t\t\tif (key.length > this.order) {\n\t\t\t\tkey = key.substr(1);\n\t\t\t}\n\t\t\tvar newNode = this.map[key];\n\t\t\tif (!newNode) {\n\t\t\t\tnewNode = new Node(ch);\n\t\t\t\tthis.map[key] = newNode;\n\t\t\t}\n\n\t\t\tprevious.neighbors.push(newNode);\n\t\t\tprevious = newNode;\n\t\t}\n\t\t//link to end node.\n\t\tprevious.neighbors.push(null);\n\t}\n\n\tgenerateWord(minLength = 0, maxLength = -1, allowDuplicates = true, maxAttempts = 25, random = Math.random) {\n\t\tvar word;\n\t\tvar repeat;\n\t\tvar attempts = 0;\n\t\tdo {\n\t\t\trepeat = false;\n\t\t\tvar nextNodeIndex = Math.floor(random() * this.start.neighbors.length);\n\t\t\tvar currentNode = this.start.neighbors[nextNodeIndex];\n\t\t\tword = '';\n\n\t\t\twhile (currentNode && (maxLength < 0 || word.length <= maxLength)) {\n\t\t\t\tword += currentNode.character;\n\t\t\t\tnextNodeIndex = Math.floor(random() * currentNode.neighbors.length);\n\t\t\t\tcurrentNode = currentNode.neighbors[nextNodeIndex];\n\t\t\t}\n\t\t\tif (word.length > maxLength || word.length < minLength) {\n\t\t\t\trepeat = true;\n\t\t\t}\n\t\t}\n\t\t// we don't want to output any exact replicas from the input dictionary\n\t\twhile (repeat || (!allowDuplicates && ++attempts < maxAttempts && isDuplicate(word, this.duplicates)));\n\t\tif (attempts >= maxAttempts) {\n\t\t\tthrow new Error('Unable to generate a word with the given parameters after ' + attempts + ' attempts');\n\t\t}\n\t\treturn word;\n\t}\n}","import { Foswig } from 'common/lib/foswig';\nimport { SpeciesNames } from 'data/names';\nimport { startCase } from 'lodash';\n\nconst nameMarkov = new Foswig(3);\nnameMarkov.addWordsToChain(SpeciesNames);\n\nexport function generateName(min: number, max: number, random = Math.random) {\n  return startCase(nameMarkov.generateWord(min, max, false, undefined, random));\n}","import { DropTable, Item } from 'common/data';\nimport { RandomTemplate } from 'common/random';\n\nexport function simpleDrops(min: number, max: number, rate: number, template: RandomTemplate<Item>): DropTable {\n  return {\n    numDrops: { type: 'exponential', min, max, rate },\n    items: [{ prob: 1, item: template }]\n  };\n}","// Dataset retrieved from wikidata\n// Licensed under CC0\n\nexport const SpeciesNames = [\n'abachi',\n'abacops',\n'abashicus',\n'abensis',\n'abetoneensis',\n'aboriscus',\n'abrictos',\n'abroscelis',\n'abrotocrinus',\n'absalomichthys',\n'abundum',\n'acalophaena',\n'acanthocladi',\n'acanthofemurilis',\n'acceia',\n'accusator',\n'aceroae',\n'achaeae',\n'achillae',\n'achtyca',\n'acinopterus',\n'acmeceps',\n'acmonia',\n'acochlidioida',\n'acompus',\n'acrasidae',\n'acroceuthes',\n'acropsis',\n'actaeifolium',\n'actileuca',\n'actinocalyx',\n'actinodontidae',\n'actinodurae',\n'acugni',\n'acunae',\n'acutipoditus',\n'acutiscutellum',\n'acutispinata',\n'adilophontes',\n'adornatalis',\n'adramitana',\n'advarians',\n'aedoea',\n'aemulatrix',\n'aeneocupreus',\n'aequiflexa',\n'aequilumata',\n'aericeps',\n'aerophilum',\n'aeroppia',\n'aeschynomene',\n'aethiopicodynerus',\n'aethodelphax',\n'aetosaurinae',\n'affaber',\n'afghanistanicum',\n'afreutreta',\n'afrobolivina',\n'afrogypsa',\n'afrojavanica',\n'afroscardia',\n'afrotremex',\n'agamarum',\n'aganacma',\n'aganipus',\n'agardhina',\n'agaricostilbales',\n'agastor',\n'agnina',\n'agnostos',\n'agolambrus',\n'agonismus',\n'agrabeeja',\n'agraptocoris',\n'aguanueva',\n'aguaytiella',\n'aguirreanus',\n'ahermodontus',\n'ahldreva',\n'ajubensis',\n'akaisialpina',\n'alakoliense',\n'alantika',\n'alarodia',\n'albifulgens',\n'albitarsus',\n'albius',\n'albocitrina',\n'albocitrinus',\n'albogriseella',\n'albolabratus',\n'aleata',\n'alecanopsis',\n'aleophilum',\n'aleuti',\n'algrizea',\n'alibertioides',\n'alitaeus',\n'allantois',\n'allarithmus',\n'alleocomatella',\n'allineata',\n'allolaterita',\n'allomorphinoides',\n'allotheca',\n'alloxacis',\n'almogaver',\n'alocypha',\n'alpigenes',\n'alsinastrum',\n'alsobacter',\n'alternicirrus',\n'alternimaculata',\n'altescandens',\n'altistrix',\n'alutellus',\n'alvariella',\n'alyeskaensis',\n'amamiconcha',\n'amantichitinum',\n'amaris',\n'amarygia',\n'amathimysis',\n'amazonicesa',\n'ambita',\n'ambovestita',\n'americorophium',\n'ametroides',\n'amidalae',\n'amideta',\n'amisadaiae',\n'ammobium',\n'amoebophryaceae',\n'ampelioides',\n'ampelopsisella',\n'amphiascus',\n'amphiheloides',\n'ampliator',\n'amplicolle',\n'amyntula',\n'amyris',\n'anafense',\n'anagastus',\n'anancosorius',\n'anaperidae',\n'anargyrtes',\n'anarsiae',\n'anathyrsa',\n'anatotitan',\n'anchises',\n'ancistrifolia',\n'ancistrocladus',\n'ancylostomia',\n'ancylus',\n'ancystropodium',\n'anderisus',\n'andocidia',\n'andranotobakensis',\n'anendopodia',\n'anepsirhizomys',\n'aneuvittata',\n'angraecinae',\n'angusticincta',\n'angusticlavius',\n'angustilamella',\n'angustimembranus',\n'angustiplatus',\n'anheteromeyenia',\n'anillochlamys',\n'anischiinae',\n'anisopaulax',\n'ankarapithecus',\n'ankaratrotrox',\n'ankylodon',\n'annaimallaiensis',\n'anodontophora',\n'anodorhynchus',\n'anonera',\n'anorhaebus',\n'antarxata',\n'antelientomon',\n'antennulata',\n'anteos',\n'anteridata',\n'anthepiscopus',\n'anthicimorphus',\n'antibodies',\n'antiincrescens',\n'antillanorchis',\n'antipoloensis',\n'antistydatusa',\n'anurophylla',\n'anxioides',\n'anydrophilini',\n'anyllis',\n'aonidiae',\n'apaloxylon',\n'apameina',\n'apanthuropsis',\n'apechthes',\n'aphaenogasteroides',\n'aphiocephalus',\n'apicealba',\n'apicinigrella',\n'apicobystra',\n'apinae',\n'apiocystinae',\n'aplysinellidae',\n'apocarpum',\n'apogonis',\n'apomastus',\n'aponius',\n'aposteira',\n'apparicianum',\n'apparitrix',\n'appressihirtus',\n'apricans',\n'apsilinae',\n'apteralium',\n'apterobrachys',\n'apterygodonia',\n'apterygon',\n'aqualupianus',\n'aquinia',\n'arabesca',\n'arachoides',\n'araracuarae',\n'aravanense',\n'arawakorum',\n'arceuthoides',\n'archangelskii',\n'archeosetus',\n'archichthys',\n'archicnephasia',\n'archiphysa',\n'architectonicacea',\n'archocelis',\n'archolabus',\n'arcidopsis',\n'arcifera',\n'arctopacifica',\n'ardeola',\n'ardesia',\n'arduous',\n'arenonionella',\n'argentae',\n'argopus',\n'argusmontana',\n'argutana',\n'argyrothrix',\n'ariantinae',\n'arigonis',\n'arilaringa',\n'ariphanarthra',\n'aristeis',\n'aristosquamosa',\n'arkarua',\n'armoracioides',\n'arnoldi',\n'arrawarricum',\n'arrhythmopis',\n'artaversala',\n'artemisifolium',\n'artericus',\n'artodiscus',\n'artoventris',\n'artumbilicatum',\n'arturoana',\n'arutunjani',\n'aselliata',\n'asestra',\n'ashlaiana',\n'aspenitinae',\n'aspidophryxus',\n'aspidopora',\n'asprospilos',\n'assimulatana',\n'asterosporiaceae',\n'astrapetes',\n'astraspida',\n'asturasoma',\n'asymmetrarcha',\n'asymmetrurus',\n'ateleopodidae',\n'atilia',\n'atractosteus',\n'atraphaxifolius',\n'atringa',\n'atrivaria',\n'atroclypeata',\n'atroviridaria',\n'attenata',\n'atypicalis',\n'atypicus',\n'audeti',\n'audreia',\n'aulacoceras',\n'aulorhynchidae',\n'aulosaphoides',\n'aurataeformis',\n'aurearenaceae',\n'aurilineata',\n'aussiorum',\n'australiphemeridae',\n'australodaphnia',\n'australosphenida',\n'austrinata',\n'austroagrion',\n'austrohormiini',\n'austrokarelicus',\n'autarchoglossa',\n'avarus',\n'avelingiae',\n'avuncula',\n'axnpelopsis',\n'azotostoma',\n'babaensis',\n'baborensis',\n'babukellinae',\n'bacarum',\n'backusella',\n'badiifolia',\n'badiusalis',\n'baehnii',\n'baeoptila',\n'baeosomus',\n'baeotica',\n'baicalinella',\n'baiochii',\n'bakeri',\n'balanarcha',\n'balchhi',\n'balingiti',\n'baliogaster',\n'balliana',\n'baltimoriana',\n'balvei',\n'bambusioides',\n'bamiani',\n'bampurius',\n'bancroftianus',\n'bankoi',\n'baracoalis',\n'barattolites',\n'barbeliana',\n'barbillana',\n'bareinus',\n'barksdalei',\n'barnebianum',\n'baroringensis',\n'barsac',\n'barsakelmes',\n'barskovi',\n'basibulbus',\n'basilisi',\n'basipecten',\n'basipterini',\n'basirei',\n'bastardoanus',\n'bathrogramma',\n'bathycranium',\n'batocaulon',\n'batomys',\n'beatleyae',\n'beaumontianus',\n'bebile',\n'bedeshai',\n'bedfordianus',\n'beharii',\n'beketi',\n'bellera',\n'bellicula',\n'beloti',\n'benacoceras',\n'beneluzi',\n'benignalis',\n'bergenhayni',\n'berlandiella',\n'berlesedesmus',\n'berlinafricanus',\n'bermudagidiella',\n'bernalei',\n'bertarollae',\n'bethelium',\n'betonicifolium',\n'betschi',\n'betsiloensis',\n'biapertura',\n'bibbia',\n'bibiolona',\n'biblianum',\n'bibractella',\n'bicelli',\n'biceropsis',\n'bicophaga',\n'bicornuatus',\n'bicucullus',\n'bidenticeps',\n'bidentulum',\n'bidiense',\n'bidiscus',\n'bifidentata',\n'biincisa',\n'bilirana',\n'biloborostratus',\n'bilsana',\n'bimucronota',\n'biobessa',\n'biparta',\n'bipartipes',\n'biramulata',\n'biritika',\n'birnovensis',\n'biruncinata',\n'bisbimaculata',\n'bismila',\n'bispirale',\n'bissexnotata',\n'bistrigata',\n'biuterinus',\n'blaesodactylus',\n'blakesleeanus',\n'blaseii',\n'blattinopsidae',\n'bleura',\n'bocasdeltoroensis',\n'bodmeri',\n'boingaei',\n'bojamyces',\n'bokariana',\n'bolivaria',\n'bolodon',\n'bolsaticus',\n'bombacoideae',\n'bombella',\n'bonaducecytheridae',\n'bonaia',\n'bononiensis',\n'bonplandius',\n'bonseyi',\n'bonzia',\n'boopsis',\n'borderii',\n'borealia',\n'borealotodus',\n'boreococcus',\n'boripat',\n'borneichus',\n'bornesalpinia',\n'bosmani',\n'bosniaca',\n'bosniscus',\n'bothriospermum',\n'bouchardii',\n'bourgeana',\n'bouvetia',\n'brachylaminata',\n'brachyloma',\n'brachyneuroides',\n'brachyosoma',\n'brachypezoides',\n'brachypharyngeus',\n'bracteantha',\n'bracteolaris',\n'bradburya',\n'bradys',\n'brancaefolia',\n'brasileanus',\n'brassica',\n'brassicata',\n'brausei',\n'brevibeccus',\n'brevicoccus',\n'brevidens',\n'brevilamellata',\n'brevipatellatus',\n'brevipilus',\n'breviscopa',\n'brevispineus',\n'brillanceausuchidae',\n'brissonii',\n'brochopaga',\n'brongniardellus',\n'brossardia',\n'broughi',\n'brownelli',\n'brujitavirus',\n'brunneicollis',\n'brunneopunctata',\n'brunneotomentosa',\n'brunnibasis',\n'brusinia',\n'bryonioides',\n'bubonifolium',\n'bubulla',\n'bucaniellidae',\n'buchholzianum',\n'buchubergense',\n'bucina',\n'bucinaria',\n'buckara',\n'bucolinus',\n'buddleiifolius',\n'buekkense',\n'bulimorpha',\n'bulleri',\n'buriasense',\n'bursalobata',\n'burukovskii',\n'butalidella',\n'buttelreepeni',\n'butyraceum',\n'buxella',\n'bwambae',\n'byctisculus',\n'cacatuopyga',\n'cactaceae',\n'cadetiiflorum',\n'caeluronigricans',\n'caeruleonotatus',\n'caesariana',\n'cailloli',\n'calamosternus',\n'calapodium',\n'calcedoniae',\n'calcehtokanus',\n'calceolariopsis',\n'calculata',\n'calhypnorna',\n'caliginum',\n'calilestes',\n'callacallanum',\n'callichthyinae',\n'callidrepana',\n'calligetus',\n'callinivalis',\n'callitricha',\n'calloplesiops',\n'callosphingia',\n'calodectes',\n'calogramma',\n'calonalis',\n'calotemognatha',\n'calvulum',\n'calyptophyllum',\n'calyptosuchus',\n'camaronensis',\n'cambaroides',\n'camdenensis',\n'camelaria',\n'camellia',\n'camerobia',\n'cameroon',\n'campanopsis',\n'camptochaeta',\n'camptozada',\n'canalicata',\n'cancanae',\n'cancerae',\n'candybus',\n'caniripes',\n'cantiana',\n'capillataspora',\n'capnobotes',\n'capsae',\n'capsaspora',\n'caputabnormis',\n'capysoides',\n'caracasica',\n'carbina',\n'carcani',\n'cardiopygus',\n'cardonii',\n'carduiforis',\n'cardwellia',\n'carettalis',\n'caricae',\n'carinifer',\n'carinulorbis',\n'carlopeltis',\n'carlosfeliui',\n'carmara',\n'carnifrons',\n'caroli',\n'carpodeti',\n'carria',\n'carrii',\n'carrizalense',\n'cartalloides',\n'carteretensis',\n'carthagoensis',\n'caryonodini',\n'cassubiciformis',\n'castanes',\n'castensis',\n'castilliaria',\n'catantopsilus',\n'catapionus',\n'cataplectica',\n'cataspilates',\n'catenata',\n'catops',\n'catopysops',\n'caucasicola',\n'caucasicus',\n'caudapinniger',\n'caudatispora',\n'caudifolium',\n'caulokaempferia',\n'cavadoensis',\n'cavalerieana',\n'cavedanus',\n'caviunas',\n'cebudonus',\n'cecidostiba',\n'cecidothyris',\n'cecropioides',\n'celeripes',\n'cellariiforme',\n'cemiostominae',\n'centenaria',\n'centicola',\n'centrimacula',\n'centrirufa',\n'centroonoceras',\n'centropristis',\n'centrovarioplanidae',\n'cephali',\n'ceradocus',\n'ceratinostoma',\n'ceratoclada',\n'ceratosebacina',\n'cerbvina',\n'cerchysiella',\n'cercomorphus',\n'cercopionidae',\n'ceriaeforme',\n'cerozona',\n'cerrioides',\n'cestrus',\n'cetibeli',\n'cetratus',\n'ceylonensis',\n'chabriosoma',\n'chaetostephanidae',\n'chaetozone',\n'chalarocladum',\n'chalcocnemis',\n'chalybe',\n'chamaepeuce',\n'chamelaensis',\n'chamisis',\n'charadropsyche',\n'charamaensis',\n'charapensis',\n'chariesthes',\n'charlei',\n'charleswerneri',\n'charmus',\n'chasmagnathus',\n'chauliopleurus',\n'chelon',\n'chelyoidea',\n'chelysida',\n'chernyshinellinae',\n'chetyson',\n'chihpenensis',\n'chihuahuanae',\n'chilesi',\n'chillanensis',\n'chillcottiana',\n'chilognatha',\n'chilophus',\n'chilostomella',\n'chilostomellina',\n'chionothrix',\n'chirieanum',\n'chiroderma',\n'chirophylla',\n'chisochetonia',\n'chisternon',\n'chlerogella',\n'chloraeformis',\n'chloraria',\n'chlorocurtis',\n'choerognathus',\n'chommati',\n'chondrolepis',\n'chondrorhynchus',\n'chorodoxa',\n'chrestobunus',\n'chromelosporium',\n'chromocentrum',\n'chronosemium',\n'chrysma',\n'chrysocelis',\n'chrysochaetum',\n'chrysomeloides',\n'chrysomus',\n'chrysonus',\n'chrysopotama',\n'chuangchihi',\n'chyrmangensis',\n'cicadellopsis',\n'cicatricosulus',\n'cinachyrella',\n'cinereovariegatus',\n'cinnyris',\n'cintaromorpha',\n'circassian',\n'circumflexum',\n'citharexifolia',\n'cladiellae',\n'cladophila',\n'cladoscenium',\n'clamans',\n'clararia',\n'claricolor',\n'clarilimbata',\n'clarimargo',\n'clavaeforme',\n'clavidives',\n'cleghornia',\n'cleonolithus',\n'clethropsis',\n'clinacanthus',\n'clinomochla',\n'cliochloria',\n'clivina',\n'clorindae',\n'clymenicola',\n'clypeinitens',\n'clyton',\n'cnemodes',\n'coagerus',\n'coamensis',\n'cobreensis',\n'coburni',\n'cocalina',\n'coccocephalichthys',\n'coccomyxa',\n'cochabambina',\n'cochleasvorax',\n'codioides',\n'codites',\n'coelositona',\n'coelostomidiidae',\n'coeruleata',\n'coeruleofuscus',\n'coerulipennis',\n'cognatocompressus',\n'coihuensis',\n'coldeniae',\n'colensoica',\n'coleocacamus',\n'coleocanis',\n'coleophorinae',\n'colerolumnus',\n'colita',\n'collarigera',\n'collartinus',\n'collativus',\n'collectiva',\n'collinsonae',\n'colocleora',\n'colomai',\n'colopha',\n'colorada',\n'coloradus',\n'colpotriplicis',\n'colynis',\n'comani',\n'comarilis',\n'commonae',\n'comocephalum',\n'comoliopsis',\n'companyoi',\n'compotrix',\n'compsogene',\n'concanicus',\n'concarenae',\n'condate',\n'conexibacter',\n'confertiserratum',\n'conflata',\n'congrogadus',\n'conicella',\n'conicibaccata',\n'conicospermium',\n'coniocera',\n'conlara',\n'conobrosis',\n'conoclinium',\n'consanguinea',\n'conspectus',\n'constrictatus',\n'contacris',\n'contentious',\n'contristans',\n'conyzicola',\n'coocoo',\n'coonorensis',\n'cooperrideri',\n'coorilla',\n'copidoplana',\n'copromorpha',\n'coprosmifolia',\n'coptotomus',\n'copturus',\n'coracina',\n'coraeophos',\n'corallicarpus',\n'corallicola',\n'coraniana',\n'coritanica',\n'coronostylus',\n'corpesiensis',\n'correctata',\n'corrivalis',\n'corroboreethrips',\n'corticicolus',\n'corupella',\n'corussans',\n'corymbuloides',\n'coryneaceae',\n'coryphophylax',\n'cosmemosignatum',\n'cossmannica',\n'costosyrnola',\n'cotanda',\n'cotinaea',\n'couleruana',\n'cousiniopsis',\n'coutume',\n'coventinae',\n'coxitinae',\n'crangonoides',\n'craniella',\n'crassepupillata',\n'crassesignata',\n'crassidens',\n'crassoascus',\n'crastina',\n'craterantha',\n'craterelloides',\n'craterocephala',\n'cratocechenus',\n'crebrifolius',\n'crenoliratus',\n'cribripuga',\n'criconemoides',\n'cricophera',\n'crinonia',\n'crisae',\n'cristatoides',\n'cristinae',\n'critheus',\n'crocogastra',\n'crocomela',\n'cronartiaceae',\n'crotolitha',\n'crouzeti',\n'crowelli',\n'cruentipellis',\n'cruranthura',\n'crypsicola',\n'cryptarthria',\n'cryptocystidiatum',\n'cryptolimifrons',\n'cryptopecten',\n'cryptophasa',\n'cryptophlebiae',\n'cryptophthalma',\n'cryptophysoderes',\n'cryptosporina',\n'crytochilus',\n'ctenoimbricata',\n'cuatro',\n'cucharas',\n'cuculidae',\n'cuculliae',\n'cucumerina',\n'cuiabai',\n'culama',\n'cultrigaster',\n'cumbasonum',\n'cumminsiella',\n'cuneilobatus',\n'cunninghamianum',\n'cupreochalybea',\n'curtiaristatus',\n'curticrus',\n'curtilamellata',\n'curviformis',\n'curvipenis',\n'cyanochlorus',\n'cyclodesma',\n'cycloneuralia',\n'cyclosora',\n'cyclotis',\n'cycnoderus',\n'cydistinae',\n'cylindrocarpus',\n'cymatocarpus',\n'cymbriaella',\n'cymophorus',\n'cynanchiflorum',\n'cynedesmus',\n'cynoctoni',\n'cyphoderia',\n'cyphoderiidae',\n'cypridinoidea',\n'cyrenida',\n'cytherissinellidae',\n'dactylopteni',\n'daedalia',\n'dallicordiidae',\n'dalpia',\n'dalquesti',\n'daltoniaecarpa',\n'damalinia',\n'dasycnemis',\n'dasycrotapha',\n'dasypogonini',\n'davidsoniae',\n'dayaoshan',\n'deasonia',\n'debalsaci',\n'debrajiana',\n'decaphalangium',\n'deciduana',\n'declivitatum',\n'decorites',\n'decorticata',\n'deflectus',\n'deitersi',\n'dekkanus',\n'delclosia',\n'deliquum',\n'deloachorum',\n'deltavjatia',\n'dendroarabis',\n'dendronephthyphagus',\n'deniseae',\n'densibracteata',\n'densiserratus',\n'densisorum',\n'dentatherinidae',\n'denticollaris',\n'denticulalis',\n'denticulipes',\n'depressiferus',\n'derasocobaltinus',\n'dercylini',\n'derecyrtini',\n'derica',\n'derouetae',\n'desaussurei',\n'desertibacter',\n'desmaresti',\n'desmoceratoides',\n'destacar',\n'detris',\n'deuveiellum',\n'devauxi',\n'devergescens',\n'devignati',\n'diaboliella',\n'diachrysa',\n'diadocis',\n'diaeus',\n'dianaria',\n'dianxibeiensis',\n'diaphanocypris',\n'diaspros',\n'dicephalospora',\n'dichetophora',\n'dichilocraspedon',\n'dichodon',\n'dichotomica',\n'dickdellia',\n'dicolecia',\n'dictyostelida',\n'didymictis',\n'didymochrysis',\n'diensti',\n'difficilana',\n'digitalia',\n'digitata',\n'dilitara',\n'dilleriella',\n'dillwyniana',\n'dimisophria',\n'dimochla',\n'dimorphanthera',\n'dinocosma',\n'dinophasma',\n'diomediae',\n'dioryctriae',\n'dioscurea',\n'diotrophorus',\n'diploglyptus',\n'dipteridae',\n'dirfica',\n'dirias',\n'dischematalis',\n'discimita',\n'disciphania',\n'discodon',\n'discolia',\n'discospira',\n'discostromatidae',\n'discovery',\n'disiens',\n'disordinata',\n'dispar',\n'disparia',\n'disparicollis',\n'distata',\n'distentifolium',\n'ditrachybothridium',\n'ditrogalis',\n'diuturnus',\n'diversitermes',\n'docoglossa',\n'dolbyi',\n'dolerosa',\n'dolichoderinae',\n'dolichoderoides',\n'dolichoplectra',\n'dolichowithius',\n'dolioflagellomera',\n'dolliata',\n'doloisia',\n'dolosis',\n'dophora',\n'doratopsylla',\n'dorcasia',\n'dorkadiaria',\n'dormia',\n'doshman',\n'douglasprimusensis',\n'dracaeneae',\n'drilliola',\n'drilus',\n'dromidiopsis',\n'dromodromoa',\n'droogmaniana',\n'drucealis',\n'dryadonycteris',\n'dryocoetes',\n'dryocopinus',\n'dryptitae',\n'dszumrutensis',\n'duarctopoa',\n'duckworlhorum',\n'duclouxii',\n'dudleyae',\n'duliniae',\n'dulosus',\n'dunnya',\n'duospinum',\n'duplicornis',\n'duprixi',\n'durbana',\n'duskei',\n'dutkevichites',\n'dysgenopsyllus',\n'eatonella',\n'ebbelsii',\n'ebrius',\n'echeilea',\n'echelatus',\n'echigoana',\n'echinastra',\n'echinocephala',\n'echinorhynchida',\n'echinovirens',\n'echinuscodendrium',\n'echippigerum',\n'echonitor',\n'ectemnorhinus',\n'ectenesseca',\n'edanioi',\n'edaphosauridae',\n'edestus',\n'edetanum',\n'edithais',\n'efluxa',\n'egeana',\n'egestoides',\n'ehlersiae',\n'eiphasos',\n'ekatherinae',\n'eknomisis',\n'elassoctenus',\n'elbayensis',\n'electrocrania',\n'electrofuscus',\n'elerobi',\n'eleutherospermi',\n'elinguis',\n'elkoanus',\n'elleanthodiceras',\n'elliptifolium',\n'elongatobractea',\n'emarginelloides',\n'emblemaria',\n'emmiltos',\n'emydopidae',\n'enchalcoa',\n'enchodelium',\n'endochroa',\n'endophragmiopsis',\n'enicostemmatis',\n'entalinidae',\n'entomogonus',\n'entypus',\n'eomacropis',\n'eopsychops',\n'eorasaurus',\n'eoscapherpeton',\n'eoseira',\n'ephesiella',\n'epichalca',\n'epimetalla',\n'epitripta',\n'equisecta',\n'erebearia',\n'erenitus',\n'erennidae',\n'ergodes',\n'eriodictyonis',\n'ermienae',\n'errolichthyidae',\n'erythana',\n'erythraena',\n'erythromeris',\n'erythrorhamphos',\n'escoces',\n'esquamata',\n'esterhuysenianum',\n'etorofensis',\n'euanoma',\n'euathlus',\n'eucaudomyiidae',\n'euceratoneis',\n'euchana',\n'eueolidoidea',\n'eugraphis',\n'euloewiodoria',\n'eumeristis',\n'eumicrini',\n'euneuron',\n'eunomia',\n'euphysothrips',\n'euplectus',\n'eupolymorphinella',\n'eupulcher',\n'eupulmonata',\n'euritina',\n'euritmia',\n'eurukuttarus',\n'eurychlidonis',\n'eurychone',\n'eurygonia',\n'eurypilus',\n'eurystictus',\n'eurytiches',\n'eusemionopsis',\n'eusemoides',\n'eusisyrum',\n'eusyrophoxus',\n'eutetraphae',\n'eutrichiurides',\n'euzerconidae',\n'evonymella',\n'exasperatula',\n'excelens',\n'exclusaria',\n'excuratum',\n'exstipulatae',\n'extendorum',\n'eyipayipi',\n'eytelweinii',\n'ezodda',\n'fabespora',\n'fabianorum',\n'factoris',\n'faculta',\n'fadyenia',\n'fagacarus',\n'fagildei',\n'fagotiidae',\n'fajardi',\n'fakfak',\n'falanense',\n'falcatalayex',\n'falcicarpae',\n'falciterebra',\n'falvisectalis',\n'fanseriae',\n'fastigiatoramosum',\n'fastigo',\n'faucibarbara',\n'faustiella',\n'favocassidulina',\n'favonicus',\n'favosifolium',\n'favositinae',\n'fellodistomidae',\n'femorata',\n'fenxli',\n'feraliini',\n'fernandezgarcesi',\n'ferrea',\n'ferreroi',\n'ferrobacteria',\n'ferwillemsei',\n'festulpia',\n'fibrinflatum',\n'fictitia',\n'fictrix',\n'fijianus',\n'fijivirus',\n'filamentata',\n'filamentosa',\n'filiformis',\n'fimbricoxa',\n'findens',\n'findersi',\n'flabellifera',\n'flabellopora',\n'flavangularis',\n'flavicurvata',\n'flavinucha',\n'flavispicum',\n'flavofemoratum',\n'flavopleuralis',\n'flavotaeniatus',\n'flavusella',\n'flectonotus',\n'fleurei',\n'flexicaulis',\n'flexiclymenia',\n'flexilissima',\n'flexistyloides',\n'floracoccus',\n'floravillensis',\n'floridicola',\n'florisi',\n'flustrina',\n'folliculata',\n'fontellana',\n'forelii',\n'foresteriana',\n'forillonaria',\n'foroiuliensis',\n'forskoehlii',\n'forticarinata',\n'fossidorsis',\n'fraglis',\n'franceii',\n'franzdaniela',\n'fraudulentaria',\n'fraudulosus',\n'freyomyia',\n'friedrichiae',\n'frisingensis',\n'fritzwagneria',\n'frolovia',\n'frutillaria',\n'fthiotidensis',\n'fuergiana',\n'fujiansis',\n'fukayai',\n'fukugakuchiana',\n'fulgidella',\n'fulvastrum',\n'fulvifusalis',\n'fulvobrunnea',\n'fulvohirtum',\n'fulvomarginatus',\n'fumigans',\n'fumoferalis',\n'furcatus',\n'furculana',\n'furnishinidae',\n'fuscatrix',\n'fuscinota',\n'fusciventis',\n'fuscoaeneum',\n'fuscoapicella',\n'fuscothorax',\n'fusilieri',\n'fusulculus',\n'gabbioceratinae',\n'gabillytes',\n'galbinaria',\n'galeansellia',\n'galgula',\n'gambogia',\n'gammae',\n'ganapatiella',\n'ganella',\n'ganguli',\n'gannoni',\n'gaoligongshanensis',\n'gariensis',\n'garuus',\n'gassanense',\n'gaudini',\n'gavisus',\n'geganius',\n'geigyi',\n'geleverjae',\n'geminipilis',\n'genicularis',\n'genophantis',\n'geococcyx',\n'geodes',\n'geodiplosis',\n'geophagus',\n'georgecraigius',\n'georghioui',\n'gephyrogramma',\n'geralda',\n'geraldtonensis',\n'ghardaqanum',\n'gibsonella',\n'gibsonhilli',\n'gigantocapulidae',\n'gigantopygus',\n'gigantorubra',\n'gigantoscorpionoidea',\n'gilanica',\n'gilleti',\n'gilsonichrysis',\n'ginibitohia',\n'ginkgophyta',\n'gisara',\n'glaboabdominalis',\n'glabrimargo',\n'glabrimpressum',\n'glabropilumnus',\n'glaucelloides',\n'glaziouana',\n'gloiocolax',\n'gloreus',\n'gloriamaris',\n'glosus',\n'glyocyclus',\n'gmeineri',\n'gnathocera',\n'gnophos',\n'gobbettia',\n'goetheoides',\n'goldschmidti',\n'gomontia',\n'gomphreneae',\n'goncen',\n'gondwanica',\n'goniurosaurus',\n'gonothyraea',\n'gonyaulacoidia',\n'goodfieldi',\n'goodwoodensis',\n'gordioida',\n'gorgops',\n'gosobius',\n'goupillaudina',\n'gouvernoni',\n'goweroconcha',\n'grancarovii',\n'grandistylum',\n'granicauda',\n'graniger',\n'granimanus',\n'graphania',\n'graphomya',\n'grassmani',\n'greenmanianum',\n'greenwelliae',\n'greeri',\n'gregariella',\n'griffinia',\n'grimontia',\n'grossefoveolatus',\n'grossepunctatus',\n'groveolopsis',\n'grypoceras',\n'guairense',\n'guaitecae',\n'guanajuatensis',\n'guanomyces',\n'guiananana',\n'guihua',\n'guinnae',\n'gymnoceros',\n'gymnomorphus',\n'gymnophrea',\n'gymnoscutellatus',\n'gymnotoplax',\n'gynopeltis',\n'gypsochroa',\n'gyrothyraceae',\n'habenifera',\n'habrophila',\n'hachimantaiensis',\n'haddeni',\n'hadromischa',\n'haeggochiton',\n'haenschiella',\n'haesselbyholmiensis',\n'hagenbecki',\n'haleakala',\n'halichondriae',\n'hallex',\n'hallonympha',\n'hallsi',\n'halomonadaceae',\n'hamipalpis',\n'hanamauensis',\n'hankensis',\n'hannense',\n'hapalopa',\n'haplocyoninae',\n'haplotaxina',\n'haptogenys',\n'hapuuarum',\n'harenamica',\n'hariolator',\n'haripurensis',\n'harpanor',\n'harrisia',\n'hartmannulidae',\n'hartmanthus',\n'hastingsi',\n'hauschildianus',\n'havila',\n'hawbicum',\n'hecatorgnia',\n'hechtioides',\n'heddleichthys',\n'helianthialis',\n'helicinella',\n'heliomystis',\n'helionidia',\n'heliopa',\n'heliopsis',\n'heliopyrgus',\n'helluonina',\n'heluanensis',\n'hemerobiella',\n'hemerophila',\n'hemhem',\n'hemianospilus',\n'hemicyclicum',\n'hemidactyliinae',\n'hemigordiidae',\n'hemilecanitidae',\n'hemimarginula',\n'hemistropharia',\n'heppleana',\n'heptasema',\n'herklotsichthys',\n'hernandaria',\n'heronia',\n'heronum',\n'hesycha',\n'heteronevrus',\n'heteropachylus',\n'heteropanope',\n'heteroparamera',\n'heterospina',\n'heterotominae',\n'heugteni',\n'hexagonae',\n'hexaradiata',\n'hexatarsostinus',\n'hexovulata',\n'hialmari',\n'hiatula',\n'hibridum',\n'hieracifolia',\n'hieroglyphyca',\n'hillifera',\n'himalajenses',\n'himalayacetus',\n'hippodice',\n'hirtilobata',\n'hirudoidea',\n'hispaniolyna',\n'hivaagrion',\n'holochrysis',\n'holophlebia',\n'holovestita',\n'homeria',\n'homochirus',\n'homoeoctenia',\n'homoeosomae',\n'homoplatus',\n'homopterus',\n'honanodon',\n'hotooworry',\n'howaia',\n'huairouensis',\n'huallagana',\n'huancayensis',\n'huangensis',\n'hucketti',\n'hugotdiplogaster',\n'huitzmolotitlensis',\n'hulaquina',\n'humaciense',\n'hummel',\n'hummeliana',\n'huntella',\n'huriana',\n'hututsi',\n'hyalodiscaceae',\n'hyalopyrgus',\n'hydroisotoma',\n'hydrometra',\n'hydrotalea',\n'hydrotherikornis',\n'hypachroa',\n'hypapocheima',\n'hypermaculata',\n'hyphochytriaceae',\n'hypholomoides',\n'hypocephalini',\n'hypochaeridoides',\n'hypocline',\n'hypolispa',\n'hypoplexia',\n'hypospilata',\n'hypselosomatum',\n'hypsina',\n'hypsipyrga',\n'hysterolitinae',\n'ianrichardi',\n'iaoensis',\n'iberobarbarus',\n'ichneumia',\n'ichnolepida',\n'ichthyosomoides',\n'ictonyx',\n'idaecamenta',\n'idastes',\n'ideratini',\n'idiostolidae',\n'ifanidianae',\n'igarassuensis',\n'ignecolora',\n'ignifacies',\n'iljiniana',\n'impalpabilis',\n'improvidus',\n'inadmirabilis',\n'inclusana',\n'incubitor',\n'indistinctaria',\n'indolens',\n'indorhynchiinae',\n'indricotheriidae',\n'indubius',\n'inebriantis',\n'inefficax',\n'inermosyllis',\n'infanticida',\n'infasciatum',\n'infectus',\n'inflaticeras',\n'infraflavescens',\n'ingliseria',\n'ingogius',\n'inositophilus',\n'instabilaria',\n'instabilipes',\n'interrogatus',\n'inthanonica',\n'intonsus',\n'intrigella',\n'inyonensis',\n'ioannoui',\n'ionescui',\n'ioogoon',\n'iophana',\n'irapeanum',\n'iriditinctus',\n'isalaux',\n'isalensis',\n'ishidai',\n'isidiosella',\n'isocrinida',\n'isoetopsis',\n'isommata',\n'isotemnidae',\n'isoxys',\n'itabaiana',\n'ituribisciensis',\n'itwarra',\n'iulomorpha',\n'ivanovae',\n'iwamai',\n'ixiophyllum',\n'jacuipensis',\n'jaimeramirezi',\n'jajiensis',\n'jameela',\n'janikornae',\n'janirioides',\n'janosik',\n'jansei',\n'japenensis',\n'jasminaria',\n'jehlius',\n'jejudonia',\n'jiangduensis',\n'jianlingensis',\n'johnpaxtoni',\n'johnwurdackiana',\n'jokaquarta',\n'jonssoni',\n'joshuella',\n'jouiniana',\n'jovoensis',\n'juenthneri',\n'jugatoria',\n'jujuyensis',\n'juniperoideae',\n'juropeltastica',\n'juxticata',\n'kabogoensis',\n'kaibatonis',\n'kakaberrans',\n'kalidupa',\n'kalimeris',\n'kalingenwae',\n'kalonis',\n'kamacops',\n'kamande',\n'kamengense',\n'kamitakaranus',\n'kamtschatkensis',\n'kananaskensis',\n'kandymella',\n'kangeanus',\n'kapsanensis',\n'karadenizicus',\n'karataefolia',\n'karateghinicus',\n'karawajevi',\n'karwara',\n'kasungensis',\n'kawaihoaensis',\n'kefersteiniana',\n'kelelensis',\n'kemmisi',\n'khairei',\n'khuzistanicus',\n'kikibudiamini',\n'kiklonana',\n'killiasi',\n'kimurae',\n'kinabalum',\n'kingdonia',\n'kirstenboschensis',\n'kirthari',\n'kitagawia',\n'kivuanus',\n'kiwuensis',\n'kiyokoae',\n'kladotyphlus',\n'kleinpeteri',\n'klementii',\n'klenei',\n'koilomera',\n'kokeshia',\n'komokia',\n'kopsiopsis',\n'kosemponica',\n'koshiana',\n'kosnipatensis',\n'kostylevi',\n'kroyeri',\n'krusadensis',\n'kuhnistera',\n'kukalova',\n'kungae',\n'kunikikoana',\n'kunjerabi',\n'kuomeii',\n'kuschei',\n'kushmasarensis',\n'kusiacus',\n'kustorae',\n'kuturnee',\n'lachneifolia',\n'lachnocladium',\n'lachnoides',\n'lactate',\n'ladismithiense',\n'laevitarsis',\n'lagarocladum',\n'lagarosoma',\n'lagenina',\n'lagerara',\n'lagopodes',\n'laitimtik',\n'lamades',\n'lamellipodia',\n'lamellothyrea',\n'laminiformis',\n'lamora',\n'lamottiana',\n'lamprospilus',\n'lamuralla',\n'lamutica',\n'landoi',\n'langendoenii',\n'langerhansia',\n'lanicaulis',\n'lanthanostegus',\n'lanzenbergeri',\n'laororshanae',\n'lappodes',\n'lapsariata',\n'larainae',\n'laristanica',\n'larrainiana',\n'lascaris',\n'lasioderma',\n'lasiopterinus',\n'lasiospermus',\n'lateretuberculatum',\n'lathridelmis',\n'latipetiolata',\n'latisporum',\n'latitegminis',\n'latocorophium',\n'launayi',\n'laurenticus',\n'lauronia',\n'lavalettei',\n'lavbleckiana',\n'lavernellus',\n'laversiidae',\n'laxipilosum',\n'lecanoricola',\n'lecithodes',\n'lecythion',\n'leensis',\n'legerae',\n'leiboldiana',\n'leichenina',\n'leiocassis',\n'leiopelmatidae',\n'leiotelus',\n'leipoxaides',\n'leiramara',\n'leliae',\n'lemoultana',\n'lensia',\n'lenyrhova',\n'leocrinidae',\n'leonensis',\n'leonfairmairei',\n'lepidoteuthis',\n'leptocaudus',\n'leptocera',\n'leptochilichthys',\n'leptoiulini',\n'leptojulis',\n'leptolomoides',\n'leptomenaeus',\n'leptomma',\n'leptomorphum',\n'leptoschendyla',\n'leptoscirtus',\n'leptosomaheristus',\n'lerina',\n'lesegneuri',\n'letepsammia',\n'letilae',\n'leucadea',\n'leucalis',\n'leucanepsia',\n'leucanopsis',\n'leucolaema',\n'leucopodella',\n'leucopsarus',\n'leucorhodum',\n'leucosilia',\n'leucotabanus',\n'leuzeopsis',\n'levanidovorum',\n'leveyi',\n'levicaris',\n'leviense',\n'levisella',\n'liaoxipterus',\n'libidoclaea',\n'lichnasthenina',\n'lignarium',\n'lilaciflora',\n'lilacino',\n'lilliformis',\n'limenita',\n'limnogenneton',\n'limothrips',\n'linanensis',\n'lineitergum',\n'lingianus',\n'linifoliiformis',\n'linocerus',\n'linpingensis',\n'linshuiensis',\n'linwenhsini',\n'lionychini',\n'lioptilaria',\n'liosomeniidae',\n'lipocarpa',\n'lissodema',\n'litholampriminae',\n'lithosiformis',\n'litoricola',\n'lixinites',\n'llanoaspis',\n'lobigenis',\n'lockhartioides',\n'loesneriana',\n'loeuffintesi',\n'lombardiana',\n'lomyenensis',\n'lonchocephalus',\n'lonchodactylus',\n'longae',\n'longicomosum',\n'longifibula',\n'longipendulum',\n'longiscata',\n'longisellatus',\n'longispinata',\n'longistipulata',\n'longisubulatus',\n'longivelis',\n'longusorbiidae',\n'lophochroa',\n'lophopyxis',\n'lopriorea',\n'loranthiflorum',\n'loranthophila',\n'lornadepewae',\n'lotoxalis',\n'lubaria',\n'lubilensis',\n'lucidifrons',\n'lucifugus',\n'lugdunarium',\n'luikae',\n'lukaschia',\n'lumsdenae',\n'lunatum',\n'lungshenensis',\n'luodianense',\n'lupatus',\n'luridavolta',\n'luristanica',\n'lusingaense',\n'luteifrons',\n'luteileprosa',\n'luteosignata',\n'luxiense',\n'lycaenops',\n'lycaeopsidae',\n'lycocarpum',\n'lygria',\n'lysiphyllum',\n'maamingidae',\n'mabanuria',\n'mabellarca',\n'machairodontini',\n'mackaviensis',\n'macrocarpata',\n'macrocheila',\n'macrocornutus',\n'macrocremastra',\n'macroglossini',\n'macrogryllus',\n'macrolabis',\n'macropharyngodon',\n'macrotarrhusina',\n'macrotegmenta',\n'macrothylaciini',\n'macsweenyi',\n'maculaalba',\n'maculatus',\n'maculimembris',\n'madathisanotia',\n'madenphloeus',\n'maestingellus',\n'magadinensis',\n'magallanes',\n'magalonii',\n'maghrebiana',\n'magnacalx',\n'magneta',\n'magnetensis',\n'magnispiracularis',\n'magnopunctata',\n'mahmudbejovi',\n'mahunkaisimilis',\n'majorica',\n'majusdentatus',\n'makandal',\n'makarcevae',\n'makawao',\n'malabaris',\n'malaxioides',\n'malchanovi',\n'malpighiales',\n'malybo',\n'malziana',\n'mamigna',\n'mandanus',\n'manfeldtii',\n'mangrovae',\n'mannena',\n'mansonella',\n'mantamonadida',\n'maoricoris',\n'maquiensis',\n'maquipucuna',\n'marathonitinae',\n'marcellaria',\n'marcomesostoma',\n'margarostigma',\n'margelanica',\n'marisaurus',\n'marisminoris',\n'marmarensis',\n'marmarodeceia',\n'marmoretta',\n'marmorii',\n'marnkalha',\n'marojejiense',\n'marquesa',\n'marriana',\n'martynovae',\n'masaiensis',\n'mascarone',\n'maseri',\n'mashanense',\n'mashuana',\n'massariola',\n'massaspicula',\n'mastopomatoides',\n'matacarus',\n'mathuriana',\n'matiganae',\n'mauroprosopa',\n'maurya',\n'maximiliani',\n'mazama',\n'mbamou',\n'mbenjii',\n'mcnabi',\n'medioscutellatus',\n'medwayensis',\n'meerausi',\n'megalobrunneum',\n'megalomycter',\n'megalorrhizum',\n'megalothyrsa',\n'megalyridiini',\n'megamphida',\n'megaoonops',\n'megapex',\n'megateles',\n'megispilota',\n'meigangae',\n'meilloniellum',\n'meingangbii',\n'melakeghebrekristosi',\n'melanchares',\n'melanchlaenus',\n'melanicterata',\n'melanocausta',\n'melanophyllaceae',\n'melanopneumon',\n'melicopea',\n'meligastra',\n'melissimum',\n'mellici',\n'melonius',\n'melphidippella',\n'meneghinianum',\n'mentawir',\n'meoticaops',\n'merdrignaci',\n'merensis',\n'mergense',\n'merhynchites',\n'meridiocarpathicus',\n'merriamosauridae',\n'merularia',\n'mesamidostomum',\n'mesembriomys',\n'mesoepisternalis',\n'mesogitanus',\n'mesolestes',\n'mesoleucalis',\n'mesonotochra',\n'mesosindris',\n'mesostegia',\n'mesovelia',\n'messicobolidae',\n'mestorus',\n'metabacterium',\n'metacerylon',\n'metalacurbs',\n'metallicut',\n'metallophilus',\n'metanaga',\n'metapterygota',\n'metapulvinata',\n'metasidama',\n'metatensis',\n'metatrichini',\n'metellona',\n'metopiora',\n'mevesi',\n'meyerinkii',\n'michaelisi',\n'michelinoceratida',\n'michoniana',\n'micralabastra',\n'micralsopsis',\n'microbahia',\n'microcarunculata',\n'microcephalophis',\n'microcorses',\n'microcyma',\n'micromesozonata',\n'microsciadium',\n'microscopicus',\n'microstethum',\n'microstriatus',\n'microviolacea',\n'micruropodidae',\n'mictophileurus',\n'mikatae',\n'milishai',\n'millerburtonia',\n'miltochristalis',\n'miltoni',\n'mimeugoa',\n'minarzianus',\n'mineirosensis',\n'minhensis',\n'minirosea',\n'minorbrachyblasta',\n'minyaense',\n'miocaenica',\n'mionatrix',\n'mionebulosa',\n'miradornsis',\n'miristigma',\n'mirkinii',\n'misiones',\n'missionensis',\n'mistassinica',\n'mitonia',\n'mixoscia',\n'moathi',\n'mochae',\n'modicoides',\n'moellendorffi',\n'moerisioidea',\n'mogollona',\n'mogorka',\n'mohavanensis',\n'mohavea',\n'molochina',\n'monachophyllum',\n'monactinus',\n'monalita',\n'monapunctata',\n'mongiensis',\n'mongoz',\n'monochorhynchus',\n'monotrete',\n'monreali',\n'monroeae',\n'montandoniola',\n'montanetana',\n'montemaris',\n'montieli',\n'moratiana',\n'morosevitshae',\n'morosphaeria',\n'mosambicensis',\n'moscoviensis',\n'motleyi',\n'motuweta',\n'moussavoui',\n'moutiai',\n'moutouchi',\n'msuata',\n'mugangensis',\n'mulgedii',\n'mulibrinus',\n'mullerrutzi',\n'multareis',\n'multicristatella',\n'multilata',\n'munbyanus',\n'mundeola',\n'munissii',\n'muraenolepis',\n'muricola',\n'murieliae',\n'murinocardiopsis',\n'murmurensis',\n'mutilla',\n'mweroensis',\n'mycobacteriaceae',\n'mycterobius',\n'myialginae',\n'myocaster',\n'myohyangsanica',\n'myopius',\n'myopsychoides',\n'myoxophora',\n'mystriocentrus',\n'myxodictyum',\n'nacladense',\n'naevana',\n'nagamasu',\n'nagatoella',\n'naiguatana',\n'nakamuriformis',\n'nakanai',\n'nakipa',\n'nakuru',\n'nalepellidae',\n'namacus',\n'nangra',\n'nanniae',\n'nannoconus',\n'nannosteinmannites',\n'nannosuchus',\n'narmanica',\n'nascioides',\n'nassatula',\n'nassipa',\n'nasturtium',\n'natalicius',\n'natriophilus',\n'nattaiensis',\n'nausibus',\n'nautiliaceae',\n'nealecypridini',\n'neatodes',\n'necallianassa',\n'necopinatidae',\n'necopinum',\n'negasilus',\n'negibacteria',\n'negroppia',\n'negundana',\n'neibae',\n'neimaniae',\n'nemosoma',\n'neoacutidens',\n'neoaves',\n'neobasalis',\n'neobradyidae',\n'neocichla',\n'neocteniza',\n'neofascipennis',\n'neoflavicans',\n'neohornibrookella',\n'neomisellina',\n'neonola',\n'neopamera',\n'neoperlops',\n'neopiliferum',\n'neotabidus',\n'nephelioides',\n'nephrodinium',\n'nepogomphus',\n'neptunoides',\n'nerens',\n'neseotes',\n'nesoriella',\n'nestia',\n'netica',\n'neuontobotrys',\n'neurigrammalis',\n'niamiae',\n'nicarete',\n'nichofii',\n'nicholai',\n'nictheroyana',\n'niglarus',\n'nigricapita',\n'nigricrissa',\n'nigriguttulus',\n'nigripennus',\n'nigriscuta',\n'nigriventus',\n'nigroaxillaris',\n'nigrobrunneana',\n'nigrocupuliferous',\n'nigrofactum',\n'nigronaervalis',\n'nigropeltata',\n'nigrova',\n'nikanoria',\n'ningchengensis',\n'niphocera',\n'nitrariifolius',\n'nivemaculata',\n'nivenorum',\n'niveociliaria',\n'nixoniana',\n'noaeae',\n'noctuitaria',\n'nodilirata',\n'nomadus',\n'nonornata',\n'nonstylatum',\n'nordenstamia',\n'noscibilis',\n'nosterella',\n'nostochopsidaceae',\n'notanisus',\n'notati',\n'nothosaerva',\n'notoderus',\n'notogomphus',\n'notoleuca',\n'notonectoides',\n'notothixoides',\n'novahebridensis',\n'novobritanniensis',\n'nublians',\n'nucleatus',\n'nucleosus',\n'nullamphiura',\n'nulliferana',\n'nuttallielloidea',\n'nyakaensis',\n'nyanzense',\n'nycthemeraria',\n'nycticorpum',\n'nygmiae',\n'nysiusae',\n'nyssanthes',\n'nyssonini',\n'oblenita',\n'obliquans',\n'oblongissimus',\n'obovatocarpa',\n'obsequiosa',\n'occulta',\n'ocellicaudus',\n'ocenebrinae',\n'ochridaphe',\n'ochrochrous',\n'ochrodorsella',\n'ochterus',\n'odobenocetopsidae',\n'odontonotacris',\n'odontopsammodius',\n'odontopygidae',\n'oedothelphusa',\n'oelandinus',\n'ohlertidion',\n'okadaiidae',\n'okeani',\n'oksalianum',\n'oldroydiana',\n'olgashelestae',\n'oligocarinatum',\n'oligophyton',\n'oligospilota',\n'oligotrophicum',\n'olliffiana',\n'olmediopsis',\n'olmosensis',\n'olmotega',\n'omalonomus',\n'omariusalis',\n'omogonis',\n'omopyge',\n'onchocalanus',\n'onophas',\n'onychiurini',\n'onychogammarus',\n'onychoglenea',\n'oochoristica',\n'oosomini',\n'opadius',\n'opalinula',\n'opatrina',\n'operantis',\n'ophiochalcis',\n'ophiopogonoides',\n'opifexi',\n'opopaea',\n'opulentium',\n'orangica',\n'orbicularius',\n'orbipora',\n'orchonicus',\n'ordunyai',\n'oreopithecus',\n'oresbia',\n'oresbios',\n'orgyale',\n'orichalcescens',\n'orichloris',\n'orisasini',\n'orithopsidae',\n'ornatodorcadion',\n'orohenense',\n'orongia',\n'orsunius',\n'orthomeroides',\n'orthoraphis',\n'orthostichopsis',\n'orthotrichum',\n'osellae',\n'osoensis',\n'osoriana',\n'osperlioceras',\n'ostuchiensis',\n'oswaldia',\n'otallensis',\n'ouadanei',\n'ouricanense',\n'ovatiguttatus',\n'ovicercus',\n'ovilis',\n'oxycarenidae',\n'oxycerini',\n'oxymegaspis',\n'oxyruncus',\n'oxystoma',\n'ozokeriticus',\n'ozotomerini',\n'pachmariensis',\n'pachobex',\n'pachycaulon',\n'pachycoccyx',\n'pachydeminae',\n'pachynema',\n'paddeui',\n'paduana',\n'paedobisium',\n'paenacuceps',\n'paenedentula',\n'pailensis',\n'palaeocarcharidae',\n'palaeophonus',\n'palaeosystenus',\n'palawanella',\n'palenquense',\n'palesoidea',\n'paleuthygrammatidae',\n'palinuroidea',\n'pallidetinctus',\n'pallidicostalis',\n'pallidohirtus',\n'pallorus',\n'palmatus',\n'palmetincola',\n'palmivorus',\n'paluosa',\n'pampiconus',\n'panacina',\n'pancallia',\n'pancici',\n'pancrustacea',\n'paniferum',\n'panochthus',\n'pantecphylini',\n'panticosus',\n'papillatus',\n'papillopilosa',\n'papillospora',\n'paraansobicus',\n'parabactridium',\n'parabarossia',\n'paraborsonia',\n'parabretti',\n'paracanthonchus',\n'paracavisoma',\n'paracelastrus',\n'paracheiridium',\n'paraconara',\n'paractaeopsis',\n'paracuminiseta',\n'paradiplogynium',\n'paradoxosomatinae',\n'paradrina',\n'parafiorinia',\n'parafungicola',\n'paragonimus',\n'paragraminis',\n'parahieroglyphica',\n'parahuahindensis',\n'parajauravia',\n'paralamprotatus',\n'paralphenum',\n'paramaculipennis',\n'paramevania',\n'paramyinae',\n'paraphiloscia',\n'parapoxvirus',\n'pararapana',\n'parareolatus',\n'parasanjuanensis',\n'parasicyos',\n'parasphaeria',\n'parastemon',\n'parastenoterys',\n'paratheridula',\n'paratriaina',\n'paratubiluchus',\n'paratumbex',\n'paraumballaensis',\n'paravenia',\n'paraves',\n'paravorae',\n'pardoanum',\n'pardochrous',\n'parelegans',\n'paresmus',\n'pareulepis',\n'pareutaenia',\n'pariry',\n'parjumanensis',\n'parspeciosum',\n'parthicum',\n'parvifoliella',\n'parvipunctus',\n'pascahinnites',\n'pashupati',\n'pathana',\n'patheticus',\n'patritiodemus',\n'pattersonellidae',\n'paturattensis',\n'paucichelatus',\n'paucipetala',\n'paucivenosum',\n'paulesca',\n'paulianaleyrodes',\n'paulocordata',\n'pausandra',\n'pavelitus',\n'pavichii',\n'pearceanus',\n'peartiae',\n'pectinatum',\n'pedimarmoratus',\n'pegazzanoae',\n'peihonga',\n'pelamidis',\n'pelegrinoides',\n'pellucidellus',\n'pelobium',\n'pelodesmus',\n'pelotomaculum',\n'pempelioides',\n'pendulosa',\n'pengboense',\n'penneysii',\n'peonza',\n'peraccai',\n'peranemiformis',\n'percludalis',\n'percolens',\n'perconfusa',\n'perconicus',\n'perdica',\n'perfectana',\n'perflaveola',\n'periclimenes',\n'periglabellus',\n'perigrinus',\n'perilimicron',\n'periploceae',\n'periquesta',\n'perisphinctinae',\n'peristerensis',\n'peristrigata',\n'perlatum',\n'permagnifolia',\n'permiscus',\n'pernyii',\n'perostia',\n'perpunctulatum',\n'perseae',\n'persimplexella',\n'persinuata',\n'peruvensis',\n'pervasata',\n'pervulgaris',\n'petheri',\n'petrocrania',\n'petrograpta',\n'petroleuciscus',\n'petrolinensis',\n'petrorsus',\n'pezomantis',\n'pfefferiteuthis',\n'phaenohemiandrus',\n'phaeocroa',\n'phalacrocoraca',\n'phallopiratinae',\n'phanolophus',\n'phantomus',\n'phascolomys',\n'phelloxylon',\n'phemonoides',\n'philichthys',\n'philipomyia',\n'philippinum',\n'philocalus',\n'philocoprella',\n'philomena',\n'philosycus',\n'phinneyi',\n'phitosianus',\n'phlepsopsius',\n'phloxidiflora',\n'phoemonoe',\n'pholcochyrocer',\n'phormisalis',\n'phoxapex',\n'phrixus',\n'phycinae',\n'phylloceratitida',\n'phyllochaetopterus',\n'phyllodinarda',\n'phyllorachis',\n'phyllospongia',\n'phylochrysa',\n'phymatopteris',\n'physcomitrellae',\n'physoglenidae',\n'piasusalis',\n'piazzaria',\n'piceolus',\n'picicolor',\n'piezotrachelini',\n'pilatoi',\n'pilifilis',\n'pililoba',\n'pilsbrytyphis',\n'pimaensis',\n'pinacopodium',\n'pinguella',\n'pinidumus',\n'piniradicis',\n'pinnatifidum',\n'pinnicerca',\n'pintadus',\n'piqueriae',\n'piquerioides',\n'pirapo',\n'pirarense',\n'pirizanica',\n'pirriei',\n'pisacomensis',\n'piscacauda',\n'pisciodorus',\n'pisidium',\n'pissina',\n'pithyella',\n'pityophilus',\n'placocista',\n'placodops',\n'placotrochides',\n'plagiognathi',\n'plagioholocentrus',\n'planaltinella',\n'planipedonus',\n'planistylus',\n'plantaginoidea',\n'plasmodiophoromycetes',\n'plastica',\n'platyacantha',\n'plecopterorum',\n'plectrelgraecum',\n'plectrocerum',\n'pleionotoma',\n'plethokrossus',\n'plethotretus',\n'pleuranthoides',\n'pleurites',\n'pleurobotryosa',\n'pleurodomus',\n'pleurofascia',\n'pleuronichthys',\n'pleuropasta',\n'plicosula',\n'pliculosa',\n'plinthiza',\n'pliosauridae',\n'plumacea',\n'plumeriifolia',\n'pluricapitata',\n'plurosorus',\n'pluvia',\n'pninaella',\n'poblanus',\n'pocopunctella',\n'podaucheniellus',\n'podonectriaceae',\n'poecilator',\n'poliona',\n'polititapes',\n'polosi',\n'polychrosis',\n'polycladae',\n'polyfimbriata',\n'polygamiae',\n'polygonanae',\n'polymorphidae',\n'polysentoriformes',\n'polysperchinus',\n'polytmus',\n'polyzonatus',\n'polzbergia',\n'pomeroyi',\n'ponerus',\n'pontisquamata',\n'populifolia',\n'porchatensis',\n'porochordus',\n'porosa',\n'porthesioides',\n'portoricoscia',\n'porulosa',\n'postcervix',\n'postdentaria',\n'postfasciculata',\n'postmediana',\n'postoparvipuncta',\n'postpoliatus',\n'postsemipluripuncta',\n'potebniamyces',\n'prabha',\n'praecursoria',\n'praephacorhabdotus',\n'praeprocris',\n'praestolatorius',\n'pratumidiscus',\n'pretenderis',\n'primevus',\n'primigenus',\n'prionotemnus',\n'prismatocarpus',\n'proarchus',\n'problematodes',\n'proboscidoplocia',\n'probosciformis',\n'procerocheles',\n'productinae',\n'profundocythere',\n'projecturata',\n'projicienfrontoides',\n'prolaminatus',\n'prolaupala',\n'prolixifasciata',\n'prolixistyla',\n'promirotermes',\n'proniphea',\n'pronoritidae',\n'pronotacanthus',\n'prorepentia',\n'proriedelia',\n'prosadiya',\n'prosectoides',\n'prosenactia',\n'prosobothrium',\n'prosopalpus',\n'prosorhochmus',\n'protocardiinae',\n'protochitonidae',\n'protoglomeris',\n'protoiurus',\n'protopidius',\n'protoreticulata',\n'protorhyssalodes',\n'protosciarella',\n'protosculptilis',\n'protrama',\n'psammoticus',\n'psarisomus',\n'pselaphostena',\n'pseudacanthopale',\n'pseudachorutella',\n'pseudacroleptus',\n'pseudanurophorus',\n'pseudapoderus',\n'pseudargentata',\n'pseudartiocotylus',\n'pseudephedrus',\n'pseudincoides',\n'pseudoalstonii',\n'pseudoarmillaris',\n'pseudoborniales',\n'pseudobothrideres',\n'pseudobotrys',\n'pseudochroma',\n'pseudodiplotaxis',\n'pseudodoliolininae',\n'pseudoeurydesmella',\n'pseudoglauca',\n'pseudogonitis',\n'pseudogyrinocheilus',\n'pseudohookeriana',\n'pseudoialapennsis',\n'pseudokovacevici',\n'pseudomacrophya',\n'pseudomaroccana',\n'pseudomarsupidium',\n'pseudomarteli',\n'pseudomassilina',\n'pseudomedaeus',\n'pseudoncholaimus',\n'pseudonudicaulis',\n'pseudooblongum',\n'pseudopallescens',\n'pseudopannaria',\n'pseudopasilia',\n'pseudopentameris',\n'pseudopiceus',\n'pseudopithyella',\n'pseudoptiletes',\n'pseudorchestes',\n'pseudorichia',\n'pseudorthonychiidae',\n'pseudosaxat',\n'pseudosteini',\n'pseudosymmorphus',\n'pseudothyretes',\n'pseudotrematodes',\n'pseudotriphyllopsis',\n'pseudotristicha',\n'pseudumbellata',\n'pseuduncifera',\n'pseustantha',\n'psiloderoides',\n'psychanisa',\n'psychroteuthidae',\n'pteleaevagrans',\n'pteridicola',\n'pterineidae',\n'pteron',\n'pteropelyx',\n'ptilocladioides',\n'ptilopus',\n'ptochopis',\n'pubistylosum',\n'pudicula',\n'puiggariopsis',\n'pulchricolor',\n'pulchrinodaceae',\n'pulcia',\n'pulcratis',\n'pultiphagonides',\n'pulvifer',\n'punctifimbriata',\n'punctillaris',\n'punctoterminalis',\n'purdonellinae',\n'purpureoplagiata',\n'pursellii',\n'pusanus',\n'pusztae',\n'pycnocephaloides',\n'pycnophyllopsis',\n'pycnopodia',\n'pygocentrus',\n'pyramidata',\n'pyrgotomyia',\n'pyrifer',\n'pyrimidalis',\n'pyronasi',\n'pyrrhonotum',\n'qianyiyongii',\n'qinglongopterus',\n'quadrabdominalis',\n'quadrataria',\n'quadratirostrata',\n'quadriannellatus',\n'quadricellulata',\n'quadrifalcifera',\n'quadrinotatiforme',\n'quadristrigaria',\n'quasiborelis',\n'quasiindicus',\n'quercusilicis',\n'quinquicincta',\n'quisquiliarius',\n'rabainus',\n'raceki',\n'rachelii',\n'racovitzae',\n'racovitzia',\n'radicosus',\n'rafesi',\n'ralstoniae',\n'ramicephala',\n'ramoncaracasii',\n'ramoniana',\n'ranitomeya',\n'rankini',\n'raphaelandrearum',\n'raphigastra',\n'raphis',\n'rapola',\n'rarensis',\n'rarotonga',\n'rautensis',\n'rawuense',\n'reaghi',\n'recticommata',\n'rectopalicus',\n'recurvilabre',\n'recurvistigmalis',\n'reddii',\n'redemptum',\n'rehbergi',\n'reitteri',\n'rembangensis',\n'renaudiana',\n'renauldi',\n'reniformis',\n'renipiscarius',\n'renivitta',\n'repletana',\n'rescissa',\n'residis',\n'resinophaga',\n'retextus',\n'retingensis',\n'retrospiculatum',\n'retusa',\n'rhabdomolgus',\n'rhachicoryphus',\n'rhacoindustiata',\n'rhadinosa',\n'rhamphostomella',\n'rhayatus',\n'rhealis',\n'rheumaptera',\n'rhinocolura',\n'rhinorhynchini',\n'rhiostoma',\n'rhipidomellinae',\n'rhodaphanes',\n'rhododendronis',\n'rhodophilides',\n'rhomboivora',\n'rhombonicis',\n'rhombostilbella',\n'rhopalodes',\n'rhopalopus',\n'rhymnus',\n'rhyopsocus',\n'ribeiroia',\n'ribium',\n'richardsi',\n'richerdeforgersi',\n'ricinoidoidea',\n'ricketti',\n'rifana',\n'rigiduliformis',\n'rikuzenica',\n'rimipontius',\n'riocauchosanum',\n'riparis',\n'ripidopteris',\n'risoba',\n'rithrogenophila',\n'rodentini',\n'rodriguezus',\n'rogata',\n'rolandmuelleri',\n'romanchella',\n'romeii',\n'romulanigra',\n'roschanicus',\n'roseicostis',\n'rosellei',\n'rosemariana',\n'rosenvingiella',\n'roseobrunnea',\n'roseoculma',\n'rosettiae',\n'rosettii',\n'rosica',\n'rosicola',\n'rossmania',\n'rostamii',\n'rostraloides',\n'rostrigerum',\n'rothfelsi',\n'rotulina',\n'rotuloplocamia',\n'roxasella',\n'ruaumokoi',\n'rubeschi',\n'rubicula',\n'rubrigastra',\n'rubrisetum',\n'rubronervat',\n'ruderatus',\n'rudiastra',\n'rudolphisimonii',\n'rufistigmosa',\n'rufitarsoides',\n'rufocastanea',\n'rufofuscula',\n'rufolimbaria',\n'rufosatellitia',\n'rufotactus',\n'rufotinctus',\n'rugifolium',\n'rugostriatus',\n'rugulata',\n'ruhlandiana',\n'ruiliensis',\n'rumphiensis',\n'rutaneni',\n'ruzskyellus',\n'ryphea',\n'sabatoi',\n'sabbadini',\n'sacajaweae',\n'saccharophilum',\n'saccopetaloides',\n'saccopharyngidae',\n'sacculoppia',\n'saeniensis',\n'sagaminemertes',\n'saguaroicola',\n'salamander',\n'salatini',\n'salinellidae',\n'salmositica',\n'salsburyana',\n'salsum',\n'salticidites',\n'saltursus',\n'salvagopselactus',\n'salvazi',\n'samacar',\n'samolethrius',\n'sanata',\n'sandbergeri',\n'sandrabatis',\n'sansebastianus',\n'santaelensis',\n'santoamarensis',\n'santubong',\n'sanyali',\n'sapotaefolia',\n'sapphirhinus',\n'sapporona',\n'saracrinus',\n'sarcocyphos',\n'sarsonuphis',\n'sasakii',\n'sasimella',\n'saturator',\n'sauciatus',\n'savigniorrhipis',\n'saxemarina',\n'saxeseni',\n'sbarbari',\n'scalebrina',\n'scansoria',\n'scaphidiomyces',\n'scapiflora',\n'scardiinae',\n'schabalkini',\n'schacheri',\n'schachimardanicum',\n'schaffneri',\n'schajovskoya',\n'schellwieniens',\n'scherfi',\n'schizacme',\n'schizocharis',\n'schizochiton',\n'schizonema',\n'schizopus',\n'schizotaldycupes',\n'schminkeinae',\n'schraederi',\n'sciocyrtinus',\n'scirpidium',\n'sclateria',\n'sclerieae',\n'scleropteroides',\n'scleropycnis',\n'scoliacantha',\n'scoriformis',\n'scorpaenoidei',\n'scoteinum',\n'scutellina',\n'scutuliformis',\n'scybalophagus',\n'scythromorpha',\n'secluse',\n'secostruma',\n'secretas',\n'segovicus',\n'seilerni',\n'seirospora',\n'sejongensis',\n'selaserica',\n'seleensis',\n'selenana',\n'selenariidae',\n'selenopsocus',\n'semibraccatus',\n'semicrocea',\n'semilissus',\n'semionis',\n'semisplendidum',\n'semiticella',\n'sepsidae',\n'septicemia',\n'septorispora',\n'serangodella',\n'seraxensis',\n'seriespinosum',\n'serolina',\n'seroloniscus',\n'serpentinum',\n'serradraco',\n'serranicola',\n'serranochromis',\n'sertalis',\n'sespinaea',\n'sessilifructa',\n'sestertiella',\n'setabara',\n'setantops',\n'setaphora',\n'setispinae',\n'setylaides',\n'sevastjanovi',\n'sevenetii',\n'sevosa',\n'sewertzowii',\n'sexdendata',\n'sexspinus',\n'shackletoni',\n'shataii',\n'shebania',\n'sheeppox',\n'sheidaii',\n'sherbrookei',\n'sheshanensis',\n'shigernaei',\n'shiloensis',\n'siamophylla',\n'sianenna',\n'sibaya',\n'sibayakensis',\n'sibbaldi',\n'sibukoensis',\n'siccanea',\n'sichnostola',\n'sicinae',\n'sieburgi',\n'sigilla',\n'sigmomorphina',\n'signipennis',\n'sihoensis',\n'silhouettei',\n'silolona',\n'silphedosuchus',\n'silsilesii',\n'silvaniformis',\n'silvicolus',\n'simetitia',\n'similicornuta',\n'similiphora',\n'simsata',\n'singalorum',\n'sinharajaicus',\n'sinoarundinaria',\n'sinobryobia',\n'sinotianschanicum',\n'sinuosociliatus',\n'sipunculoides',\n'sittae',\n'sivarajiana',\n'slatinensis',\n'slevinii',\n'smefarka',\n'smelowskia',\n'smyrnae',\n'snellii',\n'sochinsogonia',\n'socotricola',\n'soenderupianus',\n'sogalis',\n'sogandaresi',\n'sohayakiense',\n'sokkaejaecystis',\n'solenoxyphus',\n'solitariana',\n'solorzanoana',\n'somatania',\n'sonderophycus',\n'songpanicum',\n'sonitans',\n'sonneratioides',\n'sonogrus',\n'sonotetranychus',\n'sophista',\n'sordidopapposa',\n'sorediifera',\n'southgeorgiae',\n'soyoae',\n'spanospicula',\n'spathor',\n'spatulicornis',\n'spelaeum',\n'speoides',\n'spermodea',\n'sphaeroconcha',\n'sphaerodoridium',\n'sphaerogerinidae',\n'sphaerosporella',\n'sphaerozone',\n'sphagnorrhiza',\n'sphenorhynchus',\n'sphenotretidae',\n'sphingidites',\n'sphingopyxis',\n'spilosomini',\n'spinigerum',\n'spiniplenus',\n'spinostylus',\n'spiralifera',\n'spirifex',\n'spiroberotha',\n'spirotecta',\n'spirotectinae',\n'spongiphilus',\n'sponiifolius',\n'sporocosma',\n'springvaleensis',\n'squamatellus',\n'squamulosula',\n'stachysi',\n'stacota',\n'stagona',\n'staiusalis',\n'stalina',\n'staphylocystoides',\n'stathmodera',\n'staxrudi',\n'steccherinaceae',\n'steinbergensis',\n'steinhardti',\n'stellariifolius',\n'stellatacula',\n'stellatosporea',\n'stenanthera',\n'steninae',\n'stenocarus',\n'stenoetrus',\n'stenolejeunea',\n'stenolobium',\n'stenometopa',\n'stenopetalum',\n'stenostygninae',\n'stenothora',\n'stenotritinae',\n'stephanophyes',\n'stephenseniellus',\n'stereograpta',\n'steveniella',\n'sthenozancla',\n'stibapicalis',\n'stigmatogobius',\n'stigmatotheca',\n'stiphrogyne',\n'stipuloideum',\n'stirlingia',\n'stirojoppa',\n'stoeberhinus',\n'stolonacea',\n'stonesfieldiana',\n'straatmanni',\n'stradbrokense',\n'streyana',\n'strictiforme',\n'strigialifusus',\n'strigillatus',\n'strigosipes',\n'striposis',\n'stroemi',\n'strophingia',\n'strophis',\n'stubblefieldi',\n'stumkatae',\n'stygocarididae',\n'stylodesmus',\n'stylopauropoides',\n'stylospora',\n'stylus',\n'styphlorachis',\n'stypus',\n'styraconixidae',\n'subaana',\n'subargillacea',\n'subcongoensis',\n'subcorrosus',\n'subdecursivum',\n'subdicarpon',\n'subfinitimella',\n'subfurva',\n'subglabrum',\n'subhuti',\n'subinformis',\n'sublignosalis',\n'sublineatus',\n'submelanaria',\n'subneotrichius',\n'subobliteratus',\n'subota',\n'subpectinata',\n'subpelignus',\n'subpellucens',\n'subplacens',\n'subpohlioideum',\n'subtakecallis',\n'subterblancum',\n'subterraneoides',\n'subtrivialis',\n'subumbrosa',\n'subvariocostatus',\n'subvillosula',\n'subxanthippus',\n'subyusou',\n'sucofera',\n'suduirauti',\n'suffusinervis',\n'sugillata',\n'suiferens',\n'sukhothai',\n'sukotaiense',\n'sulcinerva',\n'sulfophila',\n'sulfureolus',\n'sumensis',\n'summergold',\n'supraglandulosa',\n'surculare',\n'suspinata',\n'susumia',\n'svecica',\n'symmetrosporaceae',\n'symphorosus',\n'synagriformis',\n'synaphe',\n'syncapna',\n'syndelphax',\n'synercta',\n'syniulus',\n'syntrita',\n'syntrophus',\n'syringilla',\n'syringopharynx',\n'syzygoniinae',\n'szulczewskii',\n'tabernai',\n'taboga',\n'tachangensis',\n'tachillanella',\n'tachiniscidae',\n'tachinoides',\n'tacoaraphaga',\n'tactiquensis',\n'taeniolatus',\n'tagetiflora',\n'tahulaspis',\n'takachihonis',\n'takahagiensis',\n'takhtajani',\n'takhti',\n'takuiricus',\n'talaena',\n'talitridira',\n'tamagohanum',\n'tamaricaria',\n'tamaska',\n'tambori',\n'tambourinicus',\n'tampiusalis',\n'tanagami',\n'tanalanacris',\n'tangaroa',\n'tapadas',\n'tapinillus',\n'taraxacicola',\n'tashkurensis',\n'tasmanentulus',\n'tasmaniae',\n'tayoensis',\n'tchupalensis',\n'telata',\n'telegdirothi',\n'telesii',\n'teliformis',\n'telmatobia',\n'telosperma',\n'telotylenchinae',\n'temascalense',\n'temnosceloides',\n'tempisque',\n'temulata',\n'tenacifolium',\n'tenacis',\n'tenaspis',\n'tengstroemella',\n'tenuicrustaceum',\n'tenuilamellatus',\n'tenuioides',\n'tenuipalpoidini',\n'teramachii',\n'terborchii',\n'terebraeformis',\n'teresopolis',\n'teretiachaenium',\n'termitarum',\n'tersonderi',\n'tessella',\n'testaceovittatus',\n'tetragattii',\n'tetragonocarpum',\n'tetraleberis',\n'tetrapila',\n'tetrapunctigera',\n'tetrasporoides',\n'thalassemae',\n'thalebanii',\n'thaliana',\n'thallicola',\n'thallostoma',\n'thamfaranga',\n'thamugadensis',\n'thapsianae',\n'tharsanthes',\n'thenardii',\n'therinia',\n'thermomyces',\n'thiofractor',\n'thoracanthoides',\n'thoracosphaera',\n'thorictosoma',\n'thymbroides',\n'thyreoconger',\n'thyrsoidea',\n'thyrsolomia',\n'thystas',\n'thysvillei',\n'tibetanophilus',\n'tibiale',\n'tibicinini',\n'tibiovela',\n'tibullus',\n'ticinepomis',\n'tietzae',\n'tiflisensis',\n'timanicum',\n'timapeba',\n'timothyei',\n'timoutoides',\n'tinoides',\n'tipulidae',\n'tishqu',\n'tissanga',\n'tobiracola',\n'toganensis',\n'tolganensis',\n'tombolatoana',\n'tombouctou',\n'tonjolana',\n'tonkienensis',\n'tonnensis',\n'topseyi',\n'toraia',\n'tororoense',\n'tortuosivenosum',\n'torvensis',\n'touchardia',\n'tovomitopsis',\n'toxopeina',\n'toxotes',\n'trachea',\n'trachygrapha',\n'trachylepis',\n'trachyuropoda',\n'transilis',\n'transversovittatus',\n'travassosinema',\n'trebida',\n'trefusiina',\n'tremataspidoidei',\n'trematocarpus',\n'tremicinae',\n'trentinus',\n'tretosterninae',\n'treverense',\n'triaenophorus',\n'tribalasia',\n'tricepoides',\n'trichiatus',\n'trichocarpum',\n'trichonychina',\n'trichopeda',\n'trichophallus',\n'trichosolen',\n'trichosomoididae',\n'trichothyriomyces',\n'tricnicos',\n'tridax',\n'trifurcillata',\n'trigonosema',\n'trigonula',\n'triloculina',\n'trimamillatus',\n'triplicalyx',\n'triplonychus',\n'triplophyllum',\n'trisecphora',\n'trisignata',\n'tristrigaria',\n'tritaenia',\n'tritodynamiinae',\n'tritoxidium',\n'trophius',\n'tropidocarpum',\n'truchanasi',\n'truxillata',\n'trychnopalpa',\n'tshukoticus',\n'tsienii',\n'tsimihetensis',\n'tsitsikammensis',\n'tsunekatanus',\n'tsurutanum',\n'tubatum',\n'tuberculiforme',\n'tuberorachidion',\n'tucanti',\n'tungchihi',\n'turbonia',\n'turkeyella',\n'turkulensis',\n'turpicula',\n'turuchanica',\n'tusimayusurika',\n'tusimomeneus',\n'tuticorina',\n'tutuilaensis',\n'tymicola',\n'typhochrestus',\n'typhoniinae',\n'tzinella',\n'ucetanus',\n'udzungwense',\n'uktaspis',\n'ulceratalis',\n'ulotrichoides',\n'ultunense',\n'umiatense',\n'uncopaederus',\n'undulitibiae',\n'unguianalis',\n'unguifortis',\n'uniclypea',\n'unimediseta',\n'unipeltoceras',\n'upermia',\n'urarensis',\n'urartuensis',\n'urceoliporoidea',\n'urgorrii',\n'uriformis',\n'uroballus',\n'urodiabunus',\n'urogymni',\n'ushari',\n'ushizanus',\n'ustifumosa',\n'ustyuzhanini',\n'usurae',\n'utahnema',\n'uvifolium',\n'uzunoglui',\n'vacatella',\n'valerian',\n'validithorax',\n'vallacerta',\n'vanakripa',\n'vanieria',\n'vansttallei',\n'varfer',\n'vauereselli',\n'vavara',\n'veerapazhasii',\n'vehemens',\n'velaminosum',\n'velebitica',\n'vendettadeae',\n'veneriglossa',\n'venitalis',\n'ventricostus',\n'ventriosa',\n'ventrolata',\n'verbanica',\n'verbeekininae',\n'verluysi',\n'vermaasi',\n'vermes',\n'vermiculifera',\n'vernale',\n'vernana',\n'verniochreana',\n'vernoniastrum',\n'vernoniensis',\n'verrugana',\n'verticillitida',\n'vertumnaliformis',\n'vervactoraria',\n'vespertillionis',\n'veteranum',\n'vexillocalyculatum',\n'viaderi',\n'vicinula',\n'vidalamiini',\n'viennae',\n'vientianea',\n'viperinus',\n'viphius',\n'virgato',\n'viridenex',\n'viridicaule',\n'viscaianum',\n'viscicola',\n'vitatticella',\n'vitrimentula',\n'vittiger',\n'volkanovi',\n'volutidae',\n'volvocaceae',\n'vrangiana',\n'vuillefroyanus',\n'waigoeensis',\n'wakiyae',\n'wandelia',\n'wanfenglinensis',\n'waningus',\n'wanumaense',\n'wareipai',\n'warhami',\n'warrierianum',\n'wasabia',\n'waterhousiae',\n'wayensis',\n'webbela',\n'weinreichius',\n'wentzelellinae',\n'wernerius',\n'westergaardi',\n'westrichi',\n'wetenschappelijk',\n'whippleanum',\n'wightensis',\n'wikkiensis',\n'wilhelminia',\n'williamsianum',\n'wilmotorum',\n'wilsonichthys',\n'winchelli',\n'winterbotomi',\n'winthemiini',\n'wintonensis',\n'wugirogaense',\n'wulikensis',\n'wyandotte',\n'wyliea',\n'wyomingense',\n'xamthurus',\n'xanthosquamosa',\n'xavantina',\n'xenopodion',\n'xerantifulva',\n'xeringinia',\n'xerophilaspidina',\n'xiangguiensis',\n'ximenans',\n'ximina',\n'xipotensis',\n'xiximeca',\n'xizanganus',\n'xyleus',\n'xysila',\n'xystophora',\n'yaetakaria',\n'yaguara',\n'yamadorianus',\n'yamamurae',\n'yamanei',\n'yanbaru',\n'yangzekiangensis',\n'yasuakii',\n'yavesia',\n'yelicones',\n'yezophora',\n'yinzhengii',\n'yokenella',\n'yoshikazui',\n'yoshinoi',\n'ypirangae',\n'ypresiomyrma',\n'yuanica',\n'yunlingense',\n'yunnananus',\n'yushanica',\n'zabrosa',\n'zacatecae',\n'zaglyptomorpha',\n'zaisanensis',\n'zakonnikovae',\n'zamenhofianum',\n'zantanus',\n'zeballosicum',\n'zebricolor',\n'zelandalbia',\n'zemiodes',\n'zeugicornis',\n'zhoushanense',\n'zhovtyi',\n'zimiensis',\n'zimmii',\n'zooxanthellae',\n'zophochalca',\n'zoroaster',\n'zosterodasys',\n'zunigai',\n'zwicknia',\n'zwolferi',\n'zygethobius',\n'zygethus',\n'zygogonium',\n'zygopterorum',\n];","import { Item, TileObject } from 'common/data';\nimport { simpleDrops } from 'data/drops';\n\nexport type ObjectDef = Pick<TileObject, Exclude<keyof TileObject, 'id' | 'name'>>;\n\nexport const makeObjects = (): Record<string, ObjectDef> => ({\n  // trees\n  'tree-coconut': {\n    texture: 'sprites/objects/tree-coco',\n    color: '4d6211',\n    scale: 3,\n    jitter: true,\n    obstacle: true,\n    interactive: true,\n    drops: {\n      hp: 5,\n      replaceWith: null,\n      table: simpleDrops(2, 4, 0.5, {\n        template: {\n          id: 'wood-palm',\n          name: 'Palm Wood',\n          type: Item.Type.Material,\n          texture: 'sprites/items/wood'\n        },\n        substs: []\n      })\n    }\n  },\n  'tree-oak': {\n    texture: 'sprites/objects/tree-oak',\n    color: '01ac1d',\n    scale: 3,\n    jitter: true,\n    obstacle: true,\n    interactive: true,\n    drops: {\n      hp: 5,\n      replaceWith: null,\n      table: simpleDrops(2, 4, 0.5, {\n        template: {\n          id: 'wood-oak',\n          name: 'Oak Wood',\n          type: Item.Type.Material,\n          texture: {\n            type: 'single',\n            tex: 'sprites/items/wood',\n            tint: 'a0a0a0'\n          }\n        },\n        substs: []\n      })\n    }\n  },\n  'tree-spruce': {\n    texture: 'sprites/objects/tree-spruce',\n    color: '004b01',\n    scale: 3,\n    jitter: true,\n    obstacle: true,\n    interactive: true,\n    drops: {\n      hp: 5,\n      replaceWith: null,\n      table: simpleDrops(2, 4, 0.5, {\n        template: {\n          id: 'wood-spruce',\n          name: 'Spruce Wood',\n          type: Item.Type.Material,\n          texture: {\n            type: 'single',\n            tex: 'sprites/items/wood',\n            tint: '808080'\n          }\n        },\n        substs: []\n      })\n    }\n  },\n\n  // structures\n  'bones': {\n    texture: 'sprites/objects/bones',\n    color: 'cccccc',\n    jitter: true,\n    terrain: true,\n    obstacle: true,\n    interactive: true,\n    drops: {\n      hp: 3,\n      replaceWith: null,\n      table: simpleDrops(2, 5, 0.7, {\n        template: {\n          id: 'bone',\n          name: 'Bone',\n          type: Item.Type.Material,\n          texture: 'sprites/items/bone'\n        },\n        substs: []\n      })\n    }\n  },\n  'cross': {\n    texture: 'sprites/objects/cross',\n    color: 'cccccc',\n    scale: 2,\n    jitter: true,\n    obstacle: true,\n  },\n  'pillar': {\n    texture: {\n      type: 'random',\n      texs: ['sprites/objects/pillar-1', 'sprites/objects/pillar-2', 'sprites/objects/pillar-3']\n    },\n    color: '606060',\n    scale: 2,\n    obstacle: true,\n  },\n\n  // vegetation & decorations\n  'fern': {\n    texture: {\n      type: 'random',\n      texs: ['sprites/objects/fern-1', 'sprites/objects/fern-2', 'sprites/objects/fern-3']\n    },\n    color: '416652',\n    jitter: true,\n    interactive: true,\n    drops: {\n      hp: 0,\n      replaceWith: null,\n      table: simpleDrops(0, 1, 4, {\n        template: {\n          id: 'leaf',\n          name: 'Leaf',\n          type: Item.Type.Material,\n          texture: 'sprites/items/leaf'\n        },\n        substs: []\n      })\n    }\n  },\n  'cactus': {\n    texture: 'sprites/objects/cactus',\n    color: '416652',\n    scale: 1.5,\n    jitter: true,\n    obstacle: true,\n  },\n  'bush': {\n    texture: 'sprites/objects/bush',\n    color: '416652',\n    scale: 1.5,\n    jitter: true,\n    obstacle: true,\n  },\n  'stone': {\n    texture: 'sprites/objects/stone',\n    color: '505050',\n    jitter: true,\n    obstacle: true,\n    interactive: true,\n    drops: {\n      hp: 8,\n      replaceWith: null,\n      table: simpleDrops(2, 5, 0.5, {\n        template: {\n          id: 'stone',\n          name: 'Stone',\n          type: Item.Type.Material,\n          texture: 'sprites/items/stone'\n        },\n        substs: []\n      })\n    }\n  },\n  'rocks': {\n    texture: {\n      type: 'random',\n      texs: ['sprites/objects/rocks-1', 'sprites/objects/rocks-2', 'sprites/objects/rocks-3']\n    },\n    color: '505050',\n    jitter: true,\n    terrain: true,\n    interactive: true,\n    drops: {\n      hp: 1,\n      replaceWith: null,\n      table: simpleDrops(1, 3, 1, {\n        template: {\n          id: 'stone',\n          name: 'Stone',\n          type: Item.Type.Material,\n          texture: 'sprites/items/stone'\n        },\n        substs: []\n      })\n    }\n  },\n});","import { Item, Recipe, TextureDef } from 'common/data';\n\nfunction recipe(input: { id: string, texture: TextureDef }[], output: Item): Recipe {\n  return { input, output };\n}\n\nexport const makeRecipes = (): Recipe[] => [\n  recipe([\n    { id: 'bone', texture: 'sprites/items/bone' },\n    { id: 'leaf', texture: 'sprites/items/leaf' },\n  ], {\n      id: 'gel-bone',\n      name: 'Bone Gel',\n      description: 'alchemical reagent: boost elemental fusion',\n      type: Item.Type.Consumable,\n      texture: 'sprites/items/gel'\n    }),\n  recipe([\n    { id: 'stone', texture: 'sprites/items/stone' },\n    { id: 'leaf', texture: 'sprites/items/leaf' },\n  ], {\n      id: 'gel-stone',\n      name: 'Stone Gel',\n      description: 'alchemical reagent: boost elemental fission',\n      type: Item.Type.Consumable,\n      texture: {\n        type: 'single',\n        tex: 'sprites/items/gel',\n        tint: '808080'\n      }\n    }),\n  recipe([\n    { id: 'solution', texture: 'sprites/items/solution' },\n    { id: 'leaf', texture: 'sprites/items/leaf' },\n    { id: 'stone', texture: 'sprites/items/stone' },\n  ], {\n      id: 'gel-alchemy',\n      name: 'Alchemical Gel',\n      description: 'alchemical reagent: purify solution',\n      type: Item.Type.Consumable,\n      texture: {\n        type: 'single',\n        tex: 'sprites/items/gel',\n        tint: 'e06060'\n      }\n    }),\n];","import { Item } from 'common/data';\nimport { makeEffect } from 'common/logic/effect';\nimport { simpleDrops } from 'data/drops';\nimport { EffectDef } from 'data/effects';\nimport { ObjectDef } from 'data/objects';\n\nexport const NumFlowerTypes = 4;\nexport function makeFlower(name: string, type: number, color: string, elements: [string, string]): ObjectDef {\n  return {\n    texture: {\n      type: 'composite',\n      overlay: { type: 'single', tex: `sprites/objects/flower-petal-${type}`, tint: color },\n      base: { type: 'single', tex: `sprites/objects/flower-stem-${type}` }\n    },\n    color,\n    jitter: true,\n    interactive: true,\n    drops: {\n      hp: 0,\n      replaceWith: null,\n      table: simpleDrops(1, 2, 1, {\n        template: {\n          id: `flower-${name.toLowerCase()}`,\n          name,\n          type: Item.Type.Consumable,\n          texture: {\n            type: 'composite',\n            overlay: { type: 'single', tex: `sprites/items/flower-petal-${type}`, tint: color },\n            base: { type: 'single', tex: `sprites/items/flower-stem-${type}` }\n          },\n          aspects: [\n            { element: elements[0], amount: 0 },\n            { element: elements[1], amount: 0 }\n          ]\n        },\n        substs: [\n          { path: 'aspects[0].amount', type: 'gaussian', mean: 15, sd: 2, min: 0, max: 20 },\n          { path: 'aspects[1].amount', type: 'gaussian', mean: 8, sd: 2, min: 0, max: 12 },\n        ]\n      })\n    }\n  };\n}\n\nexport function makeBush(): ObjectDef {\n  return {\n    texture: 'sprites/objects/bush',\n    color: '416652',\n    scale: 1.5,\n    jitter: true,\n    obstacle: true,\n  };\n}\n\nexport const NumBerryTypes = 4;\nexport function makeBerryBush(name: string, depleted: string, type: number, color: string, elements: [string, string]): ObjectDef {\n  return {\n    texture: {\n      type: 'composite',\n      overlay: { type: 'single', tex: 'sprites/objects/berrybush-berries', tint: color },\n      base: { type: 'single', tex: 'sprites/objects/berrybush-bush' }\n    },\n    color: '416652',\n    scale: 1.5,\n    jitter: true,\n    obstacle: true,\n    interactive: true,\n    drops: {\n      hp: 1,\n      replaceWith: depleted,\n      table: simpleDrops(2, 4, 1, {\n        template: {\n          id: `berries-${name.toLowerCase()}`,\n          name: `${name} Berries`,\n          type: Item.Type.Consumable,\n          texture: { type: 'single', tex: `sprites/items/berries-${type}`, tint: color },\n          aspects: [\n            { element: elements[0], amount: 0 },\n            { element: elements[1], amount: 0 }\n          ],\n          effects: [\n            makeEffect(EffectDef.Type.Heal, 5, 0)\n          ]\n        },\n        substs: [\n          { path: 'aspects[0].amount', type: 'gaussian', mean: 20, sd: 2, min: 0, max: 25 },\n          { path: 'aspects[1].amount', type: 'gaussian', mean: 12, sd: 2, min: 0, max: 15 },\n        ]\n      })\n    }\n  };\n}\n","import { Terrain } from 'common/data';\n\nexport type TerrainDef = Pick<Terrain, Exclude<keyof Terrain, 'id' | 'name'>>;\n\nexport const makeTerrains = (): Record<string, TerrainDef> => ({\n  'water': {\n    texture: { type: 'liquid', tex: 'sprites/terrains/water', offset: 16, time: 5000 },\n    color: '235c7c',\n    liquid: true,\n    speed: -5,\n  },\n  'lava': {\n    texture: { type: 'liquid', tex: 'sprites/terrains/lava', offset: 16, time: 15000 },\n    color: '8b1408',\n    liquid: true,\n    speed: -20,\n    damage: 10,\n  },\n  'mud': {\n    texture: { type: 'liquid', tex: 'sprites/terrains/mud', offset: 8, time: 5000 },\n    color: '6d584b',\n    speed: -10,\n    liquid: true,\n  },\n\n  'grass': {\n    texture: {\n      type: 'random',\n      texs: ['sprites/terrains/grass-1', 'sprites/terrains/grass-2', 'sprites/terrains/grass-3'],\n      tint: '00ff00'\n    },\n    color: '51a01e',\n  },\n  'grass-deep': {\n    texture: {\n      type: 'random',\n      texs: ['sprites/terrains/grass-1', 'sprites/terrains/grass-2', 'sprites/terrains/grass-3'],\n      tint: '00cc00'\n    },\n    color: '316112',\n  },\n  'grass-light': {\n    texture: {\n      type: 'random',\n      texs: ['sprites/terrains/grass-1', 'sprites/terrains/grass-2', 'sprites/terrains/grass-3'],\n      tint: 'aaffaa'\n    },\n    color: '487f61',\n  },\n\n  'soil': {\n    texture: {\n      type: 'random',\n      texs: ['sprites/terrains/soil-1', 'sprites/terrains/soil-2', 'sprites/terrains/soil-3'],\n    },\n    color: '846b5c',\n  },\n  'stone': {\n    texture: {\n      type: 'random',\n      texs: ['sprites/terrains/stone-1', 'sprites/terrains/stone-2', 'sprites/terrains/stone-3'],\n      tint: '404040'\n    },\n    color: '514845',\n  },\n  'sand': {\n    texture: {\n      type: 'random',\n      texs: ['sprites/terrains/sand-1', 'sprites/terrains/sand-2', 'sprites/terrains/sand-3'],\n    },\n    color: 'e2bf90',\n  },\n  'ice': {\n    texture: 'sprites/terrains/ice',\n    color: 'aad0e7',\n  },\n  'snow': {\n    texture: 'sprites/terrains/snow',\n    color: 'e0e9ee',\n  },\n});","import { loadDataLib, Element } from 'common/data';\nimport { generateName } from 'common/markov';\nimport { Elements, ElementDef } from 'data/elements';\nimport { makeObjects } from 'data/objects';\nimport { makeRecipes } from 'data/recipes';\nimport { makeBerryBush, makeBush, makeFlower, NumBerryTypes, NumFlowerTypes } from 'data/template';\nimport { makeTerrains } from 'data/terrains';\nimport { fromPairs } from 'lodash';\nimport { create as createRand } from 'random-seed';\nimport { randomColors, randomElementPair } from 'worker/generation/utils';\nimport { ProgressReporter } from 'worker/generation/ProgressReporter';\n\nconst NumFlowers = 16 / NumFlowerTypes;\nconst NumBerries = 16 / NumBerryTypes;\n\nexport function generateLibrary(seed: string, report: ProgressReporter) {\n  const random = createRand(seed);\n  report('generating game data...', 0);\n\n  const terrains = makeTerrains();\n  const objects = makeObjects();\n  const recipes = makeRecipes();\n\n  const randomElementState: any[] = [];\n  const flowerColors = randomColors(random, NumFlowers * NumFlowerTypes,\n    { type: 'uniform', min: 0.5, max: 1 },\n    { type: 'uniform', min: 0.8, max: 1 }\n  );\n  for (let type = 1; type <= NumFlowerTypes; type++) {\n    for (let i = 0; i < NumFlowers; i++) {\n      objects[`flower-${type}${i}`] = makeFlower(\n        generateName(5, 10, random.random),\n        type, flowerColors.pop()!.toString(16),\n        randomElementPair(random, randomElementState)\n      );\n    }\n  }\n\n  const berryColors = randomColors(random, NumBerries * NumBerryTypes,\n    { type: 'uniform', min: 0.3, max: 1 },\n    { type: 'uniform', min: 0.7, max: 1 }\n  );\n  for (let type = 1; type <= NumBerryTypes; type++) {\n    for (let i = 0; i < NumBerries; i++) {\n      objects[`berrybush-${type}${i}-depleted`] = makeBush();\n      objects[`berrybush-${type}${i}`] = makeBerryBush(\n        generateName(5, 10, random.random),\n        `berrybush-${type}${i}-depleted`,\n        type, berryColors.pop()!.toString(16),\n        randomElementPair(random, randomElementState)\n      );\n    }\n  }\n\n  const elemColors = randomColors(random, Elements.length);\n  const elements: Record<ElementDef.Type, Element> = fromPairs(\n    Elements.map(({ tier, name }): [string, Element] => {\n      const fissionThreshold = random.random() * 6 + tier * 8;\n      const fissionRate = 0.1 + 0.1 * (tier + 1) * random.random();\n      const fusionThreshold = 10 + random.random() * 8 + tier * 10;\n      const fusionRate = 0.2 + 0.1 * (ElementDef.MaxTier - tier + 1) * (random.random() + 1);\n      const color = elemColors.pop()!.toString(16);\n\n      return [name, {\n        fissionThreshold: { type: 'gaussian', mean: fissionThreshold, sd: tier + 1, max: 8 * (tier + 1) },\n        fusionThreshold: { type: 'gaussian', mean: fusionThreshold, sd: 2 * (tier + 1), min: 10 * tier },\n        fissionRate: { type: 'gaussian', mean: fissionRate, sd: 0.05, min: 0, max: 0.8 },\n        fusionRate: { type: 'gaussian', mean: fusionRate, sd: 0.05, min: 0, max: 0.8 },\n        color\n      }];\n    }\n    )) as any;\n\n  return loadDataLib(terrains, objects, recipes, elements);\n}","import { EntityProps } from 'common/data/props';\n\nexport const InitialPlayer = (): EntityProps => ({\n  id: 1,\n  type: 'player',\n  age: 0,\n  traits: {\n    'spatial': {\n      pos: [0, 0]\n    }\n  }\n});","import { GameSave } from 'common/data';\nimport { generateBiomes } from 'worker/generation/biomeGen';\nimport { GameData } from 'worker/generation/data';\nimport { decorateMap } from 'worker/generation/decoration';\nimport { generateFeatures } from 'worker/generation/featureGen';\nimport { generateLibrary } from 'worker/generation/libraryGen';\nimport { generateProps } from 'worker/generation/propsGen';\nimport { ProgressReporter } from 'worker/generation/ProgressReporter';\n\nexport function generate(\n  width: number, height: number, seed: string,\n  report: ProgressReporter = () => { }\n) {\n  const library = generateLibrary(seed, report);\n\n  const data = new GameData(width, height, seed, library);\n  generateBiomes(data, report);\n  generateFeatures(data, report);\n  decorateMap(data, report);\n  generateProps(data, report);\n  report('done!', 1);\n  const mapData = data.finalizeMap();\n\n  return new GameSave('', library, mapData, data.entities, data.game);\n}\n","import { InitialPlayer } from 'data/player';\nimport { GameData } from 'worker/generation/data';\nimport { ProgressReporter } from 'worker/generation/ProgressReporter';\n\nexport function generateProps(data: GameData, report: ProgressReporter) {\n  report('generating game data...', 0);\n  data.map.seed = data.seed;\n\n  const player = InitialPlayer();\n  player.traits.spatial.pos = data.map.spawn;\n  data.entities.push(player);\n\n  data.game.nextEntityId = 2;\n}","import { generate } from 'worker/generation';\n\nexport default function () {\n  onmessage = ev => {\n    switch (ev.data.action) {\n      case 'generate': {\n        const { width, height, seed } = ev.data;\n        const gameSave = generate(width, height, seed, (message, progress) => {\n          postMessage({ action: 'progress', message, progress });\n        });\n        postMessage({ action: 'completed', save: gameSave.save() });\n      } break;\n\n      default:\n        console.error('unknown message', ev.data);\n    }\n  };\n}","import { App } from 'app';\nimport { Container } from 'pixi.js';\n\nexport abstract class GameState {\n  constructor(public readonly app: App) {\n  }\n\n  public abstract get name(): string;\n\n  public readonly root = new Container();\n\n  public async enter() { }\n  public async pause() { }\n  public async resume() { }\n  public async leave() { }\n\n  public update(dt: number) { }\n  public layout() { }\n}","import { UIScaleFactor } from 'app';\nimport { LayoutView } from 'app/components';\nimport { mesh, Container, Point, Texture } from 'pixi.js';\n\nexport class Button extends Container implements LayoutView {\n  public static readonly Clicked = 'button.clicked';\n\n  public readonly content = new Container();\n  private texNormal = Texture.fromFrame('sprites/ui/button-normal');\n  private texPressed = Texture.fromFrame('sprites/ui/button-pressed');\n\n  private plane = new mesh.NineSlicePlane(this.texNormal, 6, 6, 6, 6);\n  private isPressed = false;\n  private updateState(pressed: boolean) {\n    if (!this._isEnabled) pressed = false;\n    this.isPressed = pressed;\n    this.plane.texture = pressed ? this.texPressed : this.texNormal;\n  }\n\n  private _contentWidth = 0;\n  private _contentHeight = 0;\n  public get contentWidth() { return this._contentWidth; }\n  public get contentHeight() { return this._contentHeight; }\n\n  private _isEnabled = true;\n  public get isEnabled() { return this._isEnabled; }\n  public set isEnabled(value: boolean) {\n    this._isEnabled = value;\n    this.updateState(this.isPressed);\n    if (!value) {\n      this.alpha = 0.5;\n    } else {\n      this.alpha = 1;\n    }\n  }\n\n  constructor() {\n    super();\n    this.addChild(this.plane);\n    this.addChild(this.content);\n    this.plane.scale = new Point(UIScaleFactor, UIScaleFactor);\n    this.interactive = true;\n    this.buttonMode = true;\n\n    this.on('pointerdown', () => this.updateState(true));\n    this.on('pointerupoutside', () => this.updateState(false));\n    this.on('pointerup', () => {\n      if (this._isEnabled && this.isPressed)\n        this.emit(Button.Clicked);\n      this.updateState(false);\n    });\n  }\n\n  public layout(width: number, height: number) {\n    this.plane.x = 0;\n    this.plane.y = 0;\n    this.plane.width = width / UIScaleFactor;\n    this.plane.height = height / UIScaleFactor;\n\n    if (this.isPressed) {\n      this.content.x = UIScaleFactor;\n      this.content.y = UIScaleFactor;\n      this._contentWidth = width - UIScaleFactor;\n      this._contentHeight = height - UIScaleFactor;\n    } else {\n      this.content.x = 0;\n      this.content.y = 0;\n      this._contentWidth = width - UIScaleFactor;\n      this._contentHeight = height - UIScaleFactor;\n    }\n  }\n}","import { UIScaleFactor } from 'app';\nimport { LayoutView } from 'app/components';\nimport { Container, Point, Text as PixiText, TextStyleOptions } from 'pixi.js';\n\nexport class Text extends Container implements LayoutView {\n  private _text: PixiText;\n\n  public set text(value: string) { this._text.text = value; }\n  public get style() { return this._text.style; }\n  public get contentWidth() { return this._text.width; }\n  public get contentHeight() { return this._text.height; }\n\n  constructor(text?: string, style?: TextStyleOptions & { scale?: number }) {\n    super();\n    this._text = new PixiText(text, {\n      fontFamily: 'Unibody8Pro',\n      fontSize: 8,\n      fill: 'white',\n      align: 'center',\n      ...style\n    } as TextStyleOptions);\n    this.addChild(this._text);\n\n    const scale = (style && style.scale || 1) * UIScaleFactor;\n    this._text.scale = new Point(scale, scale);\n  }\n\n  public layout(width: number, height: number) {\n    switch (this._text.style.align) {\n      case 'left':\n        this._text.x = 0;\n        break;\n      case 'center':\n        this._text.x = (width - this._text.width) / 2;\n        break;\n      case 'right':\n        this._text.x = width - this._text.width;\n        break;\n    }\n    this._text.y = (height - this._text.height) / 2;\n  }\n}\n","import { App, UIScaleFactor } from 'app';\nimport { LayoutView } from 'app/components';\nimport { mesh, Container, Point, RenderTexture, Sprite, Texture } from 'pixi.js';\n\nexport class Panel extends Container implements LayoutView {\n  public readonly content = new Container();\n\n  private panelBg = new Sprite(Texture.WHITE);\n  private panelMask = new mesh.NineSlicePlane(Texture.fromFrame('sprites/ui/panel-mask'), 6, 6, 6, 6);\n  private maskTex = RenderTexture.create(0, 0);\n  private panelBorder = new mesh.NineSlicePlane(Texture.fromFrame('sprites/ui/panel'), 6, 6, 6, 6);\n\n  private _contentWidth = 0;\n  private _contentHeight = 0;\n  public get contentWidth() { return this._contentWidth; }\n  public get contentHeight() { return this._contentHeight; }\n\n  constructor(private readonly app: App) {\n    super();\n    this.panelMask.scale = new Point(UIScaleFactor, UIScaleFactor);\n    this.panelBorder.scale = new Point(UIScaleFactor, UIScaleFactor);\n    this.panelBg.tint = 0x404040;\n    const mask = new Sprite(this.maskTex);\n\n    this.content.addChild(this.panelBg);\n    this.addChild(this.content);\n    this.content.mask = mask;\n    this.addChild(this.panelBorder);\n    this.addChild(mask);\n  }\n\n  public layout(width: number, height: number) {\n    this.panelBorder.width = width / UIScaleFactor;\n    this.panelBorder.height = height / UIScaleFactor;\n    this.panelBg.width = width;\n    this.panelBg.height = height;\n    this.panelMask.width = this.panelBorder.width;\n    this.panelMask.height = this.panelBorder.height;\n\n    if (this._contentWidth !== width || this._contentHeight !== height || !this.maskTex) {\n      this.content.x = 0;\n      this.content.y = 0;\n      this._contentWidth = width;\n      this._contentHeight = height;\n\n      this.maskTex.resize(width, height);\n      this.app.renderer.render(this.panelMask, this.maskTex);\n    }\n  }\n}","import { Button } from 'app/components/Button';\nimport { Text } from 'app/components/Text';\nimport { TextStyleOptions } from 'pixi.js';\n\nexport class TextButton extends Button {\n  private readonly text: Text;\n\n  constructor(text?: string, style?: TextStyleOptions & { scale?: number }) {\n    super();\n    this.text = new Text(text, style);\n    this.content.addChild(this.text);\n  }\n\n  public layout(width: number, height: number) {\n    super.layout(width, height);\n    this.text.x = 0;\n    this.text.y = 0;\n    this.text.layout(this.contentWidth, this.contentHeight);\n  }\n}","import {\n  glCore, utils, BaseTexture, CanvasRenderer, CanvasSpriteRenderer, ObjectRenderer,\n  Shader, Sprite, TextureUvs, WebGLRenderer\n} from 'pixi.js';\n\nexport interface TextureSprite extends Sprite {\n  outline: boolean;\n  offset?: [number, number];\n  renderTranslation?: [number, number];\n}\n\nconst OutlineWidth = 2;\nconst BatchSize = 2000;\nconst VAOBufferSize = 0x80000;\n\nconst indices = new Uint16Array(BatchSize * 6);\nfor (let i = 0; i < BatchSize; i++) {\n  indices[i * 6 + 0] = i * 4 + 0;\n  indices[i * 6 + 1] = i * 4 + 1;\n  indices[i * 6 + 2] = i * 4 + 2;\n  indices[i * 6 + 3] = i * 4 + 0;\n  indices[i * 6 + 4] = i * 4 + 2;\n  indices[i * 6 + 5] = i * 4 + 3;\n}\n\nexport class TextureSpriteRenderer extends ObjectRenderer {\n  public static readonly Name = 'tex-sprite';\n\n  private shader!: Shader;\n\n  private currentTex: BaseTexture | null = null;\n  private currentBlendMode: number = -1;\n  private batchSize = 0;\n  private batch: TextureSprite[] = [];\n  private vao!: glCore.VertexArrayObject;\n  private vb!: glCore.GLBuffer;\n  private ib!: glCore.GLBuffer;\n  private vaoBuf = new ArrayBuffer(VAOBufferSize);\n  private f32 = new Float32Array(this.vaoBuf);\n  private u32 = new Uint32Array(this.vaoBuf);\n\n  onContextChange() {\n    const gl = this.renderer.gl;\n    this.shader = new SpriteShader(gl);\n\n    this.vb = glCore.GLBuffer.createVertexBuffer(gl, null, gl.STREAM_DRAW);\n    this.ib = glCore.GLBuffer.createIndexBuffer(gl, indices, gl.STATIC_DRAW);\n\n    const vaoSize = 12 * 4;\n    this.vao = this.renderer.createVao()\n      .addIndex(this.ib)\n      .addAttribute(this.vb, this.shader.attributes.aVertexPosition, gl.FLOAT, false, vaoSize, 0)\n      .addAttribute(this.vb, this.shader.attributes.aTextureCoord, gl.UNSIGNED_SHORT, true, vaoSize, 2 * 4)\n      .addAttribute(this.vb, this.shader.attributes.aColor, gl.UNSIGNED_BYTE, true, vaoSize, 3 * 4)\n      .addAttribute(this.vb, this.shader.attributes.aClamp, gl.FLOAT, true, vaoSize, 4 * 4)\n      .addAttribute(this.vb, this.shader.attributes.aOffset, gl.FLOAT, true, vaoSize, 8 * 4)\n      .addAttribute(this.vb, this.shader.attributes.aThickness, gl.FLOAT, true, vaoSize, 10 * 4);\n  }\n\n  render(sprite: TextureSprite) {\n    if (!sprite.texture.valid) return;\n\n    if (this.batchSize >= BatchSize ||\n      sprite.texture.baseTexture !== this.currentTex ||\n      sprite.blendMode !== this.currentBlendMode\n    )\n      this.flush();\n\n    this.batch[this.batchSize++] = sprite;\n    this.currentTex = sprite.texture.baseTexture;\n    this.currentBlendMode = sprite.blendMode;\n  }\n\n  start() {\n    this.renderer.bindShader(this.shader);\n    this.renderer.bindVao(this.vao);\n    this.vb.bind();\n  }\n\n  stop() {\n    this.flush();\n  }\n\n  flush() {\n    if (this.batchSize === 0) return;\n    const renderer = this.renderer;\n    renderer.bindTexture(this.currentTex!, 0, true);\n\n    renderer.state && renderer.state.setBlendMode(this.currentBlendMode!);\n\n    const f32 = this.f32, u32 = this.u32;\n    let p = 0;\n    for (let i = 0; i < this.batchSize; i++) {\n      const sprite = this.batch[i];\n      const uvs = ((sprite.texture as any)._uvs as TextureUvs).uvsUint32;\n      const vd = sprite.vertexData;\n\n      const alpha = Math.min(sprite.worldAlpha, 1.0);\n      let tint = (sprite as any)._tint;\n      tint = (tint >> 16) + (tint & 0xff00) + ((tint & 0xff) << 16);\n      const argb = alpha < 1.0 && this.currentTex!.premultipliedAlpha\n        ? utils.premultiplyTint(tint, alpha) : tint + (alpha * 255 << 24);\n      const offset = sprite.offset || [0, 0];\n\n      const frame = sprite.texture.frame;\n      const tr = sprite.transform.worldTransform;\n      const clampX = frame.x / this.currentTex!.width;\n      const clampY = frame.y / this.currentTex!.height;\n      const clampZ = (frame.x + frame.width) / this.currentTex!.width;\n      const clampW = (frame.y + frame.height) / this.currentTex!.height;\n      const offsetX = offset[0] / this.currentTex!.width;\n      const offsetY = offset[1] / this.currentTex!.height;\n      const thicknessX = sprite.outline ? OutlineWidth / Math.sqrt(tr.a * tr.a + tr.c * tr.c) / this.currentTex!.realWidth : 0;\n      const thicknessY = sprite.outline ? OutlineWidth / Math.sqrt(tr.b * tr.b + tr.d * tr.d) / this.currentTex!.realHeight : 0;\n      const trX = sprite.renderTranslation ? Math.round(sprite.renderTranslation[0]) : 0;\n      const trY = sprite.renderTranslation ? Math.round(sprite.renderTranslation[1]) : 0;\n\n      f32[p++] = vd[0] + trX; f32[p++] = vd[1] + trY;\n      u32[p++] = uvs[0];\n      u32[p++] = argb;\n      f32[p++] = clampX; f32[p++] = clampY; f32[p++] = clampZ; f32[p++] = clampW;\n      f32[p++] = offsetX; f32[p++] = offsetY;\n      f32[p++] = thicknessX; f32[p++] = thicknessY;\n\n      f32[p++] = vd[2] + trX; f32[p++] = vd[3] + trY;\n      u32[p++] = uvs[1];\n      u32[p++] = argb;\n      f32[p++] = clampX; f32[p++] = clampY; f32[p++] = clampZ; f32[p++] = clampW;\n      f32[p++] = offsetX; f32[p++] = offsetY;\n      f32[p++] = thicknessX; f32[p++] = thicknessY;\n\n      f32[p++] = vd[4] + trX; f32[p++] = vd[5] + trY;\n      u32[p++] = uvs[2];\n      u32[p++] = argb;\n      f32[p++] = clampX; f32[p++] = clampY; f32[p++] = clampZ; f32[p++] = clampW;\n      f32[p++] = offsetX; f32[p++] = offsetY;\n      f32[p++] = thicknessX; f32[p++] = thicknessY;\n\n      f32[p++] = vd[6] + trX; f32[p++] = vd[7] + trY;\n      u32[p++] = uvs[3];\n      u32[p++] = argb;\n      f32[p++] = clampX; f32[p++] = clampY; f32[p++] = clampZ; f32[p++] = clampW;\n      f32[p++] = offsetX; f32[p++] = offsetY;\n      f32[p++] = thicknessX; f32[p++] = thicknessY;\n    }\n    this.vb.upload(this.vaoBuf.slice(0, p * 4 * 2), 0, true);\n    const gl = this.renderer.gl;\n    gl.drawElements(gl.TRIANGLES, this.batchSize * 6, gl.UNSIGNED_SHORT, 0);\n\n    this.batchSize = 0;\n    this.currentTex = null;\n    this.currentBlendMode = -1;\n  }\n}\n\nclass SpriteShader extends Shader {\n  constructor(gl: WebGLRenderingContext) {\n    super(gl, `\nattribute vec2 aVertexPosition;\nattribute vec2 aTextureCoord;\nattribute vec4 aColor;\nattribute vec4 aClamp;\nattribute vec4 aOffset;\nattribute vec4 aThickness;\n\nuniform mat3 projectionMatrix;\n\nvarying vec2 vTextureCoord;\nvarying vec4 vColor;\nvarying vec4 vClamp;\nvarying vec4 vOffset;\nvarying vec4 vThickness;\n\nvoid main(void)\n{\n    vec4 v = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\n    gl_Position = v;\n    vTextureCoord = aTextureCoord;\n    vColor = aColor;\n    vClamp = aClamp;\n    vOffset = aOffset;\n    vThickness = aThickness;\n}`, `\nvarying vec2 vTextureCoord;\nvarying vec4 vColor;\nvarying vec4 vClamp;\nvarying vec4 vOffset;\nvarying vec4 vThickness;\n\nuniform sampler2D uSampler;\n\nfloat sampleAlpha(vec2 coords, float x, float y) {\n  return texture2D(uSampler, clamp(coords + vec2(x, y), vClamp.xy, vClamp.zw)).a;\n}\n\nvoid main(void)\n{\n    vec2 coords = mod(vTextureCoord - vClamp.xy + vOffset.xy, vClamp.zw - vClamp.xy) + vClamp.xy;\n    vec4 sample = texture2D(uSampler, coords);\n    float a = sample.a;\n    a = max(a, sampleAlpha(coords, -vThickness.x, 0.0));\n    a = max(a, sampleAlpha(coords, vThickness.x, 0.0));\n    a = max(a, sampleAlpha(coords, 0.0, -vThickness.y));\n    a = max(a, sampleAlpha(coords, 0.0, vThickness.y));\n    a = max(a, sampleAlpha(coords, -vThickness.x, -vThickness.y));\n    a = max(a, sampleAlpha(coords, vThickness.x, -vThickness.y));\n    a = max(a, sampleAlpha(coords, -vThickness.x, vThickness.y));\n    a = max(a, sampleAlpha(coords, vThickness.x, vThickness.y));\n    gl_FragColor = vec4((sample.rgb + vec3(0.2) * (1.0 - sample.a)) * a, a) * vColor;\n}\n`);\n  }\n}\n\nWebGLRenderer.registerPlugin(TextureSpriteRenderer.Name, TextureSpriteRenderer);\nCanvasRenderer.registerPlugin(TextureSpriteRenderer.Name, CanvasSpriteRenderer as any);","import { TextureSprite as TexSprite, TextureSpriteRenderer } from 'app/components/TextureSpriteRenderer';\nimport { TextureDef } from 'common/data';\nimport { Sprite, Texture } from 'pixi.js';\n\nfunction hashKey(key: number) {\n  // https://stackoverflow.com/a/12996028\n  key = ((key >> 16) ^ key) * 0x45d9f3b;\n  key = ((key >> 16) ^ key) * 0x45d9f3b;\n  key = (key >> 16) ^ key;\n  return key;\n}\n\nexport class TextureSprite extends Sprite implements TexSprite {\n  public outline: boolean = false;\n  public offset?: [number, number];\n  public renderTranslation?: [number, number];\n  public clip?: [number, number];\n\n  public animName: string = '';\n  public still: boolean = true;\n\n  private actionAnimName: string = '';\n  private actionEndTime = -1;\n\n  private overlay?: TextureSprite;\n  private textureDef?: Exclude<TextureDef, string>;\n  private currentTex = Texture.EMPTY;\n\n  constructor(texture?: Texture) {\n    super(texture);\n    this.pluginName = TextureSpriteRenderer.Name;\n\n    if (texture)\n      this.currentTex = texture;\n  }\n\n  private updateTex() {\n    let tex = this.currentTex;\n    if (this.clip) {\n      tex = tex.clone();\n      const frame = tex.frame.clone();\n      frame.width -= Math.round(this.clip[0] * frame.width);\n      frame.height -= Math.round(this.clip[1] * frame.height);\n      tex.frame = frame;\n    }\n    if (this._texture !== tex) {\n      this.texture = tex;\n    }\n  }\n\n  public clearTexture() {\n    this.tint = 0xffffff;\n    this.overlay && this.removeChild(this.overlay);\n    this.overlay = undefined;\n    this.currentTex = Texture.EMPTY;\n    this.textureDef = undefined;\n    this.offset = undefined;\n    this.updateTex();\n  }\n\n  public setTexture(textureDef: TextureDef, key: number = 0) {\n    key = hashKey(key);\n    this.clearTexture();\n\n    if (typeof textureDef === 'string') {\n      this.textureDef = undefined;\n      this.currentTex = Texture.fromFrame(textureDef);\n    } else {\n      this.textureDef = textureDef;\n      switch (textureDef.type) {\n        case 'single':\n          this.currentTex = Texture.fromFrame(textureDef.tex);\n          if (textureDef.tint) this.tint = parseInt(textureDef.tint, 16);\n          break;\n        case 'random':\n          this.currentTex = Texture.fromFrame(textureDef.texs[key % textureDef.texs.length]);\n          if (textureDef.tint) this.tint = parseInt(textureDef.tint, 16);\n          break;\n        case 'composite': {\n          this.setTexture(textureDef.base, key);\n          const overlay = new TextureSprite();\n          overlay.anchor.copy(this.anchor);\n          overlay.setTexture(textureDef.overlay, key);\n          this.overlay = overlay;\n          this.addChild(overlay);\n        } break;\n        case 'animation':\n          this.frame = -1;\n          this.currentTex = Texture.EMPTY;\n          break;\n        case 'liquid':\n          this.currentTex = Texture.fromFrame(textureDef.tex);\n          if (textureDef.tint) this.tint = parseInt(textureDef.tint, 16);\n      }\n    }\n    this.updateTex();\n  }\n\n  public playActionAnim(name: string) {\n    if (!this.textureDef || this.textureDef.type !== 'animation' || !(name in this.textureDef.anims)) {\n      console.log('animation: no such name: ' + name);\n      return;\n    }\n    if (this.actionAnimName !== name) {\n      const animation = this.textureDef.anims[name];\n      this.frame = 0;\n      this.actionAnimName = name;\n      this.actionEndTime = this.elapsed + 1000 / animation.fps * animation.numFrames;\n    }\n  }\n\n  public stopActionAnim(name: string) {\n    if (this.actionAnimName === name) {\n      this.frame = 0;\n      this.actionAnimName = '';\n      this.actionEndTime = -1;\n    }\n  }\n\n  private frame = -1;\n  private elapsed = 0;\n  public update(elapsed: number) {\n    this.elapsed = elapsed;\n    if (this.textureDef) {\n      if (this.textureDef.type === 'animation' && (this.animName || this.actionAnimName)) {\n        const animation = this.textureDef.anims[this.actionAnimName || this.animName];\n        if (animation) {\n          if (this.still && !this.actionAnimName) {\n            this.frame = -1;\n          } else {\n            const frameDuration = 1000 / animation.fps;\n            this.frame = Math.floor(elapsed / frameDuration) % animation.numFrames;\n          }\n          this.currentTex = Texture.fromFrame(`${animation.frameId}-${this.frame + 1}`);\n        } else {\n          console.log('animation: no such name: ' + (this.actionAnimName || this.animName));\n        }\n        if (this.actionEndTime < elapsed) {\n          this.actionAnimName = '';\n          this.actionEndTime = -1;\n        }\n      } else if (this.textureDef.type === 'liquid') {\n        let d = (elapsed % this.textureDef.time) / this.textureDef.time;\n        d = Math.sin(d * Math.PI * 2);\n        const offset = this.textureDef.offset * d;\n        this.offset = [offset, offset];\n      }\n    }\n\n    this.updateTex();\n\n    if (this.overlay) {\n      this.overlay.clip = this.clip;\n      this.overlay.update(elapsed);\n    }\n  }\n\n  _onAnchorUpdate() {\n    (Sprite.prototype as any)._onAnchorUpdate.call(this);\n    this.overlay && this.overlay.anchor.copy(this._anchor);\n  }\n}","import { UIScaleFactor } from 'app';\nimport { LayoutView } from 'app/components';\nimport MultiStyleText, { ExtendedTextStyle, TextStyleSet } from 'pixi-multistyle-text';\nimport { Container, Point } from 'pixi.js';\n\nexport class StyledText extends Container implements LayoutView {\n  private _text: MultiStyleText;\n\n  public set text(value: string) { this._text.text = value; }\n  public get style() { return this._text.style; }\n  public get contentWidth() { return this._text.width; }\n  public get contentHeight() { return this._text.height; }\n\n  constructor(text: string, styles: TextStyleSet, scale: number = 1) {\n    super();\n    const defaultStyle = {\n      fontFamily: 'Unibody8Pro',\n      fontSize: 8,\n      fill: 'white',\n      align: 'center',\n      ...(styles.default || {})\n    } as ExtendedTextStyle;\n\n    this._text = new MultiStyleText(text, { ...styles, default: defaultStyle });\n    this.addChild(this._text);\n\n    this._text.scale = new Point(scale * UIScaleFactor, scale * UIScaleFactor);\n  }\n\n  public layout(width: number, height: number) {\n    switch (this._text.style.align) {\n      case 'left':\n        this._text.x = 0;\n        break;\n      case 'center':\n        this._text.x = (width - this._text.width) / 2;\n        break;\n      case 'right':\n        this._text.x = width - this._text.width;\n        break;\n    }\n    this._text.y = (height - this._text.height) / 2;\n  }\n}\n","import { App } from 'app';\nimport { Panel } from 'app/components';\nimport { StyledText } from 'app/components/StyledText';\nimport { TextStyleSet } from 'pixi-multistyle-text';\n\nexport class TextToolTip extends Panel {\n  private readonly textView: StyledText;\n\n  constructor(app: App, text: string, styles: TextStyleSet, scale: number = 1) {\n    super(app);\n    this.textView = new StyledText(text, styles, scale);\n    this.addChild(this.textView);\n  }\n\n  public set text(value: string) {\n    this.textView.text = value;\n  }\n\n  layout() {\n    const width = this.textView.contentWidth;\n    const height = this.textView.contentHeight;\n    this.textView.position.set(16, 16);\n    this.textView.layout(width, height);\n    super.layout(width + 32, height + 32);\n  }\n}","import { App } from 'app';\nimport { TextToolTip } from 'app/components/TextToolTip';\nimport { Item } from 'common/data';\nimport { startCase } from 'lodash';\n\nexport class ItemToolTip extends TextToolTip {\n  private item: Item;\n\n  constructor(app: App, item: Item) {\n    super(app, '', {\n      default: { align: 'left' },\n      name: { fontWeight: 'bold' },\n      type: { fill: '#d0d0d0' },\n      desc: { fontStyle: 'italic' },\n      aspect: { fill: '#d0d0d0' },\n      elem: { fontWeight: 'bold' },\n      effect: { fill: '#d0d0d0' },\n    });\n    this.item = item;\n    this.updateView();\n  }\n\n  public setItem(item: Item) {\n    if (this.item !== item) {\n      this.item = item;\n      this.updateView();\n    }\n  }\n\n  private updateView() {\n    const texts: string[] = [\n      `<name>${this.item.name}</name>`,\n      `<type>${startCase(this.item.type)}</type>`\n    ];\n\n    if (this.item.description)\n      texts.push(`<desc>${this.item.description}</desc>`);\n\n    if (this.item.aspects) {\n      texts.push('');\n      let sum = 0;\n      for (const { amount } of this.item.aspects)\n        sum += amount;\n      for (const { element, amount } of this.item.aspects.slice().sort((a, b) => b.amount - a.amount)) {\n        const percentage = amount / sum * 100;\n        if (percentage < 10) continue;\n        texts.push(`<aspect>${percentage.toFixed(0)}% <elem>${element}</elem></aspect>`);\n      }\n    }\n    if (this.item.effects) {\n      texts.push('');\n      for (const effect of this.item.effects) {\n        texts.push(`<effect>\\u2022 ${effect.description}</effect>`);\n      }\n    }\n\n    this.text = texts.join('\\n');\n  }\n}","import { Message } from 'app/game/messages';\nimport { ItemSlot } from 'common/data';\n\nexport class InventorySwap implements Message {\n  public readonly type = 'inventory-swap';\n\n  constructor(\n    public readonly slotA: ItemSlot,\n    public readonly slotB: ItemSlot\n  ) { }\n}","import { Message } from 'app/game/messages';\nimport { ItemSlot } from 'common/data';\n\nexport class InventoryUpdated implements Message {\n  public readonly type = 'inventory-updated';\n\n  constructor(\n    public readonly slot: ItemSlot\n  ) { }\n}","import { TileObjectSprite } from 'app/game/interfaces';\nimport { Message } from 'app/game/messages';\n\nexport abstract class PlayFX<Effect extends PlayFX.Type, Target> implements Message {\n  public readonly type = 'play-effect';\n\n  constructor(\n    public readonly effect: PlayFX.Type,\n    public readonly target: Target\n  ) { }\n}\n\nexport namespace PlayFX {\n  export enum Type {\n    Shake = 'shake',\n  }\n\n  export class Shake extends PlayFX<Type.Shake, TileObjectSprite | undefined>{ }\n}","import { Message } from 'app/game/messages';\nimport { vec2 } from 'gl-matrix';\n\nexport class ShowParticles implements Message {\n  public readonly type = 'show-particles';\n\n  constructor(\n    public readonly particleType: ShowParticles.Type,\n    public readonly coords: vec2,\n    public readonly numParticles: number,\n    public readonly color: number,\n    public readonly z = 0\n  ) { }\n}\n\nexport namespace ShowParticles {\n  export enum Type {\n    Splash = 'splash',\n    Float = 'float'\n  }\n\n  export function splash(coords: vec2, numParticles: number, color: number, z = 0) {\n    return new ShowParticles(Type.Splash, coords, numParticles, color, z);\n  }\n  export function float(coords: vec2, numParticles: number, color: number, z = 0) {\n    return new ShowParticles(Type.Float, coords, numParticles, color, z);\n  }\n}","import { Message } from 'app/game/messages';\nimport { Effect } from 'common/data';\n\nexport class ApplyEffects implements Message {\n  public readonly type = 'inventory-swap';\n\n  constructor(\n    public readonly entityId: number,\n    public readonly effects: Effect[]\n  ) { }\n}","import { Message } from 'app/game/messages';\n\nexport class UpdateHP implements Message {\n  public readonly type = 'update-hp';\n\n  constructor(\n    public readonly entityId: number,\n    public readonly hpDiff: number\n  ) { }\n}","import { TextureSprite } from 'app/components';\nimport { ItemToolTip } from 'app/components/ItemToolTip';\nimport { Game } from 'app/game';\nimport { InventorySwap } from 'app/game/messages';\nimport { ItemSlot } from 'common/data';\nimport { Container, DisplayObject } from 'pixi.js';\n\nexport class SlotView extends Container {\n  public static Size = 56;\n\n  private readonly bg = new TextureSprite();\n  public readonly bgOverlay = new TextureSprite();\n  public readonly fgOverlay = new TextureSprite();\n\n  private readonly obj: TextureSprite;\n  private dragging = false;\n\n  public enabled = true;\n  public showTooltip = true;\n  public alwaysInteractive = false;\n  public get empty() { return !this.slot.item; }\n\n  constructor(private readonly game: Game, public readonly slot: ItemSlot) {\n    super();\n\n    this.bg.setTexture('sprites/ui/inv-slot');\n    this.addChild(this.bg);\n    this.addChild(this.bgOverlay);\n\n    this.obj = new TextureSprite();\n    this.obj.scale.set(2, 2);\n    this.obj.anchor.set(0.5, 0.5);\n    this.obj.outline = true;\n    this.addChild(this.obj);\n    this.addChild(this.fgOverlay);\n\n    let toolTip: ItemToolTip;\n    this.interactive = true;\n\n    this.game.app.toolTip.add(this, () => {\n      if (this.slot.item && this.showTooltip) {\n        if (!toolTip) toolTip = new ItemToolTip(this.game.app, this.slot.item);\n        else toolTip.setItem(this.slot.item);\n        return toolTip;\n      } else\n        return null;\n    });\n\n    this.on('pointerdown', () => {\n      if (this.enabled && this.slot.item && !this.game.app.dragDrop.active) {\n        this.dragging = true;\n        this.game.app.dragDrop.begin(this.obj).then(this.endDrag);\n        if (toolTip)\n          this.game.app.toolTip.hide(toolTip);\n      }\n    });\n  }\n\n  public updateSlot() {\n    if (this.slot.item) {\n      this.obj.setTexture(this.slot.item.texture);\n      this.obj.visible = true;\n      this.buttonMode = true || this.alwaysInteractive;\n    } else {\n      this.obj.clearTexture();\n      this.obj.visible = false;\n      this.buttonMode = false || this.alwaysInteractive;\n    }\n  }\n\n  public layout() {\n    this.updateSlot();\n    if (!this.dragging) {\n      this.obj.position.set(SlotView.Size / 2, SlotView.Size / 2);\n    }\n  }\n\n  public update(dt: number) {\n    this.obj.update(dt);\n  }\n\n  private endDrag = (target: DisplayObject | null) => {\n    this.dragging = false;\n    this.addChild(this.obj);\n    if (target instanceof SlotView && target !== this && this.enabled && target.enabled) {\n      this.game.dispatch(new InventorySwap(this.slot, target.slot));\n    }\n  }\n}","export interface Trait {\n  readonly type: string;\n}\n\nexport interface TraitType<T extends Trait = Trait, Arg = any> {\n  readonly _mark: T;\n  readonly Type: string;\n  make(arg?: Arg): T;\n  deserialize(data: any): T;\n  serialize(trait: T): any;\n}\n\nexport namespace Trait {\n  export const types = new Map<string, TraitType>();\n}","import { GameSave } from 'common/data';\nimport work from 'webworkify-webpack';\nexport interface ProgressReporter {\n  (message: string | null, progress: number): void;\n}\n\nexport class Generator {\n  private readonly worker: Worker = work(require.resolve('worker'));\n\n  constructor(\n    public readonly width: number,\n    public readonly height: number,\n    public readonly seed = ''\n  ) {\n\n  }\n\n  public async generate(report: ProgressReporter = () => { }) {\n    const save = await new Promise<GameSave>(resolve => {\n      this.worker.onmessage = ev => {\n        if (ev.data.action === 'completed')\n          resolve(GameSave.load(ev.data.save));\n        else if (ev.data.action === 'progress')\n          report(ev.data.message, ev.data.progress);\n      };\n\n      this.worker.postMessage({\n        action: 'generate',\n        width: this.width,\n        height: this.height,\n        seed: this.seed\n      });\n    });\n    this.worker.terminate();\n    return save;\n  }\n}","import { Game } from 'app/game';\nimport { Trait, TraitType } from 'app/game/traits';\n\nexport abstract class Entity {\n  private _game: Game | null;\n  public get game() { return this._game; }\n\n  public readonly id: number;\n  public abstract get type(): string;\n\n  public static types = new Map<string, EntityType>();\n\n  constructor(game: Game, id?: number) {\n    this._game = game;\n    this.id = id || (game.data.props.nextEntityId++);\n  }\n\n  public init() {\n  }\n\n  public delete() {\n    if (!this._game) return;\n    this._game.entities.delete(this);\n    this._game = null;\n  }\n\n  public age: number = 0;\n\n  private _traits = new Map<string, Trait>();\n  public traits = Object.assign(<T extends Trait, Arg>(trait: TraitType<T, Arg>, arg?: Arg) => {\n    let t: T = this._traits.get(trait.Type) as T;\n    if (!t) {\n      t = trait.make(arg);\n      this._traits.set(t.type, t);\n    }\n    return t;\n  }, {\n      get: <T extends Trait>(trait: TraitType<T>) => {\n        return this._traits.get(trait.Type) as T;\n      },\n      set: <T extends Trait>(trait: T) => {\n        this._traits.set(trait.type, trait);\n      },\n      list: () => this._traits.values()\n    });\n}\n\nexport interface EntityType<T extends Entity = Entity> {\n  new(game: Game, id?: number): T;\n  readonly _mark: T;\n  readonly Type: string;\n}\n","import { DisplayTileSize } from 'app';\nimport { vec2 } from 'gl-matrix';\nimport { Container, Graphics, PointLike, Sprite as PIXISprite, Texture, TransformStatic } from 'pixi.js';\n\nexport class Camera extends Container {\n  public offset = vec2.create();\n  public viewWidth = 0;\n  public viewHeight = 0;\n\n  public toMapCoords(pt: PointLike, coords: vec2) {\n    vec2.scaleAndAdd(coords, [\n      (pt.x - Math.floor(this.viewWidth / 2)) / DisplayTileSize,\n      (pt.y - Math.floor(this.viewHeight / 2)) / DisplayTileSize\n    ], this.offset, 1 / DisplayTileSize);\n    return coords;\n  }\n\n  public toCameraPoint(coords: vec2, pt: PointLike, z = 0) {\n    pt.x = Math.floor(coords[0] * DisplayTileSize - this.offset[0]) + Math.floor(this.viewWidth / 2);\n    pt.y = Math.floor((coords[1] - z) * DisplayTileSize - this.offset[1]) + Math.floor(this.viewHeight / 2);\n    return pt;\n  }\n\n  private bg = Object.assign(new PIXISprite(Texture.WHITE), {\n    layer: Camera.Layer.Background,\n    sortOffset: vec2.fromValues(0, 0)\n  });\n\n  constructor() {\n    super();\n    this.bg.tint = 0x202020;\n    this.add(this.bg);\n    this.interactive = true;\n  }\n\n  private nextId = 0;\n  public add(sprite: Camera.Sprite) {\n    sprite.id = this.nextId++;\n    this.addChild(sprite);\n  }\n\n  public layout(width: number, height: number) {\n    this.bg.width = width;\n    this.bg.height = height;\n\n    if (this.viewWidth !== width || this.viewHeight !== height) {\n      this.viewWidth = width;\n      this.viewHeight = height;\n\n      const mask = new Graphics();\n      mask.beginFill(0xffffff);\n      mask.drawRect(this.x, this.y, width, height);\n      mask.endFill();\n      this.mask = mask;\n    }\n    this.sortLayers();\n  }\n\n  private sortLayers() {\n    const children = this.children as Camera.Sprite[];\n    children.sort((a, b) => {\n      const ao = a.sortOffset, bo = b.sortOffset;\n      const { x: ax, y: ay } = (a.transform as TransformStatic).position;\n      const { x: bx, y: by } = (b.transform as TransformStatic).position;\n      let d = 0;\n      if (d === 0) d = a.layer - b.layer;\n      if (d === 0) d = (ay + ao[1] * DisplayTileSize) - (by + bo[1] * DisplayTileSize);\n      if (d === 0) d = (ax + ao[0] * DisplayTileSize) - (bx + bo[0] * DisplayTileSize);\n      if (d === 0) d = a.id! - b.id!;\n      return d;\n    });\n  }\n}\n\nexport namespace Camera {\n  export enum Layer {\n    Background = -1,\n    Terrain = 0,\n    Objects = 1\n  }\n  export interface Sprite extends PIXISprite {\n    id?: number\n    layer: Camera.Layer;\n    sortOffset: vec2;\n  }\n}\n","import { TextureSprite } from 'app/components';\nimport { Trait } from 'app/game/traits';\nimport { Camera } from 'app/game/Camera';\nimport { vec2 } from 'gl-matrix';\nimport { defaults } from 'lodash';\n\nexport interface Spatial extends Trait {\n  readonly type: typeof Spatial.Type;\n  readonly position: vec2;\n  readonly velocity: vec2;\n  readonly scale: vec2;\n  readonly size: vec2;\n  solid: boolean;\n  readonly sprite: Camera.Sprite & TextureSprite;\n}\n\nexport namespace Spatial {\n  export declare const _mark: Spatial;\n  export const Type = 'spatial';\n\n  export function make(): Spatial {\n    return {\n      type: Spatial.Type,\n      position: vec2.fromValues(0, 0),\n      velocity: vec2.fromValues(0, 0),\n      scale: vec2.fromValues(1, 1),\n      size: vec2.fromValues(0.5, 0.5),\n      solid: true,\n      sprite: Object.assign(new TextureSprite(), {\n        layer: Camera.Layer.Objects,\n        sortOffset: vec2.fromValues(0, 0)\n      })\n    };\n  }\n\n  export function serialize(trait: Spatial) {\n    return {\n      pos: [trait.position[0], trait.position[1]],\n      vel: [trait.velocity[0], trait.velocity[1]],\n    };\n  }\n\n  export function deserialize(data: any): Spatial {\n    return defaults({\n      position: data.pos && vec2.fromValues(data.pos[0], data.pos[1]),\n      velocity: data.vel && vec2.fromValues(data.vel[0], data.vel[1])\n    }, make());\n  }\n}\nTrait.types.set(Spatial.Type, Spatial);","import { Trait } from 'app/game/traits';\nimport { ItemSlot } from 'common/data';\nimport { defaults, times } from 'lodash';\n\nexport interface Inventory extends Trait {\n  readonly type: typeof Inventory.Type;\n  readonly slots: ItemSlot[];\n}\n\nexport namespace Inventory {\n  export declare const _mark: Inventory;\n  export const Type = 'inventory';\n\n  export function make(size = 1): Inventory {\n    return {\n      type: Inventory.Type,\n      slots: times(size, (): ItemSlot => ({ item: null, accepts: null }))\n    };\n  }\n\n  export function serialize(trait: Inventory) {\n    return {\n      slots: trait.slots\n    };\n  }\n\n  export function deserialize(data: any): Inventory {\n    return defaults({\n      slots: data.slots.slice()\n    }, make());\n  }\n}\nTrait.types.set(Inventory.Type, Inventory);","import { Trait } from 'app/game/traits';\nimport { vec2 } from 'gl-matrix';\nimport { defaults } from 'lodash';\n\nexport interface Float extends Trait {\n  readonly type: typeof Float.Type;\n  readonly z: vec2;\n  gravity: boolean;\n}\n\nexport namespace Float {\n  export declare const _mark: Float;\n  export const Type = 'float';\n\n  export function make(): Float {\n    return {\n      type: Float.Type,\n      z: vec2.fromValues(0, 0),\n      gravity: true\n    };\n  }\n\n  export function serialize(trait: Float) {\n    return {\n      z: [trait.z[0], trait.z[1]],\n      gravity: trait.gravity,\n    };\n  }\n\n  export function deserialize(data: any): Float {\n    return defaults({\n      z: data.z && vec2.fromValues(data.z[0], data.z[1]),\n      gravity: data.gravity === undefined ? true : data.gravity\n    }, make());\n  }\n}\nTrait.types.set(Float.Type, Float);","import { Trait } from 'app/game/traits';\nimport { Effect } from 'common/data';\nimport { defaults } from 'lodash';\n\nexport interface StatList {\n  hp: number;\n  maxHp: number;\n  str: number;\n  def: number;\n  spd: number;\n  vit: number;\n}\n\nexport interface Stats extends Trait {\n  readonly type: typeof Stats.Type;\n  readonly base: StatList;\n  readonly boost: StatList;\n\n  readonly effects: Effect[];\n}\n\nexport namespace Stats {\n  export declare const _mark: Stats;\n  export const Type = 'stats';\n\n  export function make(): Stats {\n    return {\n      type: Stats.Type,\n      base: { hp: 100, maxHp: 100, str: 10, def: 0, spd: 10, vit: 10 },\n      boost: { hp: 0, maxHp: 0, str: 0, def: 0, spd: 0, vit: 0 },\n      effects: []\n    };\n  }\n\n  export function serialize(trait: Stats) {\n    return {\n      base: trait.base,\n      effects: trait.effects,\n    };\n  }\n\n  export function deserialize(data: any): Stats {\n    return defaults({\n      base: data.base || { hp: 100, maxHp: 100, str: 10, def: 0, spd: 10, vit: 10 },\n      effects: data.effects || [],\n    }, make());\n  }\n\n  export function compute(stats: Stats): StatList {\n    return {\n      get hp() { return stats.base.hp + stats.boost.hp; },\n      get maxHp() { return stats.base.maxHp + stats.boost.maxHp; },\n      get str() { return stats.base.str + stats.boost.str; },\n      get def() { return stats.base.def + stats.boost.def; },\n      get spd() { return stats.base.spd + stats.boost.spd; },\n      get vit() { return stats.base.vit + stats.boost.vit; },\n    };\n  }\n}\nTrait.types.set(Stats.Type, Stats);","import { Trait } from 'app/game/traits';\nimport { defaults } from 'lodash';\n\nexport interface PlayerData extends Trait {\n  readonly type: typeof PlayerData.Type;\n  hotbarSelection: number;\n}\n\nexport namespace PlayerData {\n  export declare const _mark: PlayerData;\n  export const Type = 'player-data';\n\n  export function make(): PlayerData {\n    return {\n      type: PlayerData.Type,\n      hotbarSelection: 0\n    };\n  }\n\n  export function serialize(trait: PlayerData) {\n    return {\n      hotbarSelection: trait.hotbarSelection\n    };\n  }\n\n  export function deserialize(data: any): PlayerData {\n    return defaults({\n      hotbarSelection: data.hotbarSelection || 0\n    }, make());\n  }\n}\nTrait.types.set(PlayerData.Type, PlayerData);","import { TextureDef } from 'common/data';\n\nexport const Animations: Record<string, TextureDef> = {\n  Player: {\n    type: 'animation',\n    anims: {\n      'left': { frameId: 'sprites/player/left', numFrames: 8, fps: 15 },\n      'right': { frameId: 'sprites/player/right', numFrames: 8, fps: 15 },\n      'up': { frameId: 'sprites/player/up', numFrames: 8, fps: 15 },\n      'down': { frameId: 'sprites/player/down', numFrames: 8, fps: 15 },\n\n      'attack-left': { frameId: 'sprites/player/attack-left', numFrames: 5, fps: 15 },\n      'attack-right': { frameId: 'sprites/player/attack-right', numFrames: 5, fps: 15 },\n      'attack-up': { frameId: 'sprites/player/attack-up', numFrames: 5, fps: 15 },\n      'attack-down': { frameId: 'sprites/player/attack-down', numFrames: 5, fps: 15 },\n    }\n  }\n};","import { Entity } from 'app/game/entities';\nimport { Inventory, PlayerData, Spatial, Stats } from 'app/game/traits';\nimport { Item } from 'common/data';\nimport { Animations } from 'data/animations';\nimport { vec2 } from 'gl-matrix';\n\nexport class Player extends Entity {\n  public static _mark: Player;\n  public static readonly Type = 'player';\n  public get type() { return Player.Type; }\n\n  init() {\n    const spatial = this.traits(Spatial);\n    vec2.set(spatial.scale, 2, 2);\n    vec2.set(spatial.size, 0.25, 0.25);\n    spatial.sprite.setTexture(Animations.Player, this.id);\n\n    const inventory = this.traits(Inventory, 43);\n    inventory.slots[40].accepts = [Item.Type.Chestplate];\n    inventory.slots[41].accepts = [Item.Type.Leggings];\n    inventory.slots[42].accepts = [Item.Type.Boots];\n\n    this.traits(Stats);\n    this.traits(PlayerData);\n  }\n}\nEntity.types.set(Player.Type, Player);\n","import { Game } from 'app/game';\nimport { Entity } from 'app/game/entities';\nimport { Float, Inventory, Spatial } from 'app/game/traits';\nimport { Item } from 'common/data';\nimport { vec2 } from 'gl-matrix';\n\nexport class ItemDrop extends Entity {\n  public static _mark: ItemDrop;\n  public static readonly Type = 'item-drop';\n  public get type() { return ItemDrop.Type; }\n\n  public static make(game: Game, item: Item, position: vec2 = game.player.traits(Spatial).position) {\n    const entity = new ItemDrop(game).item(item);\n    const spatial = entity.traits(Spatial);\n    vec2.copy(spatial.position, position);\n    vec2.random(spatial.velocity);\n    const float = entity.traits(Float);\n    float.z[0] = Math.random() * 0.5 + 0.5;\n    return entity;\n  }\n\n  public item(): Item;\n  public item(item: Item): this;\n  public item(item?: Item) {\n    const slot = this.traits(Inventory).slots[0];\n    if (!item) {\n      return slot.item;\n    } else {\n      slot.item = item;\n      return this;\n    }\n  }\n\n  init() {\n    const spatial = this.traits(Spatial);\n    vec2.set(spatial.scale, 2, 2);\n    vec2.set(spatial.size, 0.25, 0.25);\n    spatial.solid = false;\n    spatial.sprite.setTexture(this.item().texture, this.id);\n    spatial.sprite.outline = true;\n  }\n}\nEntity.types.set(ItemDrop.Type, ItemDrop);\n","import { Game } from 'app/game';\nimport { Entity, EntityType } from 'app/game/entities';\nimport { Trait, TraitType } from 'app/game/traits';\nimport { EntityProps } from 'common/data/props';\n\nexport class EntityManager {\n  private readonly entities = new Map<number, Entity>();\n\n  constructor(private readonly game: Game) {\n  }\n\n  public init() {\n    for (const entityProps of this.game.data.entities) {\n      const EntityType = Entity.types.get(entityProps.type)!;\n      const entity = new EntityType(this.game, entityProps.id);\n      entity.age = entityProps.age;\n      for (const traitType of Object.keys(entityProps.traits)) {\n        const TraitType = Trait.types.get(traitType)!;\n        const trait = TraitType.deserialize(entityProps.traits[traitType]);\n        entity.traits.set(trait);\n      }\n      this.add(entity);\n    }\n  }\n\n  public dispose() {\n  }\n\n  public save() {\n    this.game.data.entities = Array.from(this.entities.values()).map(entity => {\n      const props: EntityProps = {\n        id: entity.id,\n        type: entity.type,\n        age: entity.age,\n        traits: {}\n      };\n      for (const trait of entity.traits.list())\n        props.traits[trait.type] = Trait.types.get(trait.type)!.serialize(trait);\n      return props;\n    });\n  }\n\n  public ofType<T extends Entity>(entityType: EntityType<T>) {\n    return Array.from(this.entities.values()).filter(entity => entity.type === entityType.Type);\n  }\n\n  public withTrait<T extends Trait>(traitType: TraitType<T>) {\n    return Array.from(this.entities.values()).filter(entity => entity.traits.get(traitType));\n  }\n\n  public get(id: number) {\n    return this.entities.get(id);\n  }\n\n  public add(entity: Entity) {\n    entity.init();\n    this.entities.set(entity.id, entity);\n  }\n\n  public delete(entity: Entity) {\n    this.entities.delete(entity.id);\n  }\n\n  public update(dt: number) {\n    for (const entity of this.entities.values())\n      entity.age += dt;\n  }\n}","import { LayoutView } from 'app/components';\nimport { Camera } from 'app/game/Camera';\nimport { Container } from 'pixi.js';\n\nexport class GameView extends Container {\n  public readonly camera = new Camera();\n\n  constructor() {\n    super();\n    this.add(this.camera);\n    this.interactive = true;\n  }\n\n  public add(view: LayoutView) {\n    this.addChild(view);\n  }\n\n  public layout(width: number, height: number) {\n    for (const child of this.children) {\n      (child as LayoutView).layout(width, height);\n    }\n  }\n}","import { Game } from 'app/game';\n\nexport class Task {\n  public readonly runWhenPaused: boolean = false;\n\n  private _active = true;\n  public get isActive() { return this._active; }\n  constructor(protected readonly game: Game) {\n  }\n\n  public deactivate() {\n    if (!this._active)\n      throw new Error('not active');\n\n    this._active = false;\n  }\n\n  public update(dt: number) { }\n  public dispose() { }\n}\n","import { LayoutView } from 'app/components';\nimport { Container, Texture } from 'pixi.js';\n\nexport abstract class MenuPanel extends Container implements LayoutView {\n  abstract get icon(): Texture;\n  abstract get name(): string;\n\n  abstract layout(width: number, height: number): void;\n  dispose() { }\n}","import { Button, SlotView, TextureSprite } from 'app/components';\nimport { Game } from 'app/game';\nimport { ItemDrop } from 'app/game/entities';\nimport { MenuPanel } from 'app/game/menu';\nimport { InventoryUpdated } from 'app/game/messages';\nimport { ItemSlot, Recipe } from 'common/data';\nimport { clamp, cloneDeep, escapeRegExp } from 'lodash';\nimport { Container, Texture } from 'pixi.js';\nimport { Subscription } from 'rxjs/Subscription';\n\nconst NumRows = 3;\n\nclass RecipeView extends Container {\n  readonly arrow: TextureSprite;\n  readonly output: SlotView;\n  readonly inputs: SlotView[];\n\n  private makeOutput() {\n    return cloneDeep(this.recipe.output);\n  }\n\n  constructor(private readonly game: Game, private readonly recipe: Recipe) {\n    super();\n\n    this.output = new SlotView(game, { accepts: [], item: this.makeOutput() });\n    this.output.position.set(0, (64 - SlotView.Size) / 2);\n    this.addChild(this.output);\n\n    this.inputs = recipe.input.map(({ id, texture }) => {\n      const slot = new SlotView(game, { accepts: escapeRegExp(id), item: null });\n      slot.bgOverlay.setTexture(texture);\n      slot.bgOverlay.outline = true;\n      slot.bgOverlay.scale.set(2, 2);\n      slot.bgOverlay.position.set(4, 4);\n      slot.bgOverlay.alpha = 0.5;\n      return slot;\n    });\n\n    this.arrow = new TextureSprite(Texture.fromFrame('sprites/ui/arrow'));\n    this.arrow.position.set(SlotView.Size + 16, 0);\n    this.arrow.scale.set(2, 2);\n    this.addChild(this.arrow);\n\n    let x = SlotView.Size + 16 + 64 + 16;\n    for (const input of this.inputs) {\n      this.addChild(input);\n      input.position.set(x + 8, 8);\n      x += 64;\n    }\n  }\n\n  check(slot?: ItemSlot) {\n    let numInputs = 0;\n    for (const input of this.inputs) {\n      if (!input.slot.item) {\n        input.alpha = 0.5;\n      } else {\n        input.alpha = 1;\n        numInputs++;\n      }\n    }\n\n    const ok = numInputs === this.recipe.input.length;\n    this.output.enabled = ok;\n    this.output.alpha = ok ? 1 : 0.5;\n    this.arrow.alpha = ok ? 1 : 0.5;\n    if (!this.output.slot.item) {\n      this.output.slot.item = this.makeOutput();\n      this.game.dispatch(new InventoryUpdated(this.output.slot));\n      for (const { slot } of this.inputs) {\n        slot.item = null;\n        this.game.dispatch(new InventoryUpdated(slot));\n      }\n    }\n  }\n\n  layout() {\n    this.output.layout();\n    for (const input of this.inputs)\n      input.layout();\n  }\n\n  dispose() {\n    for (const { slot } of this.inputs)\n      if (slot.item) {\n        const drop = ItemDrop.make(this.game, slot.item);\n        this.game.entities.add(drop);\n      }\n  }\n}\n\nexport class Workbench extends MenuPanel {\n  readonly name = 'Workbench';\n  readonly icon = Texture.fromFrame('sprites/ui/tab-workbench');\n\n  private readonly upButton = new Button();\n  private readonly downButton = new Button();\n  private readonly recipeViews: RecipeView[] = [];\n  private readonly subscription = new Subscription();\n\n  private scrollOffset = 0;\n\n  constructor(game: Game) {\n    super();\n\n    this.upButton = new Button();\n    const upIcon = new TextureSprite(Texture.fromFrame('sprites/ui/arrow-compact'));\n    upIcon.scale.set(2, 2);\n    upIcon.rotation = Math.PI / 2;\n    upIcon.pivot.set(8, 8);\n    upIcon.position.set(32, 16);\n    this.upButton.content.addChild(upIcon);\n    this.addChild(this.upButton);\n\n    this.downButton = new Button();\n    const downIcon = new TextureSprite(Texture.fromFrame('sprites/ui/arrow-compact'));\n    downIcon.scale.set(2, 2);\n    downIcon.rotation = -Math.PI / 2;\n    downIcon.pivot.set(8, 8);\n    downIcon.position.set(32, 16);\n    this.downButton.content.addChild(downIcon);\n    this.addChild(this.downButton);\n\n    for (const recipe of game.library.recipes) {\n      const view = new RecipeView(game, recipe);\n      this.addChild(view);\n      this.recipeViews.push(view);\n    }\n\n    this.subscription.add(game.messages$.ofType(InventoryUpdated).subscribe(this.checkInventory));\n    for (const view of this.recipeViews)\n      view.check();\n\n    this.upButton.on(Button.Clicked, () => this.scrollOffset--);\n    this.downButton.on(Button.Clicked, () => this.scrollOffset++);\n  }\n\n  private checkInventory = ({ slot }: InventoryUpdated) => {\n    for (const view of this.recipeViews)\n      view.check(slot);\n  }\n\n  layout(width: number, height: number) {\n    const scrollMin = 0, scrollMax = this.recipeViews.length - NumRows;\n    this.scrollOffset = clamp(this.scrollOffset, 0, scrollMax);\n    this.upButton.visible = this.scrollOffset > scrollMin;\n    this.downButton.visible = this.scrollOffset < scrollMax;\n\n    let y = 0;\n    this.upButton.position.set(0, y);\n    this.upButton.layout(64, 32);\n    y += 32;\n\n    for (let i = 0; i < this.recipeViews.length; i++) {\n      const view = this.recipeViews[i];\n      if (i < this.scrollOffset || i >= this.scrollOffset + NumRows) {\n        view.visible = false;\n      } else {\n        view.visible = true;\n\n        view.position.set(2, y);\n        view.layout();\n        y += 64;\n      }\n    }\n    this.downButton.position.set(0, y);\n    this.downButton.layout(64, 32);\n  }\n\n  dispose() {\n    this.subscription.unsubscribe();\n    for (const view of this.recipeViews)\n      view.dispose();\n  }\n}","import { Button, SlotView, TextureSprite } from 'app/components';\nimport { Game } from 'app/game';\nimport { ItemDrop } from 'app/game/entities';\nimport { MenuPanel } from 'app/game/menu';\nimport { InventoryUpdated } from 'app/game/messages';\nimport { Item } from 'common/data';\nimport { mix } from 'common/logic/alchemy';\nimport { Texture } from 'pixi.js';\nimport { Subscription } from 'rxjs/Subscription';\n\nexport class Alchemy extends MenuPanel {\n  readonly name = 'Alchemy';\n  readonly icon = Texture.fromFrame('sprites/ui/tab-alchemy');\n\n  private readonly processButton = new Button();\n  private readonly input1: SlotView;\n  private readonly input2: SlotView;\n  private readonly fuel: SlotView;\n  private readonly output: SlotView;\n  private readonly bg: TextureSprite;\n  private readonly subscription = new Subscription();\n\n  constructor(private readonly game: Game) {\n    super();\n\n    this.bg = new TextureSprite(Texture.from('sprites/ui/cauldron'));\n    this.bg.outline = true;\n    this.bg.scale.set(7, 7);\n    this.addChild(this.bg);\n\n    this.processButton = new Button();\n    const icon = new TextureSprite(Texture.fromFrame('sprites/ui/arrow-compact'));\n    icon.scale.set(2, 2);\n    icon.rotation = -Math.PI / 2;\n    icon.pivot.set(8, 8);\n    icon.position.set(18, 20);\n    this.processButton.content.addChild(icon);\n    this.addChild(this.processButton);\n\n    this.input1 = new SlotView(game, { accepts: [Item.Type.Consumable], item: null });\n    this.input2 = new SlotView(game, { accepts: [Item.Type.Consumable], item: null });\n    this.fuel = new SlotView(game, { accepts: '^wood-', item: null });\n    this.output = new SlotView(game, { accepts: [], item: null });\n    this.addChild(this.input1);\n    this.addChild(this.input2);\n    this.addChild(this.fuel);\n    this.addChild(this.output);\n    this.fuel.bgOverlay.setTexture('sprites/ui/inv-slot-fire');\n\n    this.subscription.add(game.messages$.ofType(InventoryUpdated).subscribe(this.checkInventory));\n    this.checkInventory();\n\n    this.processButton.on(Button.Clicked, this.doAlchemy);\n  }\n\n  private checkInventory = () => {\n    this.processButton.isEnabled =\n      !this.input1.empty && !this.input2.empty && !this.fuel.empty && this.output.empty;\n  }\n\n  private doAlchemy = () => {\n    const input1 = this.input1.slot.item!;\n    const input2 = this.input2.slot.item!;\n    const output = mix(input1, input2, this.game.library.elements);\n\n    this.output.slot.item = output;\n    this.input1.slot.item = null;\n    this.input2.slot.item = null;\n    this.fuel.slot.item = null;\n    this.game.dispatch(new InventoryUpdated(this.input1.slot));\n    this.game.dispatch(new InventoryUpdated(this.input2.slot));\n    this.game.dispatch(new InventoryUpdated(this.output.slot));\n    this.game.dispatch(new InventoryUpdated(this.fuel.slot));\n  }\n\n  layout(width: number, height: number) {\n    const contentWidth = SlotView.Size + 16 + 40 + 16 + SlotView.Size;\n    this.input1.position.set(16, 4);\n    this.input1.layout();\n\n    this.processButton.position.set(16 + SlotView.Size + 16, 16);\n    this.processButton.layout(40, 40);\n\n    this.input2.position.set(16 + SlotView.Size + 16 + 40 + 16, 4);\n    this.input2.layout();\n\n    this.bg.position.set(16 + (contentWidth - this.bg.width) / 2, SlotView.Size + 8);\n\n    this.output.position.set(16 + (contentWidth - SlotView.Size) / 2, SlotView.Size + 28);\n    this.output.layout();\n\n    this.fuel.position.set(16 + (contentWidth - SlotView.Size) / 2, 192);\n    this.fuel.layout();\n  }\n\n  dispose() {\n    this.subscription.unsubscribe();\n    for (const { slot } of [this.input1, this.input2, this.fuel, this.output])\n      if (slot.item) {\n        const drop = ItemDrop.make(this.game, slot.item);\n        this.game.entities.add(drop);\n      }\n  }\n}","import { Panel } from 'app/components';\nimport { Game } from 'app/game';\n\nexport class GameOverlay extends Panel {\n  constructor(public readonly game: Game) {\n    super(game.app);\n  }\n\n  public init() { }\n  public dispose() { }\n  public update(dt: number) { }\n\n  protected async done() {\n    await this.game.app.popState();\n  }\n}","import { Button, SlotView, TextureSprite, TextButton } from 'app/components';\nimport { StyledText } from 'app/components/StyledText';\nimport { TextToolTip } from 'app/components/TextToolTip';\nimport { Game } from 'app/game';\nimport { Alchemy, MenuPanel, Workbench } from 'app/game/menu';\nimport { GameOverlay } from 'app/game/overlays';\nimport { Inventory, Stats, StatList } from 'app/game/traits';\nimport * as vex from 'vex-js';\n\nconst MenuWidth = 800;\nconst MenuHeight = 600;\nconst SlotsPerRow = 8;\n\nexport class MenuOverlay extends GameOverlay {\n  private activeTab: MenuPanel;\n  private readonly tabs: MenuPanel[] = [];\n  private readonly tabButtons: Button[];\n  private readonly saveButton = new TextButton('save');\n  private readonly exitButton = new TextButton('exit');\n\n  private readonly slotViews: SlotView[] = [];\n  private readonly trash = new SlotView(this.game, { item: null, accepts: null });\n\n  private readonly stats: StatList;\n  private readonly base: StatList;\n  private readonly statNames = new StyledText('', {\n    default: { align: 'right', fontWeight: 'bold' },\n    s: { fontSize: 12 }\n  });\n  private readonly statValues = new StyledText('', {\n    default: { align: 'left' },\n    s: { fontSize: 12 },\n    incr: { fill: '#d0d000' },\n    decr: { fill: '#d00000' }\n  });\n\n  constructor(game: Game) {\n    super(game);\n\n    this.tabs.push(new Workbench(game));\n    this.tabs.push(new Alchemy(game));\n    this.activeTab = this.tabs[0];\n    this.addChild(this.activeTab);\n\n    const toolTip = new TextToolTip(game.app, '', {});\n\n    this.tabButtons = this.tabs.map(tab => {\n      const btn = new Button();\n      const icon = new TextureSprite(tab.icon);\n      icon.scale.set(2, 2);\n      btn.content.addChild(icon);\n      this.addChild(btn);\n      game.app.toolTip.add(btn, () => {\n        toolTip.text = tab.name;\n        return toolTip;\n      });\n      btn.on(Button.Clicked, () => {\n        if (this.activeTab === tab) return;\n        this.removeChild(this.activeTab);\n        this.addChild(tab);\n        this.activeTab = tab;\n      });\n      return btn;\n    });\n\n    const slots = game.player.traits.get(Inventory).slots;\n    for (const slot of slots) {\n      const view = new SlotView(this.game, slot);\n      this.slotViews.push(view);\n      this.content.addChild(view);\n    }\n    this.slotViews[40].bgOverlay.setTexture('sprites/ui/inv-slot-chestplates');\n    this.slotViews[41].bgOverlay.setTexture('sprites/ui/inv-slot-leggings');\n    this.slotViews[42].bgOverlay.setTexture('sprites/ui/inv-slot-boots');\n\n    this.content.addChild(this.trash);\n    this.trash.bgOverlay.setTexture('sprites/ui/inv-slot-trash');\n\n    const stats = this.game.player.traits(Stats);\n    this.stats = Stats.compute(stats);\n    this.base = stats.base;\n    this.content.addChild(this.statNames);\n    this.content.addChild(this.statValues);\n\n    this.content.addChild(this.saveButton);\n    this.content.addChild(this.exitButton);\n    this.saveButton.on(TextButton.Clicked, this.save.bind(this));\n    this.exitButton.on(TextButton.Clicked, this.exit.bind(this));\n  }\n\n  layout(width: number, height: number) {\n    this.position.set(\n      Math.round((width - MenuWidth) / 2),\n      Math.round((height - MenuHeight) / 2)\n    );\n    super.layout(MenuWidth, MenuHeight);\n\n    const slotLeft = 24, slotTop = 24;\n    let x = 0, y = 0;\n    for (const view of this.slotViews.slice(-3)) {\n      view.position.set(slotLeft + (x + SlotsPerRow) * SlotView.Size + 16, slotTop);\n      view.layout();\n      x++;\n    }\n    this.trash.position.set(slotLeft + (SlotsPerRow + 4) * SlotView.Size + 16, slotTop);\n    this.trash.layout();\n\n    x = y = 0;\n    for (const view of this.slotViews.slice(0, -3)) {\n      view.position.set(slotLeft + x * SlotView.Size, slotTop + y * SlotView.Size + (y > 0 ? 16 : 0));\n      view.layout();\n      if (++x === SlotsPerRow) {\n        x = 0;\n        y++;\n      }\n    }\n\n    this.statNames.position.set(\n      slotLeft + SlotsPerRow * SlotView.Size + 16,\n      slotTop + SlotView.Size + 16\n    );\n    this.statNames.layout(this.statNames.contentWidth, this.statNames.contentHeight);\n    this.statValues.position.set(\n      slotLeft + SlotsPerRow * SlotView.Size + 16 + this.statNames.contentWidth,\n      slotTop + SlotView.Size + 16\n    );\n    this.statValues.layout(this.statValues.contentWidth, this.statValues.contentHeight);\n\n    const buttonX = 24, buttonY = 336;\n    x = buttonX;\n    y = buttonY;\n\n    for (let i = 0; i < this.tabs.length; i++) {\n      const button = this.tabButtons[i];\n      button.isEnabled = this.activeTab !== this.tabs[i];\n      button.position.set(x, y);\n      button.layout(50, 50);\n      x += 50 + 16;\n    }\n    y += 50 + 16;\n\n    x = buttonX;\n    this.saveButton.position.set(x, y);\n    this.saveButton.layout(96, 48);\n    x += 96 + 16;\n    this.exitButton.position.set(x, y);\n    this.exitButton.layout(96, 48);\n\n    this.activeTab.position.set(256, 336);\n    this.activeTab.layout(MenuWidth - 256 - 16, MenuHeight - 336 - 16);\n  }\n\n  update(dt: number) {\n    if (this.game.keyboard.isDown('Escape')) this.done();\n\n    for (const view of this.slotViews)\n      view.update(dt);\n\n    this.trash.slot.item = null;\n    this.trash.update(dt);\n\n    this.updateStats();\n  }\n\n  private updateStats() {\n    function makeBonusText(base: number, computed: number) {\n      const diff = computed - base;\n      if (diff < 0) return `(<decr>${computed - base}</decr>)`;\n      else if (diff > 0) return `(<incr>+${computed - base}</incr>)`;\n      else return '';\n    }\n\n    this.statNames.text = `\nhp<s> </s>\nstr<s> </s>\ndef<s> </s>\nspd<s> </s>\nvit<s> </s>\n`.trim();\n    this.statValues.text = `\n<s> </s>${Math.ceil(this.stats.hp)} / ${this.stats.maxHp} ${makeBonusText(this.base.maxHp, this.stats.maxHp)}\n<s> </s>${this.stats.str} ${makeBonusText(this.base.str, this.stats.str)}\n<s> </s>${this.stats.def} ${makeBonusText(this.base.def, this.stats.def)}\n<s> </s>${this.stats.spd} ${makeBonusText(this.base.spd, this.stats.spd)}\n<s> </s>${this.stats.vit} ${makeBonusText(this.base.vit, this.stats.vit)}\n`.trim();\n  }\n\n  private save() {\n    this.game.save();\n    vex.dialog.prompt({\n      label: 'Save name (max 8 char.): ',\n      value: this.game.data.id,\n      callback: (name) => {\n        if (name === false) {\n          this.game.app.view.focus();\n          return;\n        }\n\n        if (!name) {\n          vex.dialog.alert({ content: 'Name is empty!', callback: () => this.game.app.view.focus() });\n          return;\n        } else if (name.length > 8) {\n          vex.dialog.alert({ content: 'Name is too long!', callback: () => this.game.app.view.focus() });\n          return;\n        }\n        this.game.data.id = name;\n        localStorage[name] = this.game.data.export();\n        vex.dialog.alert({ content: `Saved as name '${name}'.`, callback: () => this.game.app.view.focus() });\n      }\n    });\n  }\n\n  private async exit() {\n    await this.done();\n    await this.game.app.popState();\n  }\n\n  async done() {\n    this.game.app.dragDrop.cancel();\n    for (const tab of this.tabs)\n      tab.dispose();\n    await super.done();\n  }\n}","export function tilePerSecond(spd: number) {\n  return 1 + Math.max(0, spd * 4 / 10);\n}\n\nexport function healPerTick(vit: number) {\n  return Math.max(0, vit / 500);\n}","import { Game } from 'app/game';\nimport { MenuOverlay } from 'app/game/overlays/MenuOverlay';\nimport { Task } from 'app/game/tasks';\nimport { Spatial, Stats, StatList } from 'app/game/traits';\nimport { StateOverlay } from 'app/states';\nimport { tilePerSecond } from 'common/logic/stats';\nimport { vec2 } from 'gl-matrix';\n\nexport class PlayerInputTask extends Task {\n  private readonly vel: vec2;\n  private readonly stats: StatList;\n  private readonly direction = vec2.create();\n\n  constructor(game: Game) {\n    super(game);\n    this.vel = game.player.traits.get(Spatial).velocity;\n    this.stats = Stats.compute(game.player.traits.get(Stats));\n  }\n\n  public update(dt: number) {\n    vec2.set(this.direction, 0, 0);\n    if (this.game.keyboard.isPressed('a')) this.direction[0]--;\n    if (this.game.keyboard.isPressed('d')) this.direction[0]++;\n    if (this.game.keyboard.isPressed('w')) this.direction[1]--;\n    if (this.game.keyboard.isPressed('s')) this.direction[1]++;\n\n    vec2.normalize(this.direction, this.direction);\n    vec2.scale(this.vel, this.direction, tilePerSecond(this.stats.spd));\n\n    if (this.game.keyboard.isDown('Escape')) {\n      this.game.app.pushState(new StateOverlay(new MenuOverlay(this.game)));\n    }\n  }\n}","import { Game } from 'app/game';\nimport { Entity } from 'app/game/entities';\nimport { ApplyEffects, UpdateHP } from 'app/game/messages';\nimport { Task } from 'app/game/tasks';\nimport { Stats, StatList } from 'app/game/traits';\nimport { Effect } from 'common/data';\nimport { EffectDef } from 'data/effects';\n\nexport class EffectTask extends Task {\n  constructor(game: Game) {\n    super(game);\n    this.game.messages$.ofType(ApplyEffects).subscribe(this.applyEffects);\n  }\n\n  private applyEffects = ({ entityId, effects }: ApplyEffects) => {\n    const entity = this.game.entities.get(entityId);\n    if (!entity) return;\n    const stats = entity.traits.get(Stats);\n    if (!stats) return;\n\n    const entityEffects = stats.effects;\n\n    // replace existing effect if duration of new effect is longer\n    for (let i = 0; i < entityEffects.length; i++) {\n      const { type, duration } = entityEffects[i];\n      const effectIndex = effects.findIndex(effect => effect.type === type && effect.duration >= duration);\n      if (effectIndex >= 0) {\n        entityEffects[i] = effects.splice(effectIndex, 1)[0];\n      }\n    }\n\n    entityEffects.push(...effects);\n  }\n\n  update(dt: number) {\n    for (const entity of this.game.entities.withTrait(Stats)) {\n      const { base, boost, effects } = entity.traits.get(Stats);\n      // reset boost stats, recalc each tick\n      boost.hp = 0;\n      boost.maxHp = 0;\n      boost.str = 0;\n      boost.def = 0;\n      boost.spd = 0;\n      boost.vit = 0;\n\n      for (let i = effects.length - 1; i >= 0; i--) {\n        const effect = effects[i];\n        // when a second just elapsed\n        const secEdge = (Math.floor(effect.duration / 1000) - Math.floor((effect.duration - dt) / 1000)) !== 0;\n        this.applyEffect(effect, entity, base, boost, secEdge);\n        effect.duration -= dt;\n        if (effect.duration <= 0)\n          effects.splice(i, 1);\n      }\n    }\n  }\n\n  private applyEffect(effect: Effect, entity: Entity, base: StatList, boost: StatList, secondEdge: boolean) {\n    switch (effect.type) {\n      case EffectDef.Type.Regen: if (!secondEdge) break;\n      case EffectDef.Type.Heal:\n        this.game.dispatch(new UpdateHP(entity.id, effect.power));\n        break;\n\n      case EffectDef.Type.Poison: if (!secondEdge) break;\n      case EffectDef.Type.Damage:\n        this.game.dispatch(new UpdateHP(entity.id, -effect.power));\n        break;\n\n      case EffectDef.Type.Speed:\n        boost.spd += effect.power; break;\n      case EffectDef.Type.Slowness:\n        boost.spd -= effect.power; break;\n      case EffectDef.Type.Strength:\n        boost.str += effect.power; break;\n      case EffectDef.Type.Weakness:\n        boost.str -= effect.power; break;\n    }\n  }\n}","import { UpdateHP } from 'app/game/messages';\nimport { Task } from 'app/game/tasks';\nimport { Float, Spatial, Stats } from 'app/game/traits';\n\nexport class TerrainEffectTask extends Task {\n  private elapsed = 0;\n  public update(dt: number) {\n    const doDamage = (Math.floor(this.elapsed / 1000) - Math.floor((this.elapsed + dt) / 1000)) !== 0;\n    this.elapsed += dt;\n\n    for (const entity of this.game.entities.withTrait(Spatial)) {\n      const { position } = entity.traits(Spatial);\n      const float = entity.traits(Float);\n      if (float && float.z[0] > 0) continue;\n\n      const stats = entity.traits.get(Stats);\n      if (!stats) continue;\n\n      const terrainId = this.game.map.getTerrain(position[0], position[1]);\n      const terrain = this.game.library.terrains[terrainId];\n      if (!terrain) continue;\n\n      if (terrain.speed) {\n        stats.boost.spd += terrain.speed;\n      }\n      if (terrain.damage && doDamage) {\n        this.game.dispatch(new UpdateHP(entity.id, -terrain.damage));\n      }\n    }\n  }\n}","import { Game } from 'app/game';\nimport { ShowParticles, UpdateHP } from 'app/game/messages';\nimport { Task } from 'app/game/tasks';\nimport { Spatial, Stats } from 'app/game/traits';\nimport { healPerTick } from 'common/logic/stats';\nimport { clamp } from 'lodash';\n\nexport class EntityHPTask extends Task {\n  constructor(game: Game) {\n    super(game);\n    this.game.messages$.ofType(UpdateHP).subscribe(this.updateHP);\n  }\n\n  private updateHP = ({ entityId, hpDiff }: UpdateHP) => {\n    const entity = this.game.entities.get(entityId);\n    if (!entity) return;\n    const stats = entity.traits.get(Stats);\n    if (!stats) return;\n\n    stats.base.hp = clamp(stats.base.hp + hpDiff, 0, stats.base.maxHp + stats.boost.maxHp);\n\n    const position = entity.traits.get(Spatial).position;\n    if (hpDiff > 0)\n      this.game.dispatch(ShowParticles.float(position, 20, 0xffffff));\n    else if (hpDiff < 0)\n      this.game.dispatch(ShowParticles.splash(position, 20, 0xff0000));\n  }\n\n  update(dt: number) {\n    for (const entity of this.game.entities.withTrait(Stats)) {\n      const stats = entity.traits.get(Stats);\n      const { vit, maxHp } = Stats.compute(stats);\n      stats.base.hp = clamp(stats.base.hp + healPerTick(vit), 0, maxHp);\n    }\n  }\n}","import { Easing, Tween } from '@tweenjs/tween.js';\nimport { DisplayObject } from 'pixi.js';\nimport { bindCallback } from 'rxjs/observable/bindCallback';\n\nexport function fadeOut(obj: DisplayObject) {\n  return bindCallback(callback => new Tween(obj)\n    .to({ alpha: 0 }, 250)\n    .easing(Easing.Quadratic.Out)\n    .onComplete(callback)\n    .start()\n  )();\n}\n\nexport function fadeIn(obj: DisplayObject) {\n  return bindCallback(callback => new Tween(obj)\n    .to({ alpha: 1 }, 250)\n    .easing(Easing.Quadratic.In)\n    .onComplete(callback)\n    .start()\n  )();\n}\n\nfunction dir(dy: number, dx: number, left: number, right: number) {\n  const angle = Math.atan2(dy, dx);\n  if (Math.abs(angle) > Math.PI * left)\n    return 'left';\n  else if (Math.abs(angle) < Math.PI * right)\n    return 'right';\n  else if (angle < 0)\n    return 'up';\n  else\n    return 'down';\n}\n\nexport function direction(dy: number, dx: number, type: 'movement' | 'attack') {\n  switch (type) {\n    case 'movement': return dir(dy, dx, 3 / 5, 2 / 5);\n    case 'attack': return dir(dy, dx, 3 / 4, 1 / 4);\n  }\n}","/*\nhttps://github.com/noonat/intersect/\n\nCopyright (c) 2011 Nathan Ostgard http://nathanostgard.com\n\nThis software is provided 'as-is', without any express or implied\nwarranty.  In no event will the authors be held liable for any damages\narising from the use of this software.\n\nPermission is granted to anyone to use this software for any purpose,\nincluding commercial applications, and to alter it and redistribute it\nfreely, subject to the following restrictions:\n\n1. The origin of this software must not be misrepresented; you must not\n   claim that you wrote the original software. If you use this software\n   in a product, an acknowledgment in the product documentation would be\n   appreciated but is not required.\n\n2. Altered source versions must be plainly marked as such, and must not be\n   misrepresented as being the original software.\n\n3. This notice may not be removed or altered from any source distribution.\n*/\n\nexport const EPSILON: number = 1e-8;\n\nexport function abs(value: number): number {\n  return value < 0 ? -value : value;\n}\n\nexport function clamp(value: number, min: number, max: number): number {\n  if (value < min) {\n    return min;\n  } else if (value > max) {\n    return max;\n  } else {\n    return value;\n  }\n}\n\nexport function sign(value: number): number {\n  return value < 0 ? -1 : 1;\n}\n\nexport class Point {\n  public x: number;\n  public y: number;\n\n  constructor(x: number = 0, y: number = 0) {\n    this.x = x;\n    this.y = y;\n  }\n\n  public clone(): Point {\n    return new Point(this.x, this.y);\n  }\n\n  public normalize(): number {\n    let length = this.x * this.x + this.y * this.y;\n    if (length > 0) {\n      length = Math.sqrt(length);\n      const inverseLength = 1.0 / length;\n      this.x *= inverseLength;\n      this.y *= inverseLength;\n    } else {\n      this.x = 1;\n      this.y = 0;\n    }\n    return length;\n  }\n}\n\nexport class Hit {\n  public collider: AABB;\n  public pos: Point;\n  public delta: Point;\n  public normal: Point;\n  public time: number;\n\n  constructor(collider: AABB) {\n    this.collider = collider;\n    this.pos = new Point();\n    this.delta = new Point();\n    this.normal = new Point();\n    this.time = 0;\n  }\n}\n\nexport class Sweep {\n  public hit: Hit | null;\n  public pos: Point;\n  public time: number;\n\n  constructor() {\n    this.hit = null;\n    this.pos = new Point();\n    this.time = 1;\n  }\n}\n\nexport class AABB {\n  public pos: Point;\n  public half: Point;\n\n  constructor(pos: Point, half: Point) {\n    this.pos = pos;\n    this.half = half;\n  }\n\n  public intersectPoint(point: Point): Hit | null {\n    const dx = point.x - this.pos.x;\n    const px = this.half.x - abs(dx);\n    if (px <= 0) {\n      return null;\n    }\n\n    const dy = point.y - this.pos.y;\n    const py = this.half.y - abs(dy);\n    if (py <= 0) {\n      return null;\n    }\n\n    const hit = new Hit(this);\n    if (px < py) {\n      const sx = sign(dx);\n      hit.delta.x = px * sx;\n      hit.normal.x = sx;\n      hit.pos.x = this.pos.x + (this.half.x * sx);\n      hit.pos.y = point.y;\n    } else {\n      const sy = sign(dy);\n      hit.delta.y = py * sy;\n      hit.normal.y = sy;\n      hit.pos.x = point.x;\n      hit.pos.y = this.pos.y + (this.half.y * sy);\n    }\n    return hit;\n  }\n\n  public intersectSegment(pos: Point, delta: Point, paddingX: number = 0,\n    paddingY: number = 0): Hit | null {\n    const scaleX = 1.0 / delta.x;\n    const scaleY = 1.0 / delta.y;\n    const signX = sign(scaleX);\n    const signY = sign(scaleY);\n    const nearTimeX = (this.pos.x - signX * (this.half.x + paddingX) - pos.x) * scaleX;\n    const nearTimeY = (this.pos.y - signY * (this.half.y + paddingY) - pos.y) * scaleY;\n    const farTimeX = (this.pos.x + signX * (this.half.x + paddingX) - pos.x) * scaleX;\n    const farTimeY = (this.pos.y + signY * (this.half.y + paddingY) - pos.y) * scaleY;\n    if (nearTimeX > farTimeY || nearTimeY > farTimeX) {\n      return null;\n    }\n\n    const nearTime = nearTimeX > nearTimeY ? nearTimeX : nearTimeY;\n    const farTime = farTimeX < farTimeY ? farTimeX : farTimeY;\n    if (nearTime >= 1 || farTime <= 0) {\n      return null;\n    }\n\n    const hit = new Hit(this);\n    hit.time = clamp(nearTime, 0, 1);\n    if (nearTimeX > nearTimeY) {\n      hit.normal.x = -signX;\n      hit.normal.y = 0;\n    } else {\n      hit.normal.x = 0;\n      hit.normal.y = -signY;\n    }\n    hit.delta.x = (1.0 - hit.time) * -delta.x;\n    hit.delta.y = (1.0 - hit.time) * -delta.y;\n    hit.pos.x = pos.x + delta.x * hit.time;\n    hit.pos.y = pos.y + delta.y * hit.time;\n    return hit;\n  }\n\n  public intersectAABB(box: AABB): Hit | null {\n    const dx = box.pos.x - this.pos.x;\n    const px = (box.half.x + this.half.x) - abs(dx);\n    if (px <= 0) {\n      return null;\n    }\n\n    const dy = box.pos.y - this.pos.y;\n    const py = (box.half.y + this.half.y) - abs(dy);\n    if (py <= 0) {\n      return null;\n    }\n\n    const hit = new Hit(this);\n    if (px < py) {\n      const sx = sign(dx);\n      hit.delta.x = px * sx;\n      hit.normal.x = sx;\n      hit.pos.x = this.pos.x + (this.half.x * sx);\n      hit.pos.y = box.pos.y;\n    } else {\n      const sy = sign(dy);\n      hit.delta.y = py * sy;\n      hit.normal.y = sy;\n      hit.pos.x = box.pos.x;\n      hit.pos.y = this.pos.y + (this.half.y * sy);\n    }\n    return hit;\n  }\n\n  public sweepAABB(box: AABB, delta: Point): Sweep {\n    const sweep = new Sweep();\n    if (delta.x === 0 && delta.y === 0) {\n      sweep.pos.x = box.pos.x;\n      sweep.pos.y = box.pos.y;\n      sweep.hit = this.intersectAABB(box);\n      if (sweep.hit) {\n        sweep.time = sweep.hit.time = 0;\n      } else {\n        sweep.time = 1;\n      }\n      return sweep;\n    }\n\n    sweep.hit = this.intersectSegment(box.pos, delta, box.half.x, box.half.y);\n    if (sweep.hit) {\n      sweep.time = clamp(sweep.hit.time - EPSILON, 0, 1);\n      sweep.pos.x = box.pos.x + delta.x * sweep.time;\n      sweep.pos.y = box.pos.y + delta.y * sweep.time;\n      const direction = delta.clone();\n      direction.normalize();\n      sweep.hit.pos.x = clamp(\n        sweep.hit.pos.x + direction.x * box.half.x,\n        this.pos.x - this.half.x, this.pos.x + this.half.x);\n      sweep.hit.pos.y = clamp(\n        sweep.hit.pos.y + direction.y * box.half.y,\n        this.pos.y - this.half.y, this.pos.y + this.half.y);\n    } else {\n      sweep.pos.x = box.pos.x + delta.x;\n      sweep.pos.y = box.pos.y + delta.y;\n      sweep.time = 1;\n    }\n    return sweep;\n  }\n\n  public sweepInto(staticColliders: AABB[], delta: Point): Sweep {\n    let nearest = new Sweep();\n    nearest.time = 1;\n    nearest.pos.x = this.pos.x + delta.x;\n    nearest.pos.y = this.pos.y + delta.y;\n    for (let i = 0, il = staticColliders.length; i < il; i++) {\n      const sweep = staticColliders[i].sweepAABB(this, delta);\n      if (sweep.time < nearest.time) {\n        nearest = sweep;\n      }\n    }\n    return nearest;\n  }\n}","import { TextureSprite } from 'app/components';\nimport { Task } from 'app/game/tasks';\nimport { Float, Spatial } from 'app/game/traits';\nimport { direction } from 'app/utils/animations';\nimport * as intersect from 'app/utils/intersect';\nimport { vec2 } from 'gl-matrix';\n\nconst Gravity = -10;\nconst StaticThreshold = 0.5;\n\nexport class EntityMovementTask extends Task {\n  private readonly vel = vec2.create();\n\n  public update(dt: number) {\n    const t = dt / 1000;\n    for (const entity of this.game.entities.withTrait(Spatial)) {\n      const { position, size, sprite, velocity, solid } = entity.traits.get(Spatial);\n      vec2.scale(this.vel, velocity, dt / 1000);\n\n      if (solid) {\n        const obstacles = this.game.keyboard.isPressed('Alt') ? [] : Array.from(this.getObstacles(position));\n        const shape = new intersect.AABB(\n          new intersect.Point(position[0], position[1]),\n          new intersect.Point(size[0], size[1]));\n        this.resolve(obstacles, shape);\n        vec2.set(position, shape.pos.x, shape.pos.y);\n      } else {\n        vec2.add(position, position, this.vel);\n      }\n\n      this.updateDisplay(velocity, this.vel, sprite);\n\n      const float = entity.traits.get(Float);\n      if (float && float.gravity) {\n        float.z[0] += float.z[1] * t + 0.5 * Gravity * t * t;\n        float.z[1] += Gravity * t;\n        if (float.z[0] < StaticThreshold * 0.1) {\n          vec2.set(float.z, 0, 0);\n          vec2.set(velocity, 0, 0);\n        }\n      } else {\n        if (this.vel[0] === 0) velocity[0] = 0;\n        if (this.vel[1] === 0) velocity[1] = 0;\n        vec2.scale(velocity, velocity, Math.pow(0.5, t));\n        if (Math.abs(velocity[0]) < StaticThreshold) velocity[0] = 0;\n        if (Math.abs(velocity[1]) < StaticThreshold) velocity[1] = 0;\n      }\n    }\n  }\n\n  private * getObstacles(position: vec2) {\n    const map = this.game.map;\n    const lib = this.game.library;\n\n    const left = Math.floor(Math.min(position[0] + this.vel[0], position[0])) - 1;\n    const right = Math.ceil(Math.max(position[0] + this.vel[0], position[0])) + 1;\n    const top = Math.floor(Math.min(position[1] + this.vel[1], position[1])) - 1;\n    const bottom = Math.ceil(Math.max(position[1] + this.vel[1], position[1])) + 1;\n\n    for (let y = top; y <= bottom; y++)\n      for (let x = left; x <= right; x++) {\n        const terrainDef = lib.terrains[map.getTerrain(x, y)];\n        if (!terrainDef) {\n          yield new intersect.AABB(\n            new intersect.Point(x + 0.5, y + 0.5),\n            new intersect.Point(0.5, 0.5)\n          );\n        }\n\n        const objectDef = lib.objects[map.getObject(x, y)];\n        if (objectDef && objectDef.obstacle)\n          yield new intersect.AABB(\n            new intersect.Point(x + 0.5, y + 0.5),\n            objectDef.terrain ? new intersect.Point(0.5, 0.5) : new intersect.Point(0.4, 0.4)\n          );\n      }\n  }\n\n  private resolve(obstacles: intersect.AABB[], shape: intersect.AABB) {\n    const handleSweep = (sweep: intersect.Sweep) => {\n      if (sweep.hit && sweep.hit.time > 0) {\n        const collider = sweep.hit.collider;\n        if (sweep.hit.normal.x !== 0)\n          sweep.pos.x = collider.pos.x + (collider.half.x + shape.half.x + intersect.EPSILON) * sweep.hit.normal.x;\n        if (sweep.hit.normal.y !== 0)\n          sweep.pos.y = collider.pos.y + (collider.half.y + shape.half.y + intersect.EPSILON) * sweep.hit.normal.y;\n\n        vec2.mul(this.vel, this.vel, [1 - Math.abs(sweep.hit.normal.x), 1 - Math.abs(sweep.hit.normal.y)]);\n      }\n      shape.pos = sweep.pos;\n    };\n\n    const sweepX = shape.sweepInto(obstacles, new intersect.Point(this.vel[0], 0));\n    const sweepY = shape.sweepInto(obstacles, new intersect.Point(0, this.vel[1]));\n    const maxSweep = sweepX.time > sweepY.time ? sweepX : sweepY;\n    handleSweep(maxSweep);\n    const nextVel = sweepX.time > sweepY.time ? new intersect.Point(0, this.vel[1]) : new intersect.Point(this.vel[0], 0);\n    const sweepFinal = shape.sweepInto(obstacles, nextVel);\n    handleSweep(sweepFinal);\n  }\n\n  private updateDisplay(intendedVel: vec2, actualVel: vec2, sprite: TextureSprite) {\n    if (!sprite.animName)\n      sprite.animName = 'down';\n\n    sprite.still = actualVel[0] === 0 && actualVel[1] === 0;\n\n    if (intendedVel[0] !== 0 || intendedVel[1] !== 0) {\n      sprite.animName = direction(intendedVel[1], intendedVel[0], 'movement');\n    }\n  }\n}","import { Game } from 'app/game';\nimport { ApplyEffects } from 'app/game/messages';\nimport { Task } from 'app/game/tasks';\nimport { Inventory, PlayerData } from 'app/game/traits';\nimport { cloneDeep } from 'lodash';\nimport { interaction } from 'pixi.js';\n\nconst UseItemCooldown = 200;\n\nexport class UseItemTask extends Task {\n  private pressing = false;\n  private elapsed = 0;\n\n  constructor(game: Game) {\n    super(game);\n    game.view.camera.on('pointerdown', (e: interaction.InteractionEvent) => {\n      this.pressing = (e.data.buttons & 2) !== 0;\n    });\n  }\n\n  update(dt: number) {\n    if (this.elapsed <= 0) {\n      if (this.pressing) {\n        this.useItem();\n        this.elapsed = UseItemCooldown;\n      }\n    } else\n      this.elapsed -= dt;\n    this.pressing = false;\n  }\n\n  private useItem() {\n    const { slots } = this.game.player.traits(Inventory);\n    const { hotbarSelection } = this.game.player.traits(PlayerData);\n    const slot = slots[hotbarSelection];\n    if (!slot.item) return;\n\n    const item = slot.item;\n    if (item.effects && item.effects.length > 0) {\n      const effects = cloneDeep(item.effects);\n      this.game.dispatch(new ApplyEffects(this.game.player.id, effects));\n      slot.item = null;\n    }\n  }\n}","import { TextureSprite } from 'app/components';\nimport { Game } from 'app/game';\nimport { ItemDrop } from 'app/game/entities';\nimport { TileObjectSprite } from 'app/game/interfaces';\nimport { PlayFX, ShowParticles } from 'app/game/messages';\nimport { Task } from 'app/game/tasks';\nimport { Spatial } from 'app/game/traits';\nimport { direction } from 'app/utils/animations';\nimport { generateDrops } from 'app/utils/drops';\nimport { TileObject } from 'common/data';\nimport { vec2 } from 'gl-matrix';\nimport { interaction, DisplayObject, Point, RendererPlugins } from 'pixi.js';\n\nconst AttackRadius = 2;\nconst AttackCooldown = 500;\n\nexport class AttackTask extends Task {\n  private readonly position: vec2;\n  private readonly sprite: TextureSprite;\n  private attackAnimName = '';\n\n  private pressing = false;\n  private readonly interaction: interaction.InteractionManager;\n  private readonly cursorPos = new Point();\n  private readonly targetTile = vec2.fromValues(-1, -1);\n  private readonly targetTileCenter = vec2.create();\n  private readonly dir = vec2.create();\n  private targetSprite?: TileObjectSprite;\n\n  constructor(game: Game) {\n    super(game);\n    ({ position: this.position, sprite: this.sprite } = game.player.traits(Spatial));\n    this.interaction = (this.game.app.renderer.plugins as RendererPlugins).interaction;\n\n    const handler = (e: interaction.InteractionEvent) => {\n      this.cursorPos.copy(e.data.global);\n      this.pressing = (e.data.buttons & 1) !== 0;\n    };\n    game.view.camera.on('pointermove', handler);\n    game.view.camera.on('pointerdown', handler);\n    game.view.camera.on('pointerup', handler);\n    game.view.camera.on('pointerupoutside', handler);\n  }\n\n  isTileObject(obj: DisplayObject): obj is TileObjectSprite {\n    return obj && !!(obj as any as TileObjectSprite).coords;\n  }\n\n  update(dt: number) {\n    const obj = this.interaction.hitTest(this.cursorPos, this.game.view.camera);\n\n    if (\n      !this.isTileObject(obj) || !vec2.equals(this.targetTile, obj.coords) ||\n      !this.pressing || vec2.dist(this.position, this.targetTileCenter) >= AttackRadius\n    ) {\n      if (this.targetTile[0] >= 0)\n        this.endAttack(this.targetTile[0], this.targetTile[1], this.targetSprite!);\n      vec2.set(this.targetTile, -1, -1);\n      this.targetSprite = undefined;\n    }\n\n    if (this.pressing && this.isTileObject(obj) && this.targetTile[0] < 0) {\n      vec2.add(this.targetTileCenter, obj.coords, [0.5, 0.5]);\n      if (vec2.dist(this.position, this.targetTileCenter) < AttackRadius) {\n        if (this.targetTile[0] < 0)\n          this.beginAttack(obj.coords[0], obj.coords[1], obj);\n        vec2.copy(this.targetTile, obj.coords);\n        this.targetSprite = obj;\n      }\n    }\n\n    if (this.targetTile[0] >= 0) {\n      vec2.sub(this.dir, this.targetTileCenter, this.position);\n      const dir = direction(this.dir[1], this.dir[0], 'attack');\n      this.attackAnimName = `attack-${dir}`;\n      this.sprite.animName = dir;\n      this.sprite.playActionAnim(this.attackAnimName);\n      this.attacking(dt, this.targetSprite!);\n    }\n  }\n\n  private objHp = 0;\n  private obj!: TileObject;\n  private cooldown = 0;\n  private displayCenter = vec2.create();\n\n  private beginAttack(x: number, y: number, sprite: TileObjectSprite) {\n    this.obj = this.game.library.objects[this.game.map.getObject(x, y)];\n    if (this.obj.drops) {\n      this.objHp = this.obj.drops.hp;\n    }\n    vec2.add(this.displayCenter, this.targetTileCenter, sprite.jitter);\n    this.cooldown = 0;\n  }\n\n  private endAttack(x: number, y: number, sprite: TileObjectSprite) {\n  }\n\n  private attacking(dt: number, sprite: TileObjectSprite) {\n    this.cooldown -= dt;\n    if (this.cooldown < 0) {\n      this.cooldown = AttackCooldown;\n      this.game.dispatch(new PlayFX.Shake(PlayFX.Type.Shake, sprite));\n      this.game.dispatch(ShowParticles.splash(this.displayCenter, 20, parseInt(this.obj.color, 16), 0));\n      this.objHp--;\n    }\n\n    if (this.obj.drops && this.objHp < 0) {\n      for (const drop of generateDrops(this.obj.drops.table)) {\n        const itemDrop = ItemDrop.make(this.game, drop, this.displayCenter);\n        this.game.entities.add(itemDrop);\n      }\n      const replacement = this.obj.drops.replaceWith;\n      const id = replacement ?\n        this.game.library.objects.find(obj => obj && obj.name === replacement)!.id :\n        0;\n      this.game.map.setObject(this.targetTile[0], this.targetTile[1], id);\n    }\n  }\n}","import { DropTable } from 'common/data';\nimport { instantiate, randomValue } from 'common/random';\n\nexport function generateDrops(dropTable: DropTable) {\n  const numDrops = Math.round(randomValue(dropTable.numDrops));\n  const drops = [];\n  for (let i = 0; i < numDrops; i++) {\n    let x = Math.random();\n    for (const { prob, item } of dropTable.items) {\n      x -= prob;\n      if (x <= 0) {\n        drops.push(instantiate(item));\n        break;\n      }\n    }\n  }\n  return drops;\n}","import { Game } from 'app/game';\nimport { ItemDrop } from 'app/game/entities';\nimport { InventorySwap, InventoryUpdated } from 'app/game/messages';\nimport { Task } from 'app/game/tasks';\nimport { Inventory, Spatial } from 'app/game/traits';\nimport { Item, ItemSlot } from 'common/data';\nimport { vec2 } from 'gl-matrix';\n\nexport class InventoryTask extends Task {\n  public readonly runWhenPaused = true;\n\n  private readonly playerPos: vec2;\n  private readonly playerInv: ItemSlot[];\n\n  constructor(game: Game) {\n    super(game);\n    game.messages$.ofType(InventorySwap).subscribe(this.swapInventory);\n    this.playerPos = game.player.traits(Spatial).position;\n    this.playerInv = game.player.traits(Inventory).slots;\n  }\n\n  update(dt: number) {\n    for (const itemDrop of this.game.entities.ofType(ItemDrop)) {\n      const spatial = itemDrop.traits(Spatial);\n      const d = vec2.dist(spatial.position, this.playerPos);\n\n      if (itemDrop.age < 350 || d > 3.5) continue;\n\n      if (d > 0.5) {\n        // magnet (faster if nearer)\n        vec2.sub(spatial.velocity, this.playerPos, spatial.position);\n        const len = vec2.len(spatial.velocity);\n        vec2.normalize(spatial.velocity, spatial.velocity);\n        vec2.scale(spatial.velocity, spatial.velocity, 5 / (len * len));\n        continue;\n      }\n\n      if (this.pickUp(itemDrop.traits(Inventory).slots[0].item!))\n        itemDrop.delete();\n    }\n  }\n\n  private acceptable(item: Item | null, accepts: Item.Type[] | string | null) {\n    if (!item || !accepts) return true;\n    if (typeof accepts === 'string')\n      return !!item.id.match(accepts);\n    else\n      return accepts.indexOf(item.type) >= 0;\n  }\n\n  private pickUp(item: Item) {\n    for (const slot of this.playerInv) {\n      if (slot.item) continue;\n      if (!this.acceptable(item, slot.accepts)) continue;\n\n      slot.item = item;\n      this.game.dispatch(new InventoryUpdated(slot));\n      return true;\n    }\n    return false;\n  }\n\n  private swapInventory = (swap: InventorySwap) => {\n    const { slotA, slotB } = swap;\n    if (!this.acceptable(slotA.item, slotB.accepts) || !this.acceptable(slotB.item, slotA.accepts))\n      return;\n    const tmp = slotB.item;\n    slotB.item = slotA.item;\n    slotA.item = tmp;\n    this.game.dispatch(new InventoryUpdated(slotA));\n    this.game.dispatch(new InventoryUpdated(slotB));\n  }\n}","import { DisplayTileSize } from 'app';\nimport { Game } from 'app/game';\nimport { Task } from 'app/game/tasks';\nimport { Spatial } from 'app/game/traits';\nimport { vec2 } from 'gl-matrix';\n\nexport class CameraUpdateTask extends Task {\n  public readonly runWhenPaused = true;\n\n  private readonly position: vec2;\n  private readonly cameraOffset = vec2.create();\n\n  constructor(game: Game) {\n    super(game);\n    this.position = game.player.traits.get(Spatial).position;\n  }\n\n  public update(dt: number) {\n    vec2.scaleAndAdd(this.cameraOffset, [0, -DisplayTileSize], this.position, DisplayTileSize);\n    vec2.floor(this.game.view.camera.offset, this.cameraOffset);\n  }\n}","import { DisplayTileSize } from 'app';\nimport { TextureSprite } from 'app/components';\nimport { Game } from 'app/game';\nimport { Task } from 'app/game/tasks';\nimport { Camera } from 'app/game/Camera';\nimport { vec2 } from 'gl-matrix';\nimport { Container, RenderTexture, Sprite, SCALE_MODES, TransformStatic } from 'pixi.js';\n\nconst TileSize = 16;\n\nexport class TerrainDisplayTask extends Task {\n  public readonly runWhenPaused = true;\n\n  private readonly sprites = new Map<string, TextureSprite>();\n  private readonly container = new Container();\n  private readonly renderTex = RenderTexture.create(1, 1, SCALE_MODES.NEAREST);\n  private readonly view = Object.assign(new Sprite(this.renderTex), {\n    layer: Camera.Layer.Terrain,\n    sortOffset: vec2.fromValues(0, 0)\n  });\n\n  constructor(game: Game) {\n    super(game);\n    this.game.view.camera.add(this.view);\n  }\n\n  public update(dt: number) {\n    this.updateVisibility();\n    this.updateSprites(dt);\n    this.render();\n  }\n\n  private updateVisibility() {\n    const { offset: [x, y], viewWidth: w, viewHeight: h } = this.game.view.camera;\n    const r = Math.ceil(Math.sqrt(w * w + h * h) / 2 + DisplayTileSize);\n    const origin = vec2.fromValues(x, y);\n    const scale = DisplayTileSize / TileSize;\n    function isVisible(x: number, y: number) {\n      const dx = x * scale - origin[0], dy = y * scale - origin[1];\n      return (dx * dx + dy * dy) <= r * r;\n    }\n\n    const removePool: TextureSprite[] = [];\n    for (const [key, sprite] of this.sprites) {\n      const { x, y } = (sprite.transform as TransformStatic).position;\n      if (!isVisible(x, y)) {\n        removePool.push(sprite);\n        this.sprites.delete(key);\n      }\n    }\n\n    const map = this.game.map;\n    const left = Math.max(0, Math.floor((x - r) / DisplayTileSize));\n    const right = Math.min(map.width - 1, Math.ceil((x + r) / DisplayTileSize));\n    const top = Math.max(0, Math.floor((y - r) / DisplayTileSize));\n    const bottom = Math.min(map.height - 1, Math.ceil((y + r) / DisplayTileSize));\n\n    const terrainData = this.game.library.terrains;\n    for (let x = left; x <= right; x++)\n      for (let y = top; y <= bottom; y++) {\n        const terrain = terrainData[map.getTerrain(x, y)];\n        if (!terrain) continue;\n\n        const tx = x * TileSize;\n        const ty = y * TileSize;\n        if (!isVisible(tx, ty))\n          continue;\n\n        const key = `${x}:${y}`;\n        if (this.sprites.has(key)) continue;\n\n        const sprite = removePool.pop() || new TextureSprite();\n        sprite.setTexture(terrain.texture, x + y * map.width);\n        sprite.position.set(tx, ty);\n        if (!sprite.parent)\n          this.container.addChild(sprite);\n        this.sprites.set(key, sprite);\n      }\n\n    for (const sprite of removePool)\n      this.container.removeChild(sprite);\n  }\n\n  private elapsed = 0;\n  private updateSprites(dt: number) {\n    this.elapsed += dt;\n    for (const sprite of this.container.children)\n      (sprite as TextureSprite).update(this.elapsed);\n  }\n\n  private render() {\n    const { offset: [x, y], viewWidth: w, viewHeight: h } = this.game.view.camera;\n    const r = Math.ceil(Math.sqrt(w * w + h * h));\n\n    let minX: number = Number.MAX_VALUE, minY: number = Number.MAX_VALUE;\n    for (const sprite of this.sprites.values()) {\n      const { x, y } = (sprite.transform as TransformStatic).position;\n      minX = Math.min(minX, x);\n      minY = Math.min(minY, y);\n    }\n    this.container.setTransform(-minX, -minY);\n\n    const length = Math.ceil(r / DisplayTileSize) * TileSize * 2;\n    const texSize = 1 << (32 - Math.clz32(length - 1));\n    this.renderTex.resize(texSize, texSize);\n    this.game.app.renderer.render(this.container, this.renderTex);\n    const scale = DisplayTileSize / TileSize;\n    this.view.setTransform(\n      (minX * scale - x + w / 2), (minY * scale - y + h / 2),\n      scale, scale\n    );\n  }\n}","import { DisplayTileSize } from 'app';\nimport { TextureSprite } from 'app/components';\nimport { Game } from 'app/game';\nimport { TileObjectSprite } from 'app/game/interfaces';\nimport { Task } from 'app/game/tasks';\nimport { Camera } from 'app/game/Camera';\nimport { TileObject } from 'common/data';\nimport { Noise } from 'common/noise';\nimport { vec2 } from 'gl-matrix';\nimport { Rectangle } from 'pixi.js';\nimport { create as createRand } from 'random-seed';\n\nconst ObjectSize = 32;\nconst MarginSize = 5;\n\nclass ObjectSprite extends TextureSprite implements Camera.Sprite, TileObjectSprite {\n  public readonly runWhenPaused = true;\n\n  public readonly jitter = vec2.fromValues(0, 0);\n  public readonly sortOffset = vec2.fromValues(0, 0);\n  public layer = Camera.Layer.Objects;\n  public readonly coords = vec2.fromValues(-1, -1);\n\n  constructor(public readonly game: Game) {\n    super();\n    this.outline = true;\n    this.anchor.set(0.5, 1);\n  }\n\n  public setTile(x: number, y: number, obj: TileObject) {\n    vec2.set(this.coords, x, y);\n\n    this.layer = obj.terrain ? Camera.Layer.Terrain : Camera.Layer.Objects;\n    this.setTexture(obj.texture, x + y * this.game.map.width);\n\n    const scale = obj.scale || 1;\n\n    const sw = ObjectSize / scale, sh = ObjectSize / scale;\n    this.hitArea = new Rectangle(-sw / 2, -sh, sw, sh);\n    this.interactive = obj.interactive || false;\n\n    const displayScale = scale * DisplayTileSize / ObjectSize;\n    this.scale.set(displayScale, displayScale);\n  }\n}\n\nfunction tileKey(x: number, y: number) {\n  return `${x}:${y}`;\n}\n\nexport class ObjectDisplayTask extends Task {\n  private readonly sprites = new Map<string, ObjectSprite>();\n  private readonly jitterNoiseX: Noise;\n  private readonly jitterNoiseY: Noise;\n\n  constructor(game: Game) {\n    super(game);\n\n    const rand = createRand(this.game.map.props.seed);\n    this.jitterNoiseX = new Noise(rand, 1, 1);\n    this.jitterNoiseY = new Noise(rand, 1, 1);\n    this.game.map.changes$.subscribe(({ x, y }) => {\n      const key = tileKey(x, y);\n      const sprite = this.sprites.get(key);\n      if (sprite) {\n        this.game.view.camera.removeChild(sprite);\n        this.sprites.delete(key);\n      }\n    });\n  }\n\n  public update(dt: number) {\n    this.updateVisibility();\n    this.updateSprites(dt);\n    this.updateTransforms();\n  }\n\n  private updateVisibility() {\n    const { offset: [offsetX, offsetY], viewWidth: w, viewHeight: h } = this.game.view.camera;\n    const margin = MarginSize * DisplayTileSize;\n    const halfW = w / 2 + margin, halfH = h / 2 + margin;\n    function isVisible(x: number, y: number) {\n      return x >= offsetX - halfW && x <= offsetX + halfW &&\n        y >= offsetY - halfH && y <= offsetY + halfH;\n    }\n\n    const removePool: ObjectSprite[] = [];\n    let updated = false;\n\n    for (const [key, sprite] of this.sprites) {\n      if (!isVisible(sprite.coords[0] * DisplayTileSize, sprite.coords[1] * DisplayTileSize)) {\n        removePool.push(sprite);\n        this.sprites.delete(key);\n        updated = true;\n      }\n    }\n\n    const map = this.game.map;\n    const left = Math.max(0, Math.floor((offsetX - halfW) / DisplayTileSize));\n    const right = Math.min(map.width - 1, Math.ceil((offsetX + halfW) / DisplayTileSize));\n    const top = Math.max(0, Math.floor((offsetY - halfH) / DisplayTileSize));\n    const bottom = Math.min(map.height - 1, Math.ceil((offsetY + halfH) / DisplayTileSize));\n\n    const objectData = this.game.library.objects;\n    for (let x = left; x <= right; x++)\n      for (let y = top; y <= bottom; y++) {\n        const obj = objectData[map.getObject(x, y)];\n        if (!obj) continue;\n\n        const tx = x * DisplayTileSize;\n        const ty = y * DisplayTileSize;\n        if (!isVisible(tx, ty))\n          continue;\n\n        const key = tileKey(x, y);\n        if (this.sprites.has(key)) continue;\n\n        const sprite = removePool.pop() || new ObjectSprite(this.game);\n        sprite.setTile(x, y, obj);\n        if (obj.jitter) {\n          sprite.jitter[0] = Math.round((this.jitterNoiseX.noise2D(x, y) * 2 - 1) * (1 / 3));\n          sprite.jitter[1] = Math.round((this.jitterNoiseY.noise2D(x, y) * 2 - 1) * (1 / 3));\n        }\n\n        if (!sprite.parent)\n          this.game.view.camera.add(sprite);\n\n        this.sprites.set(key, sprite);\n        updated = true;\n      }\n\n    for (const sprite of removePool)\n      this.game.view.camera.removeChild(sprite);\n    return updated;\n  }\n\n  private elapsed = 0;\n  private updateSprites(dt: number) {\n    this.elapsed += dt;\n    for (const sprite of this.sprites.values())\n      (sprite as TextureSprite).update(this.elapsed);\n  }\n\n  private readonly spriteCoords = vec2.create();\n  private updateTransforms() {\n    const map = this.game.map;\n    const objectData = this.game.library.objects;\n\n    for (const sprite of this.sprites.values()) {\n      const obj = objectData[map.getObject(sprite.coords[0], sprite.coords[1])];\n\n      vec2.add(this.spriteCoords, sprite.coords, sprite.jitter);\n      this.spriteCoords[0] += 0.5;\n      this.spriteCoords[1] += obj.terrain ? 1 : 0.5;\n      this.game.view.camera.toCameraPoint(this.spriteCoords, sprite.position);\n    }\n  }\n}","import { DisplayTileSize } from 'app';\nimport { Entity } from 'app/game/entities';\nimport { Task } from 'app/game/tasks';\nimport { Float, Spatial } from 'app/game/traits';\nimport { Camera } from 'app/game/Camera';\nimport { vec2 } from 'gl-matrix';\n\nconst MarginSize = 5;\n\nexport class EntityDisplayTask extends Task {\n  public readonly runWhenPaused = true;\n\n  private readonly visible = new Set<Entity>();\n\n  public update(dt: number) {\n    this.updateVisibility();\n    this.updateSprites(dt);\n    this.updateTransforms();\n  }\n\n  private halfSize = vec2.create();\n  private tr = vec2.create();\n  private updateVisibility() {\n    const { offset, viewWidth: w, viewHeight: h } = this.game.view.camera;\n    const margin = MarginSize * DisplayTileSize;\n    vec2.scaleAndAdd(this.halfSize, [margin, margin], [w, h], 2);\n    const isVisible = (position: vec2) => {\n      vec2.scaleAndAdd(this.tr, this.halfSize, position, -DisplayTileSize);\n      vec2.add(this.tr, this.tr, offset);\n      return this.tr[0] > 0 && this.tr[1] > 0;\n    };\n\n    for (const entity of this.visible) {\n      const { position, sprite } = entity.traits.get(Spatial);\n      if (!entity.game || !isVisible(position)) {\n        this.visible.delete(entity);\n        this.game.view.camera.removeChild(sprite);\n      }\n    }\n\n    for (const entity of this.game.entities.withTrait(Spatial)) {\n      const { position, sprite } = entity.traits.get(Spatial);\n      if (isVisible(position) && !this.visible.has(entity)) {\n        this.visible.add(entity);\n        this.game.view.camera.add(Object.assign(sprite, { layer: Camera.Layer.Objects }));\n      }\n    }\n  }\n\n  private elapsed = 0;\n  private updateSprites(dt: number) {\n    this.elapsed += dt;\n    for (const entity of this.visible)\n      entity.traits.get(Spatial).sprite.update(this.elapsed);\n  }\n\n  private updateTransforms() {\n    for (const entity of this.visible) {\n      const { position, sprite, scale } = entity.traits.get(Spatial);\n      const float = entity.traits.get(Float);\n      sprite.anchor.set(0.5, 1);\n      sprite.scale.set(scale[0], scale[1]);\n\n      const terrain = this.game.library.terrains[this.game.map.getTerrain(position[0], position[1])];\n      const liquid = terrain && terrain.liquid;\n      sprite.clip = liquid ? [0, 1 / 6] : undefined;\n\n      const z = float ? float.z[0] : 0;\n      this.game.view.camera.toCameraPoint(position, sprite.position, z);\n      vec2.set(sprite.sortOffset, 0, z);\n    }\n  }\n}","import { Group, Tween } from '@tweenjs/tween.js';\nimport { Game } from 'app/game';\nimport { PlayFX } from 'app/game/messages';\nimport { Task } from 'app/game/tasks';\n\nexport class FXTask extends Task {\n  private readonly animTargets = new Set();\n  private readonly tween = new Group();\n  private elapsed = 0;\n\n  constructor(game: Game) {\n    super(game);\n    this.game.messages$.ofType(PlayFX.Shake).subscribe(this.shake);\n  }\n\n  update(dt: number) {\n    this.elapsed += dt;\n    this.tween.update(this.elapsed);\n  }\n\n  private shake = ({ target }: PlayFX.Shake) => {\n    if (target) {\n      if (this.animTargets.has(target))\n        return;\n      this.animTargets.add(target);\n      target.renderTranslation = target.renderTranslation || [0, 0];\n      const offsets = [4, -4, 3, -3, 2, -2, 1, -1, 0];\n      new Tween(target.renderTranslation, this.tween)\n        .to({ [0]: offsets.slice(0, 4) }, 300)\n        .chain(new Tween(target.renderTranslation, this.tween).to({ [0]: offsets.slice(4) }, 300))\n        .onComplete(() => this.animTargets.delete(target))\n        .start(this.elapsed);\n    }\n  }\n}","import { Game } from 'app/game';\nimport { ShowParticles } from 'app/game/messages';\nimport { Task } from 'app/game/tasks';\nimport { vec2 } from 'gl-matrix';\nimport { clamp } from 'lodash';\nimport { particles, Sprite, Texture } from 'pixi.js';\n\nconst ParticleLife = 1000;\nconst ParticleSize = 16;\nconst ParticleGravity = -10;\nconst ParticleRestitution = 0.5;\n\nclass Particle extends Sprite {\n  readonly coords: vec2;\n  readonly velocity: vec2;\n  readonly z: vec2;\n  readonly gravity: boolean;\n  life = ParticleLife * (Math.random() * 0.5 + 0.75);\n\n  constructor(type: ShowParticles.Type, coords: vec2, z: number, color: number) {\n    super(Texture.fromFrame('sprites/ui/particle'));\n\n    let size;\n    if (type === ShowParticles.Type.Splash) {\n      this.coords = vec2.random(vec2.create(), 0.25);\n      this.velocity = vec2.random(vec2.create(), 0.5);\n      this.z = vec2.fromValues(z + 0.25 + Math.random() * 0.5, Math.random());\n      this.gravity = true;\n      size = clamp(ParticleSize * (Math.random() + 0.5), 10, 22);\n    } else {\n      this.coords = vec2.fromValues(Math.random() - 0.5, 0);\n      this.velocity = vec2.fromValues(0, 0);\n      this.z = vec2.fromValues(z + 0.25 + Math.random(), Math.random() * 0.5 + 0.25);\n      this.gravity = false;\n      size = clamp(ParticleSize * Math.random(), 10, 16);\n      this.alpha = 0.7;\n    }\n\n    vec2.add(this.coords, this.coords, coords);\n\n    // even size to reduce scale artifacts\n    size = (size + 1) & ~1;\n    this.scale.set(size / ParticleSize, size / ParticleSize);\n\n    const colorJitter = Math.floor((Math.random() * 2 - 1) * 32);\n    let r = (color >> 16) & 0xff, g = (color >> 8) & 0xff, b = color & 0xff;\n    r = clamp(r + colorJitter, 0, 255);\n    g = clamp(g + colorJitter, 0, 255);\n    b = clamp(b + colorJitter, 0, 255);\n    this.tint = (r << 16) + (g << 8) + b;\n  }\n}\n\nexport class ParticleTask extends Task {\n  private readonly particles: Particle[] = [];\n  private readonly overlay = Object.assign(new particles.ParticleContainer(), { layout: () => { } });\n\n  constructor(game: Game) {\n    super(game);\n    game.view.add(this.overlay);\n    game.messages$.ofType(ShowParticles).subscribe(this.showParticles);\n  }\n\n  private showParticles = ({ particleType, coords, numParticles, color, z }: ShowParticles) => {\n    for (let i = 0; i < numParticles; i++) {\n      const particle = new Particle(particleType, coords, z, color);\n\n      this.overlay.addChild(particle);\n      this.particles.push(particle);\n    }\n  }\n\n  public update(dt: number) {\n    const t = dt / 1000;\n    for (let i = this.particles.length - 1; i >= 0; i--) {\n      const particle = this.particles[i];\n      particle.life -= dt;\n      if (particle.life <= 0) {\n        this.overlay.removeChild(particle);\n        this.particles.splice(i, 1);\n        continue;\n      }\n\n      vec2.scaleAndAdd(particle.coords, particle.coords, particle.velocity, t);\n\n      const gravity = particle.gravity ? ParticleGravity : 0;\n      particle.z[0] += particle.z[1] * t + 0.5 * gravity * t * t;\n      particle.z[1] += gravity * t;\n      if (particle.z[0] <= 0) {\n        particle.z[0] = 0;\n        particle.z[1] = -particle.z[1] * ParticleRestitution;\n        vec2.scale(particle.velocity, particle.velocity, ParticleRestitution);\n      }\n\n      this.game.view.camera.toCameraPoint(particle.coords, particle.position, particle.z[0]);\n    }\n  }\n}","import { Game } from 'app/game';\nimport { ItemDrop } from 'app/game/entities';\nimport { HUDElement } from 'app/game/hud';\nimport 'app/game/hud/debug.css';\nimport { InventoryUpdated } from 'app/game/messages';\nimport { Inventory, PlayerData, Stats } from 'app/game/traits';\nimport { makeSolution } from 'common/logic/alchemy';\nimport { instantiate, randomValue, RandomValue } from 'common/random';\nimport { compact, padStart } from 'lodash';\n\nconst ConsoleHTML = `\n<div class=\"debug-console\">\n  <div class=\"debug-log-box\">\n    <div class=\"debug-log-scroll\">\n      <div class=\"debug-log\"></div>\n    </div>\n  </div>\n  <div>\n    <input class=\"debug-input\">\n  </div>\n</div>\n`;\n\nexport class DebugConsole implements HUDElement {\n  public readonly display = null;\n\n  private readonly root = new DOMParser().parseFromString(ConsoleHTML, 'text/html').querySelector('.debug-console') as HTMLElement;\n  private readonly input = this.root.querySelector('.debug-input') as HTMLInputElement;\n  private readonly log = this.root.querySelector('.debug-log') as HTMLDivElement;\n\n  constructor(private readonly game: Game) {\n    document.body.appendChild(this.root);\n    this.root.addEventListener('keydown', this.onKeyDown);\n    this.game.app.view.addEventListener('keydown', this.onKeyDown);\n  }\n\n  private lastInput = '';\n\n  private onKeyDown = (event: KeyboardEvent) => {\n    const isActive = this.root.classList.contains('active');\n    if (isActive && event.key === 'Escape') {\n      this.toggleInput();\n    } else if (isActive && event.key === 'ArrowUp' && event.target === this.input) {\n      this.input.value = this.lastInput;\n      this.input.setSelectionRange(this.input.value.length, this.input.value.length);\n      event.preventDefault();\n    } else if (event.key.toLowerCase() === 't' || event.key === '/') {\n      if (isActive)\n        this.input.focus();\n      else if (document.activeElement === this.game.app.view)\n        this.toggleInput();\n\n      if (event.key === '/' && event.target !== this.input)\n        this.input.value = '/';\n    } else if (event.key === 'Enter' && event.target === this.input) {\n      this.processInput(this.input.value);\n      this.input.value = '';\n    }\n    if (event.target !== this.input)\n      event.preventDefault();\n  }\n\n  update() {\n  }\n\n  dispose() {\n    this.root.remove();\n    document.body.removeEventListener('keydown', this.onKeyDown);\n  }\n\n  toggleInput() {\n    if (this.root.classList.toggle('active'))\n      this.input.focus();\n    else\n      this.game.app.view.focus();\n  }\n\n  addLog(text: string) {\n    const entry = document.createElement('li');\n    entry.classList.add('debug-log-entry');\n    entry.innerText = text;\n    this.log.appendChild(entry);\n    entry.scrollIntoView();\n  }\n\n  private processInput(input: string) {\n    if (!input) return;\n    this.lastInput = input;\n\n    if (!input.startsWith('/')) {\n      this.addLog(input);\n      return;\n    }\n    const [cmd, ...args] = compact(input.split(' ').map(part => part.trim()));\n    switch (cmd) {\n      case '/clear': {\n        while (this.log.lastChild)\n          this.log.removeChild(this.log.lastChild);\n      } break;\n      case '/clear-inv': {\n        const { slots } = this.game.player.traits(Inventory);\n        for (const slot of slots) {\n          slot.item = null;\n          this.game.dispatch(new InventoryUpdated(slot));\n        }\n      } break;\n      case '/drops': {\n        for (const obj of this.game.library.objects.filter(obj => obj && obj.drops)) {\n          for (const { item } of obj.drops!.table.items) {\n            const drop = ItemDrop.make(this.game, instantiate(item));\n            this.game.entities.add(drop);\n          }\n        }\n      } break;\n      case '/give': {\n        for (const obj of this.game.library.objects.filter(obj => obj && obj.drops)) {\n          for (const { item: template } of obj.drops!.table.items) {\n            const item = instantiate(template);\n            if (args.indexOf(item.id) < 0) continue;\n            const drop = ItemDrop.make(this.game, item);\n            this.game.entities.add(drop);\n          }\n        }\n      } break;\n      case '/dupe': {\n        const { hotbarSelection: sel } = this.game.player.traits(PlayerData);\n        const { slots } = this.game.player.traits(Inventory);\n        const item = slots[sel].item;\n        if (item) {\n          const drop = ItemDrop.make(this.game, item);\n          this.game.entities.add(drop);\n        }\n      } break;\n      case '/solution': {\n        const element = args[0];\n        if (!this.game.library.elements[element]) break;\n        const amount = Number(args[1]) || 100;\n        const drop = ItemDrop.make(this.game, makeSolution([{ element, amount }], this.game.library.elements));\n        this.game.entities.add(drop);\n      } break;\n      case '/speed': {\n        const boost = Number(args[0]) || 0;\n        this.game.player.traits(Stats).boost.spd = boost;\n      } break;\n      case '/elements': {\n        const valueOf = (value: RandomValue) => padStart(randomValue(value).toFixed(2), 5, ' ');\n        this.addLog('|   name   |    fission   |    fusion    | color |');\n        for (const name of Object.keys(this.game.library.elements)) {\n          const elem = this.game.library.elements[name];\n          this.addLog(` \\\n${padStart(name, 10, ' ')}\\\n (${valueOf(elem.fissionThreshold)}, ${valueOf(elem.fissionRate)})\\\n (${valueOf(elem.fusionThreshold)}, ${valueOf(elem.fusionRate)})\\\n ${padStart(elem.color, 6, '0')}`);\n        }\n      } break;\n      default:\n        this.addLog('unknown command: ' + cmd);\n        break;\n    }\n  }\n}","import { Panel } from 'app/components';\nimport { Game } from 'app/game';\nimport { HUDElement } from 'app/game/hud';\nimport { Spatial } from 'app/game/traits';\nimport { vec2 } from 'gl-matrix';\nimport { Sprite, Texture } from 'pixi.js';\n\nconst Opacity = 0.8;\nconst ObjectAlpha = 0.25;\n\nexport class MiniMap extends Panel implements HUDElement {\n  public readonly display = this;\n\n  private readonly offset: vec2;\n  private readonly mapSprite = new Sprite();\n  private isFullscreen = false;\n  private isMouseOver = false;\n\n  private mapDirty = false;\n  private readonly canvas: HTMLCanvasElement;\n  private readonly mapData: Uint8ClampedArray;\n\n  constructor(private readonly game: Game) {\n    super(game.app);\n    this.offset = this.game.player.traits.get(Spatial).position;\n\n    this.content.addChild(this.mapSprite);\n    this.mapSprite.anchor.set(0, 0);\n    this.alpha = Opacity;\n\n    this.content.interactive = true;\n    this.content.on('pointerover', () => this.isMouseOver = true);\n    this.content.on('pointerout', () => this.isMouseOver = false);\n    this.content.on('pointerdown', () => this.isFullscreen = true);\n    this.content.on('pointerup', () => this.isFullscreen = false);\n    this.content.on('pointerupoutside', () => this.isFullscreen = false);\n\n    const map = this.game.map;\n    this.canvas = document.createElement('canvas');\n    this.canvas.width = map.width;\n    this.canvas.height = map.height;\n    this.mapData = new Uint8ClampedArray(map.width * map.height * 4);\n    this.mapSprite.texture = Texture.fromCanvas(this.canvas);\n\n    this.game.map.changes$.subscribe(({ x, y }) => this.renderTile(x, y));\n    for (let y = 0; y < map.height; y++) {\n      for (let x = 0; x < map.width; x++)\n        this.renderTile(x, y);\n    }\n    this.update();\n  }\n\n  private renderTile(x: number, y: number) {\n    const index = (x + y * this.game.map.width) * 4;\n\n    function parseColor(color: string) {\n      if (!color) return null;\n      const colorNum = parseInt(color, 16);\n      return [(colorNum >>> 16) & 0xff, (colorNum >>> 8) & 0xff, (colorNum >>> 0) & 0xff];\n    }\n\n    const terrain = this.game.library.terrains[this.game.map.getTerrain(x, y)];\n    const terrainColor = terrain ? parseColor(terrain.color)! : [0, 0, 0];\n\n    const object = this.game.library.objects[this.game.map.getObject(x, y)];\n    const objectColor = object ? parseColor(object.color) : null;\n\n    let color = terrainColor;\n    if (objectColor !== null) {\n      color = [\n        terrainColor[0] * (1 - ObjectAlpha) + objectColor[0] * ObjectAlpha,\n        terrainColor[1] * (1 - ObjectAlpha) + objectColor[1] * ObjectAlpha,\n        terrainColor[2] * (1 - ObjectAlpha) + objectColor[2] * ObjectAlpha\n      ];\n    }\n\n    this.mapData[index] = color[0];\n    this.mapData[index + 1] = color[1];\n    this.mapData[index + 2] = color[2];\n    this.mapData[index + 3] = 0xff;\n    this.mapDirty = true;\n  }\n\n  update() {\n    if (!this.mapDirty) return;\n\n    const ctx = this.canvas.getContext('2d')!;\n    const img = ctx.getImageData(0, 0, this.canvas.width, this.canvas.height);\n    img.data.set(this.mapData);\n    ctx.putImageData(img, 0, 0);\n    this.mapSprite.texture.update();\n    this.mapDirty = false;\n  }\n\n  layout(width: number, height: number) {\n    if (this.isFullscreen) {\n      this.x = 16;\n      this.y = 16;\n      super.layout(width - 32, height - 32);\n      this.mapSprite.scale.set(1, 1);\n      this.alpha = 1;\n      this.mapSprite.position.set(\n        -this.offset[0] + (width - 32) / 2,\n        -this.offset[1] + (height - 32) / 2\n      );\n    } else {\n      this.x = width - 16 - 256;\n      this.y = 16;\n      super.layout(256, 256);\n      this.mapSprite.scale.set(4, 4);\n      this.alpha = this.isMouseOver ? 1 : Opacity;\n      this.mapSprite.position.set(\n        -this.offset[0] * 4 + 256 / 2,\n        -this.offset[1] * 4 + 256 / 2\n      );\n    }\n  }\n}","import { SlotView } from 'app/components';\nimport { Game } from 'app/game';\nimport { HUDElement } from 'app/game/hud';\nimport { Inventory, PlayerData } from 'app/game/traits';\nimport { ItemSlot } from 'common/data';\nimport { Container, Sprite, Texture } from 'pixi.js';\n\nconst HotbarKeys: [number, string][] = [\n  [0, '1'],\n  [1, '2'],\n  [2, '3'],\n  [3, '4'],\n  [4, '5'],\n  [5, '6'],\n  [6, '7'],\n  [7, '8'],\n];\n\nexport class Hotbar extends Container implements HUDElement {\n  public readonly display = this;\n\n  private readonly bg = new Sprite(Texture.WHITE);\n  private readonly selection = new Sprite(Texture.fromFrame('sprites/ui/inv-selection'));\n\n  private readonly slots: ItemSlot[];\n  private readonly player: PlayerData;\n  private readonly slotViews: SlotView[];\n\n  constructor(private readonly game: Game) {\n    super();\n    this.slots = game.player.traits(Inventory).slots.slice(0, 8);\n    this.player = game.player.traits(PlayerData);\n\n    this.bg.tint = 0x808080;\n\n    const views = new Container();\n    views.addChild(this.bg);\n\n    this.slotViews = this.slots.map(slot => new SlotView(game, slot));\n    for (const view of this.slotViews) {\n      view.enabled = false;\n      view.showTooltip = false;\n      view.alwaysInteractive = true;\n      views.addChild(view);\n      view.on('pointerdown', () => this.player.hotbarSelection = this.slots.indexOf(view.slot));\n    }\n\n    this.addChild(views);\n    this.addChild(this.selection);\n\n    views.alpha = 0.65;\n    this.interactive = true;\n    this.on('pointerover', () => views.alpha = 1);\n    this.on('pointerout', () => views.alpha = 0.65);\n\n    game.app.view.addEventListener('wheel', this.wheelSelection);\n  }\n\n  private wheelDebounce = 0;\n  private wheelSelection = (event: WheelEvent) => {\n    if (this.elapsed - this.wheelDebounce < 20) return;\n\n    const delta = event.deltaX + event.deltaY;\n    if (Math.abs(delta) < 32) return;\n\n    const offset = Math.sign(delta);\n    const numSlots = this.slots.length;\n    this.player.hotbarSelection = (this.player.hotbarSelection + offset + numSlots) % numSlots;\n    this.wheelDebounce = this.elapsed;\n  }\n\n  dispose() {\n    this.game.app.view.removeEventListener('wheel', this.wheelSelection);\n  }\n\n  private elapsed = 0;\n  update(dt: number) {\n    for (const [slotNum, key] of HotbarKeys) {\n      if (this.game.keyboard.isDown(key))\n        this.player.hotbarSelection = slotNum;\n    }\n    this.elapsed += dt;\n  }\n\n  layout(width: number, height: number) {\n    const contentWidth = 4 + (SlotView.Size + 4) * this.slotViews.length;\n    const contentHeight = SlotView.Size + 7;\n    this.position.set(\n      (width - contentWidth) / 2,\n      height - contentHeight\n    );\n\n    let x = 4;\n    for (const view of this.slotViews) {\n      view.position.set(x, 4);\n      view.layout();\n      x += SlotView.Size + 4;\n    }\n    this.selection.position.set((SlotView.Size + 4) * this.player.hotbarSelection, 0);\n\n    this.bg.position.set(0, 0);\n    this.bg.width = contentWidth;\n    this.bg.height = contentHeight;\n  }\n}","import { App } from 'app';\nimport { TextToolTip } from 'app/components/TextToolTip';\nimport { Effect } from 'common/data';\nimport { Sprite, Texture } from 'pixi.js';\n\nexport class EffectToolTip extends TextToolTip {\n  private effect?: Effect;\n  private readonly icon = new Sprite();\n\n  constructor(app: App) {\n    super(app, '', {\n      default: { align: 'left' },\n      s: { fontSize: 12 },\n      name: { fontWeight: 'bold', valign: 'middle' },\n      desc: { fontStyle: 'italic' },\n      time: { fill: '#d0d0d0' }\n    });\n\n    this.icon.scale.set(2, 2);\n    this.icon.position.set(20, 20);\n    this.alpha = 0.75;\n    this.addChild(this.icon);\n  }\n\n  public setEffect(effect: Effect) {\n    this.effect = effect;\n    this.icon.texture = Texture.fromFrame(`sprites/effects/${effect.type}`);\n    this.update();\n  }\n\n  update() {\n    if (!this.effect) return;\n\n    const texts: string[] = [\n      `<s>     </s><name>${this.effect.name}</name>`,\n      `<desc>${this.effect.description}</desc>`,\n      `<time>${Math.floor(this.effect.duration / 1000)}s remains</time>`\n    ];\n\n    this.text = texts.join('\\n');\n  }\n}","import { Text } from 'app/components';\nimport { EffectToolTip } from 'app/components/EffectToolTip';\nimport { Game } from 'app/game';\nimport { HUDElement } from 'app/game/hud';\nimport { Stats, StatList } from 'app/game/traits';\nimport { Effect } from 'common/data';\nimport { Container, Sprite, Texture } from 'pixi.js';\n\nconst HPBarWidth = 256;\nconst HPBarHeight = 32;\n\nexport class Status extends Container implements HUDElement {\n  public readonly display = this;\n\n  private readonly stats: StatList;\n  private readonly effects: Effect[];\n\n  private readonly hpBarIcon = new Sprite(Texture.fromFrame('sprites/ui/status-hp'));\n  private readonly hpBarBg = new Sprite(Texture.WHITE);\n  private readonly hpBarFill = new Sprite(Texture.WHITE);\n  private readonly hpBarText = new Text();\n\n  private readonly effectIcons: (Sprite & { effectIndex: number })[] = [];\n  private readonly effectToolTip: EffectToolTip;\n\n  constructor(private readonly game: Game) {\n    super();\n    this.stats = Stats.compute(game.player.traits(Stats));\n    this.effects = game.player.traits(Stats).effects;\n    this.effectToolTip = new EffectToolTip(game.app);\n\n    this.hpBarBg.tint = 0x808080;\n    this.hpBarBg.width = HPBarWidth;\n    this.hpBarBg.height = HPBarHeight;\n\n    const hpBar = new Container();\n    this.addChild(hpBar);\n\n    hpBar.addChild(this.hpBarBg);\n    hpBar.addChild(this.hpBarFill);\n    hpBar.addChild(this.hpBarText);\n    hpBar.addChild(this.hpBarIcon);\n\n    hpBar.alpha = 0.65;\n    this.hpBarText.visible = false;\n    hpBar.interactive = true;\n    hpBar.on('pointerover', () => {\n      hpBar.alpha = 1;\n      this.hpBarText.visible = true;\n    });\n    hpBar.on('pointerout', () => {\n      hpBar.alpha = 0.65;\n      this.hpBarText.visible = false;\n    });\n  }\n\n  update(dt: number) {\n    const { hp, maxHp } = this.stats;\n    const percentage = hp / maxHp;\n\n    this.hpBarText.text = `${Math.ceil(hp)}/${maxHp}`;\n    this.hpBarFill.width = HPBarWidth * percentage;\n    this.hpBarFill.height = HPBarHeight;\n\n    if (percentage < 0.3) this.hpBarFill.tint = 0xa00000;\n    else if (percentage < 0.6) this.hpBarFill.tint = 0xa0a000;\n    else this.hpBarFill.tint = 0x00a000;\n\n    const showEffects = this.effects.filter(({duration}) => duration > 0);\n    while (this.effectIcons.length < showEffects.length) {\n      const icon = Object.assign(new Sprite(), { effectIndex: 0 });\n      icon.interactive = true;\n      icon.scale.set(2, 2);\n      this.addChild(icon);\n\n      this.game.app.toolTip.add(icon, () => {\n        this.effectToolTip.setEffect(this.effects[icon.effectIndex]);\n        return this.effectToolTip;\n      });\n      this.effectIcons.push(icon);\n    }\n    while (this.effectIcons.length > showEffects.length) {\n      this.removeChild(this.effectIcons.splice(this.effectIcons.length - 1, 1)[0]);\n    }\n\n    for (let i = 0; i < showEffects.length; i++) {\n      this.effectIcons[i].texture = Texture.fromFrame(`sprites/effects/${showEffects[i].type}`);\n      this.effectIcons[i].effectIndex = this.effects.indexOf(showEffects[i]);\n    }\n    this.effectToolTip.update();\n  }\n\n  layout(width: number, height: number) {\n    const hpBarX = width - HPBarWidth - 16, hpBarY = 256 + 32;\n    this.hpBarBg.position.set(hpBarX, hpBarY);\n    this.hpBarFill.position.set(hpBarX, hpBarY);\n    this.hpBarText.position.set(hpBarX, hpBarY);\n    this.hpBarText.layout(HPBarWidth, HPBarHeight);\n    this.hpBarIcon.position.set(hpBarX - this.hpBarIcon.width - 4, hpBarY);\n\n    const effectsX = hpBarX, effectsY = hpBarY + HPBarHeight + 16;\n    for (let i = 0; i < this.effectIcons.length; i++) {\n      this.effectIcons[i].position.set(effectsX + i * (32 + 8), effectsY);\n    }\n  }\n}","import { Game } from 'app/game';\nimport * as hud from 'app/game/hud';\nimport { Task } from 'app/game/tasks';\n\nconst HUDElements: hud.HUDElementType[] = [\n  hud.DebugConsole,\n  hud.Hotbar,\n  hud.Status,\n  hud.MiniMap,\n];\n\nexport class HUDTask extends Task {\n  public readonly runWhenPaused = true;\n  private readonly elements: hud.HUDElement[] = [];\n\n  constructor(game: Game) {\n    super(game);\n    for (const HUDElement of HUDElements) {\n      const elem = new HUDElement(game);\n      if (elem.display)\n        game.view.add(elem.display);\n      this.elements.push(elem);\n    }\n  }\n\n  update(dt: number) {\n    for (const elem of this.elements)\n      elem.update(dt);\n  }\n\n  dispose() {\n    for (const elem of this.elements)\n      elem.dispose && elem.dispose();\n  }\n}","import { Game } from 'app/game';\nimport * as tasks from 'app/game/tasks';\n\ntype Task = tasks.Task;\n\nexport class TaskManager {\n  private readonly tasks: Task[] = [];\n\n  constructor(private readonly game: Game) {\n  }\n\n  public init() {\n    this.add(tasks.PlayerInputTask);\n\n    this.add(tasks.EffectTask);\n    this.add(tasks.TerrainEffectTask);\n    this.add(tasks.EntityHPTask);\n    this.add(tasks.EntityMovementTask);\n\n    this.add(tasks.UseItemTask);\n    this.add(tasks.AttackTask);\n    this.add(tasks.InventoryTask);\n\n    this.add(tasks.CameraUpdateTask);\n    this.add(tasks.TerrainDisplayTask);\n    this.add(tasks.ObjectDisplayTask);\n    this.add(tasks.EntityDisplayTask);\n\n    this.add(tasks.FXTask);\n    this.add(tasks.ParticleTask);\n    this.add(tasks.HUDTask);\n  }\n\n  public dispose() {\n    for (const task of this.tasks)\n      task.dispose();\n    this.tasks.length = 0;\n  }\n\n  public add<T extends Task>(Task: { new(game: Game): Task }) {\n    const task = new Task(this.game);\n    this.tasks.push(task);\n  }\n\n  public update(dt: number, paused: boolean) {\n    for (let i = 0; i < this.tasks.length; i++) {\n      if (this.tasks[i].isActive) {\n        if (!paused || this.tasks[i].runWhenPaused)\n          this.tasks[i].update(dt);\n      }\n      else {\n        this.tasks[i].dispose();\n        this.tasks.splice(i, 1);\n        i--;\n      }\n    }\n  }\n}","import { MapProps, SerializedMap } from 'common/map';\nimport { Subject } from 'rxjs/Subject';\n\nexport interface MapChange {\n  x: number;\n  y: number\n}\n\nexport class TileMap {\n  private readonly data: Uint16Array;\n  public readonly changes$ = new Subject<MapChange>();\n\n  constructor(\n    public readonly width: number, public readonly height: number,\n    public readonly props: MapProps\n  ) {\n    this.data = new Uint16Array(width * height * 2);\n  }\n\n  public serialize(): SerializedMap {\n    const terrains = new Uint16Array(this.width * this.height);\n    const objects = new Uint16Array(this.width * this.height);\n    for (let i = 0; i < terrains.length; i++) {\n      terrains[i] = this.data[i * 2];\n      objects[i] = this.data[i * 2 + 1];\n    }\n    return {\n      width: this.width,\n      height: this.height,\n      props: this.props,\n      terrains, objects\n    };\n  }\n\n  public static deserialize(data: SerializedMap) {\n    const map = new TileMap(data.width, data.height, data.props);\n    const len = data.width * data.height;\n    for (let i = 0; i < len; i++) {\n      map.data[i * 2] = data.terrains[i];\n      map.data[i * 2 + 1] = data.objects[i];\n    }\n    return map;\n  }\n\n  private toIndex(x: number, y: number): number {\n    x = Math.floor(x);\n    y = Math.floor(y);\n    if (x < 0 || x >= this.width) return -1;\n    if (y < 0 || y >= this.height) return -1;\n    return x + this.width * y;\n  }\n\n  public getTerrain(x: number, y: number) {\n    const index = this.toIndex(x, y);\n    return this.data[index * 2] || 0;\n  }\n\n  public getObject(x: number, y: number) {\n    const index = this.toIndex(x, y);\n    return this.data[index * 2 + 1] || 0;\n  }\n\n  public setTerrain(x: number, y: number, terrain: number) {\n    const index = this.toIndex(x, y);\n    if (index < 0 || index >= this.data.length) return;\n    this.data[index * 2] = terrain;\n    this.changes$.next({ x, y });\n  }\n\n  public setObject(x: number, y: number, object: number) {\n    const index = this.toIndex(x, y);\n    if (index < 0 || index >= this.data.length) return;\n    this.data[index * 2 + 1] = object;\n    this.changes$.next({ x, y });\n  }\n}","import { App } from 'app';\nimport { Message } from 'app/game/messages';\nimport { EntityManager } from 'app/game/EntityManager';\nimport { GameView } from 'app/game/GameView';\nimport { TaskManager } from 'app/game/TaskManagers';\nimport { TileMap } from 'app/game/TileMap';\nimport { DataLibrary, GameSave } from 'common/data';\nimport { filter } from 'rxjs/operators/filter';\nimport { Observable } from 'rxjs/Observable';\nimport { Subject } from 'rxjs/Subject';\n\nexport class Game {\n  constructor(public readonly app: App, public readonly data: GameSave) {\n    this.library = data.library;\n  }\n\n  public readonly view = new GameView();\n  public readonly keyboard = this.app.keyboard;\n  public map!: TileMap;\n  public readonly library: DataLibrary;\n\n  public readonly tasks = new TaskManager(this);\n  public readonly entities = new EntityManager(this);\n\n  public init() {\n    this.map = TileMap.deserialize(this.data.map);\n    this.entities.init();\n    this.tasks.init();\n  }\n\n  public save() {\n    this.data.map = this.map.serialize();\n    this.entities.save();\n  }\n\n  public update(dt: number, paused = false) {\n    if (!paused)\n      this.entities.update(dt);\n    this.tasks.update(dt, paused);\n  }\n\n  public layout() {\n    const { width, height } = this.app.screen;\n    this.view.layout(width, height);\n  }\n\n  public dispose() {\n    this.tasks.dispose();\n    this.entities.dispose();\n  }\n\n  public get player() { return this.entities.get(1)!; }\n\n  private _message$ = new Subject<Message>();\n  public readonly messages$ = Object.assign(this._message$ as Observable<Message>, {\n    ofType: <T extends { new(...args: any[]): Message }>(Type: T) => {\n      return this.messages$.pipe(filter(msg => msg instanceof Type)) as Observable<InstanceType<T>>;\n    }\n  });\n\n  public dispatch(message: Message) {\n    this._message$.next(message);\n  }\n}","import { App } from 'app';\nimport { Game } from 'app/game';\nimport { GameState } from 'app/states/GameState';\nimport { fadeIn, fadeOut } from 'app/utils/animations';\nimport { GameSave } from 'common/data';\n\nexport class StateMain extends GameState {\n  public get name() { return 'main'; }\n\n  private readonly game: Game;\n\n  constructor(app: App, data: GameSave) {\n    super(app);\n    this.game = new Game(app, data);\n    this.root.addChild(this.game.view);\n  }\n\n  async enter() {\n    this.game.init();\n    this.root.alpha = 0;\n    await fadeIn(this.root).toPromise();\n  }\n\n  update(dt: number) {\n    this.game.update(dt);\n  }\n\n  layout() {\n    this.game.layout();\n  }\n\n  async leave() {\n    this.game.dispose();\n    this.root.alpha = 1;\n    await fadeOut(this.root).toPromise();\n  }\n}","import { App, MapSize } from 'app';\nimport { Text, TextButton } from 'app/components';\nimport { Generator } from 'app/game/Generator';\nimport { GameState } from 'app/states/GameState';\nimport { StateMain } from 'app/states/StateMain';\nimport { fadeIn, fadeOut } from 'app/utils/animations';\nimport { GameSave } from 'common/data';\nimport { Sprite, Texture } from 'pixi.js';\n\nexport class StateTitle extends GameState {\n  public get name() { return 'title'; }\n\n  private logo = new Sprite(Texture.fromFrame('sprites/ui/title'));\n  private newButton = new TextButton('new game');\n  private loadBar = new Sprite(Texture.WHITE);\n  private loadMessage = new Text('');\n  private saveLabel = new Text('saves');\n  private saveButtons: TextButton[] = [];\n\n  constructor(app: App) {\n    super(app);\n\n    this.root.addChild(this.logo);\n    this.root.addChild(this.newButton);\n    this.root.addChild(this.loadBar);\n    this.root.addChild(this.loadMessage);\n    this.newButton.on(TextButton.Clicked, this.newGame.bind(this));\n    this.loadBar.tint = 0x404040;\n    this.loadBar.width = 0;\n  }\n\n  async enter() {\n    this.updateSaves();\n    this.root.alpha = 0;\n    await fadeIn(this.root).toPromise();\n  }\n\n  async pause() {\n    this.root.alpha = 1;\n    await fadeOut(this.root).toPromise();\n  }\n\n  async resume() {\n    this.updateSaves();\n    this.newButton.isEnabled = true;\n    this.loadMessage.text = '';\n    this.loadBar.width = 0;\n\n    this.root.alpha = 0;\n    await fadeIn(this.root).toPromise();\n  }\n\n  private updateSaves() {\n    for (const btn of this.saveButtons)\n      this.root.removeChild(btn);\n\n    this.saveButtons = [];\n    for (const name of Object.keys(localStorage).sort()) {\n      const btn = new TextButton(name);\n      btn.on(TextButton.Clicked, () => this.startGame(GameSave.import(localStorage[name])));\n      this.root.addChild(btn);\n      this.saveButtons.push(btn);\n    }\n    if (this.saveButtons.length > 0)\n      this.root.addChild(this.saveLabel);\n  }\n\n  layout() {\n    const contentHeight = this.logo.height + 50 + 75 + 20 + 50;\n    const { width, height } = this.app.screen;\n\n    this.logo.position.set((width - this.logo.width) / 2, (height - contentHeight) / 2);\n    this.newButton.position.set((width - 160) / 2, this.logo.y + this.logo.height + 50);\n    this.newButton.layout(160, 64);\n    this.loadMessage.position.set(0, this.newButton.y + 64 + 20);\n    this.loadMessage.layout(width, 50);\n    this.loadBar.position.set(width / 4, this.newButton.y + 64 + 20);\n    this.loadBar.height = 50;\n\n    this.saveLabel.position.set(width - 256, 64);\n    this.saveLabel.layout(192, 48);\n    let y = this.saveLabel.y + 48 + 16;\n    for (const button of this.saveButtons) {\n      button.position.set(width - 256, y);\n      button.layout(192, 48);\n      y += 48 + 16;\n    }\n  }\n\n  async newGame() {\n    this.newButton.isEnabled = false;\n    this.saveButtons.forEach(btn => btn.isEnabled = false);\n    const data = await new Generator(MapSize, MapSize, '1').generate((message, progress) => {\n      if (message)\n        this.loadMessage.text = message;\n      this.loadBar.width = (this.app.screen.width / 2) * progress;\n    });\n\n    await this.startGame(data);\n  }\n\n  private async startGame(data: GameSave) {\n    this.newButton.isEnabled = false;\n    this.saveButtons.forEach(btn => btn.isEnabled = false);\n    await this.app.pushState(new StateMain(this.app, data));\n  }\n}","import { GameOverlay } from 'app/game/overlays';\nimport { GameState } from 'app/states/GameState';\nimport { Sprite, Texture } from 'pixi.js';\n\nexport class StateOverlay extends GameState {\n  public get name() { return 'overlay'; }\n\n  private readonly bg = new Sprite(Texture.WHITE);\n  constructor(private readonly overlay: GameOverlay) {\n    super(overlay.game.app);\n    this.bg.tint = 0;\n    this.bg.alpha = 0.5;\n    this.root.addChild(this.bg);\n    this.root.addChild(this.overlay);\n  }\n\n  async enter() {\n    this.overlay.init();\n  }\n\n  update(dt: number) {\n    this.overlay.update(dt);\n    this.overlay.game.update(dt, true);\n  }\n\n  layout() {\n    const { width, height } = this.app.screen;\n    this.bg.width = width;\n    this.bg.height = height;\n    this.overlay.layout(width, height);\n    this.overlay.game.layout();\n  }\n\n  async leave() {\n    this.overlay.dispose();\n  }\n}","export class Keyboard {\n  private state = new Set<string>();\n  private newKey = new Map<string, boolean>();\n\n  constructor(private readonly elem: HTMLElement) {\n    this.keydown = this.keydown.bind(this);\n    this.keyup = this.keyup.bind(this);\n    this.blur = this.blur.bind(this);\n\n    elem.tabIndex = 1;\n    elem.addEventListener('keydown', this.keydown);\n    elem.addEventListener('keyup', this.keyup);\n    elem.addEventListener('blur', this.blur);\n    setTimeout(() => elem.focus(), 0);\n  }\n\n  private keydown(event: KeyboardEvent) {\n    event.preventDefault();\n    if (event.repeat) return;\n    this.state.add(event.key.toLowerCase());\n    this.newKey.set(event.key.toLowerCase(), true);\n  }\n\n  private keyup(event: KeyboardEvent) {\n    event.preventDefault();\n    if (event.repeat) return;\n    this.state.delete(event.key.toLowerCase());\n    this.newKey.set(event.key.toLowerCase(), false);\n  }\n\n  private blur() {\n    for (const key of this.state)\n      this.newKey.set(key, false);\n    this.state.clear();\n  }\n\n  public isDown(...keys: string[]) {\n    return keys.some(key => this.newKey.get(key.toLowerCase()) === true);\n  }\n\n  public isUp(...keys: string[]) {\n    return keys.some(key => this.newKey.get(key.toLowerCase()) === false);\n  }\n\n  public isPressed(...keys: string[]) {\n    return keys.some(key => this.state.has(key.toLowerCase()));\n  }\n\n  public update() {\n    this.newKey.clear();\n  }\n\n  public dispose() {\n    this.elem.removeEventListener('keydown', this.keydown);\n    this.elem.removeEventListener('keyup', this.keyup);\n    this.elem.removeEventListener('blur', this.blur);\n  }\n}\n","import { App } from 'app';\nimport { interaction, Container, DisplayObject, Point, RendererPlugins } from 'pixi.js';\nimport { first } from 'rxjs/operators/first';\nimport { Subject } from 'rxjs/Subject';\n\ntype InteractionEvent = interaction.InteractionEvent;\n\nexport class DragDrop {\n  private interaction: interaction.InteractionManager;\n  private readonly overlay = new Container();\n  private readonly pointerPos = new Point();\n  private dragOffset = new Point();\n  private activeObj?: DisplayObject;\n  private endDrag$ = new Subject<DisplayObject | null>();\n\n  public get active() { return !!this.activeObj; }\n\n  constructor(private readonly app: App) {\n    this.interaction = (app.renderer.plugins as RendererPlugins).interaction;\n    app.stage.addChild(this.overlay);\n    this.interaction.on('pointermove', (e: InteractionEvent) =>\n      e.data.getLocalPosition(this.overlay, this.pointerPos)\n    );\n    this.interaction.on('pointerup', this.end);\n  }\n\n  public begin(object: DisplayObject) {\n    if (this.activeObj) {\n      console.log('dragdrop: already in progress');\n      this.cancel();\n    }\n    this.overlay.toLocal(new Point(0, 0), object, this.dragOffset);\n    this.dragOffset.x -= this.pointerPos.x;\n    this.dragOffset.y -= this.pointerPos.y;\n    object.parent && object.parent.removeChild(object);\n    this.overlay.addChild(object);\n    this.activeObj = object;\n    return this.endDrag$.pipe(first()).toPromise();\n  }\n\n  public cancel(object = this.activeObj) {\n    if (this.activeObj && this.activeObj === object) {\n      this.overlay.removeChild(this.activeObj);\n      this.endDrag$.next(null);\n    }\n  }\n\n  private end = (e: InteractionEvent) => {\n    if (this.activeObj) {\n      const pt = e.data.global.clone();\n      pt.x += this.dragOffset.x;\n      pt.y += this.dragOffset.y;\n      const target = this.interaction.hitTest(pt, this.app.root);\n      this.endDrag$.next(target);\n\n      this.overlay.removeChild(this.activeObj);\n      this.activeObj = undefined;\n    }\n    e.data.getLocalPosition(this.overlay, this.pointerPos);\n  }\n\n  public layout() {\n    if (this.activeObj) {\n      this.activeObj.position.set(\n        this.pointerPos.x + this.dragOffset.x,\n        this.pointerPos.y + this.dragOffset.y\n      );\n    }\n  }\n}","import { App } from 'app';\nimport { Panel } from 'app/components';\nimport { interaction, Container, DisplayObject, Point, RendererPlugins } from 'pixi.js';\n\ntype InteractionEvent = interaction.InteractionEvent;\n\nconst ToolTipOffset = 8;\n\nexport class ToolTip {\n  private interaction: interaction.InteractionManager;\n  private readonly overlay = new Container();\n  private readonly pointerPos = new Point();\n  private readonly global = new Point();\n  private panel?: Panel;\n  private target?: DisplayObject;\n\n  public get active() { return !!this.panel; }\n\n  constructor(private readonly app: App) {\n    this.interaction = (app.renderer.plugins as RendererPlugins).interaction;\n    app.stage.addChild(this.overlay);\n    this.interaction.on('pointermove', (e: InteractionEvent) => {\n      e.data.getLocalPosition(this.overlay, this.pointerPos);\n      this.global.copy(e.data.global);\n    });\n  }\n\n  public add(target: DisplayObject, show: () => Panel | null) {\n    const showToolTip = (e: interaction.InteractionEvent) => {\n      if (e.target === target && !this.app.dragDrop.active) {\n        const panel = show();\n        if (panel)\n          this.show(panel, target);\n      }\n    };\n    target.on('pointerover', showToolTip);\n    target.on('pointermove', showToolTip);\n  }\n\n  public show(panel: Panel, target: DisplayObject) {\n    if (this.panel) this.hide(this.panel);\n\n    this.overlay.addChild(panel);\n    this.panel = panel;\n    this.target = target;\n  }\n\n  public hide(panel: Panel) {\n    if (this.panel === panel) {\n      this.overlay.removeChild(panel);\n      this.panel = undefined;\n      this.target = undefined;\n    }\n  }\n\n  public update() {\n    if (!this.panel) return;\n    const target = this.interaction.hitTest(this.global, this.app.root);\n    if (target !== this.target) {\n      this.hide(this.panel);\n    }\n  }\n\n  public layout() {\n    if (this.panel) {\n      const { width, height } = this.app.screen;\n      this.panel.layout(width, height);\n      const { width: panelWidth, height: panelHeight } = this.panel;\n\n      let x = this.pointerPos.x + ToolTipOffset, y = this.pointerPos.y + ToolTipOffset;\n      if (x + panelWidth >= width) x = this.pointerPos.x - ToolTipOffset - panelWidth;\n      if (y + panelHeight >= height) y = this.pointerPos.y - ToolTipOffset - panelHeight;\n      this.panel.position.set(x, y);\n    }\n  }\n}","import * as TWEEN from '@tweenjs/tween.js';\nimport { GameState } from 'app/states';\nimport { Keyboard } from 'app/utils/Keyboard';\nimport { DragDrop } from 'app/DragDrop';\nimport { ToolTip } from 'app/ToolTip';\nimport {\n  interaction, settings, Application, Container, DisplayObject,\n  Rectangle, RendererPlugins, SCALE_MODES\n} from 'pixi.js';\n\nexport class App extends Application {\n  public readonly root = this.stage.addChild(new Container());\n\n  constructor() {\n    super({\n      autoResize: true,\n      antialias: true,\n      roundPixels: true\n    });\n    this.view.oncontextmenu = event => event.preventDefault();\n\n    settings.SCALE_MODE = SCALE_MODES.NEAREST;\n    this.ticker.add(this.tick.bind(this));\n\n    // Workaround for outside events not firing due to pixi.js#4608\n    // Passes outside events to children\n    const interaction = (this.renderer.plugins as RendererPlugins).interaction;\n    interaction.on('pointerup', (e: interaction.InteractionEvent) => {\n      function passEvent(obj: DisplayObject, trigger: boolean) {\n        if (trigger && obj.interactive) {\n          e.currentTarget = obj;\n          obj.emit('pointerupoutside', e);\n        }\n        if (obj.interactiveChildren && (obj as Container).children) {\n          const doTrigger = trigger || !!obj.mask || !!obj.hitArea;\n          for (const child of (obj as Container).children)\n            passEvent(child, doTrigger);\n        }\n      }\n      passEvent(this.stage, false);\n    });\n  }\n\n  private _states: GameState[] = [];\n  public get state(): GameState | null { return this._states[this._states.length - 1] || null; }\n  public async pushState(next: GameState) {\n    if (this.state) {\n      await this.state.pause();\n      this.state.root.hitArea = Rectangle.EMPTY;\n    }\n    this._states.push(next);\n    this.root.addChild(next.root);\n    await next.enter();\n  }\n  public async popState() {\n    if (this.state) {\n      await this.state.leave();\n      this.root.removeChild(this.state.root);\n      this._states.pop();\n    }\n    if (this.state) {\n      this.state.root.hitArea = null as any;\n      await this.state.resume();\n    }\n  }\n  public async topState(next: GameState) {\n    await this.popState();\n    await this.pushState(next);\n  }\n\n  private tick() {\n    this.state && this.state.update(this.ticker.elapsedMS);\n    TWEEN.update();\n    this.keyboard.update();\n    this.toolTip.update();\n  }\n\n  public render() {\n    this.state && this.state.layout();\n    this.toolTip.layout();\n    this.dragDrop.layout();\n    super.render();\n  }\n\n  public readonly resources: Record<string, any> = {};\n  public readonly keyboard = new Keyboard(this.view);\n  public readonly toolTip = new ToolTip(this);\n  public readonly dragDrop = new DragDrop(this);\n}","export const MapSize = 1024;\nexport const UIScaleFactor = 2;\nexport const DisplayTileSize = 64;","import { bootstrap } from 'app/bootstrap';\nimport { StatePreload } from 'app/states';\nimport { App } from 'app/App';\nexport * from 'app/App';\nexport * from 'app/settings';\n\nconst app = bootstrap(new App());\napp.pushState(new StatePreload(app));\nObject.assign(window, { app });","import { glMatrix } from 'gl-matrix';\nimport { Application } from 'pixi.js';\nimport * as Stats from 'stats.js';\nimport * as vexDialog from 'vex-dialog';\nimport * as vex from 'vex-js';\n\nimport 'vex-js/dist/css/vex-theme-plain.css';\nimport 'vex-js/dist/css/vex.css';\nimport './styles.css';\n\nexport function bootstrap<App extends Application>(app: App) {\n  document.body.appendChild(app.view);\n\n  function resize() {\n    const width = window.innerWidth;\n    const height = window.innerHeight;\n    app.renderer.resize(width, height);\n  }\n  window.onresize = resize;\n  resize();\n\n  const stats = new Stats();\n  document.body.appendChild(stats.dom);\n  const _update = app.ticker.update;\n  app.ticker.update = (...args: any[]) => {\n    stats.begin();\n    _update.apply(app.ticker, args);\n    stats.end();\n  };\n\n  glMatrix.setMatrixArrayType(Float64Array);\n\n  vex.registerPlugin(vexDialog);\n  vex.defaultOptions.className = 'vex-theme-plain';\n\n  return app;\n}\n","import { App } from 'app';\nimport { GameState } from 'app/states/GameState';\nimport { StateTitle } from 'app/states/StateTitle';\nimport { fadeOut } from 'app/utils/animations';\nimport * as FontFaceObserver from 'fontfaceobserver';\nimport { loaders, Text } from 'pixi.js';\n\nexport class StatePreload extends GameState {\n  public get name() { return 'preload'; }\n\n  private loadingText = new Text('loading...\\n', {\n    fill: 'white',\n    fontSize: 14,\n    lineHeight: 20,\n    align: 'center',\n  });\n\n  constructor(app: App) {\n    super(app);\n    this.root.addChild(this.loadingText);\n  }\n\n  async enter() {\n    this.run();\n  }\n\n  layout() {\n    this.loadingText.x = (this.app.screen.width - this.loadingText.width) / 2;\n    this.loadingText.y = (this.app.screen.height - this.loadingText.height) / 2;\n  }\n\n  private run() {\n    const loader = this.app.loader;\n    const progressHandler = loader.onProgress.add(() => {\n      this.loadingText.text = `loading...\\n${Math.round(loader.progress)}%`;\n    });\n\n    const context = require.context('assets', true, /.*/);\n    for (const key of context.keys()) {\n      const match = /^\\.\\/(.*)\\.(.*)$/.exec(key);\n      if (!match) continue;\n\n      const [, name, ext] = match;\n      if (name.startsWith('sprites/')) {\n        if (ext === 'json')\n          loader.add(name, key);\n      } else {\n        loader.add(name, context(key));\n      }\n    }\n\n    loader.pre((res: loaders.Resource, next: () => void) => {\n      if (res.name.startsWith('sprites/') && res.extension === 'json') {\n        res.type = loaders.Resource.TYPE.JSON;\n        res.data = context(res.url);\n        res.data.meta.image = `../${context(`./sprites/${res.data.meta.image}`)}`;\n        res.complete();\n      }\n      next();\n    });\n\n    const fontLoad = Promise.all([\n      new FontFaceObserver('Unibody8Pro').load(),\n      new FontFaceObserver('Unibody8Pro', { weight: 'bold' }).load(),\n      new FontFaceObserver('Unibody8Pro', { style: 'italic' }).load(),\n    ]);\n\n    loader.load(async (_: any, resources: Record<string, loaders.Resource>) => {\n      loader.onProgress.detach(progressHandler);\n\n      for (const name of Object.keys(resources)) {\n        const resource = resources[name];\n        if (resource.type === loaders.Resource.TYPE.JSON &&\n          !(resource as any)['spritesheet']) {\n          this.app.resources[name] = resource.data;\n        }\n      }\n\n      await fontLoad;\n      await fadeOut(this.root).toPromise();\n      await this.app.topState(new StateTitle(this.app));\n    });\n  }\n}","module.exports = __webpack_public_path__ + \"assets/fc89563cb8da129f8c97ecaaad63f193.png\";","module.exports = __webpack_public_path__ + \"assets/c229e891deb9f6d9f1cf520062c124d3.png\";","module.exports = __webpack_public_path__ + \"assets/129f751899948407553b1036e0ea40e7.png\";","module.exports = __webpack_public_path__ + \"assets/cbecab81f1f8884a561e500b807c5d7d.png\";","module.exports = __webpack_public_path__ + \"assets/3f417995e259829c38dfd341514639e7.png\";","module.exports = __webpack_public_path__ + \"assets/95966c631f0652d66b47f5c058fcd846.png\";","var map = {\n\t\"./fonts/Unibody8Pro-Bold.otf\": 161,\n\t\"./fonts/Unibody8Pro-Regular.otf\": 162,\n\t\"./fonts/Unibody8Pro-RegularItalic.otf\": 160,\n\t\"./fonts/unscii-16.woff\": 159,\n\t\"./sprites/effects.json\": 199,\n\t\"./sprites/effects.png\": 198,\n\t\"./sprites/items.json\": 197,\n\t\"./sprites/items.png\": 196,\n\t\"./sprites/objects.json\": 195,\n\t\"./sprites/objects.png\": 194,\n\t\"./sprites/player.json\": 193,\n\t\"./sprites/player.png\": 192,\n\t\"./sprites/terrains.json\": 191,\n\t\"./sprites/terrains.png\": 190,\n\t\"./sprites/ui.json\": 189,\n\t\"./sprites/ui.png\": 188\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\tvar module = __webpack_require__(id);\n\treturn module;\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 200;","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".debug-console {\\n  z-index: 10;\\n\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  width: 100%;\\n  height: 100%;\\n\\n  pointer-events: none;\\n  visibility: hidden;\\n  display: flex;\\n  flex-direction: column;\\n}\\n\\n.debug-console *::selection {\\n  background: rgba(0, 0, 0, 0.25);\\n}\\n\\n.debug-console.active {\\n  visibility: visible;\\n}\\n\\n.debug-console * {\\n  cursor: default;\\n  font-family: Unscii;\\n  font-size: 16px;\\n  box-sizing: border-box;\\n}\\n\\n.debug-log-box {\\n  flex: 1;\\n  position: relative;\\n}\\n\\n.debug-log-scroll {\\n  position: absolute;\\n  left: 0;\\n  bottom: 0;\\n\\n  background: rgba(255, 255, 255, 0.6);\\n  width: 600px;\\n  max-height: 800px;\\n  pointer-events: auto;\\n\\n  overflow-y: auto;\\n}\\n\\n.debug-log {\\n  padding: 4px;\\n  display: flex;\\n  flex-direction: column;\\n  width: 100%;\\n}\\n\\n.debug-log:empty {\\n  padding: 0;\\n}\\n\\n.debug-log-entry {\\n  display: block;\\n  padding: 4px;\\n  color: #000000;\\n  white-space: pre;\\n}\\n\\n.debug-input {\\n  height: 48px;\\n  width: 100%;\\n\\n  background: rgba(255, 255, 255, 0.6);\\n  color: #000000;\\n  outline: none;\\n  border: none;\\n  border-top: 1px solid #202020;\\n  padding: 8px;\\n  pointer-events: auto;\\n}\", \"\"]);\n\n// exports\n","\nvar content = require(\"!!../../../../node_modules/css-loader/index.js!./debug.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/index.js!./debug.css\", function() {\n\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/index.js!./debug.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","import { Aspect, Element, Item } from 'common/data';\nimport { compute } from 'common/logic/effect';\nimport { randomValue } from 'common/random';\nimport { Elements, ElementLookup } from 'data/elements';\n\nexport const MaxAspects = 1000;\n\nexport function makeSolution(aspects: Aspect[], data: Record<string, Element>): Item {\n  let total = 0;\n\n  const rgb = [0, 0, 0];\n  // color\n  for (const { element, amount } of aspects) {\n    const elemColor = parseInt(data[element].color, 16);\n    rgb[0] += ((elemColor >> 16) & 0xff) * amount;\n    rgb[1] += ((elemColor >> 8) & 0xff) * amount;\n    rgb[2] += ((elemColor >> 0) & 0xff) * amount;\n    total += amount;\n  }\n  const color = (\n    (Math.floor(rgb[0] / total) << 16) +\n    (Math.floor(rgb[1] / total) << 8) +\n    (Math.floor(rgb[2] / total) << 0)\n  ).toString(16);\n\n  // name\n  let max = 0, maxElem = '';\n  for (const { element, amount } of aspects) {\n    if (amount > max) {\n      max = amount;\n      maxElem = element;\n    }\n  }\n  let name: string;\n  if (max < 100) name = `Mundane Solution`;\n  else if (max / total < 0.5) name = 'Mixed solution';\n  else if (max < 300) name = `Solution of ${maxElem}`;\n  else if (max < 500) name = `Solution of Greater ${maxElem}`;\n  else if (max < 700) name = `Solution of Mythical ${maxElem}`;\n  else name = `Solution of Perfect ${maxElem}`;\n\n  return {\n    id: 'solution',\n    name,\n    type: Item.Type.Consumable,\n    texture: {\n      type: 'composite',\n      base: 'sprites/items/solution',\n      overlay: {\n        type: 'single',\n        tex: 'sprites/items/solution-overlay',\n        tint: color\n      }\n    },\n    aspects,\n    effects: compute(aspects)\n  };\n}\n\nconst PurifyThreshold = 0.25;\nconst PurifyRate = 0.4;\nconst BoostRate = 1.5;\nconst FissionLoss = 0.25;\nconst FusionLoss = 0.1;\nconst Epsilon = 1;\n\nexport function mix(a: Item, b: Item, data: Record<string, Element>): Item {\n  const aspects: Record<string, number> = {};\n  for (const { element, amount } of [...a.aspects || [], ...b.aspects || []])\n    aspects[element] = (aspects[element] || 0) + amount;\n\n  const fusionBoost = (a.id === 'gel-bone' || b.id === 'gel-bone') ? BoostRate : 1;\n  const fissionBoost = (a.id === 'gel-stone' || b.id === 'gel-stone') ? BoostRate : 1;\n\n  // fusion\n  for (const { name: element, composition: compo } of Elements) {\n    if (!compo) continue;\n\n    const threshold = randomValue(data[element].fusionThreshold) / fusionBoost / fissionBoost;\n    const inputAmount = Math.min(aspects[compo[0]] || 0, aspects[compo[1]] || 0);\n    if (inputAmount <= threshold) continue;\n    console.log(`fusion ${element}: ${inputAmount} <= ${threshold}`);\n\n    const amount = (inputAmount - threshold) * randomValue(data[element].fusionRate);\n    const compoRatio = Math.random() * 0.5 + 0.25;\n\n    aspects[element] = (aspects[element] || 0) + amount * (1 - FusionLoss);\n    aspects[compo[0]] -= amount * compoRatio;\n    aspects[compo[1]] -= amount * (1 - compoRatio);\n  }\n\n  // fission\n  for (const element of Object.keys(aspects)) {\n    const threshold = randomValue(data[element].fissionThreshold) * fissionBoost / fusionBoost;\n    if (aspects[element] >= threshold) continue;\n    console.log(`fission ${element}: ${aspects[element]} >= ${threshold}`);\n\n    const amount = aspects[element] * randomValue(data[element].fissionRate);\n    const compo = ElementLookup[element].composition;\n    const compoRatio = Math.random() * 0.5 + 0.25;\n\n    if (compo) {\n      aspects[compo[0]] = (aspects[compo[0]] || 0) + amount * (1 - FissionLoss) * compoRatio;\n      aspects[compo[1]] = (aspects[compo[1]] || 0) + amount * (1 - FissionLoss) * (1 - compoRatio);\n    }\n    aspects[element] -= amount;\n  }\n\n  // purify\n  let total = 0;\n  if (a.id === 'gel-alchemy' || b.id === 'gel-alchemy') {\n    for (const element of Object.keys(aspects)) total += aspects[element];\n    for (const element of Object.keys(aspects)) {\n      const amount = aspects[element];\n      if (amount / total < PurifyThreshold) {\n        aspects[element] *= 1 - PurifyRate;\n      }\n    }\n  }\n\n  // decay & clamp to range\n  total = 0;\n  for (const element of Object.keys(aspects)) total += aspects[element];\n  for (const element of Object.keys(aspects)) {\n    let amount = aspects[element];\n    if (amount < Epsilon) amount = 0;\n    else if (amount > MaxAspects) amount = MaxAspects;\n    aspects[element] = amount;\n  }\n\n  const finalAspects = Object.keys(aspects)\n    .map(element => ({ element, amount: aspects[element] }))\n    .filter(({ amount }) => amount > 0);\n  console.log(finalAspects);\n\n  return makeSolution(finalAspects, data);\n}","var escape = require(\"../../node_modules/css-loader/lib/url/escape.js\");\nexports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"html,\\nbody {\\n  height: 100%;\\n  width: 100%;\\n  margin: 0;\\n  padding: 0;\\n  background: #202020;\\n  overflow: hidden;\\n}\\n\\ncanvas {\\n  image-rendering: crisp-edges;\\n  image-rendering: pixelated;\\n}\\n\\n@font-face {\\n  font-family: \\\"Unibody8Pro\\\";\\n  src: url(\" + escape(require(\"../../assets/fonts/Unibody8Pro-Regular.otf\")) + \") format(\\\"opentype\\\")\\n}\\n\\n@font-face {\\n  font-family: \\\"Unibody8Pro\\\";\\n  font-weight: bold;\\n  src: url(\" + escape(require(\"../../assets/fonts/Unibody8Pro-Bold.otf\")) + \") format(\\\"opentype\\\")\\n}\\n\\n@font-face {\\n  font-family: \\\"Unibody8Pro\\\";\\n  font-style: italic;\\n  src: url(\" + escape(require(\"../../assets/fonts/Unibody8Pro-RegularItalic.otf\")) + \") format(\\\"opentype\\\")\\n}\\n\\n@font-face {\\n  font-family: \\\"Unscii\\\";\\n  font-weight: bold;\\n  src: url(\" + escape(require(\"../../assets/fonts/unscii-16.woff\")) + \") format(\\\"woff\\\")\\n}\", \"\"]);\n\n// exports\n","\nvar content = require(\"!!../../node_modules/css-loader/index.js!./styles.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../node_modules/css-loader/index.js!./styles.css\", function() {\n\t\tvar newContent = require(\"!!../../node_modules/css-loader/index.js!./styles.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","import { Aspect, Effect, TextureDef } from 'common/data';\n\nexport interface Item {\n  readonly id: string;\n  readonly name: string;\n  readonly description?: string;\n  readonly type: Item.Type;\n  readonly texture: TextureDef;\n  readonly aspects?: Aspect[];\n  readonly effects?: Effect[];\n}\n\nexport interface ItemSlot {\n  item: Item | null;\n  accepts: Item.Type[] | string | null;\n}\n\nexport namespace Item {\n  export enum Type {\n    Material = 'material',\n    Consumable = 'consumable',\n    Weapon = 'weapon',\n    Chestplate = 'chestplate',\n    Leggings = 'leggings',\n    Boots = 'boots',\n  }\n}","import { Element, Recipe, Terrain, TileObject } from 'common/data';\n\nexport interface DataLibrary {\n  readonly terrains: Terrain[];\n  readonly objects: TileObject[];\n  readonly recipes: Recipe[];\n  readonly elements: Record<string, Element>;\n}\n\ntype Omit<T, K> = Pick<T, Exclude<keyof T, K>>;\n\nfunction populateNameId<T extends { id: number, name: string }>(items: Record<string, Omit<T, 'id' | 'name'>>): T[] {\n  const result: T[] = [];\n  const keys = Object.keys(items).sort();\n  let id = 1;\n\n  for (const name of keys) {\n    const itemId = id++;\n    result[itemId] = Object.assign({}, items[name], { id: itemId, name }) as T;\n  }\n  return result;\n}\n\nexport function loadDataLib(\n  terrains: Record<string, Omit<Terrain, 'id' | 'name'>>,\n  objects: Record<string, Omit<TileObject, 'id' | 'name'>>,\n  recipes: Recipe[],\n  elements: Record<string, Element>\n): DataLibrary {\n  return {\n    terrains: populateNameId(terrains),\n    objects: populateNameId(objects),\n    recipes,\n    elements\n  };\n}","import { fromByteArray, toByteArray } from 'base64-js';\n\nexport function toBase64(buf: ArrayBuffer) {\n  return fromByteArray(new Uint8Array(buf));\n}\n\nexport function fromBase64(data: string) {\n  return toByteArray(data).buffer;\n}\n","import * as pako from 'pako';\n\nexport function compress(data: ArrayBuffer) {\n return pako.deflate(new Uint8Array(data)).buffer;\n}\n\nexport function decompress(data: ArrayBuffer) {\n return pako.inflate(new Uint8Array(data)).buffer;\n}\n","import { fromBase64, toBase64 } from 'common/base64';\nimport { DataLibrary } from 'common/data';\nimport { EntityProps, GameProps } from 'common/data/props';\nimport { SerializedMap } from 'common/map/SerializedMap';\nimport { compress, decompress } from 'common/zlib';\n\nexport class GameSave {\n  constructor(\n    public id: string,\n    public library: DataLibrary,\n    public map: SerializedMap,\n    public entities: EntityProps[],\n    public readonly props: GameProps\n  ) {\n  }\n\n  public static load(data: any) {\n    const { id, library, map, entities, props } = data;\n    return new GameSave(id, library, map, entities, props);\n  }\n\n  public save(): any {\n    return {\n      id: this.id,\n      library: this.library,\n      map: this.map,\n      entities: this.entities,\n      props: this.props\n    };\n  }\n\n  public static import(json: string): GameSave {\n    const data = JSON.parse(json);\n    data.map = {\n      ...data.map,\n      terrains: new Uint16Array(decompress(fromBase64(data.map.terrains))),\n      objects: new Uint16Array(decompress(fromBase64(data.map.objects)))\n    };\n    return GameSave.load(data);\n  }\n\n  public export(): string {\n    const data = this.save();\n    data.map = {\n      ...data.map,\n      terrains: toBase64(compress(data.map.terrains.buffer)),\n      objects: toBase64(compress(data.map.objects.buffer))\n    };\n    return JSON.stringify(data);\n  }\n}","import { Aspect, Effect } from 'common/data';\nimport { MaxAspects } from 'common/logic/alchemy';\nimport { Effects, EffectDef } from 'data/effects';\nimport { ElementDef } from 'data/elements';\nimport { fromPairs, round } from 'lodash';\n\nconst StrengthThreshold = 0.1;\n\nfunction computeStrength(amount: number, total: number) {\n  const purity = amount / total;\n  const power = Math.pow(amount / MaxAspects, 0.75);\n  const strength = purity * power;\n  return strength;\n}\n\nexport function makeEffect(effect: EffectDef.Type, power: number, duration: number, element?: string): Effect {\n  power = Math.round(power);\n  duration = round(duration, -2);\n  const name = Effects[effect].name;\n  const description = Effects[effect].description.replace('<power>', power.toString()) +\n    (duration ? ` for ${round(duration / 1000)} seconds` : '');\n\n  return {\n    type: effect,\n    name, description,\n    power, element, duration\n  };\n}\n\nfunction computeEffect(element: string, strength: number, strengths: Record<string, number>) {\n  switch (element) {\n    case ElementDef.Type.Life:\n    case ElementDef.Type.Recovery: {\n      let amount = strength * 100;\n      if (element === ElementDef.Type.Life)\n        amount *= 0.5;\n\n      let duration = 0;\n      if (strengths[ElementDef.Type.Time] >= 0.2) {\n        duration = strengths[ElementDef.Type.Time] * 30000;\n        amount = amount / duration * 1500;\n        return makeEffect(EffectDef.Type.Regen, amount, duration);\n      } else {\n        return makeEffect(EffectDef.Type.Heal, amount, 0);\n      }\n    }\n    case ElementDef.Type.Void:\n    case ElementDef.Type.Injury: {\n      let amount = strength * 50;\n      if (element === ElementDef.Type.Void)\n        amount *= 0.3;\n\n      let duration = 0;\n      if (strengths[ElementDef.Type.Time] >= 0.2) {\n        duration = strengths[ElementDef.Type.Time] * 20000;\n        amount = amount / duration * 1500;\n        return makeEffect(EffectDef.Type.Poison, amount, duration);\n      } else {\n        return makeEffect(EffectDef.Type.Damage, amount, 0);\n      }\n    }\n    case ElementDef.Type.Motion: {\n      let amount = strength * 50;\n\n      return makeEffect(EffectDef.Type.Speed, amount, 10000);\n    }\n    case ElementDef.Type.Frost:\n    case ElementDef.Type.Capture: {\n      let amount = strength * 50;\n      if (element === ElementDef.Type.Capture)\n        amount *= 1.5;\n\n      return makeEffect(EffectDef.Type.Slowness, amount, 10000);\n    }\n    case ElementDef.Type.Energy: {\n      let amount = strength * 25;\n\n      return makeEffect(EffectDef.Type.Strength, amount, 10000);\n    }\n    case ElementDef.Type.Weakness: {\n      let amount = strength * 25;\n\n      return makeEffect(EffectDef.Type.Weakness, amount, 10000);\n    }\n  }\n}\n\nexport function compute(aspects: Aspect[]): Effect[] {\n  let total = 0;\n  for (const { amount } of aspects) total += amount;\n\n  const strengths = fromPairs(aspects.map<[string, number]>(({ element, amount }) =>\n    [element, computeStrength(amount, total)]\n  ).sort((a, b) => b[1] - a[1]));\n\n  const effects: Effect[] = [];\n  for (const element of Object.keys(strengths)) {\n    const strength = strengths[element];\n    if (strength < StrengthThreshold) continue;\n\n    const effect = computeEffect(element, strength, strengths);\n    if (effect)\n      effects.push(effect);\n  }\n\n  return effects;\n}","export interface ElementDef {\n  readonly tier: number;\n  readonly name: string;\n  readonly composition?: [string, string];\n}\n\nexport namespace ElementDef {\n  export const MaxTier = 3;\n  export enum Type {\n    Fire = 'Fire',\n    Water = 'Water',\n    Order = 'Order',\n    Chaos = 'Chaos',\n\n    Void = 'Void',\n    Light = 'Light',\n    Energy = 'Energy',\n    Frost = 'Frost',\n    Motion = 'Motion',\n    Life = 'Life',\n\n    Defense = 'Defense',\n    Recovery = 'Recovery',\n    Time = 'Time',\n    Explosion = 'Explosion',\n    Injury = 'Injury',\n    Darkness = 'Darkness',\n    Weakness = 'Weakness',\n    Spirit = 'Spirit',\n    Capture = 'Capture',\n\n    Sense = 'Sense',\n    Absorption = 'Absorption',\n    Cognition = 'Cognition',\n    Deception = 'Deception',\n  }\n}\n\nfunction element(\n  tier: number, name: ElementDef.Type,\n  composition?: [ElementDef.Type, ElementDef.Type]\n): ElementDef {\n  return {\n    tier,\n    name,\n    composition\n  };\n}\n\nexport const Elements: ElementDef[] = [\n  element(0, ElementDef.Type.Fire),\n  element(0, ElementDef.Type.Water),\n  element(0, ElementDef.Type.Order),\n  element(0, ElementDef.Type.Chaos),\n\n  element(1, ElementDef.Type.Void, [ElementDef.Type.Fire, ElementDef.Type.Water]),\n  element(1, ElementDef.Type.Light, [ElementDef.Type.Fire, ElementDef.Type.Order]),\n  element(1, ElementDef.Type.Energy, [ElementDef.Type.Fire, ElementDef.Type.Chaos]),\n  element(1, ElementDef.Type.Frost, [ElementDef.Type.Water, ElementDef.Type.Order]),\n  element(1, ElementDef.Type.Motion, [ElementDef.Type.Water, ElementDef.Type.Chaos]),\n  element(1, ElementDef.Type.Life, [ElementDef.Type.Order, ElementDef.Type.Chaos]),\n\n  element(2, ElementDef.Type.Defense, [ElementDef.Type.Order, ElementDef.Type.Void]),\n  element(2, ElementDef.Type.Recovery, [ElementDef.Type.Order, ElementDef.Type.Life]),\n  element(2, ElementDef.Type.Time, [ElementDef.Type.Order, ElementDef.Type.Motion]),\n  element(2, ElementDef.Type.Explosion, [ElementDef.Type.Chaos, ElementDef.Type.Energy]),\n  element(2, ElementDef.Type.Injury, [ElementDef.Type.Chaos, ElementDef.Type.Life]),\n  element(2, ElementDef.Type.Darkness, [ElementDef.Type.Void, ElementDef.Type.Light]),\n  element(2, ElementDef.Type.Weakness, [ElementDef.Type.Void, ElementDef.Type.Energy]),\n  element(2, ElementDef.Type.Spirit, [ElementDef.Type.Energy, ElementDef.Type.Life]),\n  element(2, ElementDef.Type.Capture, [ElementDef.Type.Frost, ElementDef.Type.Motion]),\n\n  element(3, ElementDef.Type.Sense, [ElementDef.Type.Motion, ElementDef.Type.Spirit]),\n  element(3, ElementDef.Type.Absorption, [ElementDef.Type.Recovery, ElementDef.Type.Spirit]),\n  element(3, ElementDef.Type.Cognition, [ElementDef.Type.Time, ElementDef.Type.Spirit]),\n  element(3, ElementDef.Type.Deception, [ElementDef.Type.Weakness, ElementDef.Type.Spirit]),\n];\n\nexport const ElementLookup: Record<string, ElementDef> =\n  Object.assign({}, ...Elements.map(elem => ({ [elem.name]: elem })));\n","export interface EffectDef {\n  readonly name: string;\n  readonly description: string;\n}\n\nexport namespace EffectDef {\n  export enum Type {\n    Heal = 'heal',\n    Damage = 'damage',\n    Regen = 'regen',\n    Poison = 'poison',\n    Speed = 'speed',\n    Slowness = 'slowness',\n    Strength = 'strength',\n    Weakness = 'weakness',\n  }\n}\n\nexport const Effects: Record<EffectDef.Type, EffectDef> = {\n  [EffectDef.Type.Heal]: {\n    name: 'Heal',\n    description: 'Recover <power> HP'\n  },\n  [EffectDef.Type.Damage]: {\n    name: 'Damage',\n    description: 'Damage <power> HP'\n  },\n  [EffectDef.Type.Regen]: {\n    name: 'Regeneration',\n    description: 'Recover <power> HP regularly'\n  },\n  [EffectDef.Type.Poison]: {\n    name: 'Poison',\n    description: 'Lose <power> HP regularly'\n  },\n  [EffectDef.Type.Speed]: {\n    name: 'Speed',\n    description: 'Increase speed by <power>'\n  },\n  [EffectDef.Type.Slowness]: {\n    name: 'Slowness',\n    description: 'Decrease speed by <power>'\n  },\n  [EffectDef.Type.Strength]: {\n    name: 'Strength',\n    description: 'Increase strength by <power>'\n  },\n  [EffectDef.Type.Weakness]: {\n    name: 'Weakness',\n    description: 'Decrease strength by <power>'\n  },\n};"],"sourceRoot":""}