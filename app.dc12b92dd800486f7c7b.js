!function(e){function t(t){for(var s,o,n=t[0],h=t[1],c=t[2],u=0,p=[];u<n.length;u++)o=n[u],a[o]&&p.push(a[o][0]),a[o]=0;for(s in h)Object.prototype.hasOwnProperty.call(h,s)&&(e[s]=h[s]);for(l&&l(t);p.length;)p.shift()();return r.push.apply(r,c||[]),i()}function i(){for(var e,t=0;t<r.length;t++){for(var i=r[t],s=!0,n=1;n<i.length;n++){var h=i[n];0!==a[h]&&(s=!1)}s&&(r.splice(t--,1),e=o(o.s=i[0]))}return e}var s={},a={1:0};var r=[];function o(t){if(s[t])return s[t].exports;var i=s[t]={i:t,l:!1,exports:{}};return e[t].call(i.exports,i,i.exports,o),i.l=!0,i.exports}o.m=e,o.c=s,o.d=function(e,t,i){o.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:i})},o.r=function(e){Object.defineProperty(e,"__esModule",{value:!0})},o.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return o.d(t,"a",t),t},o.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},o.p="";var n=window.webpackJsonp=window.webpackJsonp||[],h=n.push.bind(n);n.push=t,n=n.slice();for(var c=0;c<n.length;c++)t(n[c]);var l=h;r.push([186,0]),i()}({10:function(e,t,i){"use strict";i.d(t,"b",function(){return r}),i.d(t,"a",function(){return o});var s=i(90),a=i(335);function r(e,t=Math.random){switch(e.type){case"constant":return e.value;case"uniform":return e.min+t()*(e.max-e.min);case"exponential":return function(e,t,i,s=Math.random){let a=Math.log(1-s())/-e;void 0!==t&&(a=Math.max(t,a));void 0!==i&&(a=Math.min(i,a));return a}(e.rate,e.min,e.max,t);case"gaussian":return function(e,t,i,s,a=Math.random){let r,o;do{r=a()}while(0===r);do{o=a()}while(0===o);let n=e+t*(Math.sqrt(-2*Math.log(r))*Math.cos(2*Math.PI*o));void 0!==i&&(n=Math.max(i,n));void 0!==s&&(n=Math.min(s,n));return n}(e.mean,e.sd,e.min,e.max,t)}}function o(e,t=Math.random){const i=Object(s.a)(e.template);for(const t of e.substs)Object(a.a)(i,t.path,r(t));return i}},12:function(e,t,i){"use strict";const s=1/47,a=1/103,r=1/30,o=(Math.sqrt(3)-1)/2,n=(Math.sqrt(4)-1)/3,h=(Math.sqrt(5)-1)/4,c=(1/Math.sqrt(3)-1)/2,l=(1/Math.sqrt(4)-1)/3,u=(1/Math.sqrt(5)-1)/4,p=[[1,1,0,1,0,1,0,0,0],[1,1,0,1,0,1,2,1,1]],d=[[0,0,0,0,1,1,0,0,1,0,1,0,1,0,0,1],[2,1,1,0,2,1,0,1,2,0,1,1,3,1,1,1],[1,1,0,0,1,0,1,0,1,0,0,1,2,1,1,0,2,1,0,1,2,0,1,1]],m=[[0,0,0,0,0,1,1,0,0,0,1,0,1,0,0,1,0,0,1,0,1,0,0,0,1],[3,1,1,1,0,3,1,1,0,1,3,1,0,1,1,3,0,1,1,1,4,1,1,1,1],[1,1,0,0,0,1,0,1,0,0,1,0,0,1,0,1,0,0,0,1,2,1,1,0,0,2,1,0,1,0,2,1,0,0,1,2,0,1,1,0,2,0,1,0,1,2,0,0,1,1],[3,1,1,1,0,3,1,1,0,1,3,1,0,1,1,3,0,1,1,1,2,1,1,0,0,2,1,0,1,0,2,1,0,0,1,2,0,1,1,0,2,0,1,0,1,2,0,0,1,1]],y=[5,2,2,5,-5,2,-2,5,5,-2,2,-5,-5,-2,-2,-5],f=[-11,4,4,-4,11,4,-4,4,11,11,4,4,4,11,4,4,4,11,-11,-4,4,-4,-11,4,-4,-4,11,11,-4,4,4,-11,4,4,-4,11,-11,4,-4,-4,11,-4,-4,4,-11,11,4,-4,4,11,-4,4,4,-11,-11,-4,-4,-4,-11,-4,-4,-4,-11,11,-4,-4,4,-11,-4,4,-4,-11],g=[3,1,1,1,1,3,1,1,1,1,3,1,1,1,1,3,-3,1,1,1,-1,3,1,1,-1,1,3,1,-1,1,1,3,3,-1,1,1,1,-3,1,1,1,-1,3,1,1,-1,1,3,-3,-1,1,1,-1,-3,1,1,-1,-1,3,1,-1,-1,1,3,3,1,-1,1,1,3,-1,1,1,1,-3,1,1,1,-1,3,-3,1,-1,1,-1,3,-1,1,-1,1,-3,1,-1,1,-1,3,3,-1,-1,1,1,-3,-1,1,1,-1,-3,1,1,-1,-1,3,-3,-1,-1,1,-1,-3,-1,1,-1,-1,-3,1,-1,-1,-1,3,3,1,1,-1,1,3,1,-1,1,1,3,-1,1,1,1,-3,-3,1,1,-1,-1,3,1,-1,-1,1,3,-1,-1,1,1,-3,3,-1,1,-1,1,-3,1,-1,1,-1,3,-1,1,-1,1,-3,-3,-1,1,-1,-1,-3,1,-1,-1,-1,3,-1,-1,-1,1,-3,3,1,-1,-1,1,3,-1,-1,1,1,-3,-1,1,1,-1,-3,-3,1,-1,-1,-1,3,-1,-1,-1,1,-3,-1,-1,1,-1,-3,3,-1,-1,-1,1,-3,-1,-1,1,-1,-3,-1,1,-1,-1,-3,-3,-1,-1,-1,-1,-3,-1,-1,-1,-1,-3,-1,-1,-1,-1,-3],b=[0,1,1,0,4,1,17,0,20,2,21,2,22,5,23,5,26,4,39,3,42,4,43,3],w=[0,2,1,1,2,2,5,1,6,0,7,0,32,2,34,2,129,1,133,1,160,5,161,5,518,0,519,0,546,4,550,4,645,3,647,3,672,5,673,5,674,4,677,3,678,4,679,3,680,13,681,13,682,12,685,14,686,12,687,14,712,20,714,18,809,21,813,23,840,20,841,21,1198,19,1199,22,1226,18,1230,19,1325,23,1327,22,1352,15,1353,17,1354,15,1357,17,1358,16,1359,16,1360,11,1361,10,1362,11,1365,10,1366,9,1367,9,1392,11,1394,11,1489,10,1493,10,1520,8,1521,8,1878,9,1879,9,1906,7,1910,7,2005,6,2007,6,2032,8,2033,8,2034,7,2037,6,2038,7,2039,6],x=[0,3,1,2,2,3,5,2,6,1,7,1,8,3,9,2,10,3,13,2,16,3,18,3,22,1,23,1,24,3,26,3,33,2,37,2,38,1,39,1,41,2,45,2,54,1,55,1,56,0,57,0,58,0,59,0,60,0,61,0,62,0,63,0,256,3,258,3,264,3,266,3,272,3,274,3,280,3,282,3,2049,2,2053,2,2057,2,2061,2,2081,2,2085,2,2089,2,2093,2,2304,9,2305,9,2312,9,2313,9,16390,1,16391,1,16406,1,16407,1,16422,1,16423,1,16438,1,16439,1,16642,8,16646,8,16658,8,16662,8,18437,6,18439,6,18469,6,18471,6,18688,9,18689,9,18690,8,18693,6,18694,8,18695,6,18696,9,18697,9,18706,8,18710,8,18725,6,18727,6,131128,0,131129,0,131130,0,131131,0,131132,0,131133,0,131134,0,131135,0,131352,7,131354,7,131384,7,131386,7,133161,5,133165,5,133177,5,133181,5,133376,9,133377,9,133384,9,133385,9,133400,7,133402,7,133417,5,133421,5,133432,7,133433,5,133434,7,133437,5,147510,4,147511,4,147518,4,147519,4,147714,8,147718,8,147730,8,147734,8,147736,7,147738,7,147766,4,147767,4,147768,7,147770,7,147774,4,147775,4,149509,6,149511,6,149541,6,149543,6,149545,5,149549,5,149558,4,149559,4,149561,5,149565,5,149566,4,149567,4,149760,9,149761,9,149762,8,149765,6,149766,8,149767,6,149768,9,149769,9,149778,8,149782,8,149784,7,149786,7,149797,6,149799,6,149801,5,149805,5,149814,4,149815,4,149816,7,149817,5,149818,7,149821,5,149822,4,149823,4,149824,37,149825,37,149826,36,149829,34,149830,36,149831,34,149832,37,149833,37,149842,36,149846,36,149848,35,149850,35,149861,34,149863,34,149865,33,149869,33,149878,32,149879,32,149880,35,149881,33,149882,35,149885,33,149886,32,149887,32,150080,49,150082,48,150088,49,150098,48,150104,47,150106,47,151873,46,151877,45,151881,46,151909,45,151913,44,151917,44,152128,49,152129,46,152136,49,152137,46,166214,43,166215,42,166230,43,166247,42,166262,41,166263,41,166466,48,166470,43,166482,48,166486,43,168261,45,168263,42,168293,45,168295,42,168512,31,168513,28,168514,31,168517,28,168518,25,168519,25,280952,40,280953,39,280954,40,280957,39,280958,38,280959,38,281176,47,281178,47,281208,40,281210,40,282985,44,282989,44,283001,39,283005,39,283208,30,283209,27,283224,30,283241,27,283256,22,283257,22,297334,41,297335,41,297342,38,297343,38,297554,29,297558,24,297562,29,297590,24,297594,21,297598,21,299365,26,299367,23,299373,26,299383,23,299389,20,299391,20,299584,31,299585,28,299586,31,299589,28,299590,25,299591,25,299592,30,299593,27,299602,29,299606,24,299608,30,299610,29,299621,26,299623,23,299625,27,299629,26,299638,24,299639,23,299640,22,299641,22,299642,21,299645,20,299646,21,299647,20,299648,61,299649,60,299650,61,299653,60,299654,59,299655,59,299656,58,299657,57,299666,55,299670,54,299672,58,299674,55,299685,52,299687,51,299689,57,299693,52,299702,54,299703,51,299704,56,299705,56,299706,53,299709,50,299710,53,299711,50,299904,61,299906,61,299912,58,299922,55,299928,58,299930,55,301697,60,301701,60,301705,57,301733,52,301737,57,301741,52,301952,79,301953,79,301960,76,301961,76,316038,59,316039,59,316054,54,316071,51,316086,54,316087,51,316290,78,316294,78,316306,73,316310,73,318085,77,318087,77,318117,70,318119,70,318336,79,318337,79,318338,78,318341,77,318342,78,318343,77,430776,56,430777,56,430778,53,430781,50,430782,53,430783,50,431e3,75,431002,72,431032,75,431034,72,432809,74,432813,69,432825,74,432829,69,433032,76,433033,76,433048,75,433065,74,433080,75,433081,74,447158,71,447159,68,447166,71,447167,68,447378,73,447382,73,447386,72,447414,71,447418,72,447422,71,449189,70,449191,70,449197,69,449207,68,449213,69,449215,68,449408,67,449409,67,449410,66,449413,64,449414,66,449415,64,449416,67,449417,67,449426,66,449430,66,449432,65,449434,65,449445,64,449447,64,449449,63,449453,63,449462,62,449463,62,449464,65,449465,63,449466,65,449469,63,449470,62,449471,62,449472,19,449473,19,449474,18,449477,16,449478,18,449479,16,449480,19,449481,19,449490,18,449494,18,449496,17,449498,17,449509,16,449511,16,449513,15,449517,15,449526,14,449527,14,449528,17,449529,15,449530,17,449533,15,449534,14,449535,14,449728,19,449729,19,449730,18,449734,18,449736,19,449737,19,449746,18,449750,18,449752,17,449754,17,449784,17,449786,17,451520,19,451521,19,451525,16,451527,16,451528,19,451529,19,451557,16,451559,16,451561,15,451565,15,451577,15,451581,15,451776,19,451777,19,451784,19,451785,19,465858,18,465861,16,465862,18,465863,16,465874,18,465878,18,465893,16,465895,16,465910,14,465911,14,465918,14,465919,14,466114,18,466118,18,466130,18,466134,18,467909,16,467911,16,467941,16,467943,16,468160,13,468161,13,468162,13,468163,13,468164,13,468165,13,468166,13,468167,13,580568,17,580570,17,580585,15,580589,15,580598,14,580599,14,580600,17,580601,15,580602,17,580605,15,580606,14,580607,14,580824,17,580826,17,580856,17,580858,17,582633,15,582637,15,582649,15,582653,15,582856,12,582857,12,582872,12,582873,12,582888,12,582889,12,582904,12,582905,12,596982,14,596983,14,596990,14,596991,14,597202,11,597206,11,597210,11,597214,11,597234,11,597238,11,597242,11,597246,11,599013,10,599015,10,599021,10,599023,10,599029,10,599031,10,599037,10,599039,10,599232,13,599233,13,599234,13,599235,13,599236,13,599237,13,599238,13,599239,13,599240,12,599241,12,599250,11,599254,11,599256,12,599257,12,599258,11,599262,11,599269,10,599271,10,599272,12,599273,12,599277,10,599279,10,599282,11,599285,10,599286,11,599287,10,599288,12,599289,12,599290,11,599293,10,599294,11,599295,10],v=[0,0,1,-1,0,0,-1,1,0,2,1,1,1,2,2,0,1,2,0,2,1,0,0,0],S=[0,0,1,-1,0,0,1,0,-1,0,0,-1,1,0,0,0,1,-1,0,0,-1,0,1,0,0,-1,1,0,2,1,1,0,1,1,1,-1,0,2,1,0,1,1,1,-1,1,0,2,0,1,1,1,-1,1,1,1,3,2,1,0,3,1,2,0,1,3,2,0,1,3,1,0,2,1,3,0,2,1,3,0,1,2,1,1,1,0,0,2,2,0,0,1,1,0,1,0,2,0,2,0,1,1,0,0,1,2,0,0,2,2,0,0,0,0,1,1,-1,1,2,0,0,0,0,1,-1,1,1,2,0,0,0,0,1,1,1,-1,2,3,1,1,1,2,0,0,2,2,3,1,1,1,2,2,0,0,2,3,1,1,1,2,0,2,0,2,1,1,-1,1,2,0,0,2,2,1,1,-1,1,2,2,0,0,2,1,-1,1,1,2,0,0,2,2,1,-1,1,1,2,0,2,0,2,1,1,1,-1,2,2,0,0,2,1,1,1,-1,2,0,2,0],k=[0,0,1,-1,0,0,0,1,0,-1,0,0,1,0,0,-1,0,0,-1,1,0,0,0,0,1,-1,0,0,0,1,0,-1,0,0,-1,0,1,0,0,0,-1,1,0,0,0,0,1,-1,0,0,-1,0,0,1,0,0,-1,0,1,0,0,0,-1,1,0,2,1,1,0,0,1,1,1,-1,0,1,1,1,0,-1,0,2,1,0,1,0,1,1,-1,1,0,1,1,0,1,-1,0,2,0,1,1,0,1,-1,1,1,0,1,0,1,1,-1,0,2,1,0,0,1,1,1,-1,0,1,1,1,0,-1,1,0,2,0,1,0,1,1,-1,1,0,1,1,0,1,-1,1,0,2,0,0,1,1,1,-1,0,1,1,1,0,-1,1,1,1,4,2,1,1,0,4,1,2,1,0,4,1,1,2,0,1,4,2,1,0,1,4,1,2,0,1,4,1,1,0,2,1,4,2,0,1,1,4,1,0,2,1,4,1,0,1,2,1,4,0,2,1,1,4,0,1,2,1,4,0,1,1,2,1,2,1,1,0,0,3,2,1,0,0,3,1,2,0,0,1,2,1,0,1,0,3,2,0,1,0,3,1,0,2,0,1,2,0,1,1,0,3,0,2,1,0,3,0,1,2,0,1,2,1,0,0,1,3,2,0,0,1,3,1,0,0,2,1,2,0,1,0,1,3,0,2,0,1,3,0,1,0,2,1,2,0,0,1,1,3,0,0,2,1,3,0,0,1,2,2,3,1,1,1,0,2,1,1,1,-1,2,2,0,0,0,2,3,1,1,0,1,2,1,1,-1,1,2,2,0,0,0,2,3,1,0,1,1,2,1,-1,1,1,2,2,0,0,0,2,3,1,1,1,0,2,1,1,1,-1,2,0,2,0,0,2,3,1,1,0,1,2,1,1,-1,1,2,0,2,0,0,2,3,0,1,1,1,2,-1,1,1,1,2,0,2,0,0,2,3,1,1,1,0,2,1,1,1,-1,2,0,0,2,0,2,3,1,0,1,1,2,1,-1,1,1,2,0,0,2,0,2,3,0,1,1,1,2,-1,1,1,1,2,0,0,2,0,2,3,1,1,0,1,2,1,1,-1,1,2,0,0,0,2,2,3,1,0,1,1,2,1,-1,1,1,2,0,0,0,2,2,3,0,1,1,1,2,-1,1,1,1,2,0,0,0,2,2,1,1,1,-1,0,1,1,1,0,-1,0,0,0,0,0,2,1,1,-1,1,0,1,1,0,1,-1,0,0,0,0,0,2,1,-1,1,1,0,1,0,1,1,-1,0,0,0,0,0,2,1,1,-1,0,1,1,1,0,-1,1,0,0,0,0,0,2,1,-1,1,0,1,1,0,1,-1,1,0,0,0,0,0,2,1,-1,0,1,1,1,0,-1,1,1,0,0,0,0,0,2,1,1,1,-1,0,1,1,1,0,-1,2,2,0,0,0,2,1,1,-1,1,0,1,1,0,1,-1,2,2,0,0,0,2,1,1,-1,0,1,1,1,0,-1,1,2,2,0,0,0,2,1,1,1,-1,0,1,1,1,0,-1,2,0,2,0,0,2,1,-1,1,1,0,1,0,1,1,-1,2,0,2,0,0,2,1,-1,1,0,1,1,0,1,-1,1,2,0,2,0,0,2,1,1,-1,1,0,1,1,0,1,-1,2,0,0,2,0,2,1,-1,1,1,0,1,0,1,1,-1,2,0,0,2,0,2,1,-1,0,1,1,1,0,-1,1,1,2,0,0,2,0,2,1,1,-1,0,1,1,1,0,-1,1,2,0,0,0,2,2,1,-1,1,0,1,1,0,1,-1,1,2,0,0,0,2,2,1,-1,0,1,1,1,0,-1,1,1,2,0,0,0,2,3,1,1,0,0,0,2,2,0,0,0,2,1,1,1,-1,3,1,0,1,0,0,2,0,2,0,0,2,1,1,1,-1,3,1,0,0,1,0,2,0,0,2,0,2,1,1,1,-1,3,1,1,0,0,0,2,2,0,0,0,2,1,1,-1,1,3,1,0,1,0,0,2,0,2,0,0,2,1,1,-1,1,3,1,0,0,0,1,2,0,0,0,2,2,1,1,-1,1,3,1,1,0,0,0,2,2,0,0,0,2,1,-1,1,1,3,1,0,0,1,0,2,0,0,2,0,2,1,-1,1,1,3,1,0,0,0,1,2,0,0,0,2,2,1,-1,1,1,3,1,0,1,0,0,2,0,2,0,0,2,-1,1,1,1,3,1,0,0,1,0,2,0,0,2,0,2,-1,1,1,1,3,1,0,0,0,1,2,0,0,0,2,2,-1,1,1,1,3,3,2,1,0,0,3,1,2,0,0,4,1,1,1,1,3,3,2,0,1,0,3,1,0,2,0,4,1,1,1,1,3,3,0,2,1,0,3,0,1,2,0,4,1,1,1,1,3,3,2,0,0,1,3,1,0,0,2,4,1,1,1,1,3,3,0,2,0,1,3,0,1,0,2,4,1,1,1,1,3,3,0,0,2,1,3,0,0,1,2,4,1,1,1,1,3,3,2,1,0,0,3,1,2,0,0,2,1,1,1,-1,3,3,2,0,1,0,3,1,0,2,0,2,1,1,1,-1,3,3,0,2,1,0,3,0,1,2,0,2,1,1,1,-1,3,3,2,1,0,0,3,1,2,0,0,2,1,1,-1,1,3,3,2,0,0,1,3,1,0,0,2,2,1,1,-1,1,3,3,0,2,0,1,3,0,1,0,2,2,1,1,-1,1,3,3,2,0,1,0,3,1,0,2,0,2,1,-1,1,1,3,3,2,0,0,1,3,1,0,0,2,2,1,-1,1,1,3,3,0,0,2,1,3,0,0,1,2,2,1,-1,1,1,3,3,0,2,1,0,3,0,1,2,0,2,-1,1,1,1,3,3,0,2,0,1,3,0,1,0,2,2,-1,1,1,1,3,3,0,0,2,1,3,0,0,1,2,2,-1,1,1,1];class z{constructor(e,t,i){this.dx=-t-e*o,this.dy=-i-e*o,this.xsb=t,this.ysb=i}}class T{constructor(e,t,i,s){this.dx=-t-e*n,this.dy=-i-e*n,this.dz=-s-e*n,this.xsb=t,this.ysb=i,this.zsb=s}}class j{constructor(e,t,i,s,a){this.dx=-t-e*h,this.dy=-i-e*h,this.dz=-s-e*h,this.dw=-a-e*h,this.xsb=t,this.ysb=i,this.zsb=s,this.wsb=a}}function M(e){const t=new Uint32Array(1);return t[0]=1664525*e[0]+1013904223,t}class C{constructor(e){this.hashVals=new Uint32Array(4),this.initialize(),this.perm=new Uint8Array(256),this.perm2D=new Uint8Array(256),this.perm3D=new Uint8Array(256),this.perm4D=new Uint8Array(256);const t=new Uint8Array(256);for(let e=0;e<256;e++)t[e]=e;let i=new Uint32Array(1);i[0]=e,i=M(M(M(i)));for(let e=255;e>=0;e--){i=M(i);const s=new Uint32Array(1);s[0]=(i[0]+31)%(e+1),s[0]<0&&(s[0]+=e+1),this.perm[e]=t[s[0]],this.perm2D[e]=14&this.perm[e],this.perm3D[e]=this.perm[e]%24*3,this.perm4D[e]=252&this.perm[e],t[s[0]]=t[e]}}array2D(e,t){const i=new Array(e);for(let s=0;s<e;s++){i[s]=new Array(t);for(let e=0;e<t;e++)i[s][e]=this.noise2D(s,e)}return i}array3D(e,t,i){const s=new Array(e);for(let a=0;a<e;a++){s[a]=new Array(t);for(let e=0;e<t;e++){s[a][e]=new Array(i);for(let t=0;t<i;t++)s[a][e][t]=this.noise3D(a,e,t)}}return s}array4D(e,t,i,s){const a=new Array(e);for(let r=0;r<e;r++){a[r]=new Array(t);for(let e=0;e<t;e++){a[r][e]=new Array(i);for(let t=0;t<i;t++){a[r][e][t]=new Array(s);for(let i=0;i<s;i++)a[r][e][t][i]=this.noise4D(r,e,t,i)}}}return a}noise2D(e,t){const i=(e+t)*c,a=e+i,r=t+i,n=Math.floor(a),h=Math.floor(r),l=(n+h)*o,u=e-(n+l),p=t-(h+l),d=a-n,m=r-h,f=d+m,g=this.hashVals;g[0]=d-m+1,g[1]=f,g[2]=f+m,g[3]=f+d;const b=g[0]|g[1]<<1|g[2]<<2|g[3]<<4;let w=this.lookup2D[b],x=0;for(;void 0!==w;){const e=u+w.dx,t=p+w.dy;let i=2-e*e-t*t;if(i>0){const s=n+w.xsb,a=h+w.ysb,r=this.perm2D[this.perm[255&s]+a&255],o=y[r]*e+y[r+1]*t;x+=(i*=i)*i*o}w=w.next}return x*s}noise3D(e,t,i){const s=(e+t+i)*l,[r,o,h]=[e+s,t+s,i+s],[c,u,p]=[Math.floor(r),Math.floor(o),Math.floor(h)],d=(c+u+p)*n,[m,y,g]=[e-(c+d),t-(u+d),i-(p+d)],[b,w,x]=[r-c,o-u,h-p],v=b+w+x,S=new Uint32Array(7);S[0]=w-x+1,S[1]=b-w+1,S[2]=b-x+1,S[3]=v,S[4]=v+x,S[5]=v+w,S[6]=v+b;const k=S[0]|S[1]<<1|S[2]<<2|S[3]<<3|S[4]<<5|S[5]<<7|S[6]<<9;let z=this.lookup3D[k],T=0;for(;void 0!==z;){const[e,t,i]=[m+z.dx,y+z.dy,g+z.dz];let s=2-e*e-t*t-i*i;if(s>0){const[a,r,o]=[c+z.xsb,u+z.ysb,p+z.zsb],n=this.perm3D[this.perm[this.perm[255&a]+r&255]+o&255],h=f[n]*e+f[n+1]*t+f[n+2]*i;T+=(s*=s)*s*h}z=z.next}return T*a}noise4D(e,t,i,s){const a=(e+t+i+s)*u,[o,n,c,l]=[e+a,t+a,i+a,s+a],[p,d,m,y]=[Math.floor(o),Math.floor(n),Math.floor(c),Math.floor(l)],f=(p+d+m+y)*h,b=e-(p+f),w=t-(d+f),x=i-(m+f),v=s-(y+f),[S,k,z,T]=[o-p,n-d,c-m,l-y],j=S+k+z+T,M=new Uint32Array(11);M[0]=z-T+1,M[1]=k-z+1,M[2]=k-T+1,M[3]=S-k+1,M[4]=S-z+1,M[5]=S-T+1,M[6]=j,M[7]=j+T,M[8]=j+z,M[9]=j+k,M[10]=j+S;const C=M[0]|M[1]<<1|M[2]<<2|M[3]<<3|M[4]<<4|M[5]<<5|M[6]<<6|M[7]<<8|M[8]<<11|M[9]<<14|M[10]<<17;let O=this.lookup4D[C],F=0;for(;void 0!==O;){const[e,t,i,s]=[b+O.dx,w+O.dy,x+O.dz,v+O.dw];let a=2-e*e-t*t-i*i-s*s;if(a>0){const[r,o,n,h]=[p+O.xsb,d+O.ysb,m+O.zsb,y+O.wsb],c=this.perm4D[this.perm[this.perm[this.perm[255&r]+o&255]+n&255]+h&255],l=g[c]*e+g[c+1]*t+g[c+2]*i+g[c+3]*s;F+=(a*=a)*a*l}O=O.next}return F*r}initialize(){const e=[];for(let t=0;t<v.length;t+=4){const i=p[v[t]];let s=null,a=null;for(let r=0;r<i.length;r+=3)a=new z(i[r],i[r+1],i[r+2]),null===s?e[t/4]=a:s.next=a,s=a;a.next=new z(v[t+1],v[t+2],v[t+3])}this.lookup2D=[];for(let t=0;t<b.length;t+=2)this.lookup2D[b[t]]=e[b[t+1]];const t=[];for(let e=0;e<S.length;e+=9){const i=d[S[e]];let s=null,a=null;for(let r=0;r<i.length;r+=4)a=new T(i[r],i[r+1],i[r+2],i[r+3]),null===s?t[e/9]=a:s.next=a,s=a;a.next=new T(S[e+1],S[e+2],S[e+3],S[e+4]),a.next.next=new T(S[e+5],S[e+6],S[e+7],S[e+8])}this.lookup3D=[];for(let e=0;e<w.length;e+=2)this.lookup3D[w[e]]=t[w[e+1]];const i=[];for(let e=0;e<k.length;e+=16){const t=m[k[e]];let s=null,a=null;for(let r=0;r<t.length;r+=5)a=new j(t[r],t[r+1],t[r+2],t[r+3],t[r+4]),null===s?i[e/16]=a:s.next=a,s=a;a.next=new j(k[e+1],k[e+2],k[e+3],k[e+4],k[e+5]),a.next.next=new j(k[e+6],k[e+7],k[e+8],k[e+9],k[e+10]),a.next.next.next=new j(k[e+11],k[e+12],k[e+13],k[e+14],k[e+15])}this.lookup4D=[];for(let e=0;e<x.length;e+=2)this.lookup4D[x[e]]=i[x[e+1]]}}i.d(t,"a",function(){return O});class O{constructor(e,t=1/256,i=4,s=.5){this.freq=t,this.octaves=i,this.persistence=s,this.noise=new C(4294967295*e.random())}noise2D(e,t){let i=1,s=0,a=this.freq,r=0;for(let o=0;o<this.octaves;o++)r+=this.noise.noise2D(e*a,t*a)*i,s+=i,i*=this.persistence,a*=2;return((r/=s)+1)/2}}},159:function(e,t,i){e.exports=i.p+"assets/712119d6b5b8404ce47d2f501258b540.woff"},160:function(e,t,i){e.exports=i.p+"assets/c47bbe6b531a3063257791bfa2de6ed8.otf"},161:function(e,t,i){e.exports=i.p+"assets/6d6a985a020034d856ef3579d5612c00.otf"},162:function(e,t,i){e.exports=i.p+"assets/3b0ea8776746732d38c9c352e0996a82.otf"},185:function(e,t,i){"use strict";i.r(t);var s,a=i(4),r=i(12),o=i(163),n=i(1);!function(e){let t,i;!function(e){e[e.None=0]="None",e[e.FrozenBarren=1]="FrozenBarren",e[e.Barren=2]="Barren",e[e.Desert=3]="Desert",e[e.SnowPlain=4]="SnowPlain",e[e.Savanna=5]="Savanna",e[e.Plain=6]="Plain",e[e.Taiga=7]="Taiga",e[e.Forest=8]="Forest",e[e.FrozenLake=9]="FrozenLake",e[e.Lake=10]="Lake",e[e.Swamp=11]="Swamp"}(t=e.Type||(e.Type={})),function(e){e[e.None=0]="None",e[e.Spawn=1]="Spawn",e[e.Pond=2]="Pond",e[e.LavaPond=3]="LavaPond",e[e.Floral=4]="Floral",e[e.Rocky=5]="Rocky",e[e.Oasis=6]="Oasis",e[e.Cemetery=7]="Cemetery",e[e.Ruins=8]="Ruins"}(i=e.Feature||(e.Feature={}))}(s||(s={}));var h=i(32);class c{constructor(e,t,i,s){function a(e){return Object.assign({},...e.filter(e=>e).map(e=>({[e.name]:e.id})))}this.width=e,this.height=t,this.seed=i,this.library=s,this.biomes=[],this.rivers=[],this.map={},this.game={},this.entities=[],this.terrains=new Uint16Array(e*t),this.objects=new Uint16Array(e*t),this.tileBiomes=new Uint16Array(e*t),this.random=Object(h.create)(i),this.terrainLookup=a(s.terrains),this.objectLookup=a(s.objects)}finalizeMap(){return{width:this.width,height:this.height,props:this.map,terrains:this.terrains,objects:this.objects}}toIndex(e,t){return e=Math.floor(e),t=Math.floor(t),e>=0&&e<this.width&&t>=0&&t<this.height?e+this.width*t:-1}getTerrain(e,t){const i=this.toIndex(e,t);if(i<0)return 0;{const e=this.library.terrains[this.terrains[i]];return e&&e.name}}getObject(e,t){const i=this.toIndex(e,t);if(i<0)return 0;{const e=this.library.objects[this.objects[i]];return e&&e.name}}getBiomeIndex(e,t){const i=this.toIndex(e,t);return i<0?-1:this.tileBiomes[i]}setTerrain(e,t,i){const s=this.toIndex(e,t);s<0||(this.terrains[s]=i?this.terrainLookup[i]:0)}setObject(e,t,i){const s=this.toIndex(e,t);s<0||(this.objects[s]=i?this.objectLookup[i]:0)}setBiomeIndex(e,t,i){const s=this.toIndex(e,t);s<0||(this.tileBiomes[s]=i)}}var l=i(83),u=i(10),p=i(6),d=i(172);function*m(e,t){for(let i=0;i<e.length;i++)yield e[i],t(null,i/e.length)}function y(e,t,i,s){const a=i*Math.SQRT1_2,r=e=>e/a,o=new Uint32Array(Math.ceil(r(e))*Math.ceil(r(t))),n=(t,i)=>Math.floor(r(t))+Math.floor(r(i))*Math.ceil(r(e)),h=[],c=[],l=(s,r)=>{if(s=Math.floor(s),r=Math.floor(r),s<0||r<0||s>=e||r>=t)return!1;if(o[n(s,r)])return!1;for(let e=-1;e<=1;e++)for(let t=-1;t<=1;t++){const h=o[n(s+t*a,r+e*a)];if(!h)continue;const l=c[h-1][0]-s,u=c[h-1][1]-r;if(l*l+u*u<=i*i)return!1}return h.push([s,r]),o[n(s,r)]=c.push([s,r]),!0};for(l(s.range(e),s.range(t));h.length>0;){const e=s.range(h.length);let t;for(t=0;t<64;t++){const t=s.floatBetween(0,2*Math.PI),a=s.floatBetween(i,2*i);if(l(h[e][0]+Math.cos(t)*a,h[e][1]+Math.sin(t)*a))break}64===t&&h.splice(e,1)}return c}function f(e,t,i={type:"uniform",min:0,max:1},s={type:"uniform",min:0,max:1}){const a=Object(d.a)(100*t,function(){const t=360*e.random(),a=100*Object(u.b)(s,e.random),r=100*Object(u.b)(i,e.random);return Object(l.lch)(a,r,t)}),r=a.splice(e.range(a.length),1);for(let e=1;e<t;e++){let e=0,t=r[0];for(const i of a){let s=1e3;for(const t of r){const a=Object(l.distance)(t,i);if((s=Math.min(s,a))<e)break}s>e&&(e=s,t=i)}r.push(t)}return r.map(e=>e.rgb()).map(([e,t,i])=>65536*e+256*t+1*i)}function g(e,t){let i,s;do{const t=p.c.filter(e=>e.tier<=1);i=t.splice(e.range(t.length),1)[0],s=t.splice(e.range(t.length),1)[0]}while(t.indexOf(`${i.name}:${s.name}`)>=0);return t.push(`${i.name}:${s.name}`),[i.name,s.name]}function b(e,t,i,s,a){e=Math.floor(e),t=Math.floor(t),i=Math.floor(i),s=Math.floor(s);const r=Math.abs(i-e),o=Math.abs(s-t),n=Math.sign(i-e),h=Math.sign(s-t);let c=r-o;for(a(e,t);e!==i||t!==s;){2*c>-o?(c-=o,e+=n):(c+=r,t+=h),a(e,t)}}const w=32,x=16,v=8,S=16;const k=[[s.Type.FrozenBarren,.15,.2,1],[s.Type.Barren,0,.5,1],[s.Type.Desert,.15,.8,1],[s.Type.SnowPlain,.25,.25,1],[s.Type.Savanna,.25,.75,1],[s.Type.Plain,.5,.5,1],[s.Type.Taiga,.7,.25,1],[s.Type.Forest,.7,.75,1],[s.Type.FrozenLake,.8,.25,1],[s.Type.Lake,1,.5,1],[s.Type.Swamp,.8,.75,1]];function z(e,t){t("generating biomes...",0),function(e){const t=y(e.width,e.height,w,e.random),i=Object(o.a)()(t);e.voronoi=i,e.biomes=t.map(([t,i],a)=>({index:a,type:s.Type.None,feature:s.Feature.None,position:n.b.fromValues(t,i),min:n.b.fromValues(e.width-1,e.height-1),max:n.b.fromValues(0,0),humidity:0,temperature:0}))}(e),function(e){const t=y(e.width,e.height,w*S,e.random).map(t=>({position:t,level:e.random.floatBetween(.5,1)})),i=[],s=[],a=new r.a(e.random,1/128,1);for(const{position:r,level:o}of t){let t=o,n=r,h=e.random.floatBetween(-Math.PI,Math.PI);for(;n[0]>=0&&n[0]<e.width&&n[1]>=0&&n[1]<e.height&&t>.25;){i.push({position:n,level:t});const r=e.random.floatBetween(w,2*w),o=[n[0]+Math.cos(h)*r,n[1]+Math.sin(h)*r];h+=(2*a.noise2D(n[0],n[1])-1)*Math.PI/4,s.push({from:n,to:o,level:t}),t*=e.random.floatBetween(.9,1),n=o}}for(const t of e.biomes){const e=Math.sqrt(w*S*w*S*2);t.humidity=0;for(const{position:s,level:a}of i){const i=n.b.dist(s,t.position),r=a*(0===i?1:Math.pow(1-Math.min(1,i/e),2));r>t.humidity&&(t.humidity=r)}}e.rivers=s}(e),function(e){const t=new r.a(e.random,.002,1);for(const i of e.biomes){const e=2*t.noise2D(i.position[0],i.position[1])-1,s=Math.sign(e)*Math.pow(Math.abs(e),1);i.temperature=(s+1)/2}}(e),function(e){for(const t of e.biomes){let e=Number.MAX_VALUE;for(const[i,s,a,r]of k){const o=t.humidity-s,n=t.temperature-a,h=1/(r*r)*(o*o+n*n);h<e&&(e=h,t.type=i)}}}(e),function(e,t){const i=new r.a(e.random,1/32,4),a=new r.a(e.random,1/32,4);for(let r=0;r<e.height;r++){for(let t=0;t<e.width;t++){const o=2*i.noise2D(t,r)-1,n=2*a.noise2D(t,r)-1;let h=t+o*x,c=r+n*x;const l=e.biomes[e.voronoi.find(h,c).index];h+=e.random.floatBetween(-v,v),c+=e.random.floatBetween(-v,v);const u=e.biomes[e.voronoi.find(h,c).index];let p=u;l.type!==s.Type.Lake&&l.type!==s.Type.FrozenLake&&u.type!==s.Type.Lake&&u.type!==s.Type.FrozenLake||(p=l);let d=null;switch(p.type){case s.Type.FrozenBarren:d="snow";break;case s.Type.Barren:d=e.random.range(50)?"soil":"grass-light";break;case s.Type.Desert:d="sand";break;case s.Type.SnowPlain:d="snow";break;case s.Type.Savanna:d="grass-light";break;case s.Type.Plain:d="grass";break;case s.Type.Taiga:d="snow";break;case s.Type.Forest:d="grass-deep";break;case s.Type.FrozenLake:d="ice";break;case s.Type.Lake:d="water";break;case s.Type.Swamp:d=e.random.range(5)?"mud":"grass-deep"}e.setTerrain(t,r,d),e.setBiomeIndex(t,r,l.index),l.min[0]=Math.min(l.min[0],t),l.min[1]=Math.min(l.min[1],r),l.max[0]=Math.max(l.max[0],t),l.max[1]=Math.max(l.max[1],r)}t(null,r/e.height)}}(e,t)}const T={[s.Type.FrozenBarren]:[["stone",.02],["rocks",.02]],[s.Type.Barren]:[["stone",.02],["rocks",.02]],[s.Type.Desert]:[["tree-coconut",.001],["stone",.01],["rocks",.01],["cactus",.01]],[s.Type.SnowPlain]:[["berries",.002],["flower",.005],["tree-spruce",.005],["bush",.008],["rocks",.01],["fern",.05]],[s.Type.Savanna]:[["rocks",.004],["berries",.004],["flower",.005],["tree-oak",.005],["bush",.006],["fern",.1]],[s.Type.Plain]:[["bush",.004],["tree-oak",.005],["berries",.006],["rocks",.01],["flower",.02],["fern",.4]],[s.Type.Taiga]:[["rocks",.001],["berries",.003],["flower",.005],["bush",.007],["fern",.05],["tree-spruce",.1]],[s.Type.Forest]:[["rocks",.001],["bush",.004],["flower",.005],["berries",.006],["fern",.05],["tree-oak",.1]],[s.Type.Swamp]:[["rocks",.001],["fern",.05]]};const j=128,M=4,C=16,O=16,F=24,B=.2,P={[s.Type.Barren]:[s.Feature.LavaPond,s.Feature.LavaPond,s.Feature.Rocky,s.Feature.Cemetery,s.Feature.Cemetery,s.Feature.Ruins],[s.Type.FrozenBarren]:[s.Feature.Rocky,s.Feature.Rocky,s.Feature.Cemetery,s.Feature.Cemetery,s.Feature.Cemetery,s.Feature.Ruins],[s.Type.Desert]:[s.Feature.LavaPond,s.Feature.LavaPond,s.Feature.LavaPond,s.Feature.Rocky,s.Feature.Rocky,s.Feature.Oasis,s.Feature.Oasis,s.Feature.Oasis,s.Feature.Cemetery],[s.Type.SnowPlain]:[s.Feature.Pond,s.Feature.Floral,s.Feature.Floral,s.Feature.Rocky,s.Feature.Cemetery,s.Feature.Ruins],[s.Type.Savanna]:[s.Feature.Pond,s.Feature.Pond,s.Feature.Floral,s.Feature.Floral,s.Feature.Rocky,s.Feature.Ruins],[s.Type.Plain]:[s.Feature.Pond,s.Feature.Pond,s.Feature.Pond,s.Feature.Floral,s.Feature.Floral,s.Feature.Rocky,s.Feature.Ruins],[s.Type.Taiga]:[s.Feature.Pond,s.Feature.Pond,s.Feature.Pond,s.Feature.Floral,s.Feature.Floral,s.Feature.Floral,s.Feature.Ruins],[s.Type.Forest]:[s.Feature.Pond,s.Feature.Pond,s.Feature.Pond,s.Feature.Floral,s.Feature.Floral,s.Feature.Floral,s.Feature.Ruins],[s.Type.Swamp]:[s.Feature.Pond,s.Feature.Rocky,s.Feature.Rocky,s.Feature.Cemetery,s.Feature.Cemetery]};function A(e,t,i,s){for(let a=t.min[1]-M;a<=t.max[1]+M;a++)for(let r=t.min[0]-M;r<=t.max[0]+M;r++){let o=r,n=a;if(s){const[e,t]=s(r,a);o+=e,n+=t}e.getBiomeIndex(o,n)===t.index&&i(r,a)}}function D(e,t){t("generating features...",0),function(e,t){const i=y(e.width,e.height,j,e.random),a=new r.a(e.random,1/32,4),o=new r.a(e.random,1/32,4);for(const[r,h]of m(i,t)){const t=e.biomes[e.getBiomeIndex(r,h)],i=P[t.type];if(!i)continue;const c=i[e.random.range(10)];if(c){switch(c){case s.Feature.Pond:case s.Feature.LavaPond:{let i;"water"==(i=c===s.Feature.LavaPond?"lava":"water")&&A(e,t,(t,i)=>e.setTerrain(t,i,"sand"),(e,t)=>[(2*a.noise2D(e,t)-1)*C,(2*o.noise2D(e,t)-1)*C]),A(e,t,(t,s)=>e.setTerrain(t,s,i))}break;case s.Feature.Oasis:A(e,t,(t,i)=>e.setTerrain(t,i,"water")),A(e,t,(t,i)=>{"sand"===e.getTerrain(t,i)&&0===e.random.range(5)&&e.setObject(t,i,"tree-coconut")},(e,i)=>{const s=n.b.sub(n.b.create(),[e,i],t.position);return n.b.scale(s,n.b.normalize(s,s),M),[-s[0],-s[1]]});break;case s.Feature.Cemetery:A(e,t,(t,i)=>{0===e.random.range(3)&&(e.setTerrain(t,i,"mud"),0===e.random.range(10)?e.setObject(t,i,"cross"):0===e.random.range(10)&&e.setObject(t,i,"bones"))});break;case s.Feature.Ruins:A(e,t,(t,i)=>{e.setTerrain(t,i,"stone"),0===e.random.range(50)?e.setObject(t,i,"pillar"):0===e.random.range(50)&&e.setObject(t,i,"bones")},(t,i)=>[e.random.intBetween(-M,M),e.random.intBetween(-M,M)])}if(t.feature=c,c===s.Feature.Floral||c===s.Feature.Rocky){let t;(t=e.biomes[e.getBiomeIndex(r-j,h)])&&(t.feature=c),(t=e.biomes[e.getBiomeIndex(r+j,h)])&&(t.feature=c),(t=e.biomes[e.getBiomeIndex(r,h-j)])&&(t.feature=c),(t=e.biomes[e.getBiomeIndex(r,h+j)])&&(t.feature=c)}}}const h=[e.width*B,e.height*B];let c;do{c=e.biomes[e.getBiomeIndex(e.random.intBetween(h[0],e.width-h[0]),e.random.intBetween(h[1],e.width-h[1]))]}while(c.feature!==s.Feature.None&&c.type!==s.Type.Lake&&c.type!==s.Type.FrozenLake);c.feature=s.Feature.Spawn,e.map.spawn=[c.position[0],c.position[1]]}(e,t),function(e,t){const i=new r.a(e.random,1/32,4),a=new r.a(e.random,1/32,4);for(const{from:r,to:h,level:c}of m(e.rivers,t)){function o(e){let t=r[0]+(h[0]-r[0])*(e/O),s=r[1]+(h[1]-r[1])*(e/O);return[t+=Math.floor((2*i.noise2D(t,s)-1)*F),s+=Math.floor((2*a.noise2D(t,s)-1)*F)]}function n(e){if(!e)return!1;switch(e.type){case s.Type.FrozenLake:case s.Type.FrozenBarren:case s.Type.SnowPlain:case s.Type.Taiga:return!0}return!1}for(let t=0;t<O;t++){const i=o(t),s=o(t+1),a=e.biomes[e.getBiomeIndex(i[0],i[1])],r=e.biomes[e.getBiomeIndex(s[0],s[1])],h=n(a)&&n(r)?"ice":"water";b(i[0],i[1],s[0],s[1],(t,i)=>{const s=Math.round(4*c);for(let a=0;a<s;a++)for(let r=0;r<s;r++)"water"!==e.getTerrain(t+r,i+a)&&e.setTerrain(t+r,i+a,h),e.setObject(t+r,i+a,null)})}}}(e,t)}
/**
@license Foswig.js | (c) Glenn Conner. | https://github.com/mrsharpoblunto/foswig.js/blob/master/LICENSE
*/class I{constructor(e){this.character=e,this.neighbors=[]}}class L{constructor(){this.children={}}}function _(e,t){e=e.toLowerCase();for(var i=t,s=0;s<e.length;++s){var a=i.children[e[s]];if(!a)return!1;i=a}return!0}var $=i(177);const E=new class{constructor(e){this.order=e,this.duplicates=new L,this.start=new I(""),this.map={}}addWordsToChain(e){for(var t=0;t<e.length;++t)this.addWordToChain(e[t])}addWordToChain(e){!function e(t,i){t.length>1&&e(t.substr(1),i);for(var s=i,a=0;a<t.length;++a){var r=s.children[t[a]];r||(r=new L,s.children[t[a]]=r),s=r}}(e.toLowerCase(),this.duplicates);for(var t=this.start,i="",s=0;s<e.length;++s){var a=e[s];(i+=a).length>this.order&&(i=i.substr(1));var r=this.map[i];r||(r=new I(a),this.map[i]=r),t.neighbors.push(r),t=r}t.neighbors.push(null)}generateWord(e=0,t=-1,i=!0,s=25,a=Math.random){var r,o,n=0;do{o=!1;var h=Math.floor(a()*this.start.neighbors.length),c=this.start.neighbors[h];for(r="";c&&(t<0||r.length<=t);)r+=c.character,h=Math.floor(a()*c.neighbors.length),c=c.neighbors[h];(r.length>t||r.length<e)&&(o=!0)}while(o||!i&&++n<s&&_(r,this.duplicates));if(n>=s)throw new Error("Unable to generate a word with the given parameters after "+n+" attempts");return r}}(3);function W(e,t,i=Math.random){return Object($.a)(E.generateWord(e,t,!1,void 0,i))}function V(e,t,i,s){return{numDrops:{type:"exponential",min:e,max:t,rate:i},items:[{prob:1,item:s}]}}E.addWordsToChain(["abachi","abacops","abashicus","abensis","abetoneensis","aboriscus","abrictos","abroscelis","abrotocrinus","absalomichthys","abundum","acalophaena","acanthocladi","acanthofemurilis","acceia","accusator","aceroae","achaeae","achillae","achtyca","acinopterus","acmeceps","acmonia","acochlidioida","acompus","acrasidae","acroceuthes","acropsis","actaeifolium","actileuca","actinocalyx","actinodontidae","actinodurae","acugni","acunae","acutipoditus","acutiscutellum","acutispinata","adilophontes","adornatalis","adramitana","advarians","aedoea","aemulatrix","aeneocupreus","aequiflexa","aequilumata","aericeps","aerophilum","aeroppia","aeschynomene","aethiopicodynerus","aethodelphax","aetosaurinae","affaber","afghanistanicum","afreutreta","afrobolivina","afrogypsa","afrojavanica","afroscardia","afrotremex","agamarum","aganacma","aganipus","agardhina","agaricostilbales","agastor","agnina","agnostos","agolambrus","agonismus","agrabeeja","agraptocoris","aguanueva","aguaytiella","aguirreanus","ahermodontus","ahldreva","ajubensis","akaisialpina","alakoliense","alantika","alarodia","albifulgens","albitarsus","albius","albocitrina","albocitrinus","albogriseella","albolabratus","aleata","alecanopsis","aleophilum","aleuti","algrizea","alibertioides","alitaeus","allantois","allarithmus","alleocomatella","allineata","allolaterita","allomorphinoides","allotheca","alloxacis","almogaver","alocypha","alpigenes","alsinastrum","alsobacter","alternicirrus","alternimaculata","altescandens","altistrix","alutellus","alvariella","alyeskaensis","amamiconcha","amantichitinum","amaris","amarygia","amathimysis","amazonicesa","ambita","ambovestita","americorophium","ametroides","amidalae","amideta","amisadaiae","ammobium","amoebophryaceae","ampelioides","ampelopsisella","amphiascus","amphiheloides","ampliator","amplicolle","amyntula","amyris","anafense","anagastus","anancosorius","anaperidae","anargyrtes","anarsiae","anathyrsa","anatotitan","anchises","ancistrifolia","ancistrocladus","ancylostomia","ancylus","ancystropodium","anderisus","andocidia","andranotobakensis","anendopodia","anepsirhizomys","aneuvittata","angraecinae","angusticincta","angusticlavius","angustilamella","angustimembranus","angustiplatus","anheteromeyenia","anillochlamys","anischiinae","anisopaulax","ankarapithecus","ankaratrotrox","ankylodon","annaimallaiensis","anodontophora","anodorhynchus","anonera","anorhaebus","antarxata","antelientomon","antennulata","anteos","anteridata","anthepiscopus","anthicimorphus","antibodies","antiincrescens","antillanorchis","antipoloensis","antistydatusa","anurophylla","anxioides","anydrophilini","anyllis","aonidiae","apaloxylon","apameina","apanthuropsis","apechthes","aphaenogasteroides","aphiocephalus","apicealba","apicinigrella","apicobystra","apinae","apiocystinae","aplysinellidae","apocarpum","apogonis","apomastus","aponius","aposteira","apparicianum","apparitrix","appressihirtus","apricans","apsilinae","apteralium","apterobrachys","apterygodonia","apterygon","aqualupianus","aquinia","arabesca","arachoides","araracuarae","aravanense","arawakorum","arceuthoides","archangelskii","archeosetus","archichthys","archicnephasia","archiphysa","architectonicacea","archocelis","archolabus","arcidopsis","arcifera","arctopacifica","ardeola","ardesia","arduous","arenonionella","argentae","argopus","argusmontana","argutana","argyrothrix","ariantinae","arigonis","arilaringa","ariphanarthra","aristeis","aristosquamosa","arkarua","armoracioides","arnoldi","arrawarricum","arrhythmopis","artaversala","artemisifolium","artericus","artodiscus","artoventris","artumbilicatum","arturoana","arutunjani","aselliata","asestra","ashlaiana","aspenitinae","aspidophryxus","aspidopora","asprospilos","assimulatana","asterosporiaceae","astrapetes","astraspida","asturasoma","asymmetrarcha","asymmetrurus","ateleopodidae","atilia","atractosteus","atraphaxifolius","atringa","atrivaria","atroclypeata","atroviridaria","attenata","atypicalis","atypicus","audeti","audreia","aulacoceras","aulorhynchidae","aulosaphoides","aurataeformis","aurearenaceae","aurilineata","aussiorum","australiphemeridae","australodaphnia","australosphenida","austrinata","austroagrion","austrohormiini","austrokarelicus","autarchoglossa","avarus","avelingiae","avuncula","axnpelopsis","azotostoma","babaensis","baborensis","babukellinae","bacarum","backusella","badiifolia","badiusalis","baehnii","baeoptila","baeosomus","baeotica","baicalinella","baiochii","bakeri","balanarcha","balchhi","balingiti","baliogaster","balliana","baltimoriana","balvei","bambusioides","bamiani","bampurius","bancroftianus","bankoi","baracoalis","barattolites","barbeliana","barbillana","bareinus","barksdalei","barnebianum","baroringensis","barsac","barsakelmes","barskovi","basibulbus","basilisi","basipecten","basipterini","basirei","bastardoanus","bathrogramma","bathycranium","batocaulon","batomys","beatleyae","beaumontianus","bebile","bedeshai","bedfordianus","beharii","beketi","bellera","bellicula","beloti","benacoceras","beneluzi","benignalis","bergenhayni","berlandiella","berlesedesmus","berlinafricanus","bermudagidiella","bernalei","bertarollae","bethelium","betonicifolium","betschi","betsiloensis","biapertura","bibbia","bibiolona","biblianum","bibractella","bicelli","biceropsis","bicophaga","bicornuatus","bicucullus","bidenticeps","bidentulum","bidiense","bidiscus","bifidentata","biincisa","bilirana","biloborostratus","bilsana","bimucronota","biobessa","biparta","bipartipes","biramulata","biritika","birnovensis","biruncinata","bisbimaculata","bismila","bispirale","bissexnotata","bistrigata","biuterinus","blaesodactylus","blakesleeanus","blaseii","blattinopsidae","bleura","bocasdeltoroensis","bodmeri","boingaei","bojamyces","bokariana","bolivaria","bolodon","bolsaticus","bombacoideae","bombella","bonaducecytheridae","bonaia","bononiensis","bonplandius","bonseyi","bonzia","boopsis","borderii","borealia","borealotodus","boreococcus","boripat","borneichus","bornesalpinia","bosmani","bosniaca","bosniscus","bothriospermum","bouchardii","bourgeana","bouvetia","brachylaminata","brachyloma","brachyneuroides","brachyosoma","brachypezoides","brachypharyngeus","bracteantha","bracteolaris","bradburya","bradys","brancaefolia","brasileanus","brassica","brassicata","brausei","brevibeccus","brevicoccus","brevidens","brevilamellata","brevipatellatus","brevipilus","breviscopa","brevispineus","brillanceausuchidae","brissonii","brochopaga","brongniardellus","brossardia","broughi","brownelli","brujitavirus","brunneicollis","brunneopunctata","brunneotomentosa","brunnibasis","brusinia","bryonioides","bubonifolium","bubulla","bucaniellidae","buchholzianum","buchubergense","bucina","bucinaria","buckara","bucolinus","buddleiifolius","buekkense","bulimorpha","bulleri","buriasense","bursalobata","burukovskii","butalidella","buttelreepeni","butyraceum","buxella","bwambae","byctisculus","cacatuopyga","cactaceae","cadetiiflorum","caeluronigricans","caeruleonotatus","caesariana","cailloli","calamosternus","calapodium","calcedoniae","calcehtokanus","calceolariopsis","calculata","calhypnorna","caliginum","calilestes","callacallanum","callichthyinae","callidrepana","calligetus","callinivalis","callitricha","calloplesiops","callosphingia","calodectes","calogramma","calonalis","calotemognatha","calvulum","calyptophyllum","calyptosuchus","camaronensis","cambaroides","camdenensis","camelaria","camellia","camerobia","cameroon","campanopsis","camptochaeta","camptozada","canalicata","cancanae","cancerae","candybus","caniripes","cantiana","capillataspora","capnobotes","capsae","capsaspora","caputabnormis","capysoides","caracasica","carbina","carcani","cardiopygus","cardonii","carduiforis","cardwellia","carettalis","caricae","carinifer","carinulorbis","carlopeltis","carlosfeliui","carmara","carnifrons","caroli","carpodeti","carria","carrii","carrizalense","cartalloides","carteretensis","carthagoensis","caryonodini","cassubiciformis","castanes","castensis","castilliaria","catantopsilus","catapionus","cataplectica","cataspilates","catenata","catops","catopysops","caucasicola","caucasicus","caudapinniger","caudatispora","caudifolium","caulokaempferia","cavadoensis","cavalerieana","cavedanus","caviunas","cebudonus","cecidostiba","cecidothyris","cecropioides","celeripes","cellariiforme","cemiostominae","centenaria","centicola","centrimacula","centrirufa","centroonoceras","centropristis","centrovarioplanidae","cephali","ceradocus","ceratinostoma","ceratoclada","ceratosebacina","cerbvina","cerchysiella","cercomorphus","cercopionidae","ceriaeforme","cerozona","cerrioides","cestrus","cetibeli","cetratus","ceylonensis","chabriosoma","chaetostephanidae","chaetozone","chalarocladum","chalcocnemis","chalybe","chamaepeuce","chamelaensis","chamisis","charadropsyche","charamaensis","charapensis","chariesthes","charlei","charleswerneri","charmus","chasmagnathus","chauliopleurus","chelon","chelyoidea","chelysida","chernyshinellinae","chetyson","chihpenensis","chihuahuanae","chilesi","chillanensis","chillcottiana","chilognatha","chilophus","chilostomella","chilostomellina","chionothrix","chirieanum","chiroderma","chirophylla","chisochetonia","chisternon","chlerogella","chloraeformis","chloraria","chlorocurtis","choerognathus","chommati","chondrolepis","chondrorhynchus","chorodoxa","chrestobunus","chromelosporium","chromocentrum","chronosemium","chrysma","chrysocelis","chrysochaetum","chrysomeloides","chrysomus","chrysonus","chrysopotama","chuangchihi","chyrmangensis","cicadellopsis","cicatricosulus","cinachyrella","cinereovariegatus","cinnyris","cintaromorpha","circassian","circumflexum","citharexifolia","cladiellae","cladophila","cladoscenium","clamans","clararia","claricolor","clarilimbata","clarimargo","clavaeforme","clavidives","cleghornia","cleonolithus","clethropsis","clinacanthus","clinomochla","cliochloria","clivina","clorindae","clymenicola","clypeinitens","clyton","cnemodes","coagerus","coamensis","cobreensis","coburni","cocalina","coccocephalichthys","coccomyxa","cochabambina","cochleasvorax","codioides","codites","coelositona","coelostomidiidae","coeruleata","coeruleofuscus","coerulipennis","cognatocompressus","coihuensis","coldeniae","colensoica","coleocacamus","coleocanis","coleophorinae","colerolumnus","colita","collarigera","collartinus","collativus","collectiva","collinsonae","colocleora","colomai","colopha","colorada","coloradus","colpotriplicis","colynis","comani","comarilis","commonae","comocephalum","comoliopsis","companyoi","compotrix","compsogene","concanicus","concarenae","condate","conexibacter","confertiserratum","conflata","congrogadus","conicella","conicibaccata","conicospermium","coniocera","conlara","conobrosis","conoclinium","consanguinea","conspectus","constrictatus","contacris","contentious","contristans","conyzicola","coocoo","coonorensis","cooperrideri","coorilla","copidoplana","copromorpha","coprosmifolia","coptotomus","copturus","coracina","coraeophos","corallicarpus","corallicola","coraniana","coritanica","coronostylus","corpesiensis","correctata","corrivalis","corroboreethrips","corticicolus","corupella","corussans","corymbuloides","coryneaceae","coryphophylax","cosmemosignatum","cossmannica","costosyrnola","cotanda","cotinaea","couleruana","cousiniopsis","coutume","coventinae","coxitinae","crangonoides","craniella","crassepupillata","crassesignata","crassidens","crassoascus","crastina","craterantha","craterelloides","craterocephala","cratocechenus","crebrifolius","crenoliratus","cribripuga","criconemoides","cricophera","crinonia","crisae","cristatoides","cristinae","critheus","crocogastra","crocomela","cronartiaceae","crotolitha","crouzeti","crowelli","cruentipellis","cruranthura","crypsicola","cryptarthria","cryptocystidiatum","cryptolimifrons","cryptopecten","cryptophasa","cryptophlebiae","cryptophthalma","cryptophysoderes","cryptosporina","crytochilus","ctenoimbricata","cuatro","cucharas","cuculidae","cuculliae","cucumerina","cuiabai","culama","cultrigaster","cumbasonum","cumminsiella","cuneilobatus","cunninghamianum","cupreochalybea","curtiaristatus","curticrus","curtilamellata","curviformis","curvipenis","cyanochlorus","cyclodesma","cycloneuralia","cyclosora","cyclotis","cycnoderus","cydistinae","cylindrocarpus","cymatocarpus","cymbriaella","cymophorus","cynanchiflorum","cynedesmus","cynoctoni","cyphoderia","cyphoderiidae","cypridinoidea","cyrenida","cytherissinellidae","dactylopteni","daedalia","dallicordiidae","dalpia","dalquesti","daltoniaecarpa","damalinia","dasycnemis","dasycrotapha","dasypogonini","davidsoniae","dayaoshan","deasonia","debalsaci","debrajiana","decaphalangium","deciduana","declivitatum","decorites","decorticata","deflectus","deitersi","dekkanus","delclosia","deliquum","deloachorum","deltavjatia","dendroarabis","dendronephthyphagus","deniseae","densibracteata","densiserratus","densisorum","dentatherinidae","denticollaris","denticulalis","denticulipes","depressiferus","derasocobaltinus","dercylini","derecyrtini","derica","derouetae","desaussurei","desertibacter","desmaresti","desmoceratoides","destacar","detris","deuveiellum","devauxi","devergescens","devignati","diaboliella","diachrysa","diadocis","diaeus","dianaria","dianxibeiensis","diaphanocypris","diaspros","dicephalospora","dichetophora","dichilocraspedon","dichodon","dichotomica","dickdellia","dicolecia","dictyostelida","didymictis","didymochrysis","diensti","difficilana","digitalia","digitata","dilitara","dilleriella","dillwyniana","dimisophria","dimochla","dimorphanthera","dinocosma","dinophasma","diomediae","dioryctriae","dioscurea","diotrophorus","diploglyptus","dipteridae","dirfica","dirias","dischematalis","discimita","disciphania","discodon","discolia","discospira","discostromatidae","discovery","disiens","disordinata","dispar","disparia","disparicollis","distata","distentifolium","ditrachybothridium","ditrogalis","diuturnus","diversitermes","docoglossa","dolbyi","dolerosa","dolichoderinae","dolichoderoides","dolichoplectra","dolichowithius","dolioflagellomera","dolliata","doloisia","dolosis","dophora","doratopsylla","dorcasia","dorkadiaria","dormia","doshman","douglasprimusensis","dracaeneae","drilliola","drilus","dromidiopsis","dromodromoa","droogmaniana","drucealis","dryadonycteris","dryocoetes","dryocopinus","dryptitae","dszumrutensis","duarctopoa","duckworlhorum","duclouxii","dudleyae","duliniae","dulosus","dunnya","duospinum","duplicornis","duprixi","durbana","duskei","dutkevichites","dysgenopsyllus","eatonella","ebbelsii","ebrius","echeilea","echelatus","echigoana","echinastra","echinocephala","echinorhynchida","echinovirens","echinuscodendrium","echippigerum","echonitor","ectemnorhinus","ectenesseca","edanioi","edaphosauridae","edestus","edetanum","edithais","efluxa","egeana","egestoides","ehlersiae","eiphasos","ekatherinae","eknomisis","elassoctenus","elbayensis","electrocrania","electrofuscus","elerobi","eleutherospermi","elinguis","elkoanus","elleanthodiceras","elliptifolium","elongatobractea","emarginelloides","emblemaria","emmiltos","emydopidae","enchalcoa","enchodelium","endochroa","endophragmiopsis","enicostemmatis","entalinidae","entomogonus","entypus","eomacropis","eopsychops","eorasaurus","eoscapherpeton","eoseira","ephesiella","epichalca","epimetalla","epitripta","equisecta","erebearia","erenitus","erennidae","ergodes","eriodictyonis","ermienae","errolichthyidae","erythana","erythraena","erythromeris","erythrorhamphos","escoces","esquamata","esterhuysenianum","etorofensis","euanoma","euathlus","eucaudomyiidae","euceratoneis","euchana","eueolidoidea","eugraphis","euloewiodoria","eumeristis","eumicrini","euneuron","eunomia","euphysothrips","euplectus","eupolymorphinella","eupulcher","eupulmonata","euritina","euritmia","eurukuttarus","eurychlidonis","eurychone","eurygonia","eurypilus","eurystictus","eurytiches","eusemionopsis","eusemoides","eusisyrum","eusyrophoxus","eutetraphae","eutrichiurides","euzerconidae","evonymella","exasperatula","excelens","exclusaria","excuratum","exstipulatae","extendorum","eyipayipi","eytelweinii","ezodda","fabespora","fabianorum","factoris","faculta","fadyenia","fagacarus","fagildei","fagotiidae","fajardi","fakfak","falanense","falcatalayex","falcicarpae","falciterebra","falvisectalis","fanseriae","fastigiatoramosum","fastigo","faucibarbara","faustiella","favocassidulina","favonicus","favosifolium","favositinae","fellodistomidae","femorata","fenxli","feraliini","fernandezgarcesi","ferrea","ferreroi","ferrobacteria","ferwillemsei","festulpia","fibrinflatum","fictitia","fictrix","fijianus","fijivirus","filamentata","filamentosa","filiformis","fimbricoxa","findens","findersi","flabellifera","flabellopora","flavangularis","flavicurvata","flavinucha","flavispicum","flavofemoratum","flavopleuralis","flavotaeniatus","flavusella","flectonotus","fleurei","flexicaulis","flexiclymenia","flexilissima","flexistyloides","floracoccus","floravillensis","floridicola","florisi","flustrina","folliculata","fontellana","forelii","foresteriana","forillonaria","foroiuliensis","forskoehlii","forticarinata","fossidorsis","fraglis","franceii","franzdaniela","fraudulentaria","fraudulosus","freyomyia","friedrichiae","frisingensis","fritzwagneria","frolovia","frutillaria","fthiotidensis","fuergiana","fujiansis","fukayai","fukugakuchiana","fulgidella","fulvastrum","fulvifusalis","fulvobrunnea","fulvohirtum","fulvomarginatus","fumigans","fumoferalis","furcatus","furculana","furnishinidae","fuscatrix","fuscinota","fusciventis","fuscoaeneum","fuscoapicella","fuscothorax","fusilieri","fusulculus","gabbioceratinae","gabillytes","galbinaria","galeansellia","galgula","gambogia","gammae","ganapatiella","ganella","ganguli","gannoni","gaoligongshanensis","gariensis","garuus","gassanense","gaudini","gavisus","geganius","geigyi","geleverjae","geminipilis","genicularis","genophantis","geococcyx","geodes","geodiplosis","geophagus","georgecraigius","georghioui","gephyrogramma","geralda","geraldtonensis","ghardaqanum","gibsonella","gibsonhilli","gigantocapulidae","gigantopygus","gigantorubra","gigantoscorpionoidea","gilanica","gilleti","gilsonichrysis","ginibitohia","ginkgophyta","gisara","glaboabdominalis","glabrimargo","glabrimpressum","glabropilumnus","glaucelloides","glaziouana","gloiocolax","gloreus","gloriamaris","glosus","glyocyclus","gmeineri","gnathocera","gnophos","gobbettia","goetheoides","goldschmidti","gomontia","gomphreneae","goncen","gondwanica","goniurosaurus","gonothyraea","gonyaulacoidia","goodfieldi","goodwoodensis","gordioida","gorgops","gosobius","goupillaudina","gouvernoni","goweroconcha","grancarovii","grandistylum","granicauda","graniger","granimanus","graphania","graphomya","grassmani","greenmanianum","greenwelliae","greeri","gregariella","griffinia","grimontia","grossefoveolatus","grossepunctatus","groveolopsis","grypoceras","guairense","guaitecae","guanajuatensis","guanomyces","guiananana","guihua","guinnae","gymnoceros","gymnomorphus","gymnophrea","gymnoscutellatus","gymnotoplax","gynopeltis","gypsochroa","gyrothyraceae","habenifera","habrophila","hachimantaiensis","haddeni","hadromischa","haeggochiton","haenschiella","haesselbyholmiensis","hagenbecki","haleakala","halichondriae","hallex","hallonympha","hallsi","halomonadaceae","hamipalpis","hanamauensis","hankensis","hannense","hapalopa","haplocyoninae","haplotaxina","haptogenys","hapuuarum","harenamica","hariolator","haripurensis","harpanor","harrisia","hartmannulidae","hartmanthus","hastingsi","hauschildianus","havila","hawbicum","hecatorgnia","hechtioides","heddleichthys","helianthialis","helicinella","heliomystis","helionidia","heliopa","heliopsis","heliopyrgus","helluonina","heluanensis","hemerobiella","hemerophila","hemhem","hemianospilus","hemicyclicum","hemidactyliinae","hemigordiidae","hemilecanitidae","hemimarginula","hemistropharia","heppleana","heptasema","herklotsichthys","hernandaria","heronia","heronum","hesycha","heteronevrus","heteropachylus","heteropanope","heteroparamera","heterospina","heterotominae","heugteni","hexagonae","hexaradiata","hexatarsostinus","hexovulata","hialmari","hiatula","hibridum","hieracifolia","hieroglyphyca","hillifera","himalajenses","himalayacetus","hippodice","hirtilobata","hirudoidea","hispaniolyna","hivaagrion","holochrysis","holophlebia","holovestita","homeria","homochirus","homoeoctenia","homoeosomae","homoplatus","homopterus","honanodon","hotooworry","howaia","huairouensis","huallagana","huancayensis","huangensis","hucketti","hugotdiplogaster","huitzmolotitlensis","hulaquina","humaciense","hummel","hummeliana","huntella","huriana","hututsi","hyalodiscaceae","hyalopyrgus","hydroisotoma","hydrometra","hydrotalea","hydrotherikornis","hypachroa","hypapocheima","hypermaculata","hyphochytriaceae","hypholomoides","hypocephalini","hypochaeridoides","hypocline","hypolispa","hypoplexia","hypospilata","hypselosomatum","hypsina","hypsipyrga","hysterolitinae","ianrichardi","iaoensis","iberobarbarus","ichneumia","ichnolepida","ichthyosomoides","ictonyx","idaecamenta","idastes","ideratini","idiostolidae","ifanidianae","igarassuensis","ignecolora","ignifacies","iljiniana","impalpabilis","improvidus","inadmirabilis","inclusana","incubitor","indistinctaria","indolens","indorhynchiinae","indricotheriidae","indubius","inebriantis","inefficax","inermosyllis","infanticida","infasciatum","infectus","inflaticeras","infraflavescens","ingliseria","ingogius","inositophilus","instabilaria","instabilipes","interrogatus","inthanonica","intonsus","intrigella","inyonensis","ioannoui","ionescui","ioogoon","iophana","irapeanum","iriditinctus","isalaux","isalensis","ishidai","isidiosella","isocrinida","isoetopsis","isommata","isotemnidae","isoxys","itabaiana","ituribisciensis","itwarra","iulomorpha","ivanovae","iwamai","ixiophyllum","jacuipensis","jaimeramirezi","jajiensis","jameela","janikornae","janirioides","janosik","jansei","japenensis","jasminaria","jehlius","jejudonia","jiangduensis","jianlingensis","johnpaxtoni","johnwurdackiana","jokaquarta","jonssoni","joshuella","jouiniana","jovoensis","juenthneri","jugatoria","jujuyensis","juniperoideae","juropeltastica","juxticata","kabogoensis","kaibatonis","kakaberrans","kalidupa","kalimeris","kalingenwae","kalonis","kamacops","kamande","kamengense","kamitakaranus","kamtschatkensis","kananaskensis","kandymella","kangeanus","kapsanensis","karadenizicus","karataefolia","karateghinicus","karawajevi","karwara","kasungensis","kawaihoaensis","kefersteiniana","kelelensis","kemmisi","khairei","khuzistanicus","kikibudiamini","kiklonana","killiasi","kimurae","kinabalum","kingdonia","kirstenboschensis","kirthari","kitagawia","kivuanus","kiwuensis","kiyokoae","kladotyphlus","kleinpeteri","klementii","klenei","koilomera","kokeshia","komokia","kopsiopsis","kosemponica","koshiana","kosnipatensis","kostylevi","kroyeri","krusadensis","kuhnistera","kukalova","kungae","kunikikoana","kunjerabi","kuomeii","kuschei","kushmasarensis","kusiacus","kustorae","kuturnee","lachneifolia","lachnocladium","lachnoides","lactate","ladismithiense","laevitarsis","lagarocladum","lagarosoma","lagenina","lagerara","lagopodes","laitimtik","lamades","lamellipodia","lamellothyrea","laminiformis","lamora","lamottiana","lamprospilus","lamuralla","lamutica","landoi","langendoenii","langerhansia","lanicaulis","lanthanostegus","lanzenbergeri","laororshanae","lappodes","lapsariata","larainae","laristanica","larrainiana","lascaris","lasioderma","lasiopterinus","lasiospermus","lateretuberculatum","lathridelmis","latipetiolata","latisporum","latitegminis","latocorophium","launayi","laurenticus","lauronia","lavalettei","lavbleckiana","lavernellus","laversiidae","laxipilosum","lecanoricola","lecithodes","lecythion","leensis","legerae","leiboldiana","leichenina","leiocassis","leiopelmatidae","leiotelus","leipoxaides","leiramara","leliae","lemoultana","lensia","lenyrhova","leocrinidae","leonensis","leonfairmairei","lepidoteuthis","leptocaudus","leptocera","leptochilichthys","leptoiulini","leptojulis","leptolomoides","leptomenaeus","leptomma","leptomorphum","leptoschendyla","leptoscirtus","leptosomaheristus","lerina","lesegneuri","letepsammia","letilae","leucadea","leucalis","leucanepsia","leucanopsis","leucolaema","leucopodella","leucopsarus","leucorhodum","leucosilia","leucotabanus","leuzeopsis","levanidovorum","leveyi","levicaris","leviense","levisella","liaoxipterus","libidoclaea","lichnasthenina","lignarium","lilaciflora","lilacino","lilliformis","limenita","limnogenneton","limothrips","linanensis","lineitergum","lingianus","linifoliiformis","linocerus","linpingensis","linshuiensis","linwenhsini","lionychini","lioptilaria","liosomeniidae","lipocarpa","lissodema","litholampriminae","lithosiformis","litoricola","lixinites","llanoaspis","lobigenis","lockhartioides","loesneriana","loeuffintesi","lombardiana","lomyenensis","lonchocephalus","lonchodactylus","longae","longicomosum","longifibula","longipendulum","longiscata","longisellatus","longispinata","longistipulata","longisubulatus","longivelis","longusorbiidae","lophochroa","lophopyxis","lopriorea","loranthiflorum","loranthophila","lornadepewae","lotoxalis","lubaria","lubilensis","lucidifrons","lucifugus","lugdunarium","luikae","lukaschia","lumsdenae","lunatum","lungshenensis","luodianense","lupatus","luridavolta","luristanica","lusingaense","luteifrons","luteileprosa","luteosignata","luxiense","lycaenops","lycaeopsidae","lycocarpum","lygria","lysiphyllum","maamingidae","mabanuria","mabellarca","machairodontini","mackaviensis","macrocarpata","macrocheila","macrocornutus","macrocremastra","macroglossini","macrogryllus","macrolabis","macropharyngodon","macrotarrhusina","macrotegmenta","macrothylaciini","macsweenyi","maculaalba","maculatus","maculimembris","madathisanotia","madenphloeus","maestingellus","magadinensis","magallanes","magalonii","maghrebiana","magnacalx","magneta","magnetensis","magnispiracularis","magnopunctata","mahmudbejovi","mahunkaisimilis","majorica","majusdentatus","makandal","makarcevae","makawao","malabaris","malaxioides","malchanovi","malpighiales","malybo","malziana","mamigna","mandanus","manfeldtii","mangrovae","mannena","mansonella","mantamonadida","maoricoris","maquiensis","maquipucuna","marathonitinae","marcellaria","marcomesostoma","margarostigma","margelanica","marisaurus","marisminoris","marmarensis","marmarodeceia","marmoretta","marmorii","marnkalha","marojejiense","marquesa","marriana","martynovae","masaiensis","mascarone","maseri","mashanense","mashuana","massariola","massaspicula","mastopomatoides","matacarus","mathuriana","matiganae","mauroprosopa","maurya","maximiliani","mazama","mbamou","mbenjii","mcnabi","medioscutellatus","medwayensis","meerausi","megalobrunneum","megalomycter","megalorrhizum","megalothyrsa","megalyridiini","megamphida","megaoonops","megapex","megateles","megispilota","meigangae","meilloniellum","meingangbii","melakeghebrekristosi","melanchares","melanchlaenus","melanicterata","melanocausta","melanophyllaceae","melanopneumon","melicopea","meligastra","melissimum","mellici","melonius","melphidippella","meneghinianum","mentawir","meoticaops","merdrignaci","merensis","mergense","merhynchites","meridiocarpathicus","merriamosauridae","merularia","mesamidostomum","mesembriomys","mesoepisternalis","mesogitanus","mesolestes","mesoleucalis","mesonotochra","mesosindris","mesostegia","mesovelia","messicobolidae","mestorus","metabacterium","metacerylon","metalacurbs","metallicut","metallophilus","metanaga","metapterygota","metapulvinata","metasidama","metatensis","metatrichini","metellona","metopiora","mevesi","meyerinkii","michaelisi","michelinoceratida","michoniana","micralabastra","micralsopsis","microbahia","microcarunculata","microcephalophis","microcorses","microcyma","micromesozonata","microsciadium","microscopicus","microstethum","microstriatus","microviolacea","micruropodidae","mictophileurus","mikatae","milishai","millerburtonia","miltochristalis","miltoni","mimeugoa","minarzianus","mineirosensis","minhensis","minirosea","minorbrachyblasta","minyaense","miocaenica","mionatrix","mionebulosa","miradornsis","miristigma","mirkinii","misiones","missionensis","mistassinica","mitonia","mixoscia","moathi","mochae","modicoides","moellendorffi","moerisioidea","mogollona","mogorka","mohavanensis","mohavea","molochina","monachophyllum","monactinus","monalita","monapunctata","mongiensis","mongoz","monochorhynchus","monotrete","monreali","monroeae","montandoniola","montanetana","montemaris","montieli","moratiana","morosevitshae","morosphaeria","mosambicensis","moscoviensis","motleyi","motuweta","moussavoui","moutiai","moutouchi","msuata","mugangensis","mulgedii","mulibrinus","mullerrutzi","multareis","multicristatella","multilata","munbyanus","mundeola","munissii","muraenolepis","muricola","murieliae","murinocardiopsis","murmurensis","mutilla","mweroensis","mycobacteriaceae","mycterobius","myialginae","myocaster","myohyangsanica","myopius","myopsychoides","myoxophora","mystriocentrus","myxodictyum","nacladense","naevana","nagamasu","nagatoella","naiguatana","nakamuriformis","nakanai","nakipa","nakuru","nalepellidae","namacus","nangra","nanniae","nannoconus","nannosteinmannites","nannosuchus","narmanica","nascioides","nassatula","nassipa","nasturtium","natalicius","natriophilus","nattaiensis","nausibus","nautiliaceae","nealecypridini","neatodes","necallianassa","necopinatidae","necopinum","negasilus","negibacteria","negroppia","negundana","neibae","neimaniae","nemosoma","neoacutidens","neoaves","neobasalis","neobradyidae","neocichla","neocteniza","neofascipennis","neoflavicans","neohornibrookella","neomisellina","neonola","neopamera","neoperlops","neopiliferum","neotabidus","nephelioides","nephrodinium","nepogomphus","neptunoides","nerens","neseotes","nesoriella","nestia","netica","neuontobotrys","neurigrammalis","niamiae","nicarete","nichofii","nicholai","nictheroyana","niglarus","nigricapita","nigricrissa","nigriguttulus","nigripennus","nigriscuta","nigriventus","nigroaxillaris","nigrobrunneana","nigrocupuliferous","nigrofactum","nigronaervalis","nigropeltata","nigrova","nikanoria","ningchengensis","niphocera","nitrariifolius","nivemaculata","nivenorum","niveociliaria","nixoniana","noaeae","noctuitaria","nodilirata","nomadus","nonornata","nonstylatum","nordenstamia","noscibilis","nosterella","nostochopsidaceae","notanisus","notati","nothosaerva","notoderus","notogomphus","notoleuca","notonectoides","notothixoides","novahebridensis","novobritanniensis","nublians","nucleatus","nucleosus","nullamphiura","nulliferana","nuttallielloidea","nyakaensis","nyanzense","nycthemeraria","nycticorpum","nygmiae","nysiusae","nyssanthes","nyssonini","oblenita","obliquans","oblongissimus","obovatocarpa","obsequiosa","occulta","ocellicaudus","ocenebrinae","ochridaphe","ochrochrous","ochrodorsella","ochterus","odobenocetopsidae","odontonotacris","odontopsammodius","odontopygidae","oedothelphusa","oelandinus","ohlertidion","okadaiidae","okeani","oksalianum","oldroydiana","olgashelestae","oligocarinatum","oligophyton","oligospilota","oligotrophicum","olliffiana","olmediopsis","olmosensis","olmotega","omalonomus","omariusalis","omogonis","omopyge","onchocalanus","onophas","onychiurini","onychogammarus","onychoglenea","oochoristica","oosomini","opadius","opalinula","opatrina","operantis","ophiochalcis","ophiopogonoides","opifexi","opopaea","opulentium","orangica","orbicularius","orbipora","orchonicus","ordunyai","oreopithecus","oresbia","oresbios","orgyale","orichalcescens","orichloris","orisasini","orithopsidae","ornatodorcadion","orohenense","orongia","orsunius","orthomeroides","orthoraphis","orthostichopsis","orthotrichum","osellae","osoensis","osoriana","osperlioceras","ostuchiensis","oswaldia","otallensis","ouadanei","ouricanense","ovatiguttatus","ovicercus","ovilis","oxycarenidae","oxycerini","oxymegaspis","oxyruncus","oxystoma","ozokeriticus","ozotomerini","pachmariensis","pachobex","pachycaulon","pachycoccyx","pachydeminae","pachynema","paddeui","paduana","paedobisium","paenacuceps","paenedentula","pailensis","palaeocarcharidae","palaeophonus","palaeosystenus","palawanella","palenquense","palesoidea","paleuthygrammatidae","palinuroidea","pallidetinctus","pallidicostalis","pallidohirtus","pallorus","palmatus","palmetincola","palmivorus","paluosa","pampiconus","panacina","pancallia","pancici","pancrustacea","paniferum","panochthus","pantecphylini","panticosus","papillatus","papillopilosa","papillospora","paraansobicus","parabactridium","parabarossia","paraborsonia","parabretti","paracanthonchus","paracavisoma","paracelastrus","paracheiridium","paraconara","paractaeopsis","paracuminiseta","paradiplogynium","paradoxosomatinae","paradrina","parafiorinia","parafungicola","paragonimus","paragraminis","parahieroglyphica","parahuahindensis","parajauravia","paralamprotatus","paralphenum","paramaculipennis","paramevania","paramyinae","paraphiloscia","parapoxvirus","pararapana","parareolatus","parasanjuanensis","parasicyos","parasphaeria","parastemon","parastenoterys","paratheridula","paratriaina","paratubiluchus","paratumbex","paraumballaensis","paravenia","paraves","paravorae","pardoanum","pardochrous","parelegans","paresmus","pareulepis","pareutaenia","pariry","parjumanensis","parspeciosum","parthicum","parvifoliella","parvipunctus","pascahinnites","pashupati","pathana","patheticus","patritiodemus","pattersonellidae","paturattensis","paucichelatus","paucipetala","paucivenosum","paulesca","paulianaleyrodes","paulocordata","pausandra","pavelitus","pavichii","pearceanus","peartiae","pectinatum","pedimarmoratus","pegazzanoae","peihonga","pelamidis","pelegrinoides","pellucidellus","pelobium","pelodesmus","pelotomaculum","pempelioides","pendulosa","pengboense","penneysii","peonza","peraccai","peranemiformis","percludalis","percolens","perconfusa","perconicus","perdica","perfectana","perflaveola","periclimenes","periglabellus","perigrinus","perilimicron","periploceae","periquesta","perisphinctinae","peristerensis","peristrigata","perlatum","permagnifolia","permiscus","pernyii","perostia","perpunctulatum","perseae","persimplexella","persinuata","peruvensis","pervasata","pervulgaris","petheri","petrocrania","petrograpta","petroleuciscus","petrolinensis","petrorsus","pezomantis","pfefferiteuthis","phaenohemiandrus","phaeocroa","phalacrocoraca","phallopiratinae","phanolophus","phantomus","phascolomys","phelloxylon","phemonoides","philichthys","philipomyia","philippinum","philocalus","philocoprella","philomena","philosycus","phinneyi","phitosianus","phlepsopsius","phloxidiflora","phoemonoe","pholcochyrocer","phormisalis","phoxapex","phrixus","phycinae","phylloceratitida","phyllochaetopterus","phyllodinarda","phyllorachis","phyllospongia","phylochrysa","phymatopteris","physcomitrellae","physoglenidae","piasusalis","piazzaria","piceolus","picicolor","piezotrachelini","pilatoi","pilifilis","pililoba","pilsbrytyphis","pimaensis","pinacopodium","pinguella","pinidumus","piniradicis","pinnatifidum","pinnicerca","pintadus","piqueriae","piquerioides","pirapo","pirarense","pirizanica","pirriei","pisacomensis","piscacauda","pisciodorus","pisidium","pissina","pithyella","pityophilus","placocista","placodops","placotrochides","plagiognathi","plagioholocentrus","planaltinella","planipedonus","planistylus","plantaginoidea","plasmodiophoromycetes","plastica","platyacantha","plecopterorum","plectrelgraecum","plectrocerum","pleionotoma","plethokrossus","plethotretus","pleuranthoides","pleurites","pleurobotryosa","pleurodomus","pleurofascia","pleuronichthys","pleuropasta","plicosula","pliculosa","plinthiza","pliosauridae","plumacea","plumeriifolia","pluricapitata","plurosorus","pluvia","pninaella","poblanus","pocopunctella","podaucheniellus","podonectriaceae","poecilator","poliona","polititapes","polosi","polychrosis","polycladae","polyfimbriata","polygamiae","polygonanae","polymorphidae","polysentoriformes","polysperchinus","polytmus","polyzonatus","polzbergia","pomeroyi","ponerus","pontisquamata","populifolia","porchatensis","porochordus","porosa","porthesioides","portoricoscia","porulosa","postcervix","postdentaria","postfasciculata","postmediana","postoparvipuncta","postpoliatus","postsemipluripuncta","potebniamyces","prabha","praecursoria","praephacorhabdotus","praeprocris","praestolatorius","pratumidiscus","pretenderis","primevus","primigenus","prionotemnus","prismatocarpus","proarchus","problematodes","proboscidoplocia","probosciformis","procerocheles","productinae","profundocythere","projecturata","projicienfrontoides","prolaminatus","prolaupala","prolixifasciata","prolixistyla","promirotermes","proniphea","pronoritidae","pronotacanthus","prorepentia","proriedelia","prosadiya","prosectoides","prosenactia","prosobothrium","prosopalpus","prosorhochmus","protocardiinae","protochitonidae","protoglomeris","protoiurus","protopidius","protoreticulata","protorhyssalodes","protosciarella","protosculptilis","protrama","psammoticus","psarisomus","pselaphostena","pseudacanthopale","pseudachorutella","pseudacroleptus","pseudanurophorus","pseudapoderus","pseudargentata","pseudartiocotylus","pseudephedrus","pseudincoides","pseudoalstonii","pseudoarmillaris","pseudoborniales","pseudobothrideres","pseudobotrys","pseudochroma","pseudodiplotaxis","pseudodoliolininae","pseudoeurydesmella","pseudoglauca","pseudogonitis","pseudogyrinocheilus","pseudohookeriana","pseudoialapennsis","pseudokovacevici","pseudomacrophya","pseudomaroccana","pseudomarsupidium","pseudomarteli","pseudomassilina","pseudomedaeus","pseudoncholaimus","pseudonudicaulis","pseudooblongum","pseudopallescens","pseudopannaria","pseudopasilia","pseudopentameris","pseudopiceus","pseudopithyella","pseudoptiletes","pseudorchestes","pseudorichia","pseudorthonychiidae","pseudosaxat","pseudosteini","pseudosymmorphus","pseudothyretes","pseudotrematodes","pseudotriphyllopsis","pseudotristicha","pseudumbellata","pseuduncifera","pseustantha","psiloderoides","psychanisa","psychroteuthidae","pteleaevagrans","pteridicola","pterineidae","pteron","pteropelyx","ptilocladioides","ptilopus","ptochopis","pubistylosum","pudicula","puiggariopsis","pulchricolor","pulchrinodaceae","pulcia","pulcratis","pultiphagonides","pulvifer","punctifimbriata","punctillaris","punctoterminalis","purdonellinae","purpureoplagiata","pursellii","pusanus","pusztae","pycnocephaloides","pycnophyllopsis","pycnopodia","pygocentrus","pyramidata","pyrgotomyia","pyrifer","pyrimidalis","pyronasi","pyrrhonotum","qianyiyongii","qinglongopterus","quadrabdominalis","quadrataria","quadratirostrata","quadriannellatus","quadricellulata","quadrifalcifera","quadrinotatiforme","quadristrigaria","quasiborelis","quasiindicus","quercusilicis","quinquicincta","quisquiliarius","rabainus","raceki","rachelii","racovitzae","racovitzia","radicosus","rafesi","ralstoniae","ramicephala","ramoncaracasii","ramoniana","ranitomeya","rankini","raphaelandrearum","raphigastra","raphis","rapola","rarensis","rarotonga","rautensis","rawuense","reaghi","recticommata","rectopalicus","recurvilabre","recurvistigmalis","reddii","redemptum","rehbergi","reitteri","rembangensis","renaudiana","renauldi","reniformis","renipiscarius","renivitta","repletana","rescissa","residis","resinophaga","retextus","retingensis","retrospiculatum","retusa","rhabdomolgus","rhachicoryphus","rhacoindustiata","rhadinosa","rhamphostomella","rhayatus","rhealis","rheumaptera","rhinocolura","rhinorhynchini","rhiostoma","rhipidomellinae","rhodaphanes","rhododendronis","rhodophilides","rhomboivora","rhombonicis","rhombostilbella","rhopalodes","rhopalopus","rhymnus","rhyopsocus","ribeiroia","ribium","richardsi","richerdeforgersi","ricinoidoidea","ricketti","rifana","rigiduliformis","rikuzenica","rimipontius","riocauchosanum","riparis","ripidopteris","risoba","rithrogenophila","rodentini","rodriguezus","rogata","rolandmuelleri","romanchella","romeii","romulanigra","roschanicus","roseicostis","rosellei","rosemariana","rosenvingiella","roseobrunnea","roseoculma","rosettiae","rosettii","rosica","rosicola","rossmania","rostamii","rostraloides","rostrigerum","rothfelsi","rotulina","rotuloplocamia","roxasella","ruaumokoi","rubeschi","rubicula","rubrigastra","rubrisetum","rubronervat","ruderatus","rudiastra","rudolphisimonii","rufistigmosa","rufitarsoides","rufocastanea","rufofuscula","rufolimbaria","rufosatellitia","rufotactus","rufotinctus","rugifolium","rugostriatus","rugulata","ruhlandiana","ruiliensis","rumphiensis","rutaneni","ruzskyellus","ryphea","sabatoi","sabbadini","sacajaweae","saccharophilum","saccopetaloides","saccopharyngidae","sacculoppia","saeniensis","sagaminemertes","saguaroicola","salamander","salatini","salinellidae","salmositica","salsburyana","salsum","salticidites","saltursus","salvagopselactus","salvazi","samacar","samolethrius","sanata","sandbergeri","sandrabatis","sansebastianus","santaelensis","santoamarensis","santubong","sanyali","sapotaefolia","sapphirhinus","sapporona","saracrinus","sarcocyphos","sarsonuphis","sasakii","sasimella","saturator","sauciatus","savigniorrhipis","saxemarina","saxeseni","sbarbari","scalebrina","scansoria","scaphidiomyces","scapiflora","scardiinae","schabalkini","schacheri","schachimardanicum","schaffneri","schajovskoya","schellwieniens","scherfi","schizacme","schizocharis","schizochiton","schizonema","schizopus","schizotaldycupes","schminkeinae","schraederi","sciocyrtinus","scirpidium","sclateria","sclerieae","scleropteroides","scleropycnis","scoliacantha","scoriformis","scorpaenoidei","scoteinum","scutellina","scutuliformis","scybalophagus","scythromorpha","secluse","secostruma","secretas","segovicus","seilerni","seirospora","sejongensis","selaserica","seleensis","selenana","selenariidae","selenopsocus","semibraccatus","semicrocea","semilissus","semionis","semisplendidum","semiticella","sepsidae","septicemia","septorispora","serangodella","seraxensis","seriespinosum","serolina","seroloniscus","serpentinum","serradraco","serranicola","serranochromis","sertalis","sespinaea","sessilifructa","sestertiella","setabara","setantops","setaphora","setispinae","setylaides","sevastjanovi","sevenetii","sevosa","sewertzowii","sexdendata","sexspinus","shackletoni","shataii","shebania","sheeppox","sheidaii","sherbrookei","sheshanensis","shigernaei","shiloensis","siamophylla","sianenna","sibaya","sibayakensis","sibbaldi","sibukoensis","siccanea","sichnostola","sicinae","sieburgi","sigilla","sigmomorphina","signipennis","sihoensis","silhouettei","silolona","silphedosuchus","silsilesii","silvaniformis","silvicolus","simetitia","similicornuta","similiphora","simsata","singalorum","sinharajaicus","sinoarundinaria","sinobryobia","sinotianschanicum","sinuosociliatus","sipunculoides","sittae","sivarajiana","slatinensis","slevinii","smefarka","smelowskia","smyrnae","snellii","sochinsogonia","socotricola","soenderupianus","sogalis","sogandaresi","sohayakiense","sokkaejaecystis","solenoxyphus","solitariana","solorzanoana","somatania","sonderophycus","songpanicum","sonitans","sonneratioides","sonogrus","sonotetranychus","sophista","sordidopapposa","sorediifera","southgeorgiae","soyoae","spanospicula","spathor","spatulicornis","spelaeum","speoides","spermodea","sphaeroconcha","sphaerodoridium","sphaerogerinidae","sphaerosporella","sphaerozone","sphagnorrhiza","sphenorhynchus","sphenotretidae","sphingidites","sphingopyxis","spilosomini","spinigerum","spiniplenus","spinostylus","spiralifera","spirifex","spiroberotha","spirotecta","spirotectinae","spongiphilus","sponiifolius","sporocosma","springvaleensis","squamatellus","squamulosula","stachysi","stacota","stagona","staiusalis","stalina","staphylocystoides","stathmodera","staxrudi","steccherinaceae","steinbergensis","steinhardti","stellariifolius","stellatacula","stellatosporea","stenanthera","steninae","stenocarus","stenoetrus","stenolejeunea","stenolobium","stenometopa","stenopetalum","stenostygninae","stenothora","stenotritinae","stephanophyes","stephenseniellus","stereograpta","steveniella","sthenozancla","stibapicalis","stigmatogobius","stigmatotheca","stiphrogyne","stipuloideum","stirlingia","stirojoppa","stoeberhinus","stolonacea","stonesfieldiana","straatmanni","stradbrokense","streyana","strictiforme","strigialifusus","strigillatus","strigosipes","striposis","stroemi","strophingia","strophis","stubblefieldi","stumkatae","stygocarididae","stylodesmus","stylopauropoides","stylospora","stylus","styphlorachis","stypus","styraconixidae","subaana","subargillacea","subcongoensis","subcorrosus","subdecursivum","subdicarpon","subfinitimella","subfurva","subglabrum","subhuti","subinformis","sublignosalis","sublineatus","submelanaria","subneotrichius","subobliteratus","subota","subpectinata","subpelignus","subpellucens","subplacens","subpohlioideum","subtakecallis","subterblancum","subterraneoides","subtrivialis","subumbrosa","subvariocostatus","subvillosula","subxanthippus","subyusou","sucofera","suduirauti","suffusinervis","sugillata","suiferens","sukhothai","sukotaiense","sulcinerva","sulfophila","sulfureolus","sumensis","summergold","supraglandulosa","surculare","suspinata","susumia","svecica","symmetrosporaceae","symphorosus","synagriformis","synaphe","syncapna","syndelphax","synercta","syniulus","syntrita","syntrophus","syringilla","syringopharynx","syzygoniinae","szulczewskii","tabernai","taboga","tachangensis","tachillanella","tachiniscidae","tachinoides","tacoaraphaga","tactiquensis","taeniolatus","tagetiflora","tahulaspis","takachihonis","takahagiensis","takhtajani","takhti","takuiricus","talaena","talitridira","tamagohanum","tamaricaria","tamaska","tambori","tambourinicus","tampiusalis","tanagami","tanalanacris","tangaroa","tapadas","tapinillus","taraxacicola","tashkurensis","tasmanentulus","tasmaniae","tayoensis","tchupalensis","telata","telegdirothi","telesii","teliformis","telmatobia","telosperma","telotylenchinae","temascalense","temnosceloides","tempisque","temulata","tenacifolium","tenacis","tenaspis","tengstroemella","tenuicrustaceum","tenuilamellatus","tenuioides","tenuipalpoidini","teramachii","terborchii","terebraeformis","teresopolis","teretiachaenium","termitarum","tersonderi","tessella","testaceovittatus","tetragattii","tetragonocarpum","tetraleberis","tetrapila","tetrapunctigera","tetrasporoides","thalassemae","thalebanii","thaliana","thallicola","thallostoma","thamfaranga","thamugadensis","thapsianae","tharsanthes","thenardii","therinia","thermomyces","thiofractor","thoracanthoides","thoracosphaera","thorictosoma","thymbroides","thyreoconger","thyrsoidea","thyrsolomia","thystas","thysvillei","tibetanophilus","tibiale","tibicinini","tibiovela","tibullus","ticinepomis","tietzae","tiflisensis","timanicum","timapeba","timothyei","timoutoides","tinoides","tipulidae","tishqu","tissanga","tobiracola","toganensis","tolganensis","tombolatoana","tombouctou","tonjolana","tonkienensis","tonnensis","topseyi","toraia","tororoense","tortuosivenosum","torvensis","touchardia","tovomitopsis","toxopeina","toxotes","trachea","trachygrapha","trachylepis","trachyuropoda","transilis","transversovittatus","travassosinema","trebida","trefusiina","tremataspidoidei","trematocarpus","tremicinae","trentinus","tretosterninae","treverense","triaenophorus","tribalasia","tricepoides","trichiatus","trichocarpum","trichonychina","trichopeda","trichophallus","trichosolen","trichosomoididae","trichothyriomyces","tricnicos","tridax","trifurcillata","trigonosema","trigonula","triloculina","trimamillatus","triplicalyx","triplonychus","triplophyllum","trisecphora","trisignata","tristrigaria","tritaenia","tritodynamiinae","tritoxidium","trophius","tropidocarpum","truchanasi","truxillata","trychnopalpa","tshukoticus","tsienii","tsimihetensis","tsitsikammensis","tsunekatanus","tsurutanum","tubatum","tuberculiforme","tuberorachidion","tucanti","tungchihi","turbonia","turkeyella","turkulensis","turpicula","turuchanica","tusimayusurika","tusimomeneus","tuticorina","tutuilaensis","tymicola","typhochrestus","typhoniinae","tzinella","ucetanus","udzungwense","uktaspis","ulceratalis","ulotrichoides","ultunense","umiatense","uncopaederus","undulitibiae","unguianalis","unguifortis","uniclypea","unimediseta","unipeltoceras","upermia","urarensis","urartuensis","urceoliporoidea","urgorrii","uriformis","uroballus","urodiabunus","urogymni","ushari","ushizanus","ustifumosa","ustyuzhanini","usurae","utahnema","uvifolium","uzunoglui","vacatella","valerian","validithorax","vallacerta","vanakripa","vanieria","vansttallei","varfer","vauereselli","vavara","veerapazhasii","vehemens","velaminosum","velebitica","vendettadeae","veneriglossa","venitalis","ventricostus","ventriosa","ventrolata","verbanica","verbeekininae","verluysi","vermaasi","vermes","vermiculifera","vernale","vernana","verniochreana","vernoniastrum","vernoniensis","verrugana","verticillitida","vertumnaliformis","vervactoraria","vespertillionis","veteranum","vexillocalyculatum","viaderi","vicinula","vidalamiini","viennae","vientianea","viperinus","viphius","virgato","viridenex","viridicaule","viscaianum","viscicola","vitatticella","vitrimentula","vittiger","volkanovi","volutidae","volvocaceae","vrangiana","vuillefroyanus","waigoeensis","wakiyae","wandelia","wanfenglinensis","waningus","wanumaense","wareipai","warhami","warrierianum","wasabia","waterhousiae","wayensis","webbela","weinreichius","wentzelellinae","wernerius","westergaardi","westrichi","wetenschappelijk","whippleanum","wightensis","wikkiensis","wilhelminia","williamsianum","wilmotorum","wilsonichthys","winchelli","winterbotomi","winthemiini","wintonensis","wugirogaense","wulikensis","wyandotte","wyliea","wyomingense","xamthurus","xanthosquamosa","xavantina","xenopodion","xerantifulva","xeringinia","xerophilaspidina","xiangguiensis","ximenans","ximina","xipotensis","xiximeca","xizanganus","xyleus","xysila","xystophora","yaetakaria","yaguara","yamadorianus","yamamurae","yamanei","yanbaru","yangzekiangensis","yasuakii","yavesia","yelicones","yezophora","yinzhengii","yokenella","yoshikazui","yoshinoi","ypirangae","ypresiomyrma","yuanica","yunlingense","yunnananus","yushanica","zabrosa","zacatecae","zaglyptomorpha","zaisanensis","zakonnikovae","zamenhofianum","zantanus","zeballosicum","zebricolor","zelandalbia","zemiodes","zeugicornis","zhoushanense","zhovtyi","zimiensis","zimmii","zooxanthellae","zophochalca","zoroaster","zosterodasys","zunigai","zwicknia","zwolferi","zygethobius","zygethus","zygogonium","zygopterorum"]);const N=()=>({"tree-coconut":{texture:"sprites/objects/tree-coco",color:"4d6211",scale:3,jitter:!0,obstacle:!0,interactive:!0,drops:{hp:5,replaceWith:null,table:V(2,4,.5,{template:{id:"wood-palm",name:"Palm Wood",type:a.b.Type.Material,texture:"sprites/items/wood"},substs:[]})}},"tree-oak":{texture:"sprites/objects/tree-oak",color:"01ac1d",scale:3,jitter:!0,obstacle:!0,interactive:!0,drops:{hp:5,replaceWith:null,table:V(2,4,.5,{template:{id:"wood-oak",name:"Oak Wood",type:a.b.Type.Material,texture:{type:"single",tex:"sprites/items/wood",tint:"a0a0a0"}},substs:[]})}},"tree-spruce":{texture:"sprites/objects/tree-spruce",color:"004b01",scale:3,jitter:!0,obstacle:!0,interactive:!0,drops:{hp:5,replaceWith:null,table:V(2,4,.5,{template:{id:"wood-spruce",name:"Spruce Wood",type:a.b.Type.Material,texture:{type:"single",tex:"sprites/items/wood",tint:"808080"}},substs:[]})}},bones:{texture:"sprites/objects/bones",color:"cccccc",jitter:!0,terrain:!0,obstacle:!0,interactive:!0,drops:{hp:3,replaceWith:null,table:V(2,5,.7,{template:{id:"bone",name:"Bone",type:a.b.Type.Material,texture:"sprites/items/bone"},substs:[]})}},cross:{texture:"sprites/objects/cross",color:"cccccc",scale:2,jitter:!0,obstacle:!0},pillar:{texture:{type:"random",texs:["sprites/objects/pillar-1","sprites/objects/pillar-2","sprites/objects/pillar-3"]},color:"606060",scale:2,obstacle:!0},fern:{texture:{type:"random",texs:["sprites/objects/fern-1","sprites/objects/fern-2","sprites/objects/fern-3"]},color:"416652",jitter:!0,interactive:!0,drops:{hp:0,replaceWith:null,table:V(0,1,4,{template:{id:"leaf",name:"Leaf",type:a.b.Type.Material,texture:"sprites/items/leaf"},substs:[]})}},cactus:{texture:"sprites/objects/cactus",color:"416652",scale:1.5,jitter:!0,obstacle:!0},bush:{texture:"sprites/objects/bush",color:"416652",scale:1.5,jitter:!0,obstacle:!0},stone:{texture:"sprites/objects/stone",color:"505050",jitter:!0,obstacle:!0,interactive:!0,drops:{hp:8,replaceWith:null,table:V(2,5,.5,{template:{id:"stone",name:"Stone",type:a.b.Type.Material,texture:"sprites/items/stone"},substs:[]})}},rocks:{texture:{type:"random",texs:["sprites/objects/rocks-1","sprites/objects/rocks-2","sprites/objects/rocks-3"]},color:"505050",jitter:!0,terrain:!0,interactive:!0,drops:{hp:1,replaceWith:null,table:V(1,3,1,{template:{id:"stone",name:"Stone",type:a.b.Type.Material,texture:"sprites/items/stone"},substs:[]})}}});function q(e,t){return{input:e,output:t}}const H=()=>[q([{id:"bone",texture:"sprites/items/bone"},{id:"leaf",texture:"sprites/items/leaf"}],{id:"gel-bone",name:"Bone Gel",description:"alchemical reagent: boost elemental fusion",type:a.b.Type.Consumable,texture:"sprites/items/gel"}),q([{id:"stone",texture:"sprites/items/stone"},{id:"leaf",texture:"sprites/items/leaf"}],{id:"gel-stone",name:"Stone Gel",description:"alchemical reagent: boost elemental fission",type:a.b.Type.Consumable,texture:{type:"single",tex:"sprites/items/gel",tint:"808080"}}),q([{id:"solution",texture:"sprites/items/solution"},{id:"leaf",texture:"sprites/items/leaf"},{id:"stone",texture:"sprites/items/stone"}],{id:"gel-alchemy",name:"Alchemical Gel",description:"alchemical reagent: purify solution",type:a.b.Type.Consumable,texture:{type:"single",tex:"sprites/items/gel",tint:"e06060"}})];var R=i(54),U=i(7);const G=4;function K(e,t,i,s){return{texture:{type:"composite",overlay:{type:"single",tex:`sprites/objects/flower-petal-${t}`,tint:i},base:{type:"single",tex:`sprites/objects/flower-stem-${t}`}},color:i,jitter:!0,interactive:!0,drops:{hp:0,replaceWith:null,table:V(1,2,1,{template:{id:`flower-${e.toLowerCase()}`,name:e,type:a.b.Type.Consumable,texture:{type:"composite",overlay:{type:"single",tex:`sprites/items/flower-petal-${t}`,tint:i},base:{type:"single",tex:`sprites/items/flower-stem-${t}`}},aspects:[{element:s[0],amount:0},{element:s[1],amount:0}]},substs:[{path:"aspects[0].amount",type:"gaussian",mean:15,sd:2,min:0,max:20},{path:"aspects[1].amount",type:"gaussian",mean:8,sd:2,min:0,max:12}]})}}}function Y(){return{texture:"sprites/objects/bush",color:"416652",scale:1.5,jitter:!0,obstacle:!0}}const J=4;function X(e,t,i,s,r){return{texture:{type:"composite",overlay:{type:"single",tex:"sprites/objects/berrybush-berries",tint:s},base:{type:"single",tex:"sprites/objects/berrybush-bush"}},color:"416652",scale:1.5,jitter:!0,obstacle:!0,interactive:!0,drops:{hp:1,replaceWith:t,table:V(2,4,1,{template:{id:`berries-${e.toLowerCase()}`,name:`${e} Berries`,type:a.b.Type.Consumable,texture:{type:"single",tex:`sprites/items/berries-${i}`,tint:s},aspects:[{element:r[0],amount:0},{element:r[1],amount:0}],effects:[Object(R.b)(U.a.Type.Heal,5,0)]},substs:[{path:"aspects[0].amount",type:"gaussian",mean:20,sd:2,min:0,max:25},{path:"aspects[1].amount",type:"gaussian",mean:12,sd:2,min:0,max:15}]})}}}const Q=()=>({water:{texture:{type:"liquid",tex:"sprites/terrains/water",offset:16,time:5e3},color:"235c7c",liquid:!0,speed:-5},lava:{texture:{type:"liquid",tex:"sprites/terrains/lava",offset:16,time:15e3},color:"8b1408",liquid:!0,speed:-20,damage:10},mud:{texture:{type:"liquid",tex:"sprites/terrains/mud",offset:8,time:5e3},color:"6d584b",speed:-10,liquid:!0},grass:{texture:{type:"random",texs:["sprites/terrains/grass-1","sprites/terrains/grass-2","sprites/terrains/grass-3"],tint:"00ff00"},color:"51a01e"},"grass-deep":{texture:{type:"random",texs:["sprites/terrains/grass-1","sprites/terrains/grass-2","sprites/terrains/grass-3"],tint:"00cc00"},color:"316112"},"grass-light":{texture:{type:"random",texs:["sprites/terrains/grass-1","sprites/terrains/grass-2","sprites/terrains/grass-3"],tint:"aaffaa"},color:"487f61"},soil:{texture:{type:"random",texs:["sprites/terrains/soil-1","sprites/terrains/soil-2","sprites/terrains/soil-3"]},color:"846b5c"},stone:{texture:{type:"random",texs:["sprites/terrains/stone-1","sprites/terrains/stone-2","sprites/terrains/stone-3"],tint:"404040"},color:"514845"},sand:{texture:{type:"random",texs:["sprites/terrains/sand-1","sprites/terrains/sand-2","sprites/terrains/sand-3"]},color:"e2bf90"},ice:{texture:"sprites/terrains/ice",color:"aad0e7"},snow:{texture:"sprites/terrains/snow",color:"e0e9ee"}});var Z=i(178);const ee=16/G,te=16/J;const ie=()=>({id:1,type:"player",age:0,traits:{spatial:{pos:[0,0]}}});function se(e,t,i,r=(()=>{})){const o=function(e,t){const i=Object(h.create)(e);t("generating game data...",0);const s=Q(),r=N(),o=H(),n=[],c=f(i,ee*G,{type:"uniform",min:.5,max:1},{type:"uniform",min:.8,max:1});for(let e=1;e<=G;e++)for(let t=0;t<ee;t++)r[`flower-${e}${t}`]=K(W(5,10,i.random),e,c.pop().toString(16),g(i,n));const l=f(i,te*J,{type:"uniform",min:.3,max:1},{type:"uniform",min:.7,max:1});for(let e=1;e<=J;e++)for(let t=0;t<te;t++)r[`berrybush-${e}${t}-depleted`]=Y(),r[`berrybush-${e}${t}`]=X(W(5,10,i.random),`berrybush-${e}${t}-depleted`,e,l.pop().toString(16),g(i,n));const u=f(i,p.c.length),d=Object(Z.a)(p.c.map(({tier:e,name:t})=>{const s=6*i.random()+8*e,a=.1+.1*(e+1)*i.random();return[t,{fissionThreshold:{type:"gaussian",mean:s,sd:e+1,max:8*(e+1)},fusionThreshold:{type:"gaussian",mean:10+8*i.random()+10*e,sd:2*(e+1),min:10*e},fissionRate:{type:"gaussian",mean:a,sd:.05,min:0,max:.8},fusionRate:{type:"gaussian",mean:.2+.1*(p.a.MaxTier-e+1)*(i.random()+1),sd:.05,min:0,max:.8},color:u.pop().toString(16)}]}));return Object(a.c)(s,r,o,d)}(i,r),n=new c(e,t,i,o);z(n,r),D(n,r),function(e,t){t("decorating map...",0);const i=e.library.objects.filter(e=>e&&/^flower-\d+$/.test(e.name)).map(e=>e.name),a=e.library.objects.filter(e=>e&&/^berrybush-\d+$/.test(e.name)).map(e=>e.name);function r(t,r){if(e.getObject(t,r))return;const o=e.getTerrain(t,r);if("water"===o||"lava"===o||"ice"===o||"mud"===o)return;const n=e.biomes[e.getBiomeIndex(t,r)],h=T[n.type];if(!h)return;if(n.feature!==s.Feature.None&&n.feature!==s.Feature.Floral&&n.feature!==s.Feature.Rocky)return;let c=e.random.random();for(const[o,l]of h)if(c-=l,n.feature===s.Feature.Floral&&"flower"===o?c-=.1:n.feature===s.Feature.Rocky&&"rocks"===o&&(c-=.1),c<=0){"flower"===o?e.setObject(t,r,i[e.random.range(i.length)]):"berries"===o?e.setObject(t,r,a[e.random.range(a.length)]):e.setObject(t,r,o);break}}for(let i=0;i<e.height;i++){for(let t=0;t<e.width;t++)r(t,i);t(null,i/e.height)}}(n,r),function(e,t){t("generating game data...",0),e.map.seed=e.seed;const i=ie();i.traits.spatial.pos=e.map.spawn,e.entities.push(i),e.game.nextEntityId=2}(n,r),r("done!",1);const l=n.finalizeMap();return new a.a("",o,l,n.entities,n.game)}t.default=function(){onmessage=(e=>{switch(e.data.action){case"generate":{const{width:t,height:i,seed:s}=e.data,a=se(t,i,s,(e,t)=>{postMessage({action:"progress",message:e,progress:t})});postMessage({action:"completed",save:a.save()})}break;default:console.error("unknown message",e.data)}})}},186:function(e,t,i){"use strict";i.r(t);var s=i(1),a=i(170),r=i(169),o=i(22);i(334),i(331),i(329);var n=i(0),h=function(e,t,i,s){return new(i||(i=Promise))(function(a,r){function o(e){try{h(s.next(e))}catch(e){r(e)}}function n(e){try{h(s.throw(e))}catch(e){r(e)}}function h(e){e.done?a(e.value):new i(function(t){t(e.value)}).then(o,n)}h((s=s.apply(e,t||[])).next())})};class c{constructor(e){this.app=e,this.root=new n.Container}enter(){return h(this,void 0,void 0,function*(){})}pause(){return h(this,void 0,void 0,function*(){})}resume(){return h(this,void 0,void 0,function*(){})}leave(){return h(this,void 0,void 0,function*(){})}update(e){}layout(){}}class l extends n.Container{constructor(){super(),this.content=new n.Container,this.texNormal=n.Texture.fromFrame("sprites/ui/button-normal"),this.texPressed=n.Texture.fromFrame("sprites/ui/button-pressed"),this.plane=new n.mesh.NineSlicePlane(this.texNormal,6,6,6,6),this.isPressed=!1,this._contentWidth=0,this._contentHeight=0,this._isEnabled=!0,this.addChild(this.plane),this.addChild(this.content),this.plane.scale=new n.Point(Rt,Rt),this.interactive=!0,this.buttonMode=!0,this.on("pointerdown",()=>this.updateState(!0)),this.on("pointerupoutside",()=>this.updateState(!1)),this.on("pointerup",()=>{this._isEnabled&&this.isPressed&&this.emit(l.Clicked),this.updateState(!1)})}updateState(e){this._isEnabled||(e=!1),this.isPressed=e,this.plane.texture=e?this.texPressed:this.texNormal}get contentWidth(){return this._contentWidth}get contentHeight(){return this._contentHeight}get isEnabled(){return this._isEnabled}set isEnabled(e){this._isEnabled=e,this.updateState(this.isPressed),this.alpha=e?1:.5}layout(e,t){this.plane.x=0,this.plane.y=0,this.plane.width=e/Rt,this.plane.height=t/Rt,this.isPressed?(this.content.x=Rt,this.content.y=Rt,this._contentWidth=e-Rt,this._contentHeight=t-Rt):(this.content.x=0,this.content.y=0,this._contentWidth=e-Rt,this._contentHeight=t-Rt)}}l.Clicked="button.clicked";class u extends n.Container{set text(e){this._text.text=e}get style(){return this._text.style}get contentWidth(){return this._text.width}get contentHeight(){return this._text.height}constructor(e,t){super(),this._text=new n.Text(e,Object.assign({fontFamily:"Unibody8Pro",fontSize:8,fill:"white",align:"center"},t)),this.addChild(this._text);const i=(t&&t.scale||1)*Rt;this._text.scale=new n.Point(i,i)}layout(e,t){switch(this._text.style.align){case"left":this._text.x=0;break;case"center":this._text.x=(e-this._text.width)/2;break;case"right":this._text.x=e-this._text.width}this._text.y=(t-this._text.height)/2}}class p extends n.Container{constructor(e){super(),this.app=e,this.content=new n.Container,this.panelBg=new n.Sprite(n.Texture.WHITE),this.panelMask=new n.mesh.NineSlicePlane(n.Texture.fromFrame("sprites/ui/panel-mask"),6,6,6,6),this.maskTex=n.RenderTexture.create(0,0),this.panelBorder=new n.mesh.NineSlicePlane(n.Texture.fromFrame("sprites/ui/panel"),6,6,6,6),this._contentWidth=0,this._contentHeight=0,this.panelMask.scale=new n.Point(Rt,Rt),this.panelBorder.scale=new n.Point(Rt,Rt),this.panelBg.tint=4210752;const t=new n.Sprite(this.maskTex);this.content.addChild(this.panelBg),this.addChild(this.content),this.content.mask=t,this.addChild(this.panelBorder),this.addChild(t)}get contentWidth(){return this._contentWidth}get contentHeight(){return this._contentHeight}layout(e,t){this.panelBorder.width=e/Rt,this.panelBorder.height=t/Rt,this.panelBg.width=e,this.panelBg.height=t,this.panelMask.width=this.panelBorder.width,this.panelMask.height=this.panelBorder.height,this._contentWidth===e&&this._contentHeight===t&&this.maskTex||(this.content.x=0,this.content.y=0,this._contentWidth=e,this._contentHeight=t,this.maskTex.resize(e,t),this.app.renderer.render(this.panelMask,this.maskTex))}}class d extends l{constructor(e,t){super(),this.text=new u(e,t),this.content.addChild(this.text)}layout(e,t){super.layout(e,t),this.text.x=0,this.text.y=0,this.text.layout(this.contentWidth,this.contentHeight)}}const m=2,y=2e3,f=524288,g=new Uint16Array(6*y);for(let e=0;e<y;e++)g[6*e+0]=4*e+0,g[6*e+1]=4*e+1,g[6*e+2]=4*e+2,g[6*e+3]=4*e+0,g[6*e+4]=4*e+2,g[6*e+5]=4*e+3;class b extends n.ObjectRenderer{constructor(){super(...arguments),this.currentTex=null,this.currentBlendMode=-1,this.batchSize=0,this.batch=[],this.vaoBuf=new ArrayBuffer(f),this.f32=new Float32Array(this.vaoBuf),this.u32=new Uint32Array(this.vaoBuf)}onContextChange(){const e=this.renderer.gl;this.shader=new w(e),this.vb=n.glCore.GLBuffer.createVertexBuffer(e,null,e.STREAM_DRAW),this.ib=n.glCore.GLBuffer.createIndexBuffer(e,g,e.STATIC_DRAW);this.vao=this.renderer.createVao().addIndex(this.ib).addAttribute(this.vb,this.shader.attributes.aVertexPosition,e.FLOAT,!1,48,0).addAttribute(this.vb,this.shader.attributes.aTextureCoord,e.UNSIGNED_SHORT,!0,48,8).addAttribute(this.vb,this.shader.attributes.aColor,e.UNSIGNED_BYTE,!0,48,12).addAttribute(this.vb,this.shader.attributes.aClamp,e.FLOAT,!0,48,16).addAttribute(this.vb,this.shader.attributes.aOffset,e.FLOAT,!0,48,32).addAttribute(this.vb,this.shader.attributes.aThickness,e.FLOAT,!0,48,40)}render(e){e.texture.valid&&((this.batchSize>=y||e.texture.baseTexture!==this.currentTex||e.blendMode!==this.currentBlendMode)&&this.flush(),this.batch[this.batchSize++]=e,this.currentTex=e.texture.baseTexture,this.currentBlendMode=e.blendMode)}start(){this.renderer.bindShader(this.shader),this.renderer.bindVao(this.vao),this.vb.bind()}stop(){this.flush()}flush(){if(0===this.batchSize)return;const e=this.renderer;e.bindTexture(this.currentTex,0,!0),e.state&&e.state.setBlendMode(this.currentBlendMode);const t=this.f32,i=this.u32;let s=0;for(let e=0;e<this.batchSize;e++){const a=this.batch[e],r=a.texture._uvs.uvsUint32,o=a.vertexData,h=Math.min(a.worldAlpha,1);let c=a._tint;c=(c>>16)+(65280&c)+((255&c)<<16);const l=h<1&&this.currentTex.premultipliedAlpha?n.utils.premultiplyTint(c,h):c+(255*h<<24),u=a.offset||[0,0],p=a.texture.frame,d=a.transform.worldTransform,y=p.x/this.currentTex.width,f=p.y/this.currentTex.height,g=(p.x+p.width)/this.currentTex.width,b=(p.y+p.height)/this.currentTex.height,w=u[0]/this.currentTex.width,x=u[1]/this.currentTex.height,v=a.outline?m/Math.sqrt(d.a*d.a+d.c*d.c)/this.currentTex.realWidth:0,S=a.outline?m/Math.sqrt(d.b*d.b+d.d*d.d)/this.currentTex.realHeight:0,k=a.renderTranslation?Math.round(a.renderTranslation[0]):0,z=a.renderTranslation?Math.round(a.renderTranslation[1]):0;t[s++]=o[0]+k,t[s++]=o[1]+z,i[s++]=r[0],i[s++]=l,t[s++]=y,t[s++]=f,t[s++]=g,t[s++]=b,t[s++]=w,t[s++]=x,t[s++]=v,t[s++]=S,t[s++]=o[2]+k,t[s++]=o[3]+z,i[s++]=r[1],i[s++]=l,t[s++]=y,t[s++]=f,t[s++]=g,t[s++]=b,t[s++]=w,t[s++]=x,t[s++]=v,t[s++]=S,t[s++]=o[4]+k,t[s++]=o[5]+z,i[s++]=r[2],i[s++]=l,t[s++]=y,t[s++]=f,t[s++]=g,t[s++]=b,t[s++]=w,t[s++]=x,t[s++]=v,t[s++]=S,t[s++]=o[6]+k,t[s++]=o[7]+z,i[s++]=r[3],i[s++]=l,t[s++]=y,t[s++]=f,t[s++]=g,t[s++]=b,t[s++]=w,t[s++]=x,t[s++]=v,t[s++]=S}this.vb.upload(this.vaoBuf.slice(0,4*s*2),0,!0);const a=this.renderer.gl;a.drawElements(a.TRIANGLES,6*this.batchSize,a.UNSIGNED_SHORT,0),this.batchSize=0,this.currentTex=null,this.currentBlendMode=-1}}b.Name="tex-sprite";class w extends n.Shader{constructor(e){super(e,"\nattribute vec2 aVertexPosition;\nattribute vec2 aTextureCoord;\nattribute vec4 aColor;\nattribute vec4 aClamp;\nattribute vec4 aOffset;\nattribute vec4 aThickness;\n\nuniform mat3 projectionMatrix;\n\nvarying vec2 vTextureCoord;\nvarying vec4 vColor;\nvarying vec4 vClamp;\nvarying vec4 vOffset;\nvarying vec4 vThickness;\n\nvoid main(void)\n{\n    vec4 v = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\n    gl_Position = v;\n    vTextureCoord = aTextureCoord;\n    vColor = aColor;\n    vClamp = aClamp;\n    vOffset = aOffset;\n    vThickness = aThickness;\n}","\nvarying vec2 vTextureCoord;\nvarying vec4 vColor;\nvarying vec4 vClamp;\nvarying vec4 vOffset;\nvarying vec4 vThickness;\n\nuniform sampler2D uSampler;\n\nfloat sampleAlpha(vec2 coords, float x, float y) {\n  return texture2D(uSampler, clamp(coords + vec2(x, y), vClamp.xy, vClamp.zw)).a;\n}\n\nvoid main(void)\n{\n    vec2 coords = mod(vTextureCoord - vClamp.xy + vOffset.xy, vClamp.zw - vClamp.xy) + vClamp.xy;\n    vec4 sample = texture2D(uSampler, coords);\n    float a = sample.a;\n    a = max(a, sampleAlpha(coords, -vThickness.x, 0.0));\n    a = max(a, sampleAlpha(coords, vThickness.x, 0.0));\n    a = max(a, sampleAlpha(coords, 0.0, -vThickness.y));\n    a = max(a, sampleAlpha(coords, 0.0, vThickness.y));\n    a = max(a, sampleAlpha(coords, -vThickness.x, -vThickness.y));\n    a = max(a, sampleAlpha(coords, vThickness.x, -vThickness.y));\n    a = max(a, sampleAlpha(coords, -vThickness.x, vThickness.y));\n    a = max(a, sampleAlpha(coords, vThickness.x, vThickness.y));\n    gl_FragColor = vec4((sample.rgb + vec3(0.2) * (1.0 - sample.a)) * a, a) * vColor;\n}\n")}}n.WebGLRenderer.registerPlugin(b.Name,b),n.CanvasRenderer.registerPlugin(b.Name,n.CanvasSpriteRenderer);class x extends n.Sprite{constructor(e){super(e),this.outline=!1,this.animName="",this.still=!0,this.actionAnimName="",this.actionEndTime=-1,this.currentTex=n.Texture.EMPTY,this.frame=-1,this.elapsed=0,this.pluginName=b.Name,e&&(this.currentTex=e)}updateTex(){let e=this.currentTex;if(this.clip){const t=(e=e.clone()).frame.clone();t.width-=Math.round(this.clip[0]*t.width),t.height-=Math.round(this.clip[1]*t.height),e.frame=t}this._texture!==e&&(this.texture=e)}clearTexture(){this.tint=16777215,this.overlay&&this.removeChild(this.overlay),this.overlay=void 0,this.currentTex=n.Texture.EMPTY,this.textureDef=void 0,this.offset=void 0,this.updateTex()}setTexture(e,t=0){if(t=function(e){return e=73244475*((e=73244475*(e>>16^e))>>16^e),e^=e>>16}(t),this.clearTexture(),"string"==typeof e)this.textureDef=void 0,this.currentTex=n.Texture.fromFrame(e);else switch(this.textureDef=e,e.type){case"single":this.currentTex=n.Texture.fromFrame(e.tex),e.tint&&(this.tint=parseInt(e.tint,16));break;case"random":this.currentTex=n.Texture.fromFrame(e.texs[t%e.texs.length]),e.tint&&(this.tint=parseInt(e.tint,16));break;case"composite":{this.setTexture(e.base,t);const i=new x;i.anchor.copy(this.anchor),i.setTexture(e.overlay,t),this.overlay=i,this.addChild(i)}break;case"animation":this.frame=-1,this.currentTex=n.Texture.EMPTY;break;case"liquid":this.currentTex=n.Texture.fromFrame(e.tex),e.tint&&(this.tint=parseInt(e.tint,16))}this.updateTex()}playActionAnim(e){if(this.textureDef&&"animation"===this.textureDef.type&&e in this.textureDef.anims){if(this.actionAnimName!==e){const t=this.textureDef.anims[e];this.frame=0,this.actionAnimName=e,this.actionEndTime=this.elapsed+1e3/t.fps*t.numFrames}}else console.log("animation: no such name: "+e)}stopActionAnim(e){this.actionAnimName===e&&(this.frame=0,this.actionAnimName="",this.actionEndTime=-1)}update(e){if(this.elapsed=e,this.textureDef)if("animation"===this.textureDef.type&&(this.animName||this.actionAnimName)){const t=this.textureDef.anims[this.actionAnimName||this.animName];if(t){if(this.still&&!this.actionAnimName)this.frame=-1;else{const i=1e3/t.fps;this.frame=Math.floor(e/i)%t.numFrames}this.currentTex=n.Texture.fromFrame(`${t.frameId}-${this.frame+1}`)}else console.log("animation: no such name: "+(this.actionAnimName||this.animName));this.actionEndTime<e&&(this.actionAnimName="",this.actionEndTime=-1)}else if("liquid"===this.textureDef.type){let t=e%this.textureDef.time/this.textureDef.time;t=Math.sin(t*Math.PI*2);const i=this.textureDef.offset*t;this.offset=[i,i]}this.updateTex(),this.overlay&&(this.overlay.clip=this.clip,this.overlay.update(e))}_onAnchorUpdate(){n.Sprite.prototype._onAnchorUpdate.call(this),this.overlay&&this.overlay.anchor.copy(this._anchor)}}var v=i(167),S=i.n(v);class k extends n.Container{set text(e){this._text.text=e}get style(){return this._text.style}get contentWidth(){return this._text.width}get contentHeight(){return this._text.height}constructor(e,t,i=1){super();const s=Object.assign({fontFamily:"Unibody8Pro",fontSize:8,fill:"white",align:"center"},t.default||{});this._text=new S.a(e,Object.assign({},t,{default:s})),this.addChild(this._text),this._text.scale=new n.Point(i*Rt,i*Rt)}layout(e,t){switch(this._text.style.align){case"left":this._text.x=0;break;case"center":this._text.x=(e-this._text.width)/2;break;case"right":this._text.x=e-this._text.width}this._text.y=(t-this._text.height)/2}}class z extends p{constructor(e,t,i,s=1){super(e),this.textView=new k(t,i,s),this.addChild(this.textView)}set text(e){this.textView.text=e}layout(){const e=this.textView.contentWidth,t=this.textView.contentHeight;this.textView.position.set(16,16),this.textView.layout(e,t),super.layout(e+32,t+32)}}var T=i(177);class j extends z{constructor(e,t){super(e,"",{default:{align:"left"},name:{fontWeight:"bold"},type:{fill:"#d0d0d0"},desc:{fontStyle:"italic"},aspect:{fill:"#d0d0d0"},elem:{fontWeight:"bold"},effect:{fill:"#d0d0d0"}}),this.item=t,this.updateView()}setItem(e){this.item!==e&&(this.item=e,this.updateView())}updateView(){const e=[`<name>${this.item.name}</name>`,`<type>${Object(T.a)(this.item.type)}</type>`];if(this.item.description&&e.push(`<desc>${this.item.description}</desc>`),this.item.aspects){e.push("");let t=0;for(const{amount:e}of this.item.aspects)t+=e;for(const{element:i,amount:s}of this.item.aspects.slice().sort((e,t)=>t.amount-e.amount)){const a=s/t*100;a<10||e.push(`<aspect>${a.toFixed(0)}% <elem>${i}</elem></aspect>`)}}if(this.item.effects){e.push("");for(const t of this.item.effects)e.push(`<effect>• ${t.description}</effect>`)}this.text=e.join("\n")}}class M{constructor(e,t){this.slotA=e,this.slotB=t,this.type="inventory-swap"}}class C{constructor(e){this.slot=e,this.type="inventory-updated"}}class O{constructor(e,t){this.effect=e,this.target=t,this.type="play-effect"}}!function(e){let t;!function(e){e.Shake="shake"}(t=e.Type||(e.Type={}));e.Shake=class extends e{}}(O||(O={}));class F{constructor(e,t,i,s,a=0){this.particleType=e,this.coords=t,this.numParticles=i,this.color=s,this.z=a,this.type="show-particles"}}!function(e){let t;!function(e){e.Splash="splash",e.Float="float"}(t=e.Type||(e.Type={})),e.splash=function(i,s,a,r=0){return new e(t.Splash,i,s,a,r)},e.float=function(i,s,a,r=0){return new e(t.Float,i,s,a,r)}}(F||(F={}));class B{constructor(e,t){this.entityId=e,this.effects=t,this.type="inventory-swap"}}class P{constructor(e,t){this.entityId=e,this.hpDiff=t,this.type="update-hp"}}class A extends n.Container{constructor(e,t){let i;super(),this.game=e,this.slot=t,this.bg=new x,this.bgOverlay=new x,this.fgOverlay=new x,this.dragging=!1,this.enabled=!0,this.showTooltip=!0,this.alwaysInteractive=!1,this.endDrag=(e=>{this.dragging=!1,this.addChild(this.obj),e instanceof A&&e!==this&&this.enabled&&e.enabled&&this.game.dispatch(new M(this.slot,e.slot))}),this.bg.setTexture("sprites/ui/inv-slot"),this.addChild(this.bg),this.addChild(this.bgOverlay),this.obj=new x,this.obj.scale.set(2,2),this.obj.anchor.set(.5,.5),this.obj.outline=!0,this.addChild(this.obj),this.addChild(this.fgOverlay),this.interactive=!0,this.game.app.toolTip.add(this,()=>this.slot.item&&this.showTooltip?(i?i.setItem(this.slot.item):i=new j(this.game.app,this.slot.item),i):null),this.on("pointerdown",()=>{this.enabled&&this.slot.item&&!this.game.app.dragDrop.active&&(this.dragging=!0,this.game.app.dragDrop.begin(this.obj).then(this.endDrag),i&&this.game.app.toolTip.hide(i))})}get empty(){return!this.slot.item}updateSlot(){this.slot.item?(this.obj.setTexture(this.slot.item.texture),this.obj.visible=!0,this.buttonMode=!0):(this.obj.clearTexture(),this.obj.visible=!1,this.buttonMode=this.alwaysInteractive)}layout(){this.updateSlot(),this.dragging||this.obj.position.set(A.Size/2,A.Size/2)}update(e){this.obj.update(e)}}A.Size=56;var D,I=i(4),L=i(166),_=i.n(L),$=function(e,t,i,s){return new(i||(i=Promise))(function(a,r){function o(e){try{h(s.next(e))}catch(e){r(e)}}function n(e){try{h(s.throw(e))}catch(e){r(e)}}function h(e){e.done?a(e.value):new i(function(t){t(e.value)}).then(o,n)}h((s=s.apply(e,t||[])).next())})};class E{constructor(e,t,i=""){this.width=e,this.height=t,this.seed=i,this.worker=_()(185)}generate(e=(()=>{})){return $(this,void 0,void 0,function*(){const t=yield new Promise(t=>{this.worker.onmessage=(i=>{"completed"===i.data.action?t(I.a.load(i.data.save)):"progress"===i.data.action&&e(i.data.message,i.data.progress)}),this.worker.postMessage({action:"generate",width:this.width,height:this.height,seed:this.seed})});return this.worker.terminate(),t})}}class W{constructor(e,t){this.age=0,this._traits=new Map,this.traits=Object.assign((e,t)=>{let i=this._traits.get(e.Type);return i||(i=e.make(t),this._traits.set(i.type,i)),i},{get:e=>this._traits.get(e.Type),set:e=>{this._traits.set(e.type,e)},list:()=>this._traits.values()}),this._game=e,this.id=t||e.data.props.nextEntityId++}get game(){return this._game}init(){}delete(){this._game&&(this._game.entities.delete(this),this._game=null)}}W.types=new Map,function(e){e.types=new Map}(D||(D={}));class V extends n.Container{constructor(){super(),this.offset=s.b.create(),this.viewWidth=0,this.viewHeight=0,this.bg=Object.assign(new n.Sprite(n.Texture.WHITE),{layer:V.Layer.Background,sortOffset:s.b.fromValues(0,0)}),this.nextId=0,this.bg.tint=2105376,this.add(this.bg),this.interactive=!0}toMapCoords(e,t){return s.b.scaleAndAdd(t,[(e.x-Math.floor(this.viewWidth/2))/Ut,(e.y-Math.floor(this.viewHeight/2))/Ut],this.offset,1/Ut),t}toCameraPoint(e,t,i=0){return t.x=Math.floor(e[0]*Ut-this.offset[0])+Math.floor(this.viewWidth/2),t.y=Math.floor((e[1]-i)*Ut-this.offset[1])+Math.floor(this.viewHeight/2),t}add(e){e.id=this.nextId++,this.addChild(e)}layout(e,t){if(this.bg.width=e,this.bg.height=t,this.viewWidth!==e||this.viewHeight!==t){this.viewWidth=e,this.viewHeight=t;const i=new n.Graphics;i.beginFill(16777215),i.drawRect(this.x,this.y,e,t),i.endFill(),this.mask=i}this.sortLayers()}sortLayers(){this.children.sort((e,t)=>{const i=e.sortOffset,s=t.sortOffset,{x:a,y:r}=e.transform.position,{x:o,y:n}=t.transform.position;let h=0;return 0===h&&(h=e.layer-t.layer),0===h&&(h=r+i[1]*Ut-(n+s[1]*Ut)),0===h&&(h=a+i[0]*Ut-(o+s[0]*Ut)),0===h&&(h=e.id-t.id),h})}}!function(e){let t;!function(e){e[e.Background=-1]="Background",e[e.Terrain=0]="Terrain",e[e.Objects=1]="Objects"}(t=e.Layer||(e.Layer={}))}(V||(V={}));var N,q=i(44);!function(e){function t(){return{type:e.Type,position:s.b.fromValues(0,0),velocity:s.b.fromValues(0,0),scale:s.b.fromValues(1,1),size:s.b.fromValues(.5,.5),solid:!0,sprite:Object.assign(new x,{layer:V.Layer.Objects,sortOffset:s.b.fromValues(0,0)})}}e.Type="spatial",e.make=t,e.serialize=function(e){return{pos:[e.position[0],e.position[1]],vel:[e.velocity[0],e.velocity[1]]}},e.deserialize=function(e){return Object(q.a)({position:e.pos&&s.b.fromValues(e.pos[0],e.pos[1]),velocity:e.vel&&s.b.fromValues(e.vel[0],e.vel[1])},t())}}(N||(N={})),D.types.set(N.Type,N);var H,R,U,G,K=i(172);!function(e){function t(t=1){return{type:e.Type,slots:Object(K.a)(t,()=>({item:null,accepts:null}))}}e.Type="inventory",e.make=t,e.serialize=function(e){return{slots:e.slots}},e.deserialize=function(e){return Object(q.a)({slots:e.slots.slice()},t())}}(H||(H={})),D.types.set(H.Type,H),function(e){function t(){return{type:e.Type,z:s.b.fromValues(0,0),gravity:!0}}e.Type="float",e.make=t,e.serialize=function(e){return{z:[e.z[0],e.z[1]],gravity:e.gravity}},e.deserialize=function(e){return Object(q.a)({z:e.z&&s.b.fromValues(e.z[0],e.z[1]),gravity:void 0===e.gravity||e.gravity},t())}}(R||(R={})),D.types.set(R.Type,R),function(e){function t(){return{type:e.Type,base:{hp:100,maxHp:100,str:10,def:0,spd:10,vit:10},boost:{hp:0,maxHp:0,str:0,def:0,spd:0,vit:0},effects:[]}}e.Type="stats",e.make=t,e.serialize=function(e){return{base:e.base,effects:e.effects}},e.deserialize=function(e){return Object(q.a)({base:e.base||{hp:100,maxHp:100,str:10,def:0,spd:10,vit:10},effects:e.effects||[]},t())},e.compute=function(e){return{get hp(){return e.base.hp+e.boost.hp},get maxHp(){return e.base.maxHp+e.boost.maxHp},get str(){return e.base.str+e.boost.str},get def(){return e.base.def+e.boost.def},get spd(){return e.base.spd+e.boost.spd},get vit(){return e.base.vit+e.boost.vit}}}}(U||(U={})),D.types.set(U.Type,U),function(e){function t(){return{type:e.Type,hotbarSelection:0}}e.Type="player-data",e.make=t,e.serialize=function(e){return{hotbarSelection:e.hotbarSelection}},e.deserialize=function(e){return Object(q.a)({hotbarSelection:e.hotbarSelection||0},t())}}(G||(G={})),D.types.set(G.Type,G);const Y={Player:{type:"animation",anims:{left:{frameId:"sprites/player/left",numFrames:8,fps:15},right:{frameId:"sprites/player/right",numFrames:8,fps:15},up:{frameId:"sprites/player/up",numFrames:8,fps:15},down:{frameId:"sprites/player/down",numFrames:8,fps:15},"attack-left":{frameId:"sprites/player/attack-left",numFrames:5,fps:15},"attack-right":{frameId:"sprites/player/attack-right",numFrames:5,fps:15},"attack-up":{frameId:"sprites/player/attack-up",numFrames:5,fps:15},"attack-down":{frameId:"sprites/player/attack-down",numFrames:5,fps:15}}}};class J extends W{get type(){return J.Type}init(){const e=this.traits(N);s.b.set(e.scale,2,2),s.b.set(e.size,.25,.25),e.sprite.setTexture(Y.Player,this.id);const t=this.traits(H,43);t.slots[40].accepts=[I.b.Type.Chestplate],t.slots[41].accepts=[I.b.Type.Leggings],t.slots[42].accepts=[I.b.Type.Boots],this.traits(U),this.traits(G)}}J.Type="player",W.types.set(J.Type,J);class X extends W{get type(){return X.Type}static make(e,t,i=e.player.traits(N).position){const a=new X(e).item(t),r=a.traits(N);return s.b.copy(r.position,i),s.b.random(r.velocity),a.traits(R).z[0]=.5*Math.random()+.5,a}item(e){const t=this.traits(H).slots[0];return e?(t.item=e,this):t.item}init(){const e=this.traits(N);s.b.set(e.scale,2,2),s.b.set(e.size,.25,.25),e.solid=!1,e.sprite.setTexture(this.item().texture,this.id),e.sprite.outline=!0}}X.Type="item-drop",W.types.set(X.Type,X);class Q{constructor(e){this.game=e,this.entities=new Map}init(){for(const e of this.game.data.entities){const t=new(W.types.get(e.type))(this.game,e.id);t.age=e.age;for(const i of Object.keys(e.traits)){const s=D.types.get(i).deserialize(e.traits[i]);t.traits.set(s)}this.add(t)}}dispose(){}save(){this.game.data.entities=Array.from(this.entities.values()).map(e=>{const t={id:e.id,type:e.type,age:e.age,traits:{}};for(const i of e.traits.list())t.traits[i.type]=D.types.get(i.type).serialize(i);return t})}ofType(e){return Array.from(this.entities.values()).filter(t=>t.type===e.Type)}withTrait(e){return Array.from(this.entities.values()).filter(t=>t.traits.get(e))}get(e){return this.entities.get(e)}add(e){e.init(),this.entities.set(e.id,e)}delete(e){this.entities.delete(e.id)}update(e){for(const t of this.entities.values())t.age+=e}}class Z extends n.Container{constructor(){super(),this.camera=new V,this.add(this.camera),this.interactive=!0}add(e){this.addChild(e)}layout(e,t){for(const i of this.children)i.layout(e,t)}}class ee{constructor(e){this.game=e,this.runWhenPaused=!1,this._active=!0}get isActive(){return this._active}deactivate(){if(!this._active)throw new Error("not active");this._active=!1}update(e){}dispose(){}}class te extends n.Container{dispose(){}}var ie=i(337),se=i(23),ae=i(90),re=i(21);const oe=3;class ne extends n.Container{constructor(e,t){super(),this.game=e,this.recipe=t,this.output=new A(e,{accepts:[],item:this.makeOutput()}),this.output.position.set(0,(64-A.Size)/2),this.addChild(this.output),this.inputs=t.input.map(({id:t,texture:i})=>{const s=new A(e,{accepts:Object(ie.a)(t),item:null});return s.bgOverlay.setTexture(i),s.bgOverlay.outline=!0,s.bgOverlay.scale.set(2,2),s.bgOverlay.position.set(4,4),s.bgOverlay.alpha=.5,s}),this.arrow=new x(n.Texture.fromFrame("sprites/ui/arrow")),this.arrow.position.set(A.Size+16,0),this.arrow.scale.set(2,2),this.addChild(this.arrow);let i=A.Size+16+64+16;for(const e of this.inputs)this.addChild(e),e.position.set(i+8,8),i+=64}makeOutput(){return Object(ae.a)(this.recipe.output)}check(e){let t=0;for(const e of this.inputs)e.slot.item?(e.alpha=1,t++):e.alpha=.5;const i=t===this.recipe.input.length;if(this.output.enabled=i,this.output.alpha=i?1:.5,this.arrow.alpha=i?1:.5,!this.output.slot.item){this.output.slot.item=this.makeOutput(),this.game.dispatch(new C(this.output.slot));for(const{slot:e}of this.inputs)e.item=null,this.game.dispatch(new C(e))}}layout(){this.output.layout();for(const e of this.inputs)e.layout()}dispose(){for(const{slot:e}of this.inputs)if(e.item){const t=X.make(this.game,e.item);this.game.entities.add(t)}}}class he extends te{constructor(e){super(),this.name="Workbench",this.icon=n.Texture.fromFrame("sprites/ui/tab-workbench"),this.upButton=new l,this.downButton=new l,this.recipeViews=[],this.subscription=new re.Subscription,this.scrollOffset=0,this.checkInventory=(({slot:e})=>{for(const t of this.recipeViews)t.check(e)}),this.upButton=new l;const t=new x(n.Texture.fromFrame("sprites/ui/arrow-compact"));t.scale.set(2,2),t.rotation=Math.PI/2,t.pivot.set(8,8),t.position.set(32,16),this.upButton.content.addChild(t),this.addChild(this.upButton),this.downButton=new l;const i=new x(n.Texture.fromFrame("sprites/ui/arrow-compact"));i.scale.set(2,2),i.rotation=-Math.PI/2,i.pivot.set(8,8),i.position.set(32,16),this.downButton.content.addChild(i),this.addChild(this.downButton);for(const t of e.library.recipes){const i=new ne(e,t);this.addChild(i),this.recipeViews.push(i)}this.subscription.add(e.messages$.ofType(C).subscribe(this.checkInventory));for(const e of this.recipeViews)e.check();this.upButton.on(l.Clicked,()=>this.scrollOffset--),this.downButton.on(l.Clicked,()=>this.scrollOffset++)}layout(e,t){const i=this.recipeViews.length-oe;this.scrollOffset=Object(se.a)(this.scrollOffset,0,i),this.upButton.visible=this.scrollOffset>0,this.downButton.visible=this.scrollOffset<i;let s=0;this.upButton.position.set(0,s),this.upButton.layout(64,32),s+=32;for(let e=0;e<this.recipeViews.length;e++){const t=this.recipeViews[e];e<this.scrollOffset||e>=this.scrollOffset+oe?t.visible=!1:(t.visible=!0,t.position.set(2,s),t.layout(),s+=64)}this.downButton.position.set(0,s),this.downButton.layout(64,32)}dispose(){this.subscription.unsubscribe();for(const e of this.recipeViews)e.dispose()}}var ce=i(31);class le extends te{constructor(e){super(),this.game=e,this.name="Alchemy",this.icon=n.Texture.fromFrame("sprites/ui/tab-alchemy"),this.processButton=new l,this.subscription=new re.Subscription,this.checkInventory=(()=>{this.processButton.isEnabled=!this.input1.empty&&!this.input2.empty&&!this.fuel.empty&&this.output.empty}),this.doAlchemy=(()=>{const e=this.input1.slot.item,t=this.input2.slot.item,i=Object(ce.c)(e,t,this.game.library.elements);this.output.slot.item=i,this.input1.slot.item=null,this.input2.slot.item=null,this.fuel.slot.item=null,this.game.dispatch(new C(this.input1.slot)),this.game.dispatch(new C(this.input2.slot)),this.game.dispatch(new C(this.output.slot)),this.game.dispatch(new C(this.fuel.slot))}),this.bg=new x(n.Texture.from("sprites/ui/cauldron")),this.bg.outline=!0,this.bg.scale.set(7,7),this.addChild(this.bg),this.processButton=new l;const t=new x(n.Texture.fromFrame("sprites/ui/arrow-compact"));t.scale.set(2,2),t.rotation=-Math.PI/2,t.pivot.set(8,8),t.position.set(18,20),this.processButton.content.addChild(t),this.addChild(this.processButton),this.input1=new A(e,{accepts:[I.b.Type.Consumable],item:null}),this.input2=new A(e,{accepts:[I.b.Type.Consumable],item:null}),this.fuel=new A(e,{accepts:"^wood-",item:null}),this.output=new A(e,{accepts:[],item:null}),this.addChild(this.input1),this.addChild(this.input2),this.addChild(this.fuel),this.addChild(this.output),this.fuel.bgOverlay.setTexture("sprites/ui/inv-slot-fire"),this.subscription.add(e.messages$.ofType(C).subscribe(this.checkInventory)),this.checkInventory(),this.processButton.on(l.Clicked,this.doAlchemy)}layout(e,t){const i=A.Size+16+40+16+A.Size;this.input1.position.set(16,4),this.input1.layout(),this.processButton.position.set(16+A.Size+16,16),this.processButton.layout(40,40),this.input2.position.set(16+A.Size+16+40+16,4),this.input2.layout(),this.bg.position.set(16+(i-this.bg.width)/2,A.Size+8),this.output.position.set(16+(i-A.Size)/2,A.Size+28),this.output.layout(),this.fuel.position.set(16+(i-A.Size)/2,192),this.fuel.layout()}dispose(){this.subscription.unsubscribe();for(const{slot:e}of[this.input1,this.input2,this.fuel,this.output])if(e.item){const t=X.make(this.game,e.item);this.game.entities.add(t)}}}var ue=function(e,t,i,s){return new(i||(i=Promise))(function(a,r){function o(e){try{h(s.next(e))}catch(e){r(e)}}function n(e){try{h(s.throw(e))}catch(e){r(e)}}function h(e){e.done?a(e.value):new i(function(t){t(e.value)}).then(o,n)}h((s=s.apply(e,t||[])).next())})};class pe extends p{constructor(e){super(e.app),this.game=e}init(){}dispose(){}update(e){}done(){return ue(this,void 0,void 0,function*(){yield this.game.app.popState()})}}var de=function(e,t,i,s){return new(i||(i=Promise))(function(a,r){function o(e){try{h(s.next(e))}catch(e){r(e)}}function n(e){try{h(s.throw(e))}catch(e){r(e)}}function h(e){e.done?a(e.value):new i(function(t){t(e.value)}).then(o,n)}h((s=s.apply(e,t||[])).next())})};const me=800,ye=600,fe=8;class ge extends pe{constructor(e){super(e),this.tabs=[],this.saveButton=new d("save"),this.exitButton=new d("exit"),this.slotViews=[],this.trash=new A(this.game,{item:null,accepts:null}),this.statNames=new k("",{default:{align:"right",fontWeight:"bold"},s:{fontSize:12}}),this.statValues=new k("",{default:{align:"left"},s:{fontSize:12},incr:{fill:"#d0d000"},decr:{fill:"#d00000"}}),this.tabs.push(new he(e)),this.tabs.push(new le(e)),this.activeTab=this.tabs[0],this.addChild(this.activeTab);const t=new z(e.app,"",{});this.tabButtons=this.tabs.map(i=>{const s=new l,a=new x(i.icon);return a.scale.set(2,2),s.content.addChild(a),this.addChild(s),e.app.toolTip.add(s,()=>(t.text=i.name,t)),s.on(l.Clicked,()=>{this.activeTab!==i&&(this.removeChild(this.activeTab),this.addChild(i),this.activeTab=i)}),s});const i=e.player.traits.get(H).slots;for(const e of i){const t=new A(this.game,e);this.slotViews.push(t),this.content.addChild(t)}this.slotViews[40].bgOverlay.setTexture("sprites/ui/inv-slot-chestplates"),this.slotViews[41].bgOverlay.setTexture("sprites/ui/inv-slot-leggings"),this.slotViews[42].bgOverlay.setTexture("sprites/ui/inv-slot-boots"),this.content.addChild(this.trash),this.trash.bgOverlay.setTexture("sprites/ui/inv-slot-trash");const s=this.game.player.traits(U);this.stats=U.compute(s),this.base=s.base,this.content.addChild(this.statNames),this.content.addChild(this.statValues),this.content.addChild(this.saveButton),this.content.addChild(this.exitButton),this.saveButton.on(d.Clicked,this.save.bind(this)),this.exitButton.on(d.Clicked,this.exit.bind(this))}layout(e,t){this.position.set(Math.round((e-me)/2),Math.round((t-ye)/2)),super.layout(me,ye);let i=0,s=0;for(const e of this.slotViews.slice(-3))e.position.set(24+(i+fe)*A.Size+16,24),e.layout(),i++;this.trash.position.set(24+(fe+4)*A.Size+16,24),this.trash.layout(),i=s=0;for(const e of this.slotViews.slice(0,-3))e.position.set(24+i*A.Size,24+s*A.Size+(s>0?16:0)),e.layout(),++i===fe&&(i=0,s++);this.statNames.position.set(24+fe*A.Size+16,24+A.Size+16),this.statNames.layout(this.statNames.contentWidth,this.statNames.contentHeight),this.statValues.position.set(24+fe*A.Size+16+this.statNames.contentWidth,24+A.Size+16),this.statValues.layout(this.statValues.contentWidth,this.statValues.contentHeight);i=24,s=336;for(let e=0;e<this.tabs.length;e++){const t=this.tabButtons[e];t.isEnabled=this.activeTab!==this.tabs[e],t.position.set(i,s),t.layout(50,50),i+=66}s+=66,i=24,this.saveButton.position.set(i,s),this.saveButton.layout(96,48),i+=112,this.exitButton.position.set(i,s),this.exitButton.layout(96,48),this.activeTab.position.set(256,336),this.activeTab.layout(me-256-16,ye-336-16)}update(e){this.game.keyboard.isDown("Escape")&&this.done();for(const t of this.slotViews)t.update(e);this.trash.slot.item=null,this.trash.update(e),this.updateStats()}updateStats(){function e(e,t){const i=t-e;return i<0?`(<decr>${t-e}</decr>)`:i>0?`(<incr>+${t-e}</incr>)`:""}this.statNames.text="\nhp<s> </s>\nstr<s> </s>\ndef<s> </s>\nspd<s> </s>\nvit<s> </s>\n".trim(),this.statValues.text=`\n<s> </s>${Math.ceil(this.stats.hp)} / ${this.stats.maxHp} ${e(this.base.maxHp,this.stats.maxHp)}\n<s> </s>${this.stats.str} ${e(this.base.str,this.stats.str)}\n<s> </s>${this.stats.def} ${e(this.base.def,this.stats.def)}\n<s> </s>${this.stats.spd} ${e(this.base.spd,this.stats.spd)}\n<s> </s>${this.stats.vit} ${e(this.base.vit,this.stats.vit)}\n`.trim()}save(){this.game.save(),o.dialog.prompt({label:"Save name (max 8 char.): ",value:this.game.data.id,callback:e=>{!1!==e?e?e.length>8?o.dialog.alert({content:"Name is too long!",callback:()=>this.game.app.view.focus()}):(this.game.data.id=e,localStorage[e]=this.game.data.export(),o.dialog.alert({content:`Saved as name '${e}'.`,callback:()=>this.game.app.view.focus()})):o.dialog.alert({content:"Name is empty!",callback:()=>this.game.app.view.focus()}):this.game.app.view.focus()}})}exit(){return de(this,void 0,void 0,function*(){yield this.done(),yield this.game.app.popState()})}done(){const e=e=>super[e];return de(this,void 0,void 0,function*(){this.game.app.dragDrop.cancel();for(const e of this.tabs)e.dispose();yield e("done").call(this)})}}function be(e){return Math.max(0,e/500)}class we extends ee{constructor(e){super(e),this.direction=s.b.create(),this.vel=e.player.traits.get(N).velocity,this.stats=U.compute(e.player.traits.get(U))}update(e){s.b.set(this.direction,0,0),this.game.keyboard.isPressed("a")&&this.direction[0]--,this.game.keyboard.isPressed("d")&&this.direction[0]++,this.game.keyboard.isPressed("w")&&this.direction[1]--,this.game.keyboard.isPressed("s")&&this.direction[1]++,s.b.normalize(this.direction,this.direction),s.b.scale(this.vel,this.direction,function(e){return 1+Math.max(0,4*e/10)}(this.stats.spd)),this.game.keyboard.isDown("Escape")&&this.game.app.pushState(new Lt(new ge(this.game)))}}var xe=i(7);class ve extends ee{constructor(e){super(e),this.applyEffects=(({entityId:e,effects:t})=>{const i=this.game.entities.get(e);if(!i)return;const s=i.traits.get(U);if(!s)return;const a=s.effects;for(let e=0;e<a.length;e++){const{type:i,duration:s}=a[e],r=t.findIndex(e=>e.type===i&&e.duration>=s);r>=0&&(a[e]=t.splice(r,1)[0])}a.push(...t)}),this.game.messages$.ofType(B).subscribe(this.applyEffects)}update(e){for(const t of this.game.entities.withTrait(U)){const{base:i,boost:s,effects:a}=t.traits.get(U);s.hp=0,s.maxHp=0,s.str=0,s.def=0,s.spd=0,s.vit=0;for(let r=a.length-1;r>=0;r--){const o=a[r],n=Math.floor(o.duration/1e3)-Math.floor((o.duration-e)/1e3)!=0;this.applyEffect(o,t,i,s,n),o.duration-=e,o.duration<=0&&a.splice(r,1)}}}applyEffect(e,t,i,s,a){switch(e.type){case xe.a.Type.Regen:if(!a)break;case xe.a.Type.Heal:this.game.dispatch(new P(t.id,e.power));break;case xe.a.Type.Poison:if(!a)break;case xe.a.Type.Damage:this.game.dispatch(new P(t.id,-e.power));break;case xe.a.Type.Speed:s.spd+=e.power;break;case xe.a.Type.Slowness:s.spd-=e.power;break;case xe.a.Type.Strength:s.str+=e.power;break;case xe.a.Type.Weakness:s.str-=e.power}}}class Se extends ee{constructor(){super(...arguments),this.elapsed=0}update(e){const t=Math.floor(this.elapsed/1e3)-Math.floor((this.elapsed+e)/1e3)!=0;this.elapsed+=e;for(const e of this.game.entities.withTrait(N)){const{position:i}=e.traits(N),s=e.traits(R);if(s&&s.z[0]>0)continue;const a=e.traits.get(U);if(!a)continue;const r=this.game.map.getTerrain(i[0],i[1]),o=this.game.library.terrains[r];o&&(o.speed&&(a.boost.spd+=o.speed),o.damage&&t&&this.game.dispatch(new P(e.id,-o.damage)))}}}class ke extends ee{constructor(e){super(e),this.updateHP=(({entityId:e,hpDiff:t})=>{const i=this.game.entities.get(e);if(!i)return;const s=i.traits.get(U);if(!s)return;s.base.hp=Object(se.a)(s.base.hp+t,0,s.base.maxHp+s.boost.maxHp);const a=i.traits.get(N).position;t>0?this.game.dispatch(F.float(a,20,16777215)):t<0&&this.game.dispatch(F.splash(a,20,16711680))}),this.game.messages$.ofType(P).subscribe(this.updateHP)}update(e){for(const e of this.game.entities.withTrait(U)){const t=e.traits.get(U),{vit:i,maxHp:s}=U.compute(t);t.base.hp=Object(se.a)(t.base.hp+be(i),0,s)}}}var ze=i(14),Te=i(82);function je(e){return Object(Te.bindCallback)(t=>new ze.Tween(e).to({alpha:0},250).easing(ze.Easing.Quadratic.Out).onComplete(t).start())()}function Me(e){return Object(Te.bindCallback)(t=>new ze.Tween(e).to({alpha:1},250).easing(ze.Easing.Quadratic.In).onComplete(t).start())()}function Ce(e,t,i,s){const a=Math.atan2(e,t);return Math.abs(a)>Math.PI*i?"left":Math.abs(a)<Math.PI*s?"right":a<0?"up":"down"}function Oe(e,t,i){switch(i){case"movement":return Ce(e,t,.6,.4);case"attack":return Ce(e,t,.75,.25)}}const Fe=1e-8;function Be(e){return e<0?-e:e}function Pe(e,t,i){return e<t?t:e>i?i:e}function Ae(e){return e<0?-1:1}class De{constructor(e=0,t=0){this.x=e,this.y=t}clone(){return new De(this.x,this.y)}normalize(){let e=this.x*this.x+this.y*this.y;if(e>0){const t=1/(e=Math.sqrt(e));this.x*=t,this.y*=t}else this.x=1,this.y=0;return e}}class Ie{constructor(e){this.collider=e,this.pos=new De,this.delta=new De,this.normal=new De,this.time=0}}class Le{constructor(){this.hit=null,this.pos=new De,this.time=1}}class _e{constructor(e,t){this.pos=e,this.half=t}intersectPoint(e){const t=e.x-this.pos.x,i=this.half.x-Be(t);if(i<=0)return null;const s=e.y-this.pos.y,a=this.half.y-Be(s);if(a<=0)return null;const r=new Ie(this);if(i<a){const s=Ae(t);r.delta.x=i*s,r.normal.x=s,r.pos.x=this.pos.x+this.half.x*s,r.pos.y=e.y}else{const t=Ae(s);r.delta.y=a*t,r.normal.y=t,r.pos.x=e.x,r.pos.y=this.pos.y+this.half.y*t}return r}intersectSegment(e,t,i=0,s=0){const a=1/t.x,r=1/t.y,o=Ae(a),n=Ae(r),h=(this.pos.x-o*(this.half.x+i)-e.x)*a,c=(this.pos.y-n*(this.half.y+s)-e.y)*r,l=(this.pos.x+o*(this.half.x+i)-e.x)*a,u=(this.pos.y+n*(this.half.y+s)-e.y)*r;if(h>u||c>l)return null;const p=h>c?h:c;if(p>=1||(l<u?l:u)<=0)return null;const d=new Ie(this);return d.time=Pe(p,0,1),h>c?(d.normal.x=-o,d.normal.y=0):(d.normal.x=0,d.normal.y=-n),d.delta.x=(1-d.time)*-t.x,d.delta.y=(1-d.time)*-t.y,d.pos.x=e.x+t.x*d.time,d.pos.y=e.y+t.y*d.time,d}intersectAABB(e){const t=e.pos.x-this.pos.x,i=e.half.x+this.half.x-Be(t);if(i<=0)return null;const s=e.pos.y-this.pos.y,a=e.half.y+this.half.y-Be(s);if(a<=0)return null;const r=new Ie(this);if(i<a){const s=Ae(t);r.delta.x=i*s,r.normal.x=s,r.pos.x=this.pos.x+this.half.x*s,r.pos.y=e.pos.y}else{const t=Ae(s);r.delta.y=a*t,r.normal.y=t,r.pos.x=e.pos.x,r.pos.y=this.pos.y+this.half.y*t}return r}sweepAABB(e,t){const i=new Le;if(0===t.x&&0===t.y)return i.pos.x=e.pos.x,i.pos.y=e.pos.y,i.hit=this.intersectAABB(e),i.hit?i.time=i.hit.time=0:i.time=1,i;if(i.hit=this.intersectSegment(e.pos,t,e.half.x,e.half.y),i.hit){i.time=Pe(i.hit.time-Fe,0,1),i.pos.x=e.pos.x+t.x*i.time,i.pos.y=e.pos.y+t.y*i.time;const s=t.clone();s.normalize(),i.hit.pos.x=Pe(i.hit.pos.x+s.x*e.half.x,this.pos.x-this.half.x,this.pos.x+this.half.x),i.hit.pos.y=Pe(i.hit.pos.y+s.y*e.half.y,this.pos.y-this.half.y,this.pos.y+this.half.y)}else i.pos.x=e.pos.x+t.x,i.pos.y=e.pos.y+t.y,i.time=1;return i}sweepInto(e,t){let i=new Le;i.time=1,i.pos.x=this.pos.x+t.x,i.pos.y=this.pos.y+t.y;for(let s=0,a=e.length;s<a;s++){const a=e[s].sweepAABB(this,t);a.time<i.time&&(i=a)}return i}}const $e=-10,Ee=.5;class We extends ee{constructor(){super(...arguments),this.vel=s.b.create()}update(e){const t=e/1e3;for(const i of this.game.entities.withTrait(N)){const{position:a,size:r,sprite:o,velocity:n,solid:h}=i.traits.get(N);if(s.b.scale(this.vel,n,e/1e3),h){const e=this.game.keyboard.isPressed("Alt")?[]:Array.from(this.getObstacles(a)),t=new _e(new De(a[0],a[1]),new De(r[0],r[1]));this.resolve(e,t),s.b.set(a,t.pos.x,t.pos.y)}else s.b.add(a,a,this.vel);this.updateDisplay(n,this.vel,o);const c=i.traits.get(R);c&&c.gravity?(c.z[0]+=c.z[1]*t+.5*$e*t*t,c.z[1]+=$e*t,c.z[0]<.1*Ee&&(s.b.set(c.z,0,0),s.b.set(n,0,0))):(0===this.vel[0]&&(n[0]=0),0===this.vel[1]&&(n[1]=0),s.b.scale(n,n,Math.pow(.5,t)),Math.abs(n[0])<Ee&&(n[0]=0),Math.abs(n[1])<Ee&&(n[1]=0))}}*getObstacles(e){const t=this.game.map,i=this.game.library,s=Math.floor(Math.min(e[0]+this.vel[0],e[0]))-1,a=Math.ceil(Math.max(e[0]+this.vel[0],e[0]))+1,r=Math.floor(Math.min(e[1]+this.vel[1],e[1]))-1,o=Math.ceil(Math.max(e[1]+this.vel[1],e[1]))+1;for(let e=r;e<=o;e++)for(let r=s;r<=a;r++){i.terrains[t.getTerrain(r,e)]||(yield new _e(new De(r+.5,e+.5),new De(.5,.5)));const s=i.objects[t.getObject(r,e)];s&&s.obstacle&&(yield new _e(new De(r+.5,e+.5),s.terrain?new De(.5,.5):new De(.4,.4)))}}resolve(e,t){const i=e=>{if(e.hit&&e.hit.time>0){const i=e.hit.collider;0!==e.hit.normal.x&&(e.pos.x=i.pos.x+(i.half.x+t.half.x+Fe)*e.hit.normal.x),0!==e.hit.normal.y&&(e.pos.y=i.pos.y+(i.half.y+t.half.y+Fe)*e.hit.normal.y),s.b.mul(this.vel,this.vel,[1-Math.abs(e.hit.normal.x),1-Math.abs(e.hit.normal.y)])}t.pos=e.pos},a=t.sweepInto(e,new De(this.vel[0],0)),r=t.sweepInto(e,new De(0,this.vel[1]));i(a.time>r.time?a:r);const o=a.time>r.time?new De(0,this.vel[1]):new De(this.vel[0],0);i(t.sweepInto(e,o))}updateDisplay(e,t,i){i.animName||(i.animName="down"),i.still=0===t[0]&&0===t[1],0===e[0]&&0===e[1]||(i.animName=Oe(e[1],e[0],"movement"))}}const Ve=200;class Ne extends ee{constructor(e){super(e),this.pressing=!1,this.elapsed=0,e.view.camera.on("pointerdown",e=>{this.pressing=0!=(2&e.data.buttons)})}update(e){this.elapsed<=0?this.pressing&&(this.useItem(),this.elapsed=Ve):this.elapsed-=e,this.pressing=!1}useItem(){const{slots:e}=this.game.player.traits(H),{hotbarSelection:t}=this.game.player.traits(G),i=e[t];if(!i.item)return;const s=i.item;if(s.effects&&s.effects.length>0){const e=Object(ae.a)(s.effects);this.game.dispatch(new B(this.game.player.id,e)),i.item=null}}}var qe=i(10);const He=2,Re=500;class Ue extends ee{constructor(e){super(e),this.attackAnimName="",this.pressing=!1,this.cursorPos=new n.Point,this.targetTile=s.b.fromValues(-1,-1),this.targetTileCenter=s.b.create(),this.dir=s.b.create(),this.objHp=0,this.cooldown=0,this.displayCenter=s.b.create(),({position:this.position,sprite:this.sprite}=e.player.traits(N)),this.interaction=this.game.app.renderer.plugins.interaction;const t=e=>{this.cursorPos.copy(e.data.global),this.pressing=0!=(1&e.data.buttons)};e.view.camera.on("pointermove",t),e.view.camera.on("pointerdown",t),e.view.camera.on("pointerup",t),e.view.camera.on("pointerupoutside",t)}isTileObject(e){return e&&!!e.coords}update(e){const t=this.interaction.hitTest(this.cursorPos,this.game.view.camera);if(this.isTileObject(t)&&s.b.equals(this.targetTile,t.coords)&&this.pressing&&!(s.b.dist(this.position,this.targetTileCenter)>=He)||(this.targetTile[0]>=0&&this.endAttack(this.targetTile[0],this.targetTile[1],this.targetSprite),s.b.set(this.targetTile,-1,-1),this.targetSprite=void 0),this.pressing&&this.isTileObject(t)&&this.targetTile[0]<0&&(s.b.add(this.targetTileCenter,t.coords,[.5,.5]),s.b.dist(this.position,this.targetTileCenter)<He&&(this.targetTile[0]<0&&this.beginAttack(t.coords[0],t.coords[1],t),s.b.copy(this.targetTile,t.coords),this.targetSprite=t)),this.targetTile[0]>=0){s.b.sub(this.dir,this.targetTileCenter,this.position);const t=Oe(this.dir[1],this.dir[0],"attack");this.attackAnimName=`attack-${t}`,this.sprite.animName=t,this.sprite.playActionAnim(this.attackAnimName),this.attacking(e,this.targetSprite)}}beginAttack(e,t,i){this.obj=this.game.library.objects[this.game.map.getObject(e,t)],this.obj.drops&&(this.objHp=this.obj.drops.hp),s.b.add(this.displayCenter,this.targetTileCenter,i.jitter),this.cooldown=0}endAttack(e,t,i){}attacking(e,t){if(this.cooldown-=e,this.cooldown<0&&(this.cooldown=Re,this.game.dispatch(new O.Shake(O.Type.Shake,t)),this.game.dispatch(F.splash(this.displayCenter,20,parseInt(this.obj.color,16),0)),this.objHp--),this.obj.drops&&this.objHp<0){for(const e of function(e){const t=Math.round(Object(qe.b)(e.numDrops)),i=[];for(let s=0;s<t;s++){let t=Math.random();for(const{prob:s,item:a}of e.items)if((t-=s)<=0){i.push(Object(qe.a)(a));break}}return i}(this.obj.drops.table)){const t=X.make(this.game,e,this.displayCenter);this.game.entities.add(t)}const e=this.obj.drops.replaceWith,t=e?this.game.library.objects.find(t=>t&&t.name===e).id:0;this.game.map.setObject(this.targetTile[0],this.targetTile[1],t)}}}class Ge extends ee{constructor(e){super(e),this.runWhenPaused=!0,this.swapInventory=(e=>{const{slotA:t,slotB:i}=e;if(!this.acceptable(t.item,i.accepts)||!this.acceptable(i.item,t.accepts))return;const s=i.item;i.item=t.item,t.item=s,this.game.dispatch(new C(t)),this.game.dispatch(new C(i))}),e.messages$.ofType(M).subscribe(this.swapInventory),this.playerPos=e.player.traits(N).position,this.playerInv=e.player.traits(H).slots}update(e){for(const e of this.game.entities.ofType(X)){const t=e.traits(N),i=s.b.dist(t.position,this.playerPos);if(!(e.age<350||i>3.5))if(i>.5){s.b.sub(t.velocity,this.playerPos,t.position);const e=s.b.len(t.velocity);s.b.normalize(t.velocity,t.velocity),s.b.scale(t.velocity,t.velocity,5/(e*e))}else this.pickUp(e.traits(H).slots[0].item)&&e.delete()}}acceptable(e,t){return!e||!t||("string"==typeof t?!!e.id.match(t):t.indexOf(e.type)>=0)}pickUp(e){for(const t of this.playerInv)if(!t.item&&this.acceptable(e,t.accepts))return t.item=e,this.game.dispatch(new C(t)),!0;return!1}}class Ke extends ee{constructor(e){super(e),this.runWhenPaused=!0,this.cameraOffset=s.b.create(),this.position=e.player.traits.get(N).position}update(e){s.b.scaleAndAdd(this.cameraOffset,[0,-Ut],this.position,Ut),s.b.floor(this.game.view.camera.offset,this.cameraOffset)}}const Ye=16;class Je extends ee{constructor(e){super(e),this.runWhenPaused=!0,this.sprites=new Map,this.container=new n.Container,this.renderTex=n.RenderTexture.create(1,1,n.SCALE_MODES.NEAREST),this.view=Object.assign(new n.Sprite(this.renderTex),{layer:V.Layer.Terrain,sortOffset:s.b.fromValues(0,0)}),this.elapsed=0,this.game.view.camera.add(this.view)}update(e){this.updateVisibility(),this.updateSprites(e),this.render()}updateVisibility(){const{offset:[e,t],viewWidth:i,viewHeight:a}=this.game.view.camera,r=Math.ceil(Math.sqrt(i*i+a*a)/2+Ut),o=s.b.fromValues(e,t),n=Ut/Ye;function h(e,t){const i=e*n-o[0],s=t*n-o[1];return i*i+s*s<=r*r}const c=[];for(const[e,t]of this.sprites){const{x:i,y:s}=t.transform.position;h(i,s)||(c.push(t),this.sprites.delete(e))}const l=this.game.map,u=Math.max(0,Math.floor((e-r)/Ut)),p=Math.min(l.width-1,Math.ceil((e+r)/Ut)),d=Math.max(0,Math.floor((t-r)/Ut)),m=Math.min(l.height-1,Math.ceil((t+r)/Ut)),y=this.game.library.terrains;for(let e=u;e<=p;e++)for(let t=d;t<=m;t++){const i=y[l.getTerrain(e,t)];if(!i)continue;const s=e*Ye,a=t*Ye;if(!h(s,a))continue;const r=`${e}:${t}`;if(this.sprites.has(r))continue;const o=c.pop()||new x;o.setTexture(i.texture,e+t*l.width),o.position.set(s,a),o.parent||this.container.addChild(o),this.sprites.set(r,o)}for(const e of c)this.container.removeChild(e)}updateSprites(e){this.elapsed+=e;for(const e of this.container.children)e.update(this.elapsed)}render(){const{offset:[e,t],viewWidth:i,viewHeight:s}=this.game.view.camera,a=Math.ceil(Math.sqrt(i*i+s*s));let r=Number.MAX_VALUE,o=Number.MAX_VALUE;for(const e of this.sprites.values()){const{x:t,y:i}=e.transform.position;r=Math.min(r,t),o=Math.min(o,i)}this.container.setTransform(-r,-o);const n=Math.ceil(a/Ut)*Ye*2,h=1<<32-Math.clz32(n-1);this.renderTex.resize(h,h),this.game.app.renderer.render(this.container,this.renderTex);const c=Ut/Ye;this.view.setTransform(r*c-e+i/2,o*c-t+s/2,c,c)}}var Xe=i(12),Qe=i(32);const Ze=32,et=5;class tt extends x{constructor(e){super(),this.game=e,this.runWhenPaused=!0,this.jitter=s.b.fromValues(0,0),this.sortOffset=s.b.fromValues(0,0),this.layer=V.Layer.Objects,this.coords=s.b.fromValues(-1,-1),this.outline=!0,this.anchor.set(.5,1)}setTile(e,t,i){s.b.set(this.coords,e,t),this.layer=i.terrain?V.Layer.Terrain:V.Layer.Objects,this.setTexture(i.texture,e+t*this.game.map.width);const a=i.scale||1,r=Ze/a,o=Ze/a;this.hitArea=new n.Rectangle(-r/2,-o,r,o),this.interactive=i.interactive||!1;const h=a*Ut/Ze;this.scale.set(h,h)}}function it(e,t){return`${e}:${t}`}class st extends ee{constructor(e){super(e),this.sprites=new Map,this.elapsed=0,this.spriteCoords=s.b.create();const t=Object(Qe.create)(this.game.map.props.seed);this.jitterNoiseX=new Xe.a(t,1,1),this.jitterNoiseY=new Xe.a(t,1,1),this.game.map.changes$.subscribe(({x:e,y:t})=>{const i=it(e,t),s=this.sprites.get(i);s&&(this.game.view.camera.removeChild(s),this.sprites.delete(i))})}update(e){this.updateVisibility(),this.updateSprites(e),this.updateTransforms()}updateVisibility(){const{offset:[e,t],viewWidth:i,viewHeight:s}=this.game.view.camera,a=et*Ut,r=i/2+a,o=s/2+a;function n(i,s){return i>=e-r&&i<=e+r&&s>=t-o&&s<=t+o}const h=[];let c=!1;for(const[e,t]of this.sprites)n(t.coords[0]*Ut,t.coords[1]*Ut)||(h.push(t),this.sprites.delete(e),c=!0);const l=this.game.map,u=Math.max(0,Math.floor((e-r)/Ut)),p=Math.min(l.width-1,Math.ceil((e+r)/Ut)),d=Math.max(0,Math.floor((t-o)/Ut)),m=Math.min(l.height-1,Math.ceil((t+o)/Ut)),y=this.game.library.objects;for(let e=u;e<=p;e++)for(let t=d;t<=m;t++){const i=y[l.getObject(e,t)];if(!i)continue;if(!n(e*Ut,t*Ut))continue;const s=it(e,t);if(this.sprites.has(s))continue;const a=h.pop()||new tt(this.game);a.setTile(e,t,i),i.jitter&&(a.jitter[0]=Math.round((2*this.jitterNoiseX.noise2D(e,t)-1)*(1/3)),a.jitter[1]=Math.round((2*this.jitterNoiseY.noise2D(e,t)-1)*(1/3))),a.parent||this.game.view.camera.add(a),this.sprites.set(s,a),c=!0}for(const e of h)this.game.view.camera.removeChild(e);return c}updateSprites(e){this.elapsed+=e;for(const e of this.sprites.values())e.update(this.elapsed)}updateTransforms(){const e=this.game.map,t=this.game.library.objects;for(const i of this.sprites.values()){const a=t[e.getObject(i.coords[0],i.coords[1])];s.b.add(this.spriteCoords,i.coords,i.jitter),this.spriteCoords[0]+=.5,this.spriteCoords[1]+=a.terrain?1:.5,this.game.view.camera.toCameraPoint(this.spriteCoords,i.position)}}}const at=5;class rt extends ee{constructor(){super(...arguments),this.runWhenPaused=!0,this.visible=new Set,this.halfSize=s.b.create(),this.tr=s.b.create(),this.elapsed=0}update(e){this.updateVisibility(),this.updateSprites(e),this.updateTransforms()}updateVisibility(){const{offset:e,viewWidth:t,viewHeight:i}=this.game.view.camera,a=at*Ut;s.b.scaleAndAdd(this.halfSize,[a,a],[t,i],2);const r=t=>(s.b.scaleAndAdd(this.tr,this.halfSize,t,-Ut),s.b.add(this.tr,this.tr,e),this.tr[0]>0&&this.tr[1]>0);for(const e of this.visible){const{position:t,sprite:i}=e.traits.get(N);e.game&&r(t)||(this.visible.delete(e),this.game.view.camera.removeChild(i))}for(const e of this.game.entities.withTrait(N)){const{position:t,sprite:i}=e.traits.get(N);r(t)&&!this.visible.has(e)&&(this.visible.add(e),this.game.view.camera.add(Object.assign(i,{layer:V.Layer.Objects})))}}updateSprites(e){this.elapsed+=e;for(const e of this.visible)e.traits.get(N).sprite.update(this.elapsed)}updateTransforms(){for(const e of this.visible){const{position:t,sprite:i,scale:a}=e.traits.get(N),r=e.traits.get(R);i.anchor.set(.5,1),i.scale.set(a[0],a[1]);const o=this.game.library.terrains[this.game.map.getTerrain(t[0],t[1])],n=o&&o.liquid;i.clip=n?[0,1/6]:void 0;const h=r?r.z[0]:0;this.game.view.camera.toCameraPoint(t,i.position,h),s.b.set(i.sortOffset,0,h)}}}class ot extends ee{constructor(e){super(e),this.animTargets=new Set,this.tween=new ze.Group,this.elapsed=0,this.shake=(({target:e})=>{if(e){if(this.animTargets.has(e))return;this.animTargets.add(e),e.renderTranslation=e.renderTranslation||[0,0];const t=[4,-4,3,-3,2,-2,1,-1,0];new ze.Tween(e.renderTranslation,this.tween).to({0:t.slice(0,4)},300).chain(new ze.Tween(e.renderTranslation,this.tween).to({0:t.slice(4)},300)).onComplete(()=>this.animTargets.delete(e)).start(this.elapsed)}}),this.game.messages$.ofType(O.Shake).subscribe(this.shake)}update(e){this.elapsed+=e,this.tween.update(this.elapsed)}}const nt=1e3,ht=16,ct=-10,lt=.5;class ut extends n.Sprite{constructor(e,t,i,a){let r;super(n.Texture.fromFrame("sprites/ui/particle")),this.life=nt*(.5*Math.random()+.75),e===F.Type.Splash?(this.coords=s.b.random(s.b.create(),.25),this.velocity=s.b.random(s.b.create(),.5),this.z=s.b.fromValues(i+.25+.5*Math.random(),Math.random()),this.gravity=!0,r=Object(se.a)(ht*(Math.random()+.5),10,22)):(this.coords=s.b.fromValues(Math.random()-.5,0),this.velocity=s.b.fromValues(0,0),this.z=s.b.fromValues(i+.25+Math.random(),.5*Math.random()+.25),this.gravity=!1,r=Object(se.a)(ht*Math.random(),10,16),this.alpha=.7),s.b.add(this.coords,this.coords,t),r=r+1&-2,this.scale.set(r/ht,r/ht);const o=Math.floor(32*(2*Math.random()-1));let h=a>>16&255,c=a>>8&255,l=255&a;h=Object(se.a)(h+o,0,255),c=Object(se.a)(c+o,0,255),l=Object(se.a)(l+o,0,255),this.tint=(h<<16)+(c<<8)+l}}class pt extends ee{constructor(e){super(e),this.particles=[],this.overlay=Object.assign(new n.particles.ParticleContainer,{layout:()=>{}}),this.showParticles=(({particleType:e,coords:t,numParticles:i,color:s,z:a})=>{for(let r=0;r<i;r++){const i=new ut(e,t,a,s);this.overlay.addChild(i),this.particles.push(i)}}),e.view.add(this.overlay),e.messages$.ofType(F).subscribe(this.showParticles)}update(e){const t=e/1e3;for(let i=this.particles.length-1;i>=0;i--){const a=this.particles[i];if(a.life-=e,a.life<=0){this.overlay.removeChild(a),this.particles.splice(i,1);continue}s.b.scaleAndAdd(a.coords,a.coords,a.velocity,t);const r=a.gravity?ct:0;a.z[0]+=a.z[1]*t+.5*r*t*t,a.z[1]+=r*t,a.z[0]<=0&&(a.z[0]=0,a.z[1]=-a.z[1]*lt,s.b.scale(a.velocity,a.velocity,lt)),this.game.view.camera.toCameraPoint(a.coords,a.position,a.z[0])}}}i(202);var dt=i(88),mt=i(336);const yt='\n<div class="debug-console">\n  <div class="debug-log-box">\n    <div class="debug-log-scroll">\n      <div class="debug-log"></div>\n    </div>\n  </div>\n  <div>\n    <input class="debug-input">\n  </div>\n</div>\n';const ft=.8,gt=.25;const bt=[[0,"1"],[1,"2"],[2,"3"],[3,"4"],[4,"5"],[5,"6"],[6,"7"],[7,"8"]];class wt extends z{constructor(e){super(e,"",{default:{align:"left"},s:{fontSize:12},name:{fontWeight:"bold",valign:"middle"},desc:{fontStyle:"italic"},time:{fill:"#d0d0d0"}}),this.icon=new n.Sprite,this.icon.scale.set(2,2),this.icon.position.set(20,20),this.alpha=.75,this.addChild(this.icon)}setEffect(e){this.effect=e,this.icon.texture=n.Texture.fromFrame(`sprites/effects/${e.type}`),this.update()}update(){if(!this.effect)return;const e=[`<s>     </s><name>${this.effect.name}</name>`,`<desc>${this.effect.description}</desc>`,`<time>${Math.floor(this.effect.duration/1e3)}s remains</time>`];this.text=e.join("\n")}}const xt=256,vt=32;const St=[class{constructor(e){this.game=e,this.display=null,this.root=(new DOMParser).parseFromString(yt,"text/html").querySelector(".debug-console"),this.input=this.root.querySelector(".debug-input"),this.log=this.root.querySelector(".debug-log"),this.lastInput="",this.onKeyDown=(e=>{const t=this.root.classList.contains("active");t&&"Escape"===e.key?this.toggleInput():t&&"ArrowUp"===e.key&&e.target===this.input?(this.input.value=this.lastInput,this.input.setSelectionRange(this.input.value.length,this.input.value.length),e.preventDefault()):"t"===e.key.toLowerCase()||"/"===e.key?(t?this.input.focus():document.activeElement===this.game.app.view&&this.toggleInput(),"/"===e.key&&e.target!==this.input&&(this.input.value="/")):"Enter"===e.key&&e.target===this.input&&(this.processInput(this.input.value),this.input.value=""),e.target!==this.input&&e.preventDefault()}),document.body.appendChild(this.root),this.root.addEventListener("keydown",this.onKeyDown),this.game.app.view.addEventListener("keydown",this.onKeyDown)}update(){}dispose(){this.root.remove(),document.body.removeEventListener("keydown",this.onKeyDown)}toggleInput(){this.root.classList.toggle("active")?this.input.focus():this.game.app.view.focus()}addLog(e){const t=document.createElement("li");t.classList.add("debug-log-entry"),t.innerText=e,this.log.appendChild(t),t.scrollIntoView()}processInput(e){if(!e)return;if(this.lastInput=e,!e.startsWith("/"))return void this.addLog(e);const[t,...i]=Object(mt.a)(e.split(" ").map(e=>e.trim()));switch(t){case"/clear":for(;this.log.lastChild;)this.log.removeChild(this.log.lastChild);break;case"/clear-inv":{const{slots:e}=this.game.player.traits(H);for(const t of e)t.item=null,this.game.dispatch(new C(t))}break;case"/drops":for(const e of this.game.library.objects.filter(e=>e&&e.drops))for(const{item:t}of e.drops.table.items){const e=X.make(this.game,Object(qe.a)(t));this.game.entities.add(e)}break;case"/give":for(const e of this.game.library.objects.filter(e=>e&&e.drops))for(const{item:t}of e.drops.table.items){const e=Object(qe.a)(t);if(i.indexOf(e.id)<0)continue;const s=X.make(this.game,e);this.game.entities.add(s)}break;case"/dupe":{const{hotbarSelection:e}=this.game.player.traits(G),{slots:t}=this.game.player.traits(H),i=t[e].item;if(i){const e=X.make(this.game,i);this.game.entities.add(e)}}break;case"/solution":{const e=i[0];if(!this.game.library.elements[e])break;const t=Number(i[1])||100,s=X.make(this.game,Object(ce.b)([{element:e,amount:t}],this.game.library.elements));this.game.entities.add(s)}break;case"/speed":{const e=Number(i[0])||0;this.game.player.traits(U).boost.spd=e}break;case"/elements":{const e=e=>Object(dt.a)(Object(qe.b)(e).toFixed(2),5," ");this.addLog("|   name   |    fission   |    fusion    | color |");for(const t of Object.keys(this.game.library.elements)){const i=this.game.library.elements[t];this.addLog(` ${Object(dt.a)(t,10," ")} (${e(i.fissionThreshold)}, ${e(i.fissionRate)}) (${e(i.fusionThreshold)}, ${e(i.fusionRate)}) ${Object(dt.a)(i.color,6,"0")}`)}}break;default:this.addLog("unknown command: "+t)}}},class extends n.Container{constructor(e){super(),this.game=e,this.display=this,this.bg=new n.Sprite(n.Texture.WHITE),this.selection=new n.Sprite(n.Texture.fromFrame("sprites/ui/inv-selection")),this.wheelDebounce=0,this.wheelSelection=(e=>{if(this.elapsed-this.wheelDebounce<20)return;const t=e.deltaX+e.deltaY;if(Math.abs(t)<32)return;const i=Math.sign(t),s=this.slots.length;this.player.hotbarSelection=(this.player.hotbarSelection+i+s)%s,this.wheelDebounce=this.elapsed}),this.elapsed=0,this.slots=e.player.traits(H).slots.slice(0,8),this.player=e.player.traits(G),this.bg.tint=8421504;const t=new n.Container;t.addChild(this.bg),this.slotViews=this.slots.map(t=>new A(e,t));for(const e of this.slotViews)e.enabled=!1,e.showTooltip=!1,e.alwaysInteractive=!0,t.addChild(e),e.on("pointerdown",()=>this.player.hotbarSelection=this.slots.indexOf(e.slot));this.addChild(t),this.addChild(this.selection),t.alpha=.65,this.interactive=!0,this.on("pointerover",()=>t.alpha=1),this.on("pointerout",()=>t.alpha=.65),e.app.view.addEventListener("wheel",this.wheelSelection)}dispose(){this.game.app.view.removeEventListener("wheel",this.wheelSelection)}update(e){for(const[e,t]of bt)this.game.keyboard.isDown(t)&&(this.player.hotbarSelection=e);this.elapsed+=e}layout(e,t){const i=4+(A.Size+4)*this.slotViews.length,s=A.Size+7;this.position.set((e-i)/2,t-s);let a=4;for(const e of this.slotViews)e.position.set(a,4),e.layout(),a+=A.Size+4;this.selection.position.set((A.Size+4)*this.player.hotbarSelection,0),this.bg.position.set(0,0),this.bg.width=i,this.bg.height=s}},class extends n.Container{constructor(e){super(),this.game=e,this.display=this,this.hpBarIcon=new n.Sprite(n.Texture.fromFrame("sprites/ui/status-hp")),this.hpBarBg=new n.Sprite(n.Texture.WHITE),this.hpBarFill=new n.Sprite(n.Texture.WHITE),this.hpBarText=new u,this.effectIcons=[],this.stats=U.compute(e.player.traits(U)),this.effects=e.player.traits(U).effects,this.effectToolTip=new wt(e.app),this.hpBarBg.tint=8421504,this.hpBarBg.width=xt,this.hpBarBg.height=vt;const t=new n.Container;this.addChild(t),t.addChild(this.hpBarBg),t.addChild(this.hpBarFill),t.addChild(this.hpBarText),t.addChild(this.hpBarIcon),t.alpha=.65,this.hpBarText.visible=!1,t.interactive=!0,t.on("pointerover",()=>{t.alpha=1,this.hpBarText.visible=!0}),t.on("pointerout",()=>{t.alpha=.65,this.hpBarText.visible=!1})}update(e){const{hp:t,maxHp:i}=this.stats,s=t/i;this.hpBarText.text=`${Math.ceil(t)}/${i}`,this.hpBarFill.width=xt*s,this.hpBarFill.height=vt,this.hpBarFill.tint=s<.3?10485760:s<.6?10526720:40960;const a=this.effects.filter(({duration:e})=>e>0);for(;this.effectIcons.length<a.length;){const e=Object.assign(new n.Sprite,{effectIndex:0});e.interactive=!0,e.scale.set(2,2),this.addChild(e),this.game.app.toolTip.add(e,()=>(this.effectToolTip.setEffect(this.effects[e.effectIndex]),this.effectToolTip)),this.effectIcons.push(e)}for(;this.effectIcons.length>a.length;)this.removeChild(this.effectIcons.splice(this.effectIcons.length-1,1)[0]);for(let e=0;e<a.length;e++)this.effectIcons[e].texture=n.Texture.fromFrame(`sprites/effects/${a[e].type}`),this.effectIcons[e].effectIndex=this.effects.indexOf(a[e]);this.effectToolTip.update()}layout(e,t){const i=e-xt-16;this.hpBarBg.position.set(i,288),this.hpBarFill.position.set(i,288),this.hpBarText.position.set(i,288),this.hpBarText.layout(xt,vt),this.hpBarIcon.position.set(i-this.hpBarIcon.width-4,288);const s=i,a=288+vt+16;for(let e=0;e<this.effectIcons.length;e++)this.effectIcons[e].position.set(s+40*e,a)}},class extends p{constructor(e){super(e.app),this.game=e,this.display=this,this.mapSprite=new n.Sprite,this.isFullscreen=!1,this.isMouseOver=!1,this.mapDirty=!1,this.offset=this.game.player.traits.get(N).position,this.content.addChild(this.mapSprite),this.mapSprite.anchor.set(0,0),this.alpha=ft,this.content.interactive=!0,this.content.on("pointerover",()=>this.isMouseOver=!0),this.content.on("pointerout",()=>this.isMouseOver=!1),this.content.on("pointerdown",()=>this.isFullscreen=!0),this.content.on("pointerup",()=>this.isFullscreen=!1),this.content.on("pointerupoutside",()=>this.isFullscreen=!1);const t=this.game.map;this.canvas=document.createElement("canvas"),this.canvas.width=t.width,this.canvas.height=t.height,this.mapData=new Uint8ClampedArray(t.width*t.height*4),this.mapSprite.texture=n.Texture.fromCanvas(this.canvas),this.game.map.changes$.subscribe(({x:e,y:t})=>this.renderTile(e,t));for(let e=0;e<t.height;e++)for(let i=0;i<t.width;i++)this.renderTile(i,e);this.update()}renderTile(e,t){const i=4*(e+t*this.game.map.width);function s(e){if(!e)return null;const t=parseInt(e,16);return[t>>>16&255,t>>>8&255,t>>>0&255]}const a=this.game.library.terrains[this.game.map.getTerrain(e,t)],r=a?s(a.color):[0,0,0],o=this.game.library.objects[this.game.map.getObject(e,t)],n=o?s(o.color):null;let h=r;null!==n&&(h=[r[0]*(1-gt)+n[0]*gt,r[1]*(1-gt)+n[1]*gt,r[2]*(1-gt)+n[2]*gt]),this.mapData[i]=h[0],this.mapData[i+1]=h[1],this.mapData[i+2]=h[2],this.mapData[i+3]=255,this.mapDirty=!0}update(){if(!this.mapDirty)return;const e=this.canvas.getContext("2d"),t=e.getImageData(0,0,this.canvas.width,this.canvas.height);t.data.set(this.mapData),e.putImageData(t,0,0),this.mapSprite.texture.update(),this.mapDirty=!1}layout(e,t){this.isFullscreen?(this.x=16,this.y=16,super.layout(e-32,t-32),this.mapSprite.scale.set(1,1),this.alpha=1,this.mapSprite.position.set(-this.offset[0]+(e-32)/2,-this.offset[1]+(t-32)/2)):(this.x=e-16-256,this.y=16,super.layout(256,256),this.mapSprite.scale.set(4,4),this.alpha=this.isMouseOver?1:ft,this.mapSprite.position.set(4*-this.offset[0]+128,4*-this.offset[1]+128))}}];class kt extends ee{constructor(e){super(e),this.runWhenPaused=!0,this.elements=[];for(const t of St){const i=new t(e);i.display&&e.view.add(i.display),this.elements.push(i)}}update(e){for(const t of this.elements)t.update(e)}dispose(){for(const e of this.elements)e.dispose&&e.dispose()}}class zt{constructor(e){this.game=e,this.tasks=[]}init(){this.add(we),this.add(ve),this.add(Se),this.add(ke),this.add(We),this.add(Ne),this.add(Ue),this.add(Ge),this.add(Ke),this.add(Je),this.add(st),this.add(rt),this.add(ot),this.add(pt),this.add(kt)}dispose(){for(const e of this.tasks)e.dispose();this.tasks.length=0}add(e){const t=new e(this.game);this.tasks.push(t)}update(e,t){for(let i=0;i<this.tasks.length;i++)this.tasks[i].isActive?t&&!this.tasks[i].runWhenPaused||this.tasks[i].update(e):(this.tasks[i].dispose(),this.tasks.splice(i,1),i--)}}var Tt=i(27);class jt{constructor(e,t,i){this.width=e,this.height=t,this.props=i,this.changes$=new Tt.Subject,this.data=new Uint16Array(e*t*2)}serialize(){const e=new Uint16Array(this.width*this.height),t=new Uint16Array(this.width*this.height);for(let i=0;i<e.length;i++)e[i]=this.data[2*i],t[i]=this.data[2*i+1];return{width:this.width,height:this.height,props:this.props,terrains:e,objects:t}}static deserialize(e){const t=new jt(e.width,e.height,e.props),i=e.width*e.height;for(let s=0;s<i;s++)t.data[2*s]=e.terrains[s],t.data[2*s+1]=e.objects[s];return t}toIndex(e,t){return e=Math.floor(e),t=Math.floor(t),e<0||e>=this.width?-1:t<0||t>=this.height?-1:e+this.width*t}getTerrain(e,t){const i=this.toIndex(e,t);return this.data[2*i]||0}getObject(e,t){const i=this.toIndex(e,t);return this.data[2*i+1]||0}setTerrain(e,t,i){const s=this.toIndex(e,t);s<0||s>=this.data.length||(this.data[2*s]=i,this.changes$.next({x:e,y:t}))}setObject(e,t,i){const s=this.toIndex(e,t);s<0||s>=this.data.length||(this.data[2*s+1]=i,this.changes$.next({x:e,y:t}))}}var Mt=i(165);class Ct{constructor(e,t){this.app=e,this.data=t,this.view=new Z,this.keyboard=this.app.keyboard,this.tasks=new zt(this),this.entities=new Q(this),this._message$=new Tt.Subject,this.messages$=Object.assign(this._message$,{ofType:e=>this.messages$.pipe(Object(Mt.filter)(t=>t instanceof e))}),this.library=t.library}init(){this.map=jt.deserialize(this.data.map),this.entities.init(),this.tasks.init()}save(){this.data.map=this.map.serialize(),this.entities.save()}update(e,t=!1){t||this.entities.update(e),this.tasks.update(e,t)}layout(){const{width:e,height:t}=this.app.screen;this.view.layout(e,t)}dispose(){this.tasks.dispose(),this.entities.dispose()}get player(){return this.entities.get(1)}dispatch(e){this._message$.next(e)}}var Ot=function(e,t,i,s){return new(i||(i=Promise))(function(a,r){function o(e){try{h(s.next(e))}catch(e){r(e)}}function n(e){try{h(s.throw(e))}catch(e){r(e)}}function h(e){e.done?a(e.value):new i(function(t){t(e.value)}).then(o,n)}h((s=s.apply(e,t||[])).next())})};class Ft extends c{get name(){return"main"}constructor(e,t){super(e),this.game=new Ct(e,t),this.root.addChild(this.game.view)}enter(){return Ot(this,void 0,void 0,function*(){this.game.init(),this.root.alpha=0,yield Me(this.root).toPromise()})}update(e){this.game.update(e)}layout(){this.game.layout()}leave(){return Ot(this,void 0,void 0,function*(){this.game.dispose(),this.root.alpha=1,yield je(this.root).toPromise()})}}var Bt=function(e,t,i,s){return new(i||(i=Promise))(function(a,r){function o(e){try{h(s.next(e))}catch(e){r(e)}}function n(e){try{h(s.throw(e))}catch(e){r(e)}}function h(e){e.done?a(e.value):new i(function(t){t(e.value)}).then(o,n)}h((s=s.apply(e,t||[])).next())})};class Pt extends c{constructor(e){super(e),this.logo=new n.Sprite(n.Texture.fromFrame("sprites/ui/title")),this.newButton=new d("new game"),this.loadBar=new n.Sprite(n.Texture.WHITE),this.loadMessage=new u(""),this.saveLabel=new u("saves"),this.saveButtons=[],this.root.addChild(this.logo),this.root.addChild(this.newButton),this.root.addChild(this.loadBar),this.root.addChild(this.loadMessage),this.newButton.on(d.Clicked,this.newGame.bind(this)),this.loadBar.tint=4210752,this.loadBar.width=0}get name(){return"title"}enter(){return Bt(this,void 0,void 0,function*(){this.updateSaves(),this.root.alpha=0,yield Me(this.root).toPromise()})}pause(){return Bt(this,void 0,void 0,function*(){this.root.alpha=1,yield je(this.root).toPromise()})}resume(){return Bt(this,void 0,void 0,function*(){this.updateSaves(),this.newButton.isEnabled=!0,this.loadMessage.text="",this.loadBar.width=0,this.root.alpha=0,yield Me(this.root).toPromise()})}updateSaves(){for(const e of this.saveButtons)this.root.removeChild(e);this.saveButtons=[];for(const e of Object.keys(localStorage).sort()){const t=new d(e);t.on(d.Clicked,()=>this.startGame(I.a.import(localStorage[e]))),this.root.addChild(t),this.saveButtons.push(t)}this.saveButtons.length>0&&this.root.addChild(this.saveLabel)}layout(){const e=this.logo.height+50+75+20+50,{width:t,height:i}=this.app.screen;this.logo.position.set((t-this.logo.width)/2,(i-e)/2),this.newButton.position.set((t-160)/2,this.logo.y+this.logo.height+50),this.newButton.layout(160,64),this.loadMessage.position.set(0,this.newButton.y+64+20),this.loadMessage.layout(t,50),this.loadBar.position.set(t/4,this.newButton.y+64+20),this.loadBar.height=50,this.saveLabel.position.set(t-256,64),this.saveLabel.layout(192,48);let s=this.saveLabel.y+48+16;for(const e of this.saveButtons)e.position.set(t-256,s),e.layout(192,48),s+=64}newGame(){return Bt(this,void 0,void 0,function*(){this.newButton.isEnabled=!1,this.saveButtons.forEach(e=>e.isEnabled=!1);const e=yield new E(Ht,Ht,"1").generate((e,t)=>{e&&(this.loadMessage.text=e),this.loadBar.width=this.app.screen.width/2*t});yield this.startGame(e)})}startGame(e){return Bt(this,void 0,void 0,function*(){this.newButton.isEnabled=!1,this.saveButtons.forEach(e=>e.isEnabled=!1),yield this.app.pushState(new Ft(this.app,e))})}}var At=i(55),Dt=function(e,t,i,s){return new(i||(i=Promise))(function(a,r){function o(e){try{h(s.next(e))}catch(e){r(e)}}function n(e){try{h(s.throw(e))}catch(e){r(e)}}function h(e){e.done?a(e.value):new i(function(t){t(e.value)}).then(o,n)}h((s=s.apply(e,t||[])).next())})};var It=function(e,t,i,s){return new(i||(i=Promise))(function(a,r){function o(e){try{h(s.next(e))}catch(e){r(e)}}function n(e){try{h(s.throw(e))}catch(e){r(e)}}function h(e){e.done?a(e.value):new i(function(t){t(e.value)}).then(o,n)}h((s=s.apply(e,t||[])).next())})};class Lt extends c{constructor(e){super(e.game.app),this.overlay=e,this.bg=new n.Sprite(n.Texture.WHITE),this.bg.tint=0,this.bg.alpha=.5,this.root.addChild(this.bg),this.root.addChild(this.overlay)}get name(){return"overlay"}enter(){return It(this,void 0,void 0,function*(){this.overlay.init()})}update(e){this.overlay.update(e),this.overlay.game.update(e,!0)}layout(){const{width:e,height:t}=this.app.screen;this.bg.width=e,this.bg.height=t,this.overlay.layout(e,t),this.overlay.game.layout()}leave(){return It(this,void 0,void 0,function*(){this.overlay.dispose()})}}class _t{constructor(e){this.elem=e,this.state=new Set,this.newKey=new Map,this.keydown=this.keydown.bind(this),this.keyup=this.keyup.bind(this),this.blur=this.blur.bind(this),e.tabIndex=1,e.addEventListener("keydown",this.keydown),e.addEventListener("keyup",this.keyup),e.addEventListener("blur",this.blur),setTimeout(()=>e.focus(),0)}keydown(e){e.preventDefault(),e.repeat||(this.state.add(e.key.toLowerCase()),this.newKey.set(e.key.toLowerCase(),!0))}keyup(e){e.preventDefault(),e.repeat||(this.state.delete(e.key.toLowerCase()),this.newKey.set(e.key.toLowerCase(),!1))}blur(){for(const e of this.state)this.newKey.set(e,!1);this.state.clear()}isDown(...e){return e.some(e=>!0===this.newKey.get(e.toLowerCase()))}isUp(...e){return e.some(e=>!1===this.newKey.get(e.toLowerCase()))}isPressed(...e){return e.some(e=>this.state.has(e.toLowerCase()))}update(){this.newKey.clear()}dispose(){this.elem.removeEventListener("keydown",this.keydown),this.elem.removeEventListener("keyup",this.keyup),this.elem.removeEventListener("blur",this.blur)}}var $t=i(164);class Et{constructor(e){this.app=e,this.overlay=new n.Container,this.pointerPos=new n.Point,this.dragOffset=new n.Point,this.endDrag$=new Tt.Subject,this.end=(e=>{if(this.activeObj){const t=e.data.global.clone();t.x+=this.dragOffset.x,t.y+=this.dragOffset.y;const i=this.interaction.hitTest(t,this.app.root);this.endDrag$.next(i),this.overlay.removeChild(this.activeObj),this.activeObj=void 0}e.data.getLocalPosition(this.overlay,this.pointerPos)}),this.interaction=e.renderer.plugins.interaction,e.stage.addChild(this.overlay),this.interaction.on("pointermove",e=>e.data.getLocalPosition(this.overlay,this.pointerPos)),this.interaction.on("pointerup",this.end)}get active(){return!!this.activeObj}begin(e){return this.activeObj&&(console.log("dragdrop: already in progress"),this.cancel()),this.overlay.toLocal(new n.Point(0,0),e,this.dragOffset),this.dragOffset.x-=this.pointerPos.x,this.dragOffset.y-=this.pointerPos.y,e.parent&&e.parent.removeChild(e),this.overlay.addChild(e),this.activeObj=e,this.endDrag$.pipe(Object($t.first)()).toPromise()}cancel(e=this.activeObj){this.activeObj&&this.activeObj===e&&(this.overlay.removeChild(this.activeObj),this.endDrag$.next(null))}layout(){this.activeObj&&this.activeObj.position.set(this.pointerPos.x+this.dragOffset.x,this.pointerPos.y+this.dragOffset.y)}}const Wt=8;class Vt{constructor(e){this.app=e,this.overlay=new n.Container,this.pointerPos=new n.Point,this.global=new n.Point,this.interaction=e.renderer.plugins.interaction,e.stage.addChild(this.overlay),this.interaction.on("pointermove",e=>{e.data.getLocalPosition(this.overlay,this.pointerPos),this.global.copy(e.data.global)})}get active(){return!!this.panel}add(e,t){const i=i=>{if(i.target===e&&!this.app.dragDrop.active){const i=t();i&&this.show(i,e)}};e.on("pointerover",i),e.on("pointermove",i)}show(e,t){this.panel&&this.hide(this.panel),this.overlay.addChild(e),this.panel=e,this.target=t}hide(e){this.panel===e&&(this.overlay.removeChild(e),this.panel=void 0,this.target=void 0)}update(){if(!this.panel)return;this.interaction.hitTest(this.global,this.app.root)!==this.target&&this.hide(this.panel)}layout(){if(this.panel){const{width:e,height:t}=this.app.screen;this.panel.layout(e,t);const{width:i,height:s}=this.panel;let a=this.pointerPos.x+Wt,r=this.pointerPos.y+Wt;a+i>=e&&(a=this.pointerPos.x-Wt-i),r+s>=t&&(r=this.pointerPos.y-Wt-s),this.panel.position.set(a,r)}}}var Nt=function(e,t,i,s){return new(i||(i=Promise))(function(a,r){function o(e){try{h(s.next(e))}catch(e){r(e)}}function n(e){try{h(s.throw(e))}catch(e){r(e)}}function h(e){e.done?a(e.value):new i(function(t){t(e.value)}).then(o,n)}h((s=s.apply(e,t||[])).next())})};class qt extends n.Application{constructor(){super({autoResize:!0,antialias:!0,roundPixels:!0}),this.root=this.stage.addChild(new n.Container),this._states=[],this.resources={},this.keyboard=new _t(this.view),this.toolTip=new Vt(this),this.dragDrop=new Et(this),this.view.oncontextmenu=(e=>e.preventDefault()),n.settings.SCALE_MODE=n.SCALE_MODES.NEAREST,this.ticker.add(this.tick.bind(this)),this.renderer.plugins.interaction.on("pointerup",e=>{!function t(i,s){if(s&&i.interactive&&(e.currentTarget=i,i.emit("pointerupoutside",e)),i.interactiveChildren&&i.children){const e=s||!!i.mask||!!i.hitArea;for(const s of i.children)t(s,e)}}(this.stage,!1)})}get state(){return this._states[this._states.length-1]||null}pushState(e){return Nt(this,void 0,void 0,function*(){this.state&&(yield this.state.pause(),this.state.root.hitArea=n.Rectangle.EMPTY),this._states.push(e),this.root.addChild(e.root),yield e.enter()})}popState(){return Nt(this,void 0,void 0,function*(){this.state&&(yield this.state.leave(),this.root.removeChild(this.state.root),this._states.pop()),this.state&&(this.state.root.hitArea=null,yield this.state.resume())})}topState(e){return Nt(this,void 0,void 0,function*(){yield this.popState(),yield this.pushState(e)})}tick(){this.state&&this.state.update(this.ticker.elapsedMS),ze.update(),this.keyboard.update(),this.toolTip.update()}render(){this.state&&this.state.layout(),this.toolTip.layout(),this.dragDrop.layout(),super.render()}}const Ht=1024,Rt=2,Ut=64;i.d(t,"App",function(){return qt}),i.d(t,"MapSize",function(){return Ht}),i.d(t,"UIScaleFactor",function(){return Rt}),i.d(t,"DisplayTileSize",function(){return Ut});const Gt=function(e){function t(){const t=window.innerWidth,i=window.innerHeight;e.renderer.resize(t,i)}document.body.appendChild(e.view),window.onresize=t,t();const i=new a;document.body.appendChild(i.dom);const n=e.ticker.update;return e.ticker.update=((...t)=>{i.begin(),n.apply(e.ticker,t),i.end()}),s.a.setMatrixArrayType(Float64Array),o.registerPlugin(r),o.defaultOptions.className="vex-theme-plain",e}(new qt);Gt.pushState(new class extends c{constructor(e){super(e),this.loadingText=new n.Text("loading...\n",{fill:"white",fontSize:14,lineHeight:20,align:"center"}),this.root.addChild(this.loadingText)}get name(){return"preload"}enter(){return Dt(this,void 0,void 0,function*(){this.run()})}layout(){this.loadingText.x=(this.app.screen.width-this.loadingText.width)/2,this.loadingText.y=(this.app.screen.height-this.loadingText.height)/2}run(){const e=this.app.loader,t=e.onProgress.add(()=>{this.loadingText.text=`loading...\n${Math.round(e.progress)}%`}),s=i(200);for(const t of s.keys()){const i=/^\.\/(.*)\.(.*)$/.exec(t);if(!i)continue;const[,a,r]=i;a.startsWith("sprites/")?"json"===r&&e.add(a,t):e.add(a,s(t))}e.pre((e,t)=>{e.name.startsWith("sprites/")&&"json"===e.extension&&(e.type=n.loaders.Resource.TYPE.JSON,e.data=s(e.url),e.data.meta.image=`../${s(`./sprites/${e.data.meta.image}`)}`,e.complete()),t()});const a=Promise.all([new At("Unibody8Pro").load(),new At("Unibody8Pro",{weight:"bold"}).load(),new At("Unibody8Pro",{style:"italic"}).load()]);e.load((i,s)=>Dt(this,void 0,void 0,function*(){e.onProgress.detach(t);for(const e of Object.keys(s)){const t=s[e];t.type!==n.loaders.Resource.TYPE.JSON||t.spritesheet||(this.app.resources[e]=t.data)}yield a,yield je(this.root).toPromise(),yield this.app.topState(new Pt(this.app))}))}}(Gt)),Object.assign(window,{app:Gt})},188:function(e,t,i){e.exports=i.p+"assets/fc89563cb8da129f8c97ecaaad63f193.png"},189:function(e){e.exports={meta:{image:"ui.png",size:{w:364,h:312},scale:"1",hash:"0eac47cb30e955c16915d4a697691b6c73f4cb18"},frames:{"sprites/ui/inv-selection":{frame:{x:2,y:186,w:64,h:64},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:64,h:64},sourceSize:{w:64,h:64}},"sprites/ui/title":{frame:{x:2,y:2,w:360,h:180},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:360,h:180},sourceSize:{w:360,h:180}},"sprites/ui/inv-slot":{frame:{x:70,y:186,w:56,h:56},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:56,h:56},sourceSize:{w:56,h:56}},"sprites/ui/inv-slot-weapons":{frame:{x:130,y:186,w:56,h:56},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:56,h:56},sourceSize:{w:56,h:56}},"sprites/ui/inv-slot-leggings":{frame:{x:190,y:186,w:56,h:56},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:56,h:56},sourceSize:{w:56,h:56}},"sprites/ui/inv-slot-trash":{frame:{x:250,y:186,w:56,h:56},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:56,h:56},sourceSize:{w:56,h:56}},"sprites/ui/inv-slot-boots":{frame:{x:2,y:254,w:56,h:56},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:56,h:56},sourceSize:{w:56,h:56}},"sprites/ui/inv-slot-chestplates":{frame:{x:62,y:254,w:56,h:56},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:56,h:56},sourceSize:{w:56,h:56}},"sprites/ui/inv-slot-fire":{frame:{x:122,y:254,w:56,h:56},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:56,h:56},sourceSize:{w:56,h:56}},"sprites/ui/panel":{frame:{x:310,y:186,w:32,h:32},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:32,h:32},sourceSize:{w:32,h:32}},"sprites/ui/arrow-compact":{frame:{x:182,y:290,w:16,h:16},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:16,h:16},sourceSize:{w:16,h:16}},"sprites/ui/arrow":{frame:{x:218,y:254,w:32,h:32},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:32,h:32},sourceSize:{w:32,h:32}},"sprites/ui/status-hp":{frame:{x:254,y:254,w:32,h:32},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:32,h:32},sourceSize:{w:32,h:32}},"sprites/ui/tab-workbench":{frame:{x:290,y:254,w:24,h:24},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:24,h:24},sourceSize:{w:24,h:24}},"sprites/ui/tab-alchemy":{frame:{x:318,y:254,w:24,h:24},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:24,h:24},sourceSize:{w:24,h:24}},"sprites/ui/cauldron":{frame:{x:310,y:222,w:18,h:18},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:18,h:18},sourceSize:{w:18,h:18}},"sprites/ui/particle":{frame:{x:346,y:186,w:16,h:16},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:16,h:16},sourceSize:{w:16,h:16}},"sprites/ui/button-normal":{frame:{x:332,y:222,w:16,h:16},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:16,h:16},sourceSize:{w:16,h:16}},"sprites/ui/button-pressed":{frame:{x:346,y:254,w:16,h:16},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:16,h:16},sourceSize:{w:16,h:16}},"sprites/ui/panel-mask":{frame:{x:182,y:254,w:32,h:32},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:32,h:32},sourceSize:{w:32,h:32}}}}},190:function(e,t,i){e.exports=i.p+"assets/c229e891deb9f6d9f1cf520062c124d3.png"},191:function(e){e.exports={meta:{image:"terrains.png",size:{w:100,h:80},scale:"1",hash:"cddf04393769582b42612ec64a83b17182979cee"},frames:{"sprites/terrains/grass-1":{frame:{x:22,y:2,w:16,h:16},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:16,h:16},sourceSize:{w:16,h:16}},"sprites/terrains/sand-3":{frame:{x:2,y:2,w:16,h:16},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:16,h:16},sourceSize:{w:16,h:16}},"sprites/terrains/grass-3":{frame:{x:2,y:22,w:16,h:16},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:16,h:16},sourceSize:{w:16,h:16}},"sprites/terrains/ice":{frame:{x:22,y:22,w:16,h:16},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:16,h:16},sourceSize:{w:16,h:16}},"sprites/terrains/lava":{frame:{x:42,y:2,w:16,h:16},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:16,h:16},sourceSize:{w:16,h:16}},"sprites/terrains/mud":{frame:{x:42,y:22,w:16,h:16},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:16,h:16},sourceSize:{w:16,h:16}},"sprites/terrains/sand-1":{frame:{x:2,y:42,w:16,h:16},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:16,h:16},sourceSize:{w:16,h:16}},"sprites/terrains/sand-2":{frame:{x:22,y:42,w:16,h:16},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:16,h:16},sourceSize:{w:16,h:16}},"sprites/terrains/water":{frame:{x:82,y:2,w:16,h:16},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:16,h:16},sourceSize:{w:16,h:16}},"sprites/terrains/snow":{frame:{x:62,y:2,w:16,h:16},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:16,h:16},sourceSize:{w:16,h:16}},"sprites/terrains/soil-1":{frame:{x:62,y:22,w:16,h:16},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:16,h:16},sourceSize:{w:16,h:16}},"sprites/terrains/soil-2":{frame:{x:62,y:42,w:16,h:16},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:16,h:16},sourceSize:{w:16,h:16}},"sprites/terrains/soil-3":{frame:{x:2,y:62,w:16,h:16},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:16,h:16},sourceSize:{w:16,h:16}},"sprites/terrains/stone-1":{frame:{x:22,y:62,w:16,h:16},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:16,h:16},sourceSize:{w:16,h:16}},"sprites/terrains/stone-2":{frame:{x:42,y:62,w:16,h:16},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:16,h:16},sourceSize:{w:16,h:16}},"sprites/terrains/stone-3":{frame:{x:62,y:62,w:16,h:16},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:16,h:16},sourceSize:{w:16,h:16}},"sprites/terrains/grass-2":{frame:{x:42,y:42,w:16,h:16},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:16,h:16},sourceSize:{w:16,h:16}}}}},192:function(e,t,i){e.exports=i.p+"assets/129f751899948407553b1036e0ea40e7.png"},193:function(e){e.exports={meta:{image:"player.png",size:{w:544,h:544},scale:"1",hash:"616c001c4bc5c1ae072803b0ea3747d29a990675"},frames:{"sprites/player/attack-down-0":{frame:{x:70,y:2,w:64,h:64},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:64,h:64},sourceSize:{w:64,h:64}},"sprites/player/down-6":{frame:{x:2,y:2,w:64,h:64},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:64,h:64},sourceSize:{w:64,h:64}},"sprites/player/attack-down-2":{frame:{x:2,y:70,w:64,h:64},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:64,h:64},sourceSize:{w:64,h:64}},"sprites/player/attack-down-3":{frame:{x:70,y:70,w:64,h:64},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:64,h:64},sourceSize:{w:64,h:64}},"sprites/player/attack-down-4":{frame:{x:138,y:2,w:64,h:64},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:64,h:64},sourceSize:{w:64,h:64}},"sprites/player/attack-down-5":{frame:{x:138,y:70,w:64,h:64},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:64,h:64},sourceSize:{w:64,h:64}},"sprites/player/attack-left-0":{frame:{x:2,y:138,w:64,h:64},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:64,h:64},sourceSize:{w:64,h:64}},"sprites/player/attack-left-1":{frame:{x:70,y:138,w:64,h:64},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:64,h:64},sourceSize:{w:64,h:64}},"sprites/player/attack-left-2":{frame:{x:138,y:138,w:64,h:64},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:64,h:64},sourceSize:{w:64,h:64}},"sprites/player/attack-left-3":{frame:{x:206,y:2,w:64,h:64},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:64,h:64},sourceSize:{w:64,h:64}},"sprites/player/attack-left-4":{frame:{x:206,y:70,w:64,h:64},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:64,h:64},sourceSize:{w:64,h:64}},"sprites/player/attack-left-5":{frame:{x:206,y:138,w:64,h:64},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:64,h:64},sourceSize:{w:64,h:64}},"sprites/player/attack-right-0":{frame:{x:2,y:206,w:64,h:64},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:64,h:64},sourceSize:{w:64,h:64}},"sprites/player/attack-right-1":{frame:{x:70,y:206,w:64,h:64},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:64,h:64},sourceSize:{w:64,h:64}},"sprites/player/attack-right-2":{frame:{x:138,y:206,w:64,h:64},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:64,h:64},sourceSize:{w:64,h:64}},"sprites/player/attack-right-3":{frame:{x:206,y:206,w:64,h:64},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:64,h:64},sourceSize:{w:64,h:64}},"sprites/player/attack-right-4":{frame:{x:274,y:2,w:64,h:64},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:64,h:64},sourceSize:{w:64,h:64}},"sprites/player/attack-right-5":{frame:{x:274,y:70,w:64,h:64},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:64,h:64},sourceSize:{w:64,h:64}},"sprites/player/attack-up-0":{frame:{x:274,y:138,w:64,h:64},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:64,h:64},sourceSize:{w:64,h:64}},"sprites/player/attack-up-1":{frame:{x:274,y:206,w:64,h:64},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:64,h:64},sourceSize:{w:64,h:64}},"sprites/player/attack-up-2":{frame:{x:2,y:274,w:64,h:64},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:64,h:64},sourceSize:{w:64,h:64}},"sprites/player/attack-up-3":{frame:{x:70,y:274,w:64,h:64},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:64,h:64},sourceSize:{w:64,h:64}},"sprites/player/attack-up-4":{frame:{x:138,y:274,w:64,h:64},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:64,h:64},sourceSize:{w:64,h:64}},"sprites/player/attack-up-5":{frame:{x:206,y:274,w:64,h:64},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:64,h:64},sourceSize:{w:64,h:64}},"sprites/player/down-0":{frame:{x:274,y:274,w:64,h:64},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:64,h:64},sourceSize:{w:64,h:64}},"sprites/player/down-1":{frame:{x:342,y:2,w:64,h:64},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:64,h:64},sourceSize:{w:64,h:64}},"sprites/player/down-2":{frame:{x:342,y:70,w:64,h:64},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:64,h:64},sourceSize:{w:64,h:64}},"sprites/player/down-3":{frame:{x:342,y:138,w:64,h:64},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:64,h:64},sourceSize:{w:64,h:64}},"sprites/player/down-4":{frame:{x:342,y:206,w:64,h:64},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:64,h:64},sourceSize:{w:64,h:64}},"sprites/player/down-5":{frame:{x:342,y:274,w:64,h:64},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:64,h:64},sourceSize:{w:64,h:64}},"sprites/player/up-8":{frame:{x:206,y:478,w:64,h:64},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:64,h:64},sourceSize:{w:64,h:64}},"sprites/player/down-7":{frame:{x:70,y:342,w:64,h:64},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:64,h:64},sourceSize:{w:64,h:64}},"sprites/player/down-8":{frame:{x:138,y:342,w:64,h:64},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:64,h:64},sourceSize:{w:64,h:64}},"sprites/player/left-0":{frame:{x:206,y:342,w:64,h:64},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:64,h:64},sourceSize:{w:64,h:64}},"sprites/player/left-1":{frame:{x:274,y:342,w:64,h:64},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:64,h:64},sourceSize:{w:64,h:64}},"sprites/player/left-2":{frame:{x:342,y:342,w:64,h:64},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:64,h:64},sourceSize:{w:64,h:64}},"sprites/player/left-3":{frame:{x:410,y:2,w:64,h:64},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:64,h:64},sourceSize:{w:64,h:64}},"sprites/player/left-4":{frame:{x:410,y:70,w:64,h:64},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:64,h:64},sourceSize:{w:64,h:64}},"sprites/player/left-5":{frame:{x:410,y:138,w:64,h:64},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:64,h:64},sourceSize:{w:64,h:64}},"sprites/player/left-6":{frame:{x:410,y:206,w:64,h:64},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:64,h:64},sourceSize:{w:64,h:64}},"sprites/player/left-7":{frame:{x:410,y:274,w:64,h:64},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:64,h:64},sourceSize:{w:64,h:64}},"sprites/player/left-8":{frame:{x:410,y:342,w:64,h:64},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:64,h:64},sourceSize:{w:64,h:64}},"sprites/player/right-0":{frame:{x:2,y:410,w:64,h:64},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:64,h:64},sourceSize:{w:64,h:64}},"sprites/player/right-1":{frame:{x:70,y:410,w:64,h:64},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:64,h:64},sourceSize:{w:64,h:64}},"sprites/player/right-2":{frame:{x:138,y:410,w:64,h:64},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:64,h:64},sourceSize:{w:64,h:64}},"sprites/player/right-3":{frame:{x:206,y:410,w:64,h:64},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:64,h:64},sourceSize:{w:64,h:64}},"sprites/player/right-4":{frame:{x:274,y:410,w:64,h:64},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:64,h:64},sourceSize:{w:64,h:64}},"sprites/player/right-5":{frame:{x:342,y:410,w:64,h:64},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:64,h:64},sourceSize:{w:64,h:64}},"sprites/player/right-6":{frame:{x:410,y:410,w:64,h:64},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:64,h:64},sourceSize:{w:64,h:64}},"sprites/player/right-7":{frame:{x:478,y:2,w:64,h:64},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:64,h:64},sourceSize:{w:64,h:64}},"sprites/player/right-8":{frame:{x:478,y:70,w:64,h:64},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:64,h:64},sourceSize:{w:64,h:64}},"sprites/player/up-0":{frame:{x:478,y:138,w:64,h:64},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:64,h:64},sourceSize:{w:64,h:64}},"sprites/player/up-1":{frame:{x:478,y:206,w:64,h:64},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:64,h:64},sourceSize:{w:64,h:64}},"sprites/player/up-2":{frame:{x:478,y:274,w:64,h:64},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:64,h:64},sourceSize:{w:64,h:64}},"sprites/player/up-3":{frame:{x:478,y:342,w:64,h:64},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:64,h:64},sourceSize:{w:64,h:64}},"sprites/player/up-4":{frame:{x:478,y:410,w:64,h:64},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:64,h:64},sourceSize:{w:64,h:64}},"sprites/player/up-5":{frame:{x:2,y:478,w:64,h:64},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:64,h:64},sourceSize:{w:64,h:64}},"sprites/player/up-6":{frame:{x:70,y:478,w:64,h:64},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:64,h:64},sourceSize:{w:64,h:64}},"sprites/player/up-7":{frame:{x:138,y:478,w:64,h:64},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:64,h:64},sourceSize:{w:64,h:64}},"sprites/player/attack-down-1":{frame:{x:2,y:342,w:64,h:64},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:64,h:64},sourceSize:{w:64,h:64}}}}},194:function(e,t,i){e.exports=i.p+"assets/cbecab81f1f8884a561e500b807c5d7d.png"},195:function(e){e.exports={meta:{image:"objects.png",size:{w:216,h:180},scale:"1",hash:"97ef076ba12449d85e0c511847ac77e48d0cf031"},frames:{"sprites/objects/berrybush-berries":{frame:{x:38,y:2,w:32,h:32},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:32,h:32},sourceSize:{w:32,h:32}},"sprites/objects/flower-stem-1":{frame:{x:2,y:2,w:32,h:32},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:32,h:32},sourceSize:{w:32,h:32}},"sprites/objects/bones":{frame:{x:2,y:38,w:32,h:32},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:32,h:32},sourceSize:{w:32,h:32}},"sprites/objects/bush":{frame:{x:38,y:38,w:32,h:32},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:32,h:32},sourceSize:{w:32,h:32}},"sprites/objects/cactus":{frame:{x:74,y:2,w:32,h:32},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:32,h:32},sourceSize:{w:32,h:32}},"sprites/objects/cross":{frame:{x:74,y:38,w:32,h:32},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:32,h:32},sourceSize:{w:32,h:32}},"sprites/objects/fern-1":{frame:{x:2,y:74,w:32,h:32},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:32,h:32},sourceSize:{w:32,h:32}},"sprites/objects/fern-2":{frame:{x:38,y:74,w:32,h:32},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:32,h:32},sourceSize:{w:32,h:32}},"sprites/objects/fern-3":{frame:{x:74,y:74,w:32,h:32},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:32,h:32},sourceSize:{w:32,h:32}},"sprites/objects/flower-petal-1":{frame:{x:110,y:2,w:32,h:32},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:32,h:32},sourceSize:{w:32,h:32}},"sprites/objects/flower-petal-2":{frame:{x:110,y:38,w:32,h:32},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:32,h:32},sourceSize:{w:32,h:32}},"sprites/objects/flower-petal-3":{frame:{x:110,y:74,w:32,h:32},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:32,h:32},sourceSize:{w:32,h:32}},"sprites/objects/flower-petal-4":{frame:{x:2,y:110,w:32,h:32},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:32,h:32},sourceSize:{w:32,h:32}},"sprites/objects/tree-spruce":{frame:{x:182,y:38,w:32,h:32},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:32,h:32},sourceSize:{w:32,h:32}},"sprites/objects/flower-stem-2":{frame:{x:74,y:110,w:32,h:32},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:32,h:32},sourceSize:{w:32,h:32}},"sprites/objects/flower-stem-3":{frame:{x:110,y:110,w:32,h:32},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:32,h:32},sourceSize:{w:32,h:32}},"sprites/objects/flower-stem-4":{frame:{x:146,y:2,w:32,h:32},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:32,h:32},sourceSize:{w:32,h:32}},"sprites/objects/pillar-1":{frame:{x:146,y:38,w:32,h:32},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:32,h:32},sourceSize:{w:32,h:32}},"sprites/objects/pillar-2":{frame:{x:146,y:74,w:32,h:32},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:32,h:32},sourceSize:{w:32,h:32}},"sprites/objects/pillar-3":{frame:{x:146,y:110,w:32,h:32},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:32,h:32},sourceSize:{w:32,h:32}},"sprites/objects/rocks-1":{frame:{x:2,y:146,w:32,h:32},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:32,h:32},sourceSize:{w:32,h:32}},"sprites/objects/rocks-2":{frame:{x:38,y:146,w:32,h:32},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:32,h:32},sourceSize:{w:32,h:32}},"sprites/objects/rocks-3":{frame:{x:74,y:146,w:32,h:32},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:32,h:32},sourceSize:{w:32,h:32}},"sprites/objects/stone":{frame:{x:110,y:146,w:32,h:32},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:32,h:32},sourceSize:{w:32,h:32}},"sprites/objects/tree-coco":{frame:{x:146,y:146,w:32,h:32},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:32,h:32},sourceSize:{w:32,h:32}},"sprites/objects/tree-oak":{frame:{x:182,y:2,w:32,h:32},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:32,h:32},sourceSize:{w:32,h:32}},"sprites/objects/berrybush-bush":{frame:{x:38,y:110,w:32,h:32},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:32,h:32},sourceSize:{w:32,h:32}}}}},196:function(e,t,i){e.exports=i.p+"assets/3f417995e259829c38dfd341514639e7.png"},197:function(e){e.exports={meta:{image:"items.png",size:{w:140,h:140},scale:"1",hash:"99afc50107e6feb378f7757e444b9dbff0a663fb"},frames:{"sprites/items/berries-1":{frame:{x:30,y:2,w:24,h:24},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:24,h:24},sourceSize:{w:24,h:24}},"sprites/items/flower-stem-2":{frame:{x:2,y:2,w:24,h:24},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:24,h:24},sourceSize:{w:24,h:24}},"sprites/items/berries-3":{frame:{x:2,y:30,w:24,h:24},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:24,h:24},sourceSize:{w:24,h:24}},"sprites/items/berries-4":{frame:{x:30,y:30,w:24,h:24},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:24,h:24},sourceSize:{w:24,h:24}},"sprites/items/bone":{frame:{x:58,y:2,w:24,h:24},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:24,h:24},sourceSize:{w:24,h:24}},"sprites/items/dust":{frame:{x:58,y:30,w:24,h:24},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:24,h:24},sourceSize:{w:24,h:24}},"sprites/items/flower-petal-1":{frame:{x:2,y:58,w:24,h:24},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:24,h:24},sourceSize:{w:24,h:24}},"sprites/items/flower-petal-2":{frame:{x:30,y:58,w:24,h:24},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:24,h:24},sourceSize:{w:24,h:24}},"sprites/items/flower-petal-3":{frame:{x:58,y:58,w:24,h:24},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:24,h:24},sourceSize:{w:24,h:24}},"sprites/items/flower-petal-4":{frame:{x:86,y:2,w:24,h:24},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:24,h:24},sourceSize:{w:24,h:24}},"sprites/items/flower-stem-1":{frame:{x:86,y:30,w:24,h:24},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:24,h:24},sourceSize:{w:24,h:24}},"sprites/items/wood":{frame:{x:30,y:114,w:24,h:24},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:24,h:24},sourceSize:{w:24,h:24}},"sprites/items/flower-stem-3":{frame:{x:2,y:86,w:24,h:24},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:24,h:24},sourceSize:{w:24,h:24}},"sprites/items/flower-stem-4":{frame:{x:30,y:86,w:24,h:24},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:24,h:24},sourceSize:{w:24,h:24}},"sprites/items/gel":{frame:{x:58,y:86,w:24,h:24},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:24,h:24},sourceSize:{w:24,h:24}},"sprites/items/leaf":{frame:{x:86,y:86,w:24,h:24},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:24,h:24},sourceSize:{w:24,h:24}},"sprites/items/skin":{frame:{x:114,y:2,w:24,h:24},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:24,h:24},sourceSize:{w:24,h:24}},"sprites/items/solution-overlay":{frame:{x:114,y:30,w:24,h:24},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:24,h:24},sourceSize:{w:24,h:24}},"sprites/items/solution":{frame:{x:114,y:58,w:24,h:24},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:24,h:24},sourceSize:{w:24,h:24}},"sprites/items/stone":{frame:{x:114,y:86,w:24,h:24},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:24,h:24},sourceSize:{w:24,h:24}},"sprites/items/teeth":{frame:{x:2,y:114,w:24,h:24},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:24,h:24},sourceSize:{w:24,h:24}},"sprites/items/berries-2":{frame:{x:86,y:58,w:24,h:24},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:24,h:24},sourceSize:{w:24,h:24}}}}},198:function(e,t,i){e.exports=i.p+"assets/95966c631f0652d66b47f5c058fcd846.png"},199:function(e){e.exports={meta:{image:"effects.png",size:{w:60,h:40},scale:"1",hash:"92d0e9e02973fb97737f7835c2d7f4f76535198c"},frames:{"sprites/effects/poison":{frame:{x:2,y:2,w:16,h:16},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:16,h:16},sourceSize:{w:16,h:16}},"sprites/effects/regen":{frame:{x:22,y:2,w:16,h:16},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:16,h:16},sourceSize:{w:16,h:16}},"sprites/effects/slowness":{frame:{x:2,y:22,w:16,h:16},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:16,h:16},sourceSize:{w:16,h:16}},"sprites/effects/speed":{frame:{x:22,y:22,w:16,h:16},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:16,h:16},sourceSize:{w:16,h:16}},"sprites/effects/strength":{frame:{x:42,y:2,w:16,h:16},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:16,h:16},sourceSize:{w:16,h:16}},"sprites/effects/weakness":{frame:{x:42,y:22,w:16,h:16},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:16,h:16},sourceSize:{w:16,h:16}}}}},200:function(e,t,i){var s={"./fonts/Unibody8Pro-Bold.otf":161,"./fonts/Unibody8Pro-Regular.otf":162,"./fonts/Unibody8Pro-RegularItalic.otf":160,"./fonts/unscii-16.woff":159,"./sprites/effects.json":199,"./sprites/effects.png":198,"./sprites/items.json":197,"./sprites/items.png":196,"./sprites/objects.json":195,"./sprites/objects.png":194,"./sprites/player.json":193,"./sprites/player.png":192,"./sprites/terrains.json":191,"./sprites/terrains.png":190,"./sprites/ui.json":189,"./sprites/ui.png":188};function a(e){var t=r(e);return i(t)}function r(e){var t=s[e];if(!(t+1)){var i=new Error('Cannot find module "'+e+'".');throw i.code="MODULE_NOT_FOUND",i}return t}a.keys=function(){return Object.keys(s)},a.resolve=r,e.exports=a,a.id=200},201:function(e,t,i){(e.exports=i(53)(!1)).push([e.i,".debug-console {\n  z-index: 10;\n\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n\n  pointer-events: none;\n  visibility: hidden;\n  display: flex;\n  flex-direction: column;\n}\n\n.debug-console *::selection {\n  background: rgba(0, 0, 0, 0.25);\n}\n\n.debug-console.active {\n  visibility: visible;\n}\n\n.debug-console * {\n  cursor: default;\n  font-family: Unscii;\n  font-size: 16px;\n  box-sizing: border-box;\n}\n\n.debug-log-box {\n  flex: 1;\n  position: relative;\n}\n\n.debug-log-scroll {\n  position: absolute;\n  left: 0;\n  bottom: 0;\n\n  background: rgba(255, 255, 255, 0.6);\n  width: 600px;\n  max-height: 800px;\n  pointer-events: auto;\n\n  overflow-y: auto;\n}\n\n.debug-log {\n  padding: 4px;\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n}\n\n.debug-log:empty {\n  padding: 0;\n}\n\n.debug-log-entry {\n  display: block;\n  padding: 4px;\n  color: #000000;\n  white-space: pre;\n}\n\n.debug-input {\n  height: 48px;\n  width: 100%;\n\n  background: rgba(255, 255, 255, 0.6);\n  color: #000000;\n  outline: none;\n  border: none;\n  border-top: 1px solid #202020;\n  padding: 8px;\n  pointer-events: auto;\n}",""])},202:function(e,t,i){var s=i(201);"string"==typeof s&&(s=[[e.i,s,""]]);var a={hmr:!0,transform:void 0,insertInto:void 0};i(52)(s,a);s.locals&&(e.exports=s.locals)},31:function(e,t,i){"use strict";i.d(t,"a",function(){return n}),i.d(t,"b",function(){return h}),i.d(t,"c",function(){return y});var s=i(4),a=i(54),r=i(10),o=i(6);const n=1e3;function h(e,t){let i=0;const r=[0,0,0];for(const{element:s,amount:a}of e){const e=parseInt(t[s].color,16);r[0]+=(e>>16&255)*a,r[1]+=(e>>8&255)*a,r[2]+=(e>>0&255)*a,i+=a}const o=((Math.floor(r[0]/i)<<16)+(Math.floor(r[1]/i)<<8)+(Math.floor(r[2]/i)<<0)).toString(16);let n,h=0,c="";for(const{element:t,amount:i}of e)i>h&&(h=i,c=t);return{id:"solution",name:n=h<100?"Mundane Solution":h/i<.5?"Mixed solution":h<300?`Solution of ${c}`:h<500?`Solution of Greater ${c}`:h<700?`Solution of Mythical ${c}`:`Solution of Perfect ${c}`,type:s.b.Type.Consumable,texture:{type:"composite",base:"sprites/items/solution",overlay:{type:"single",tex:"sprites/items/solution-overlay",tint:o}},aspects:e,effects:Object(a.a)(e)}}const c=.25,l=.4,u=1.5,p=.25,d=.1,m=1;function y(e,t,i){const s={};for(const{element:i,amount:a}of[...e.aspects||[],...t.aspects||[]])s[i]=(s[i]||0)+a;const a="gel-bone"===e.id||"gel-bone"===t.id?u:1,y="gel-stone"===e.id||"gel-stone"===t.id?u:1;for(const{name:e,composition:t}of o.c){if(!t)continue;const o=Object(r.b)(i[e].fusionThreshold)/a/y,n=Math.min(s[t[0]]||0,s[t[1]]||0);if(n<=o)continue;console.log(`fusion ${e}: ${n} <= ${o}`);const h=(n-o)*Object(r.b)(i[e].fusionRate),c=.5*Math.random()+.25;s[e]=(s[e]||0)+h*(1-d),s[t[0]]-=h*c,s[t[1]]-=h*(1-c)}for(const e of Object.keys(s)){const t=Object(r.b)(i[e].fissionThreshold)*y/a;if(s[e]>=t)continue;console.log(`fission ${e}: ${s[e]} >= ${t}`);const n=s[e]*Object(r.b)(i[e].fissionRate),h=o.b[e].composition,c=.5*Math.random()+.25;h&&(s[h[0]]=(s[h[0]]||0)+n*(1-p)*c,s[h[1]]=(s[h[1]]||0)+n*(1-p)*(1-c)),s[e]-=n}let f=0;if("gel-alchemy"===e.id||"gel-alchemy"===t.id){for(const e of Object.keys(s))f+=s[e];for(const e of Object.keys(s)){s[e]/f<c&&(s[e]*=1-l)}}f=0;for(const e of Object.keys(s))f+=s[e];for(const e of Object.keys(s)){let t=s[e];t<m?t=0:t>n&&(t=n),s[e]=t}const g=Object.keys(s).map(e=>({element:e,amount:s[e]})).filter(({amount:e})=>e>0);return console.log(g),h(g,i)}},328:function(e,t,i){var s=i(327);(e.exports=i(53)(!1)).push([e.i,'html,\nbody {\n  height: 100%;\n  width: 100%;\n  margin: 0;\n  padding: 0;\n  background: #202020;\n  overflow: hidden;\n}\n\ncanvas {\n  image-rendering: crisp-edges;\n  image-rendering: pixelated;\n}\n\n@font-face {\n  font-family: "Unibody8Pro";\n  src: url('+s(i(162))+') format("opentype")\n}\n\n@font-face {\n  font-family: "Unibody8Pro";\n  font-weight: bold;\n  src: url('+s(i(161))+') format("opentype")\n}\n\n@font-face {\n  font-family: "Unibody8Pro";\n  font-style: italic;\n  src: url('+s(i(160))+') format("opentype")\n}\n\n@font-face {\n  font-family: "Unscii";\n  font-weight: bold;\n  src: url('+s(i(159))+') format("woff")\n}',""])},329:function(e,t,i){var s=i(328);"string"==typeof s&&(s=[[e.i,s,""]]);var a={hmr:!0,transform:void 0,insertInto:void 0};i(52)(s,a);s.locals&&(e.exports=s.locals)},4:function(e,t,i){"use strict";var s;function a(e){const t=[],i=Object.keys(e).sort();let s=1;for(const a of i){const i=s++;t[i]=Object.assign({},e[a],{id:i,name:a})}return t}function r(e,t,i,s){return{terrains:a(e),objects:a(t),recipes:i,elements:s}}!function(e){let t;!function(e){e.Material="material",e.Consumable="consumable",e.Weapon="weapon",e.Chestplate="chestplate",e.Leggings="leggings",e.Boots="boots"}(t=e.Type||(e.Type={}))}(s||(s={}));var o=i(85);function n(e){return Object(o.fromByteArray)(new Uint8Array(e))}function h(e){return Object(o.toByteArray)(e).buffer}var c=i(84);function l(e){return c.deflate(new Uint8Array(e)).buffer}function u(e){return c.inflate(new Uint8Array(e)).buffer}class p{constructor(e,t,i,s,a){this.id=e,this.library=t,this.map=i,this.entities=s,this.props=a}static load(e){const{id:t,library:i,map:s,entities:a,props:r}=e;return new p(t,i,s,a,r)}save(){return{id:this.id,library:this.library,map:this.map,entities:this.entities,props:this.props}}static import(e){const t=JSON.parse(e);return t.map=Object.assign({},t.map,{terrains:new Uint16Array(u(h(t.map.terrains))),objects:new Uint16Array(u(h(t.map.objects)))}),p.load(t)}export(){const e=this.save();return e.map=Object.assign({},e.map,{terrains:n(l(e.map.terrains.buffer)),objects:n(l(e.map.objects.buffer))}),JSON.stringify(e)}}i.d(t,"b",function(){return s}),i.d(t,"c",function(){return r}),i.d(t,"a",function(){return p})},54:function(e,t,i){"use strict";var s=i(31),a=i(7),r=i(6),o=i(174),n=i(178);const h=.1;function c(e,t,i,s){return t=Math.round(t),i=Object(o.a)(i,-2),{type:e,name:a.b[e].name,description:a.b[e].description.replace("<power>",t.toString())+(i?` for ${Object(o.a)(i/1e3)} seconds`:""),power:t,element:s,duration:i}}function l(e,t,i){switch(e){case r.a.Type.Life:case r.a.Type.Recovery:{let s=100*t;e===r.a.Type.Life&&(s*=.5);let o=0;return i[r.a.Type.Time]>=.2?(s=s/(o=3e4*i[r.a.Type.Time])*1500,c(a.a.Type.Regen,s,o)):c(a.a.Type.Heal,s,0)}case r.a.Type.Void:case r.a.Type.Injury:{let s=50*t;e===r.a.Type.Void&&(s*=.3);let o=0;return i[r.a.Type.Time]>=.2?(s=s/(o=2e4*i[r.a.Type.Time])*1500,c(a.a.Type.Poison,s,o)):c(a.a.Type.Damage,s,0)}case r.a.Type.Motion:{let e=50*t;return c(a.a.Type.Speed,e,1e4)}case r.a.Type.Frost:case r.a.Type.Capture:{let i=50*t;return e===r.a.Type.Capture&&(i*=1.5),c(a.a.Type.Slowness,i,1e4)}case r.a.Type.Energy:{let e=25*t;return c(a.a.Type.Strength,e,1e4)}case r.a.Type.Weakness:{let e=25*t;return c(a.a.Type.Weakness,e,1e4)}}}function u(e){let t=0;for(const{amount:i}of e)t+=i;const i=Object(n.a)(e.map(({element:e,amount:i})=>[e,function(e,t){return e/t*Math.pow(e/s.a,.75)}(i,t)]).sort((e,t)=>t[1]-e[1])),a=[];for(const e of Object.keys(i)){const t=i[e];if(t<h)continue;const s=l(e,t,i);s&&a.push(s)}return a}i.d(t,"b",function(){return c}),i.d(t,"a",function(){return u})},6:function(e,t,i){"use strict";var s;function a(e,t,i){return{tier:e,name:t,composition:i}}i.d(t,"a",function(){return s}),i.d(t,"c",function(){return r}),i.d(t,"b",function(){return o}),function(e){let t;e.MaxTier=3,function(e){e.Fire="Fire",e.Water="Water",e.Order="Order",e.Chaos="Chaos",e.Void="Void",e.Light="Light",e.Energy="Energy",e.Frost="Frost",e.Motion="Motion",e.Life="Life",e.Defense="Defense",e.Recovery="Recovery",e.Time="Time",e.Explosion="Explosion",e.Injury="Injury",e.Darkness="Darkness",e.Weakness="Weakness",e.Spirit="Spirit",e.Capture="Capture",e.Sense="Sense",e.Absorption="Absorption",e.Cognition="Cognition",e.Deception="Deception"}(t=e.Type||(e.Type={}))}(s||(s={}));const r=[a(0,s.Type.Fire),a(0,s.Type.Water),a(0,s.Type.Order),a(0,s.Type.Chaos),a(1,s.Type.Void,[s.Type.Fire,s.Type.Water]),a(1,s.Type.Light,[s.Type.Fire,s.Type.Order]),a(1,s.Type.Energy,[s.Type.Fire,s.Type.Chaos]),a(1,s.Type.Frost,[s.Type.Water,s.Type.Order]),a(1,s.Type.Motion,[s.Type.Water,s.Type.Chaos]),a(1,s.Type.Life,[s.Type.Order,s.Type.Chaos]),a(2,s.Type.Defense,[s.Type.Order,s.Type.Void]),a(2,s.Type.Recovery,[s.Type.Order,s.Type.Life]),a(2,s.Type.Time,[s.Type.Order,s.Type.Motion]),a(2,s.Type.Explosion,[s.Type.Chaos,s.Type.Energy]),a(2,s.Type.Injury,[s.Type.Chaos,s.Type.Life]),a(2,s.Type.Darkness,[s.Type.Void,s.Type.Light]),a(2,s.Type.Weakness,[s.Type.Void,s.Type.Energy]),a(2,s.Type.Spirit,[s.Type.Energy,s.Type.Life]),a(2,s.Type.Capture,[s.Type.Frost,s.Type.Motion]),a(3,s.Type.Sense,[s.Type.Motion,s.Type.Spirit]),a(3,s.Type.Absorption,[s.Type.Recovery,s.Type.Spirit]),a(3,s.Type.Cognition,[s.Type.Time,s.Type.Spirit]),a(3,s.Type.Deception,[s.Type.Weakness,s.Type.Spirit])],o=Object.assign({},...r.map(e=>({[e.name]:e})))},7:function(e,t,i){"use strict";var s;i.d(t,"a",function(){return s}),i.d(t,"b",function(){return a}),function(e){let t;!function(e){e.Heal="heal",e.Damage="damage",e.Regen="regen",e.Poison="poison",e.Speed="speed",e.Slowness="slowness",e.Strength="strength",e.Weakness="weakness"}(t=e.Type||(e.Type={}))}(s||(s={}));const a={[s.Type.Heal]:{name:"Heal",description:"Recover <power> HP"},[s.Type.Damage]:{name:"Damage",description:"Damage <power> HP"},[s.Type.Regen]:{name:"Regeneration",description:"Recover <power> HP regularly"},[s.Type.Poison]:{name:"Poison",description:"Lose <power> HP regularly"},[s.Type.Speed]:{name:"Speed",description:"Increase speed by <power>"},[s.Type.Slowness]:{name:"Slowness",description:"Decrease speed by <power>"},[s.Type.Strength]:{name:"Strength",description:"Increase strength by <power>"},[s.Type.Weakness]:{name:"Weakness",description:"Decrease strength by <power>"}}}});
//# sourceMappingURL=app.dc12b92dd800486f7c7b.js.map